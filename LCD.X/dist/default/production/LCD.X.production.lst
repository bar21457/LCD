

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 02 01:16:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2
    42                           	psect	text33,local,class=CODE,merge=1,delta=2
    43                           	psect	text34,local,class=CODE,merge=1,delta=2
    44                           	psect	text35,local,class=CODE,merge=1,delta=2
    45                           	psect	text36,local,class=CODE,merge=1,delta=2
    46                           	psect	text37,local,class=CODE,merge=1,delta=2
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50     0000                     
    51                           ; Version 2.40
    52                           ; Generated 17/11/2021 GMT
    53                           ; 
    54                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86     0000                     	;# 
    87     0001                     	;# 
    88     0002                     	;# 
    89     0003                     	;# 
    90     0004                     	;# 
    91     0005                     	;# 
    92     0006                     	;# 
    93     0007                     	;# 
    94     0008                     	;# 
    95     0009                     	;# 
    96     000A                     	;# 
    97     000B                     	;# 
    98     000C                     	;# 
    99     000D                     	;# 
   100     000E                     	;# 
   101     000E                     	;# 
   102     000F                     	;# 
   103     0010                     	;# 
   104     0011                     	;# 
   105     0012                     	;# 
   106     0013                     	;# 
   107     0014                     	;# 
   108     0015                     	;# 
   109     0015                     	;# 
   110     0016                     	;# 
   111     0017                     	;# 
   112     0018                     	;# 
   113     0019                     	;# 
   114     001A                     	;# 
   115     001B                     	;# 
   116     001B                     	;# 
   117     001C                     	;# 
   118     001D                     	;# 
   119     001E                     	;# 
   120     001F                     	;# 
   121     0081                     	;# 
   122     0085                     	;# 
   123     0086                     	;# 
   124     0087                     	;# 
   125     0088                     	;# 
   126     0089                     	;# 
   127     008C                     	;# 
   128     008D                     	;# 
   129     008E                     	;# 
   130     008F                     	;# 
   131     0090                     	;# 
   132     0091                     	;# 
   133     0092                     	;# 
   134     0093                     	;# 
   135     0093                     	;# 
   136     0093                     	;# 
   137     0094                     	;# 
   138     0095                     	;# 
   139     0096                     	;# 
   140     0097                     	;# 
   141     0098                     	;# 
   142     0099                     	;# 
   143     009A                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     009F                     	;# 
   149     0105                     	;# 
   150     0107                     	;# 
   151     0108                     	;# 
   152     0109                     	;# 
   153     010C                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     010F                     	;# 
   158     0185                     	;# 
   159     0187                     	;# 
   160     0188                     	;# 
   161     0189                     	;# 
   162     018C                     	;# 
   163     018D                     	;# 
   164     0000                     	;# 
   165     0001                     	;# 
   166     0002                     	;# 
   167     0003                     	;# 
   168     0004                     	;# 
   169     0005                     	;# 
   170     0006                     	;# 
   171     0007                     	;# 
   172     0008                     	;# 
   173     0009                     	;# 
   174     000A                     	;# 
   175     000B                     	;# 
   176     000C                     	;# 
   177     000D                     	;# 
   178     000E                     	;# 
   179     000E                     	;# 
   180     000F                     	;# 
   181     0010                     	;# 
   182     0011                     	;# 
   183     0012                     	;# 
   184     0013                     	;# 
   185     0014                     	;# 
   186     0015                     	;# 
   187     0015                     	;# 
   188     0016                     	;# 
   189     0017                     	;# 
   190     0018                     	;# 
   191     0019                     	;# 
   192     001A                     	;# 
   193     001B                     	;# 
   194     001B                     	;# 
   195     001C                     	;# 
   196     001D                     	;# 
   197     001E                     	;# 
   198     001F                     	;# 
   199     0081                     	;# 
   200     0085                     	;# 
   201     0086                     	;# 
   202     0087                     	;# 
   203     0088                     	;# 
   204     0089                     	;# 
   205     008C                     	;# 
   206     008D                     	;# 
   207     008E                     	;# 
   208     008F                     	;# 
   209     0090                     	;# 
   210     0091                     	;# 
   211     0092                     	;# 
   212     0093                     	;# 
   213     0093                     	;# 
   214     0093                     	;# 
   215     0094                     	;# 
   216     0095                     	;# 
   217     0096                     	;# 
   218     0097                     	;# 
   219     0098                     	;# 
   220     0099                     	;# 
   221     009A                     	;# 
   222     009B                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     0105                     	;# 
   228     0107                     	;# 
   229     0108                     	;# 
   230     0109                     	;# 
   231     010C                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     0185                     	;# 
   237     0187                     	;# 
   238     0188                     	;# 
   239     0189                     	;# 
   240     018C                     	;# 
   241     018D                     	;# 
   242     0000                     	;# 
   243     0001                     	;# 
   244     0002                     	;# 
   245     0003                     	;# 
   246     0004                     	;# 
   247     0005                     	;# 
   248     0006                     	;# 
   249     0007                     	;# 
   250     0008                     	;# 
   251     0009                     	;# 
   252     000A                     	;# 
   253     000B                     	;# 
   254     000C                     	;# 
   255     000D                     	;# 
   256     000E                     	;# 
   257     000E                     	;# 
   258     000F                     	;# 
   259     0010                     	;# 
   260     0011                     	;# 
   261     0012                     	;# 
   262     0013                     	;# 
   263     0014                     	;# 
   264     0015                     	;# 
   265     0015                     	;# 
   266     0016                     	;# 
   267     0017                     	;# 
   268     0018                     	;# 
   269     0019                     	;# 
   270     001A                     	;# 
   271     001B                     	;# 
   272     001B                     	;# 
   273     001C                     	;# 
   274     001D                     	;# 
   275     001E                     	;# 
   276     001F                     	;# 
   277     0081                     	;# 
   278     0085                     	;# 
   279     0086                     	;# 
   280     0087                     	;# 
   281     0088                     	;# 
   282     0089                     	;# 
   283     008C                     	;# 
   284     008D                     	;# 
   285     008E                     	;# 
   286     008F                     	;# 
   287     0090                     	;# 
   288     0091                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0093                     	;# 
   292     0093                     	;# 
   293     0094                     	;# 
   294     0095                     	;# 
   295     0096                     	;# 
   296     0097                     	;# 
   297     0098                     	;# 
   298     0099                     	;# 
   299     009A                     	;# 
   300     009B                     	;# 
   301     009C                     	;# 
   302     009D                     	;# 
   303     009E                     	;# 
   304     009F                     	;# 
   305     0105                     	;# 
   306     0107                     	;# 
   307     0108                     	;# 
   308     0109                     	;# 
   309     010C                     	;# 
   310     010C                     	;# 
   311     010D                     	;# 
   312     010E                     	;# 
   313     010F                     	;# 
   314     0185                     	;# 
   315     0187                     	;# 
   316     0188                     	;# 
   317     0189                     	;# 
   318     018C                     	;# 
   319     018D                     	;# 
   320     0000                     	;# 
   321     0001                     	;# 
   322     0002                     	;# 
   323     0003                     	;# 
   324     0004                     	;# 
   325     0005                     	;# 
   326     0006                     	;# 
   327     0007                     	;# 
   328     0008                     	;# 
   329     0009                     	;# 
   330     000A                     	;# 
   331     000B                     	;# 
   332     000C                     	;# 
   333     000D                     	;# 
   334     000E                     	;# 
   335     000E                     	;# 
   336     000F                     	;# 
   337     0010                     	;# 
   338     0011                     	;# 
   339     0012                     	;# 
   340     0013                     	;# 
   341     0014                     	;# 
   342     0015                     	;# 
   343     0015                     	;# 
   344     0016                     	;# 
   345     0017                     	;# 
   346     0018                     	;# 
   347     0019                     	;# 
   348     001A                     	;# 
   349     001B                     	;# 
   350     001B                     	;# 
   351     001C                     	;# 
   352     001D                     	;# 
   353     001E                     	;# 
   354     001F                     	;# 
   355     0081                     	;# 
   356     0085                     	;# 
   357     0086                     	;# 
   358     0087                     	;# 
   359     0088                     	;# 
   360     0089                     	;# 
   361     008C                     	;# 
   362     008D                     	;# 
   363     008E                     	;# 
   364     008F                     	;# 
   365     0090                     	;# 
   366     0091                     	;# 
   367     0092                     	;# 
   368     0093                     	;# 
   369     0093                     	;# 
   370     0093                     	;# 
   371     0094                     	;# 
   372     0095                     	;# 
   373     0096                     	;# 
   374     0097                     	;# 
   375     0098                     	;# 
   376     0099                     	;# 
   377     009A                     	;# 
   378     009B                     	;# 
   379     009C                     	;# 
   380     009D                     	;# 
   381     009E                     	;# 
   382     009F                     	;# 
   383     0105                     	;# 
   384     0107                     	;# 
   385     0108                     	;# 
   386     0109                     	;# 
   387     010C                     	;# 
   388     010C                     	;# 
   389     010D                     	;# 
   390     010E                     	;# 
   391     010F                     	;# 
   392     0185                     	;# 
   393     0187                     	;# 
   394     0188                     	;# 
   395     0189                     	;# 
   396     018C                     	;# 
   397     018D                     	;# 
   398     0000                     	;# 
   399     0001                     	;# 
   400     0002                     	;# 
   401     0003                     	;# 
   402     0004                     	;# 
   403     0005                     	;# 
   404     0006                     	;# 
   405     0007                     	;# 
   406     0008                     	;# 
   407     0009                     	;# 
   408     000A                     	;# 
   409     000B                     	;# 
   410     000C                     	;# 
   411     000D                     	;# 
   412     000E                     	;# 
   413     000E                     	;# 
   414     000F                     	;# 
   415     0010                     	;# 
   416     0011                     	;# 
   417     0012                     	;# 
   418     0013                     	;# 
   419     0014                     	;# 
   420     0015                     	;# 
   421     0015                     	;# 
   422     0016                     	;# 
   423     0017                     	;# 
   424     0018                     	;# 
   425     0019                     	;# 
   426     001A                     	;# 
   427     001B                     	;# 
   428     001B                     	;# 
   429     001C                     	;# 
   430     001D                     	;# 
   431     001E                     	;# 
   432     001F                     	;# 
   433     0081                     	;# 
   434     0085                     	;# 
   435     0086                     	;# 
   436     0087                     	;# 
   437     0088                     	;# 
   438     0089                     	;# 
   439     008C                     	;# 
   440     008D                     	;# 
   441     008E                     	;# 
   442     008F                     	;# 
   443     0090                     	;# 
   444     0091                     	;# 
   445     0092                     	;# 
   446     0093                     	;# 
   447     0093                     	;# 
   448     0093                     	;# 
   449     0094                     	;# 
   450     0095                     	;# 
   451     0096                     	;# 
   452     0097                     	;# 
   453     0098                     	;# 
   454     0099                     	;# 
   455     009A                     	;# 
   456     009B                     	;# 
   457     009C                     	;# 
   458     009D                     	;# 
   459     009E                     	;# 
   460     009F                     	;# 
   461     0105                     	;# 
   462     0107                     	;# 
   463     0108                     	;# 
   464     0109                     	;# 
   465     010C                     	;# 
   466     010C                     	;# 
   467     010D                     	;# 
   468     010E                     	;# 
   469     010F                     	;# 
   470     0185                     	;# 
   471     0187                     	;# 
   472     0188                     	;# 
   473     0189                     	;# 
   474     018C                     	;# 
   475     018D                     	;# 
   476     0000                     	;# 
   477     0001                     	;# 
   478     0002                     	;# 
   479     0003                     	;# 
   480     0004                     	;# 
   481     0005                     	;# 
   482     0006                     	;# 
   483     0007                     	;# 
   484     0008                     	;# 
   485     0009                     	;# 
   486     000A                     	;# 
   487     000B                     	;# 
   488     000C                     	;# 
   489     000D                     	;# 
   490     000E                     	;# 
   491     000E                     	;# 
   492     000F                     	;# 
   493     0010                     	;# 
   494     0011                     	;# 
   495     0012                     	;# 
   496     0013                     	;# 
   497     0014                     	;# 
   498     0015                     	;# 
   499     0015                     	;# 
   500     0016                     	;# 
   501     0017                     	;# 
   502     0018                     	;# 
   503     0019                     	;# 
   504     001A                     	;# 
   505     001B                     	;# 
   506     001B                     	;# 
   507     001C                     	;# 
   508     001D                     	;# 
   509     001E                     	;# 
   510     001F                     	;# 
   511     0081                     	;# 
   512     0085                     	;# 
   513     0086                     	;# 
   514     0087                     	;# 
   515     0088                     	;# 
   516     0089                     	;# 
   517     008C                     	;# 
   518     008D                     	;# 
   519     008E                     	;# 
   520     008F                     	;# 
   521     0090                     	;# 
   522     0091                     	;# 
   523     0092                     	;# 
   524     0093                     	;# 
   525     0093                     	;# 
   526     0093                     	;# 
   527     0094                     	;# 
   528     0095                     	;# 
   529     0096                     	;# 
   530     0097                     	;# 
   531     0098                     	;# 
   532     0099                     	;# 
   533     009A                     	;# 
   534     009B                     	;# 
   535     009C                     	;# 
   536     009D                     	;# 
   537     009E                     	;# 
   538     009F                     	;# 
   539     0105                     	;# 
   540     0107                     	;# 
   541     0108                     	;# 
   542     0109                     	;# 
   543     010C                     	;# 
   544     010C                     	;# 
   545     010D                     	;# 
   546     010E                     	;# 
   547     010F                     	;# 
   548     0185                     	;# 
   549     0187                     	;# 
   550     0188                     	;# 
   551     0189                     	;# 
   552     018C                     	;# 
   553     018D                     	;# 
   554     0000                     	;# 
   555     0001                     	;# 
   556     0002                     	;# 
   557     0003                     	;# 
   558     0004                     	;# 
   559     0005                     	;# 
   560     0006                     	;# 
   561     0007                     	;# 
   562     0008                     	;# 
   563     0009                     	;# 
   564     000A                     	;# 
   565     000B                     	;# 
   566     000C                     	;# 
   567     000D                     	;# 
   568     000E                     	;# 
   569     000E                     	;# 
   570     000F                     	;# 
   571     0010                     	;# 
   572     0011                     	;# 
   573     0012                     	;# 
   574     0013                     	;# 
   575     0014                     	;# 
   576     0015                     	;# 
   577     0015                     	;# 
   578     0016                     	;# 
   579     0017                     	;# 
   580     0018                     	;# 
   581     0019                     	;# 
   582     001A                     	;# 
   583     001B                     	;# 
   584     001B                     	;# 
   585     001C                     	;# 
   586     001D                     	;# 
   587     001E                     	;# 
   588     001F                     	;# 
   589     0081                     	;# 
   590     0085                     	;# 
   591     0086                     	;# 
   592     0087                     	;# 
   593     0088                     	;# 
   594     0089                     	;# 
   595     008C                     	;# 
   596     008D                     	;# 
   597     008E                     	;# 
   598     008F                     	;# 
   599     0090                     	;# 
   600     0091                     	;# 
   601     0092                     	;# 
   602     0093                     	;# 
   603     0093                     	;# 
   604     0093                     	;# 
   605     0094                     	;# 
   606     0095                     	;# 
   607     0096                     	;# 
   608     0097                     	;# 
   609     0098                     	;# 
   610     0099                     	;# 
   611     009A                     	;# 
   612     009B                     	;# 
   613     009C                     	;# 
   614     009D                     	;# 
   615     009E                     	;# 
   616     009F                     	;# 
   617     0105                     	;# 
   618     0107                     	;# 
   619     0108                     	;# 
   620     0109                     	;# 
   621     010C                     	;# 
   622     010C                     	;# 
   623     010D                     	;# 
   624     010E                     	;# 
   625     010F                     	;# 
   626     0185                     	;# 
   627     0187                     	;# 
   628     0188                     	;# 
   629     0189                     	;# 
   630     018C                     	;# 
   631     018D                     	;# 
   632                           
   633                           	psect	strings
   634     1800                     __pstrings:
   635     1800                     stringtab:
   636     1800                     __stringtab:
   637                           
   638                           ;	String table - string pointers are 1 byte each
   639     1800  1BFF               	btfsc	btemp+1,7
   640     1801  280A               	ljmp	stringcode
   641     1802  1383               	bcf	3,7
   642     1803  187F               	btfsc	btemp+1,0
   643     1804  1783               	bsf	3,7
   644     1805  0800               	movf	0,w
   645     1806  0A84               	incf	4,f
   646     1807  1903               	skipnz
   647     1808  0AFF               	incf	btemp+1,f
   648     1809  0008               	return
   649     180A                     stringcode:
   650     180A                     stringdir:
   651     180A  3018               	movlw	high stringdir
   652     180B  008A               	movwf	10
   653     180C  0804               	movf	4,w
   654     180D  0A84               	incf	4,f
   655     180E  0782               	addwf	2,f
   656     180F                     __stringbase:
   657     180F  3400               	retlw	0
   658     1810                     __end_of__stringtab:
   659     1810                     __powers_:
   660     1810  3400               	retlw	0
   661     1811  3400               	retlw	0
   662     1812  3480               	retlw	128
   663     1813  343F               	retlw	63
   664     1814  3400               	retlw	0
   665     1815  3400               	retlw	0
   666     1816  3420               	retlw	32
   667     1817  3441               	retlw	65
   668     1818  3400               	retlw	0
   669     1819  3400               	retlw	0
   670     181A  34C8               	retlw	200
   671     181B  3442               	retlw	66
   672     181C  3400               	retlw	0
   673     181D  3400               	retlw	0
   674     181E  347A               	retlw	122
   675     181F  3444               	retlw	68
   676     1820  3400               	retlw	0
   677     1821  3440               	retlw	64
   678     1822  341C               	retlw	28
   679     1823  3446               	retlw	70
   680     1824  3400               	retlw	0
   681     1825  3450               	retlw	80
   682     1826  34C3               	retlw	195
   683     1827  3447               	retlw	71
   684     1828  3400               	retlw	0
   685     1829  3424               	retlw	36
   686     182A  3474               	retlw	116
   687     182B  3449               	retlw	73
   688     182C  3480               	retlw	128
   689     182D  3496               	retlw	150
   690     182E  3418               	retlw	24
   691     182F  344B               	retlw	75
   692     1830  3420               	retlw	32
   693     1831  34BC               	retlw	188
   694     1832  34BE               	retlw	190
   695     1833  344C               	retlw	76
   696     1834  3428               	retlw	40
   697     1835  346B               	retlw	107
   698     1836  346E               	retlw	110
   699     1837  344E               	retlw	78
   700     1838  34F9               	retlw	249
   701     1839  3402               	retlw	2
   702     183A  3415               	retlw	21
   703     183B  3450               	retlw	80
   704     183C  34EC               	retlw	236
   705     183D  3478               	retlw	120
   706     183E  34AD               	retlw	173
   707     183F  3460               	retlw	96
   708     1840  34CA               	retlw	202
   709     1841  34F2               	retlw	242
   710     1842  3449               	retlw	73
   711     1843  3471               	retlw	113
   712     1844                     __end_of__powers_:
   713     1844                     __npowers_:
   714     1844  3400               	retlw	0
   715     1845  3400               	retlw	0
   716     1846  3480               	retlw	128
   717     1847  343F               	retlw	63
   718     1848  34CD               	retlw	205
   719     1849  34CC               	retlw	204
   720     184A  34CC               	retlw	204
   721     184B  343D               	retlw	61
   722     184C  340A               	retlw	10
   723     184D  34D7               	retlw	215
   724     184E  3423               	retlw	35
   725     184F  343C               	retlw	60
   726     1850  346F               	retlw	111
   727     1851  3412               	retlw	18
   728     1852  3483               	retlw	131
   729     1853  343A               	retlw	58
   730     1854  3417               	retlw	23
   731     1855  34B7               	retlw	183
   732     1856  34D1               	retlw	209
   733     1857  3438               	retlw	56
   734     1858  34AC               	retlw	172
   735     1859  34C5               	retlw	197
   736     185A  3427               	retlw	39
   737     185B  3437               	retlw	55
   738     185C  34BD               	retlw	189
   739     185D  3437               	retlw	55
   740     185E  3486               	retlw	134
   741     185F  3435               	retlw	53
   742     1860  3495               	retlw	149
   743     1861  34BF               	retlw	191
   744     1862  34D6               	retlw	214
   745     1863  3433               	retlw	51
   746     1864  3477               	retlw	119
   747     1865  34CC               	retlw	204
   748     1866  342B               	retlw	43
   749     1867  3432               	retlw	50
   750     1868  345F               	retlw	95
   751     1869  3470               	retlw	112
   752     186A  3489               	retlw	137
   753     186B  3430               	retlw	48
   754     186C  34FF               	retlw	255
   755     186D  34E6               	retlw	230
   756     186E  34DB               	retlw	219
   757     186F  342E               	retlw	46
   758     1870  3408               	retlw	8
   759     1871  34E5               	retlw	229
   760     1872  343C               	retlw	60
   761     1873  341E               	retlw	30
   762     1874  3460               	retlw	96
   763     1875  3442               	retlw	66
   764     1876  34A2               	retlw	162
   765     1877  340D               	retlw	13
   766     1878                     __end_of__npowers_:
   767     1878                     _dpowers:
   768     1878  3401               	retlw	1
   769     1879  3400               	retlw	0
   770     187A  3400               	retlw	0
   771     187B  3400               	retlw	0
   772     187C  340A               	retlw	10
   773     187D  3400               	retlw	0
   774     187E  3400               	retlw	0
   775     187F  3400               	retlw	0
   776     1880  3464               	retlw	100
   777     1881  3400               	retlw	0
   778     1882  3400               	retlw	0
   779     1883  3400               	retlw	0
   780     1884  34E8               	retlw	232
   781     1885  3403               	retlw	3
   782     1886  3400               	retlw	0
   783     1887  3400               	retlw	0
   784     1888  3410               	retlw	16
   785     1889  3427               	retlw	39
   786     188A  3400               	retlw	0
   787     188B  3400               	retlw	0
   788     188C  34A0               	retlw	160
   789     188D  3486               	retlw	134
   790     188E  3401               	retlw	1
   791     188F  3400               	retlw	0
   792     1890  3440               	retlw	64
   793     1891  3442               	retlw	66
   794     1892  340F               	retlw	15
   795     1893  3400               	retlw	0
   796     1894  3480               	retlw	128
   797     1895  3496               	retlw	150
   798     1896  3498               	retlw	152
   799     1897  3400               	retlw	0
   800     1898  3400               	retlw	0
   801     1899  34E1               	retlw	225
   802     189A  34F5               	retlw	245
   803     189B  3405               	retlw	5
   804     189C  3400               	retlw	0
   805     189D  34CA               	retlw	202
   806     189E  349A               	retlw	154
   807     189F  343B               	retlw	59
   808     18A0                     __end_of_dpowers:
   809     001A                     _RCREG	set	26
   810     0019                     _TXREG	set	25
   811     000C                     _PIR1bits	set	12
   812     0018                     _RCSTAbits	set	24
   813     0009                     _PORTEbits	set	9
   814     001F                     _ADCON0bits	set	31
   815     0008                     _PORTDbits	set	8
   816     000B                     _INTCONbits	set	11
   817     0009                     _PORTE	set	9
   818     0008                     _PORTD	set	8
   819     0006                     _PORTB	set	6
   820     001E                     _ADRESH	set	30
   821     0066                     _ADIF	set	102
   822     0098                     _TXSTAbits	set	152
   823     0099                     _SPBRG	set	153
   824     008F                     _OSCCONbits	set	143
   825     009F                     _ADCON1bits	set	159
   826     0085                     _TRISAbits	set	133
   827     008C                     _PIE1bits	set	140
   828     0089                     _TRISE	set	137
   829     0088                     _TRISD	set	136
   830     0086                     _TRISB	set	134
   831     0188                     _ANSELbits	set	392
   832     0189                     _ANSELH	set	393
   833     0188                     _ANSEL	set	392
   834     18A0                     STR_4:
   835     18A0  3425               	retlw	37	;'%'
   836     18A1  342E               	retlw	46	;'.'
   837     18A2  3432               	retlw	50	;'2'
   838     18A3  3466               	retlw	102	;'f'
   839     18A4  3400               	retlw	0
   840     18A5                     STR_1:
   841     18A5  3453               	retlw	83	;'S'
   842     18A6  3431               	retlw	49	;'1'
   843     18A7  343A               	retlw	58	;':'
   844     18A8  3400               	retlw	0
   845     18A9                     STR_2:
   846     18A9  3453               	retlw	83	;'S'
   847     18AA  3432               	retlw	50	;'2'
   848     18AB  343A               	retlw	58	;':'
   849     18AC  3400               	retlw	0
   850     18AD                     STR_3:
   851     18AD  3453               	retlw	83	;'S'
   852     18AE  3433               	retlw	51	;'3'
   853     18AF  343A               	retlw	58	;':'
   854     18B0  3400               	retlw	0
   855     18B1                     STR_6:
   856     18B1  3425               	retlw	37	;'%'
   857     18B2  342E               	retlw	46	;'.'
   858     18B3  3464               	retlw	100	;'d'
   859     18B4  3400               	retlw	0
   860     18B1                     
   861                           	psect	cinit
   862     07FC                     start_initialization:	
   863                           ; #config settings
   864                           
   865     07FC                     __initialization:
   866     07FC                     end_of_initialization:	
   867                           ;End of C runtime variable initialization code
   868                           
   869     07FC                     __end_of__initialization:
   870     07FC  0183               	clrf	3
   871     07FD  160A  118A  2D9F   	ljmp	_main	;jump to C main() function
   872                           
   873                           	psect	cstackBANK1
   874     00A0                     __pcstackBANK1:
   875     00A0                     ?_sprintf:
   876     00A0                     sprintf@f:	
   877                           ; 2 bytes @ 0x0
   878                           
   879                           
   880                           ; 1 bytes @ 0x0
   881     00A0                     	ds	5
   882     00A5                     ??_sprintf:
   883                           
   884                           ; 1 bytes @ 0x5
   885     00A5                     	ds	5
   886     00AA                     _sprintf$1301:
   887                           
   888                           ; 4 bytes @ 0xA
   889     00AA                     	ds	4
   890     00AE                     sprintf@ap:
   891                           
   892                           ; 1 bytes @ 0xE
   893     00AE                     	ds	1
   894     00AF                     sprintf@flag:
   895                           
   896                           ; 2 bytes @ 0xF
   897     00AF                     	ds	2
   898     00B1                     sprintf@eexp:
   899                           
   900                           ; 2 bytes @ 0x11
   901     00B1                     	ds	2
   902     00B3                     sprintf@tmpval:
   903                           
   904                           ; 4 bytes @ 0x13
   905     00B3                     	ds	4
   906     00B7                     sprintf@val:
   907                           
   908                           ; 4 bytes @ 0x17
   909     00B7                     	ds	4
   910     00BB                     sprintf@fval:
   911                           
   912                           ; 4 bytes @ 0x1B
   913     00BB                     	ds	4
   914     00BF                     sprintf@prec:
   915                           
   916                           ; 2 bytes @ 0x1F
   917     00BF                     	ds	2
   918     00C1                     sprintf@sp:
   919                           
   920                           ; 1 bytes @ 0x21
   921     00C1                     	ds	1
   922     00C2                     sprintf@c:
   923                           
   924                           ; 1 bytes @ 0x22
   925     00C2                     	ds	1
   926     00C3                     main@V1:
   927                           
   928                           ; 4 bytes @ 0x23
   929     00C3                     	ds	4
   930     00C7                     main@V2:
   931                           
   932                           ; 4 bytes @ 0x27
   933     00C7                     	ds	4
   934     00CB                     main@NUM_U:
   935                           
   936                           ; 2 bytes @ 0x2B
   937     00CB                     	ds	2
   938     00CD                     main@NUM_D:
   939                           
   940                           ; 2 bytes @ 0x2D
   941     00CD                     	ds	2
   942     00CF                     main@NUM_C:
   943                           
   944                           ; 2 bytes @ 0x2F
   945     00CF                     	ds	2
   946     00D1                     main@ADC1:
   947                           
   948                           ; 3 bytes @ 0x31
   949     00D1                     	ds	3
   950     00D4                     main@ADC2:
   951                           
   952                           ; 3 bytes @ 0x34
   953     00D4                     	ds	3
   954     00D7                     main@signo:
   955                           
   956                           ; 1 bytes @ 0x37
   957     00D7                     	ds	1
   958     00D8                     main@CONT:
   959                           
   960                           ; 3 bytes @ 0x38
   961     00D8                     	ds	3
   962     00DB                     main@NUM:
   963                           
   964                           ; 2 bytes @ 0x3B
   965     00DB                     	ds	2
   966                           
   967                           	psect	cstackCOMMON
   968     0070                     __pcstackCOMMON:
   969     0070                     ?_isdigit:
   970     0070                     ?___fleq:	
   971                           ; 1 bit 
   972                           
   973     0070                     ?___flge:	
   974                           ; 1 bit 
   975                           
   976     0070                     ?_setup:	
   977                           ; 1 bit 
   978                           
   979     0070                     ??_setup:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0070                     ?_setupINTOSC:	
   983                           ; 1 bytes @ 0x0
   984                           
   985     0070                     ?_setupADC:	
   986                           ; 1 bytes @ 0x0
   987                           
   988     0070                     ??_setupADC:	
   989                           ; 1 bytes @ 0x0
   990                           
   991     0070                     ?_configUART_RX:	
   992                           ; 1 bytes @ 0x0
   993                           
   994     0070                     ?_configUART_TX:	
   995                           ; 1 bytes @ 0x0
   996                           
   997     0070                     ?_Lcd_Init_8bits:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000     0070                     ?_Lcd_Clear_8bits:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003     0070                     ?_readADC:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006     0070                     ??_readADC:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009     0070                     ?_Lcd_Write_Char_8bits:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012     0070                     ?_read_char_UART:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015     0070                     ??_read_char_UART:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     0070                     ??_isdigit:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021     0070                     ?_main:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024     0070                     ?_Lcd_Port_8bits:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0070                     ??_Lcd_Port_8bits:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0070                     ?_Lcd_Cmd_8bits:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     0070                     ?__Umul8_16:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036     0070                     ?___wmul:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039     0070                     ?___awdiv:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042     0070                     ?___lwmod:	
  1043                           ; 2 bytes @ 0x0
  1044                           
  1045     0070                     ?__tdiv_to_l_:	
  1046                           ; 2 bytes @ 0x0
  1047                           
  1048     0070                     ?__div_to_l_:	
  1049                           ; 4 bytes @ 0x0
  1050                           
  1051     0070                     ?___lldiv:	
  1052                           ; 4 bytes @ 0x0
  1053                           
  1054     0070                     ?___flneg:	
  1055                           ; 4 bytes @ 0x0
  1056                           
  1057     0070                     ?___xxtofl:	
  1058                           ; 4 bytes @ 0x0
  1059                           
  1060     0070                     Lcd_Port_8bits@a:	
  1061                           ; 4 bytes @ 0x0
  1062                           
  1063     0070                     __Umul8_16@multiplicand:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066     0070                     _isdigit$1095:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069     0070                     setupINTOSC@OsciladorInterno:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     configUART_RX@baudrate:	
  1073                           ; 2 bytes @ 0x0
  1074                           
  1075     0070                     configUART_TX@baudrate:	
  1076                           ; 2 bytes @ 0x0
  1077                           
  1078     0070                     ___wmul@multiplier:	
  1079                           ; 2 bytes @ 0x0
  1080                           
  1081     0070                     ___awdiv@divisor:	
  1082                           ; 2 bytes @ 0x0
  1083                           
  1084     0070                     ___lwmod@divisor:	
  1085                           ; 2 bytes @ 0x0
  1086                           
  1087     0070                     ___lldiv@divisor:	
  1088                           ; 2 bytes @ 0x0
  1089                           
  1090     0070                     __div_to_l_@f1:	
  1091                           ; 4 bytes @ 0x0
  1092                           
  1093     0070                     ___fleq@ff1:	
  1094                           ; 4 bytes @ 0x0
  1095                           
  1096     0070                     ___flge@ff1:	
  1097                           ; 4 bytes @ 0x0
  1098                           
  1099     0070                     ___flneg@f1:	
  1100                           ; 4 bytes @ 0x0
  1101                           
  1102     0070                     __tdiv_to_l_@f1:	
  1103                           ; 4 bytes @ 0x0
  1104                           
  1105     0070                     ___xxtofl@val:	
  1106                           ; 4 bytes @ 0x0
  1107                           
  1108                           
  1109                           ; 4 bytes @ 0x0
  1110     0070                     	ds	1
  1111     0071                     ??_Lcd_Write_Char_8bits:
  1112     0071                     ??_Lcd_Cmd_8bits:	
  1113                           ; 1 bytes @ 0x1
  1114                           
  1115     0071                     setupADC@canal:	
  1116                           ; 1 bytes @ 0x1
  1117                           
  1118     0071                     isdigit@c:	
  1119                           ; 1 bytes @ 0x1
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x1
  1123     0071                     	ds	1
  1124     0072                     ??_setupINTOSC:
  1125     0072                     ??_configUART_RX:	
  1126                           ; 1 bytes @ 0x2
  1127                           
  1128     0072                     ??_configUART_TX:	
  1129                           ; 1 bytes @ 0x2
  1130                           
  1131     0072                     ??__Umul8_16:	
  1132                           ; 1 bytes @ 0x2
  1133                           
  1134     0072                     readADC@canal:	
  1135                           ; 1 bytes @ 0x2
  1136                           
  1137     0072                     Lcd_Write_Char_8bits@a:	
  1138                           ; 1 bytes @ 0x2
  1139                           
  1140     0072                     ___wmul@multiplicand:	
  1141                           ; 1 bytes @ 0x2
  1142                           
  1143     0072                     ___awdiv@dividend:	
  1144                           ; 2 bytes @ 0x2
  1145                           
  1146     0072                     ___lwmod@dividend:	
  1147                           ; 2 bytes @ 0x2
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x2
  1151     0072                     	ds	1
  1152     0073                     ?_Lcd_Write_String_8bits:
  1153     0073                     Lcd_Cmd_8bits@a:	
  1154                           ; 1 bytes @ 0x3
  1155                           
  1156     0073                     Lcd_Write_String_8bits@a:	
  1157                           ; 1 bytes @ 0x3
  1158                           
  1159                           
  1160                           ; 2 bytes @ 0x3
  1161     0073                     	ds	1
  1162     0074                     ??_Lcd_Init_8bits:
  1163     0074                     ??_Lcd_Clear_8bits:	
  1164                           ; 1 bytes @ 0x4
  1165                           
  1166     0074                     ?_Lcd_Set_Cursor_8bits:	
  1167                           ; 1 bytes @ 0x4
  1168                           
  1169     0074                     ??___wmul:	
  1170                           ; 1 bytes @ 0x4
  1171                           
  1172     0074                     ??___awdiv:	
  1173                           ; 1 bytes @ 0x4
  1174                           
  1175     0074                     ??___flneg:	
  1176                           ; 1 bytes @ 0x4
  1177                           
  1178     0074                     ??___lwmod:	
  1179                           ; 1 bytes @ 0x4
  1180                           
  1181     0074                     ??___xxtofl:	
  1182                           ; 1 bytes @ 0x4
  1183                           
  1184     0074                     Lcd_Set_Cursor_8bits@b:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187     0074                     ___wmul@product:	
  1188                           ; 1 bytes @ 0x4
  1189                           
  1190     0074                     __Umul8_16@product:	
  1191                           ; 2 bytes @ 0x4
  1192                           
  1193     0074                     ___lldiv@dividend:	
  1194                           ; 2 bytes @ 0x4
  1195                           
  1196     0074                     __div_to_l_@f2:	
  1197                           ; 4 bytes @ 0x4
  1198                           
  1199     0074                     ___fleq@ff2:	
  1200                           ; 4 bytes @ 0x4
  1201                           
  1202     0074                     ___flge@ff2:	
  1203                           ; 4 bytes @ 0x4
  1204                           
  1205     0074                     __tdiv_to_l_@f2:	
  1206                           ; 4 bytes @ 0x4
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x4
  1210     0074                     	ds	1
  1211     0075                     ??_Lcd_Set_Cursor_8bits:
  1212     0075                     ??_Lcd_Write_String_8bits:	
  1213                           ; 1 bytes @ 0x5
  1214                           
  1215     0075                     Lcd_Set_Cursor_8bits@a:	
  1216                           ; 1 bytes @ 0x5
  1217                           
  1218     0075                     ___awdiv@counter:	
  1219                           ; 1 bytes @ 0x5
  1220                           
  1221     0075                     ___lwmod@counter:	
  1222                           ; 1 bytes @ 0x5
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x5
  1226     0075                     	ds	1
  1227     0076                     ?___lwdiv:
  1228     0076                     Lcd_Set_Cursor_8bits@temp:	
  1229                           ; 2 bytes @ 0x6
  1230                           
  1231     0076                     ___awdiv@sign:	
  1232                           ; 1 bytes @ 0x6
  1233                           
  1234     0076                     ___lwdiv@divisor:	
  1235                           ; 1 bytes @ 0x6
  1236                           
  1237     0076                     __Umul8_16@word_mpld:	
  1238                           ; 2 bytes @ 0x6
  1239                           
  1240                           
  1241                           ; 2 bytes @ 0x6
  1242     0076                     	ds	1
  1243     0077                     ___awdiv@quotient:
  1244                           
  1245                           ; 2 bytes @ 0x7
  1246     0077                     	ds	1
  1247     0078                     ??__tdiv_to_l_:
  1248     0078                     ??__div_to_l_:	
  1249                           ; 1 bytes @ 0x8
  1250                           
  1251     0078                     ??___lldiv:	
  1252                           ; 1 bytes @ 0x8
  1253                           
  1254     0078                     ??___fleq:	
  1255                           ; 1 bytes @ 0x8
  1256                           
  1257     0078                     ??___flge:	
  1258                           ; 1 bytes @ 0x8
  1259                           
  1260     0078                     __Umul8_16@multiplier:	
  1261                           ; 1 bytes @ 0x8
  1262                           
  1263     0078                     ___xxtofl@sign:	
  1264                           ; 1 bytes @ 0x8
  1265                           
  1266     0078                     Lcd_Write_String_8bits@i:	
  1267                           ; 1 bytes @ 0x8
  1268                           
  1269     0078                     ___lwdiv@dividend:	
  1270                           ; 2 bytes @ 0x8
  1271                           
  1272                           
  1273                           ; 2 bytes @ 0x8
  1274     0078                     	ds	1
  1275     0079                     ?___awmod:
  1276     0079                     ___xxtofl@exp:	
  1277                           ; 2 bytes @ 0x9
  1278                           
  1279     0079                     ___awmod@divisor:	
  1280                           ; 1 bytes @ 0x9
  1281                           
  1282     0079                     ___lldiv@quotient:	
  1283                           ; 2 bytes @ 0x9
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x9
  1287     0079                     	ds	1
  1288     007A                     ??___lwdiv:
  1289     007A                     ___xxtofl@arg:	
  1290                           ; 1 bytes @ 0xA
  1291                           
  1292                           
  1293                           ; 4 bytes @ 0xA
  1294     007A                     	ds	1
  1295     007B                     ___awmod@dividend:
  1296     007B                     ___lwdiv@quotient:	
  1297                           ; 2 bytes @ 0xB
  1298                           
  1299                           
  1300                           ; 2 bytes @ 0xB
  1301     007B                     	ds	2
  1302     007D                     ??___awmod:
  1303     007D                     ___lldiv@counter:	
  1304                           ; 1 bytes @ 0xD
  1305                           
  1306     007D                     ___lwdiv@counter:	
  1307                           ; 1 bytes @ 0xD
  1308                           
  1309                           
  1310                           ; 1 bytes @ 0xD
  1311     007D                     	ds	1
  1312     007E                     ??___flsub:
  1313                           
  1314                           	psect	cstackBANK0
  1315     0020                     __pcstackBANK0:	
  1316                           ; 1 bytes @ 0xE
  1317                           
  1318     0020                     ?___llmod:
  1319     0020                     ___awmod@counter:	
  1320                           ; 4 bytes @ 0x0
  1321                           
  1322     0020                     __div_to_l_@quot:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325     0020                     __tdiv_to_l_@quot:	
  1326                           ; 4 bytes @ 0x0
  1327                           
  1328     0020                     ___llmod@divisor:	
  1329                           ; 4 bytes @ 0x0
  1330                           
  1331                           
  1332                           ; 4 bytes @ 0x0
  1333     0020                     	ds	1
  1334     0021                     ___awmod@sign:
  1335                           
  1336                           ; 1 bytes @ 0x1
  1337     0021                     	ds	1
  1338     0022                     ?___flmul:
  1339     0022                     ___flmul@b:	
  1340                           ; 4 bytes @ 0x2
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0x2
  1344     0022                     	ds	2
  1345     0024                     __div_to_l_@cntr:
  1346     0024                     __tdiv_to_l_@cntr:	
  1347                           ; 1 bytes @ 0x4
  1348                           
  1349     0024                     ___llmod@dividend:	
  1350                           ; 1 bytes @ 0x4
  1351                           
  1352                           
  1353                           ; 4 bytes @ 0x4
  1354     0024                     	ds	1
  1355     0025                     __div_to_l_@exp1:
  1356     0025                     __tdiv_to_l_@exp1:	
  1357                           ; 1 bytes @ 0x5
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0x5
  1361     0025                     	ds	1
  1362     0026                     ___flmul@a:
  1363                           
  1364                           ; 4 bytes @ 0x6
  1365     0026                     	ds	2
  1366     0028                     ??___llmod:
  1367                           
  1368                           ; 1 bytes @ 0x8
  1369     0028                     	ds	1
  1370     0029                     ___llmod@counter:
  1371                           
  1372                           ; 1 bytes @ 0x9
  1373     0029                     	ds	1
  1374     002A                     ??___flmul:
  1375                           
  1376                           ; 1 bytes @ 0xA
  1377     002A                     	ds	5
  1378     002F                     ___flmul@sign:
  1379                           
  1380                           ; 1 bytes @ 0xF
  1381     002F                     	ds	1
  1382     0030                     ___flmul@grs:
  1383                           
  1384                           ; 4 bytes @ 0x10
  1385     0030                     	ds	4
  1386     0034                     ___flmul@aexp:
  1387                           
  1388                           ; 1 bytes @ 0x14
  1389     0034                     	ds	1
  1390     0035                     ___flmul@bexp:
  1391                           
  1392                           ; 1 bytes @ 0x15
  1393     0035                     	ds	1
  1394     0036                     ___flmul@prod:
  1395                           
  1396                           ; 4 bytes @ 0x16
  1397     0036                     	ds	4
  1398     003A                     ___flmul@temp:
  1399                           
  1400                           ; 2 bytes @ 0x1A
  1401     003A                     	ds	2
  1402     003C                     ?_fround:
  1403     003C                     ?_scale:	
  1404                           ; 4 bytes @ 0x1C
  1405                           
  1406     003C                     ?___fldiv:	
  1407                           ; 4 bytes @ 0x1C
  1408                           
  1409     003C                     ___fldiv@a:	
  1410                           ; 4 bytes @ 0x1C
  1411                           
  1412                           
  1413                           ; 4 bytes @ 0x1C
  1414     003C                     	ds	4
  1415     0040                     ??_fround:
  1416     0040                     ??_scale:	
  1417                           ; 1 bytes @ 0x20
  1418                           
  1419     0040                     ___fldiv@b:	
  1420                           ; 1 bytes @ 0x20
  1421                           
  1422                           
  1423                           ; 4 bytes @ 0x20
  1424     0040                     	ds	4
  1425     0044                     ??___fldiv:
  1426                           
  1427                           ; 1 bytes @ 0x24
  1428     0044                     	ds	3
  1429     0047                     _fround$1299:
  1430                           
  1431                           ; 4 bytes @ 0x27
  1432     0047                     	ds	2
  1433     0049                     ___fldiv@rem:
  1434                           
  1435                           ; 4 bytes @ 0x29
  1436     0049                     	ds	1
  1437     004A                     _scale$1300:
  1438                           
  1439                           ; 4 bytes @ 0x2A
  1440     004A                     	ds	1
  1441     004B                     _fround$1298:
  1442                           
  1443                           ; 4 bytes @ 0x2B
  1444     004B                     	ds	2
  1445     004D                     ___fldiv@sign:
  1446                           
  1447                           ; 1 bytes @ 0x2D
  1448     004D                     	ds	1
  1449     004E                     scale@scl:
  1450     004E                     ___fldiv@new_exp:	
  1451                           ; 1 bytes @ 0x2E
  1452                           
  1453                           
  1454                           ; 2 bytes @ 0x2E
  1455     004E                     	ds	1
  1456     004F                     ?___fltol:
  1457     004F                     fround@prec:	
  1458                           ; 4 bytes @ 0x2F
  1459                           
  1460     004F                     ___fltol@f1:	
  1461                           ; 1 bytes @ 0x2F
  1462                           
  1463                           
  1464                           ; 4 bytes @ 0x2F
  1465     004F                     	ds	1
  1466     0050                     ?___fladd:
  1467     0050                     ___fladd@b:	
  1468                           ; 4 bytes @ 0x30
  1469                           
  1470     0050                     ___fldiv@grs:	
  1471                           ; 4 bytes @ 0x30
  1472                           
  1473                           
  1474                           ; 4 bytes @ 0x30
  1475     0050                     	ds	3
  1476     0053                     ??___fltol:
  1477                           
  1478                           ; 1 bytes @ 0x33
  1479     0053                     	ds	1
  1480     0054                     ___fldiv@bexp:
  1481     0054                     ___fladd@a:	
  1482                           ; 1 bytes @ 0x34
  1483                           
  1484                           
  1485                           ; 4 bytes @ 0x34
  1486     0054                     	ds	1
  1487     0055                     ___fldiv@aexp:
  1488                           
  1489                           ; 1 bytes @ 0x35
  1490     0055                     	ds	2
  1491     0057                     ___fltol@sign1:
  1492                           
  1493                           ; 1 bytes @ 0x37
  1494     0057                     	ds	1
  1495     0058                     ??___fladd:
  1496     0058                     ___fltol@exp1:	
  1497                           ; 1 bytes @ 0x38
  1498                           
  1499                           
  1500                           ; 1 bytes @ 0x38
  1501     0058                     	ds	8
  1502     0060                     ___fladd@signs:
  1503                           
  1504                           ; 1 bytes @ 0x40
  1505     0060                     	ds	1
  1506     0061                     ___fladd@aexp:
  1507                           
  1508                           ; 1 bytes @ 0x41
  1509     0061                     	ds	1
  1510     0062                     ___fladd@bexp:
  1511                           
  1512                           ; 1 bytes @ 0x42
  1513     0062                     	ds	1
  1514     0063                     ___fladd@grs:
  1515                           
  1516                           ; 1 bytes @ 0x43
  1517     0063                     	ds	1
  1518     0064                     ?___flsub:
  1519     0064                     ___flsub@a:	
  1520                           ; 4 bytes @ 0x44
  1521                           
  1522                           
  1523                           ; 4 bytes @ 0x44
  1524     0064                     	ds	4
  1525     0068                     ___flsub@b:
  1526                           
  1527                           ; 4 bytes @ 0x48
  1528     0068                     	ds	4
  1529     006C                     ??_main:
  1530                           
  1531                           ; 1 bytes @ 0x4C
  1532     006C                     	ds	4
  1533                           
  1534                           	psect	maintext
  1535     159F                     __pmaintext:	
  1536 ;;
  1537 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1538 ;;
  1539 ;; *************** function _main *****************
  1540 ;; Defined at:
  1541 ;;		line 62 in file "main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  signo           1   55[BANK1 ] unsigned char 
  1546 ;;  V2              4   39[BANK1 ] float 
  1547 ;;  V1              4   35[BANK1 ] float 
  1548 ;;  CONT            3   56[BANK1 ] unsigned char [3]
  1549 ;;  ADC2            3   52[BANK1 ] unsigned char [3]
  1550 ;;  ADC1            3   49[BANK1 ] unsigned char [3]
  1551 ;;  NUM             2   59[BANK1 ] int 
  1552 ;;  NUM_C           2   47[BANK1 ] int 
  1553 ;;  NUM_D           2   45[BANK1 ] int 
  1554 ;;  NUM_U           2   43[BANK1 ] int 
  1555 ;;  baudrate        2    0        unsigned int 
  1556 ;;  OsciladorInt    2    0        int 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : B00/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         0       0      26       0       0
  1568 ;;      Temps:          0       4       0       0       0
  1569 ;;      Totals:         0       4      26       0       0
  1570 ;;Total ram usage:       30 bytes
  1571 ;; Hardware stack levels required when called: 4
  1572 ;; This function calls:
  1573 ;;		_Lcd_Clear_8bits
  1574 ;;		_Lcd_Init_8bits
  1575 ;;		_Lcd_Set_Cursor_8bits
  1576 ;;		_Lcd_Write_Char_8bits
  1577 ;;		_Lcd_Write_String_8bits
  1578 ;;		___awdiv
  1579 ;;		___awmod
  1580 ;;		___fldiv
  1581 ;;		___flmul
  1582 ;;		___xxtofl
  1583 ;;		_configUART_RX
  1584 ;;		_configUART_TX
  1585 ;;		_readADC
  1586 ;;		_read_char_UART
  1587 ;;		_setup
  1588 ;;		_setupADC
  1589 ;;		_setupINTOSC
  1590 ;;		_sprintf
  1591 ;; This function is called by:
  1592 ;;		Startup code after reset
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596     159F                     _main:	
  1597                           ;psect for function _main
  1598                           
  1599     159F                     l3983:	
  1600                           ;incstack = 0
  1601                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1602                           
  1603                           
  1604                           ;main.c: 64:   int OsciladorInterno;;main.c: 65:   uint16_t baudrate;;main.c: 67:   int 
      +                          NUM = 1;
  1605     159F  3001               	movlw	1
  1606     15A0  1683               	bsf	3,5	;RP0=1, select bank1
  1607     15A1  1303               	bcf	3,6	;RP1=0, select bank1
  1608     15A2  00DB               	movwf	main@NUM^(0+128)
  1609     15A3  3000               	movlw	0
  1610     15A4  00DC               	movwf	(main@NUM^(0+128)+1)
  1611     15A5                     l3985:
  1612                           
  1613                           ;main.c: 68:   int NUM_U;;main.c: 69:   int NUM_D;;main.c: 70:   int NUM_C;;main.c: 72: 
      +                            float V1;;main.c: 73:   float V2;;main.c: 75:   char ADC1[3];;main.c: 76:   char ADC2[
      +                          3];;main.c: 77:   char CONT[3];;main.c: 79:   setup();
  1614     15A5  160A  158A  210A  160A  118A  	fcall	_setup
  1615                           
  1616                           ;main.c: 80:   setupINTOSC(8);
  1617     15AA  3008               	movlw	8
  1618     15AB  00F0               	movwf	setupINTOSC@OsciladorInterno
  1619     15AC  3000               	movlw	0
  1620     15AD  00F1               	movwf	setupINTOSC@OsciladorInterno+1
  1621     15AE  160A  158A  244A  160A  118A  	fcall	_setupINTOSC
  1622                           
  1623                           ;main.c: 81:   setupADC(0);
  1624     15B3  3000               	movlw	0
  1625     15B4  160A  158A  21DE  160A  118A  	fcall	_setupADC
  1626                           
  1627                           ;main.c: 82:   setupADC(1);
  1628     15B9  3001               	movlw	1
  1629     15BA  160A  158A  21DE  160A  118A  	fcall	_setupADC
  1630                           
  1631                           ;main.c: 83:   configUART_RX(12);
  1632     15BF  300C               	movlw	12
  1633     15C0  00F0               	movwf	configUART_RX@baudrate
  1634     15C1  3000               	movlw	0
  1635     15C2  00F1               	movwf	configUART_RX@baudrate+1
  1636     15C3  160A  158A  20E6  160A  118A  	fcall	_configUART_RX
  1637                           
  1638                           ;main.c: 84:   configUART_TX(12);
  1639     15C8  300C               	movlw	12
  1640     15C9  00F0               	movwf	configUART_TX@baudrate
  1641     15CA  3000               	movlw	0
  1642     15CB  00F1               	movwf	configUART_TX@baudrate+1
  1643     15CC  160A  118A  2002  160A  118A  	fcall	_configUART_TX
  1644                           
  1645                           ;main.c: 85:   Lcd_Init_8bits();
  1646     15D1  160A  158A  24AC  160A  118A  	fcall	_Lcd_Init_8bits
  1647                           
  1648                           ;main.c: 87:   Lcd_Clear_8bits();
  1649     15D6  160A  158A  20DF  160A  118A  	fcall	_Lcd_Clear_8bits
  1650                           
  1651                           ;main.c: 88:   Lcd_Set_Cursor_8bits(1,1);
  1652     15DB  01F4               	clrf	Lcd_Set_Cursor_8bits@b
  1653     15DC  0AF4               	incf	Lcd_Set_Cursor_8bits@b,f
  1654     15DD  3001               	movlw	1
  1655     15DE  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  1656     15E3                     l3987:
  1657                           
  1658                           ;main.c: 89:   Lcd_Write_String_8bits("S1:");
  1659     15E3  3096               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1660     15E4  00F3               	movwf	Lcd_Write_String_8bits@a
  1661     15E5  3080               	movlw	128
  1662     15E6  00F4               	movwf	Lcd_Write_String_8bits@a+1
  1663     15E7  160A  158A  2283  160A  118A  	fcall	_Lcd_Write_String_8bits
  1664     15EC                     l3989:
  1665                           
  1666                           ;main.c: 90:   Lcd_Set_Cursor_8bits(1,7);
  1667     15EC  3007               	movlw	7
  1668     15ED  00F4               	movwf	Lcd_Set_Cursor_8bits@b
  1669     15EE  3001               	movlw	1
  1670     15EF  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  1671                           
  1672                           ;main.c: 91:   Lcd_Write_String_8bits("S2:");
  1673     15F4  309A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1674     15F5  00F3               	movwf	Lcd_Write_String_8bits@a
  1675     15F6  3080               	movlw	128
  1676     15F7  00F4               	movwf	Lcd_Write_String_8bits@a+1
  1677     15F8  160A  158A  2283  160A  118A  	fcall	_Lcd_Write_String_8bits
  1678     15FD                     l3991:
  1679                           
  1680                           ;main.c: 92:   Lcd_Set_Cursor_8bits(1,13);
  1681     15FD  300D               	movlw	13
  1682     15FE  00F4               	movwf	Lcd_Set_Cursor_8bits@b
  1683     15FF  3001               	movlw	1
  1684     1600  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  1685     1605                     l3993:
  1686                           
  1687                           ;main.c: 93:   Lcd_Write_String_8bits("S3:");
  1688     1605  309E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1689     1606  00F3               	movwf	Lcd_Write_String_8bits@a
  1690     1607  3080               	movlw	128
  1691     1608  00F4               	movwf	Lcd_Write_String_8bits@a+1
  1692     1609  160A  158A  2283  160A  118A  	fcall	_Lcd_Write_String_8bits
  1693     160E                     l53:	
  1694                           ;main.c: 95:   while(1)
  1695                           
  1696                           
  1697                           ;main.c: 96:   {;main.c: 97:       readADC(0);
  1698     160E  3000               	movlw	0
  1699     160F  160A  158A  22C5  160A  118A  	fcall	_readADC
  1700     1614                     l3995:
  1701                           
  1702                           ;main.c: 99:       V1 = (ADRESH*5.0)/255;
  1703     1614  3043               	movlw	67
  1704     1615  1283               	bcf	3,5	;RP0=0, select bank0
  1705     1616  1303               	bcf	3,6	;RP1=0, select bank0
  1706     1617  00BF               	movwf	___fldiv@a+3
  1707     1618  307F               	movlw	127
  1708     1619  00BE               	movwf	___fldiv@a+2
  1709     161A  3000               	movlw	0
  1710     161B  00BD               	movwf	___fldiv@a+1
  1711     161C  3000               	movlw	0
  1712     161D  00BC               	movwf	___fldiv@a
  1713     161E  3040               	movlw	64
  1714     161F  00A5               	movwf	___flmul@b+3
  1715     1620  30A0               	movlw	160
  1716     1621  00A4               	movwf	___flmul@b+2
  1717     1622  3000               	movlw	0
  1718     1623  00A3               	movwf	___flmul@b+1
  1719     1624  3000               	movlw	0
  1720     1625  00A2               	movwf	___flmul@b
  1721     1626  081E               	movf	30,w	;volatile
  1722     1627  00EC               	movwf	??_main
  1723     1628  01ED               	clrf	??_main+1
  1724     1629  01EE               	clrf	??_main+2
  1725     162A  01EF               	clrf	??_main+3
  1726     162B  086F               	movf	??_main+3,w
  1727     162C  00F3               	movwf	___xxtofl@val+3
  1728     162D  086E               	movf	??_main+2,w
  1729     162E  00F2               	movwf	___xxtofl@val+2
  1730     162F  086D               	movf	??_main+1,w
  1731     1630  00F1               	movwf	___xxtofl@val+1
  1732     1631  086C               	movf	??_main,w
  1733     1632  00F0               	movwf	___xxtofl@val
  1734     1633  3001               	movlw	1
  1735     1634  160A  118A  2084  160A  118A  	fcall	___xxtofl
  1736     1639  0873               	movf	?___xxtofl+3,w
  1737     163A  1283               	bcf	3,5	;RP0=0, select bank0
  1738     163B  1303               	bcf	3,6	;RP1=0, select bank0
  1739     163C  00A9               	movwf	___flmul@a+3
  1740     163D  0872               	movf	?___xxtofl+2,w
  1741     163E  00A8               	movwf	___flmul@a+2
  1742     163F  0871               	movf	?___xxtofl+1,w
  1743     1640  00A7               	movwf	___flmul@a+1
  1744     1641  0870               	movf	?___xxtofl,w
  1745     1642  00A6               	movwf	___flmul@a
  1746     1643  120A  158A  215C  160A  118A  	fcall	___flmul
  1747     1648  1283               	bcf	3,5	;RP0=0, select bank0
  1748     1649  1303               	bcf	3,6	;RP1=0, select bank0
  1749     164A  0825               	movf	?___flmul+3,w
  1750     164B  00C3               	movwf	___fldiv@b+3
  1751     164C  0824               	movf	?___flmul+2,w
  1752     164D  00C2               	movwf	___fldiv@b+2
  1753     164E  0823               	movf	?___flmul+1,w
  1754     164F  00C1               	movwf	___fldiv@b+1
  1755     1650  0822               	movf	?___flmul,w
  1756     1651  00C0               	movwf	___fldiv@b
  1757     1652  160A  158A  262D  160A  118A  	fcall	___fldiv
  1758     1657  1283               	bcf	3,5	;RP0=0, select bank0
  1759     1658  1303               	bcf	3,6	;RP1=0, select bank0
  1760     1659  083F               	movf	?___fldiv+3,w
  1761     165A  1683               	bsf	3,5	;RP0=1, select bank1
  1762     165B  1303               	bcf	3,6	;RP1=0, select bank1
  1763     165C  00C6               	movwf	(main@V1+3)^(0+128)
  1764     165D  1283               	bcf	3,5	;RP0=0, select bank0
  1765     165E  1303               	bcf	3,6	;RP1=0, select bank0
  1766     165F  083E               	movf	?___fldiv+2,w
  1767     1660  1683               	bsf	3,5	;RP0=1, select bank1
  1768     1661  1303               	bcf	3,6	;RP1=0, select bank1
  1769     1662  00C5               	movwf	(main@V1+2)^(0+128)
  1770     1663  1283               	bcf	3,5	;RP0=0, select bank0
  1771     1664  1303               	bcf	3,6	;RP1=0, select bank0
  1772     1665  083D               	movf	?___fldiv+1,w
  1773     1666  1683               	bsf	3,5	;RP0=1, select bank1
  1774     1667  1303               	bcf	3,6	;RP1=0, select bank1
  1775     1668  00C4               	movwf	(main@V1+1)^(0+128)
  1776     1669  1283               	bcf	3,5	;RP0=0, select bank0
  1777     166A  1303               	bcf	3,6	;RP1=0, select bank0
  1778     166B  083C               	movf	?___fldiv,w
  1779     166C  1683               	bsf	3,5	;RP0=1, select bank1
  1780     166D  1303               	bcf	3,6	;RP1=0, select bank1
  1781     166E  00C3               	movwf	main@V1^(0+128)
  1782     166F                     l3997:
  1783                           
  1784                           ;main.c: 101:       sprintf(ADC1, "%.2f", V1);
  1785     166F  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1786     1670  00A0               	movwf	sprintf@f^(0+128)
  1787     1671  0846               	movf	(main@V1+3)^(0+128),w
  1788     1672  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1789     1673  0845               	movf	(main@V1+2)^(0+128),w
  1790     1674  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1791     1675  0844               	movf	(main@V1+1)^(0+128),w
  1792     1676  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1793     1677  0843               	movf	main@V1^(0+128),w
  1794     1678  00A1               	movwf	(?_sprintf^(0+128)+1)
  1795     1679  30D1               	movlw	(low (main@ADC1| 0))& (0+255)
  1796     167A  120A  118A  2077  160A  118A  	fcall	_sprintf
  1797     167F                     l3999:
  1798                           
  1799                           ;main.c: 102:       Lcd_Set_Cursor_8bits(2,1);
  1800     167F  01F4               	clrf	Lcd_Set_Cursor_8bits@b
  1801     1680  0AF4               	incf	Lcd_Set_Cursor_8bits@b,f
  1802     1681  3002               	movlw	2
  1803     1682  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  1804     1687                     l4001:
  1805                           
  1806                           ;main.c: 103:       Lcd_Write_String_8bits(ADC1);
  1807     1687  30D1               	movlw	(low (main@ADC1| 0))& (0+255)
  1808     1688  00F3               	movwf	Lcd_Write_String_8bits@a
  1809     1689  3000               	movlw	0
  1810     168A  00F4               	movwf	Lcd_Write_String_8bits@a+1
  1811     168B  160A  158A  2283  160A  118A  	fcall	_Lcd_Write_String_8bits
  1812     1690                     l4003:
  1813                           
  1814                           ;main.c: 104:       Lcd_Set_Cursor_8bits(2,5);
  1815     1690  3005               	movlw	5
  1816     1691  00F4               	movwf	Lcd_Set_Cursor_8bits@b
  1817     1692  3002               	movlw	2
  1818     1693  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  1819     1698                     l4005:
  1820                           
  1821                           ;main.c: 105:       Lcd_Write_Char_8bits('V');
  1822     1698  3056               	movlw	86
  1823     1699  160A  158A  211E  160A  118A  	fcall	_Lcd_Write_Char_8bits
  1824     169E                     l4007:
  1825                           
  1826                           ;main.c: 107:       readADC(1);
  1827     169E  3001               	movlw	1
  1828     169F  160A  158A  22C5  160A  118A  	fcall	_readADC
  1829     16A4                     l4009:
  1830                           
  1831                           ;main.c: 109:       V2 = (ADRESH*5.0)/255;
  1832     16A4  3043               	movlw	67
  1833     16A5  1283               	bcf	3,5	;RP0=0, select bank0
  1834     16A6  1303               	bcf	3,6	;RP1=0, select bank0
  1835     16A7  00BF               	movwf	___fldiv@a+3
  1836     16A8  307F               	movlw	127
  1837     16A9  00BE               	movwf	___fldiv@a+2
  1838     16AA  3000               	movlw	0
  1839     16AB  00BD               	movwf	___fldiv@a+1
  1840     16AC  3000               	movlw	0
  1841     16AD  00BC               	movwf	___fldiv@a
  1842     16AE  3040               	movlw	64
  1843     16AF  00A5               	movwf	___flmul@b+3
  1844     16B0  30A0               	movlw	160
  1845     16B1  00A4               	movwf	___flmul@b+2
  1846     16B2  3000               	movlw	0
  1847     16B3  00A3               	movwf	___flmul@b+1
  1848     16B4  3000               	movlw	0
  1849     16B5  00A2               	movwf	___flmul@b
  1850     16B6  081E               	movf	30,w	;volatile
  1851     16B7  00EC               	movwf	??_main
  1852     16B8  01ED               	clrf	??_main+1
  1853     16B9  01EE               	clrf	??_main+2
  1854     16BA  01EF               	clrf	??_main+3
  1855     16BB  086F               	movf	??_main+3,w
  1856     16BC  00F3               	movwf	___xxtofl@val+3
  1857     16BD  086E               	movf	??_main+2,w
  1858     16BE  00F2               	movwf	___xxtofl@val+2
  1859     16BF  086D               	movf	??_main+1,w
  1860     16C0  00F1               	movwf	___xxtofl@val+1
  1861     16C1  086C               	movf	??_main,w
  1862     16C2  00F0               	movwf	___xxtofl@val
  1863     16C3  3001               	movlw	1
  1864     16C4  160A  118A  2084  160A  118A  	fcall	___xxtofl
  1865     16C9  0873               	movf	?___xxtofl+3,w
  1866     16CA  1283               	bcf	3,5	;RP0=0, select bank0
  1867     16CB  1303               	bcf	3,6	;RP1=0, select bank0
  1868     16CC  00A9               	movwf	___flmul@a+3
  1869     16CD  0872               	movf	?___xxtofl+2,w
  1870     16CE  00A8               	movwf	___flmul@a+2
  1871     16CF  0871               	movf	?___xxtofl+1,w
  1872     16D0  00A7               	movwf	___flmul@a+1
  1873     16D1  0870               	movf	?___xxtofl,w
  1874     16D2  00A6               	movwf	___flmul@a
  1875     16D3  120A  158A  215C  160A  118A  	fcall	___flmul
  1876     16D8  1283               	bcf	3,5	;RP0=0, select bank0
  1877     16D9  1303               	bcf	3,6	;RP1=0, select bank0
  1878     16DA  0825               	movf	?___flmul+3,w
  1879     16DB  00C3               	movwf	___fldiv@b+3
  1880     16DC  0824               	movf	?___flmul+2,w
  1881     16DD  00C2               	movwf	___fldiv@b+2
  1882     16DE  0823               	movf	?___flmul+1,w
  1883     16DF  00C1               	movwf	___fldiv@b+1
  1884     16E0  0822               	movf	?___flmul,w
  1885     16E1  00C0               	movwf	___fldiv@b
  1886     16E2  160A  158A  262D  160A  118A  	fcall	___fldiv
  1887     16E7  1283               	bcf	3,5	;RP0=0, select bank0
  1888     16E8  1303               	bcf	3,6	;RP1=0, select bank0
  1889     16E9  083F               	movf	?___fldiv+3,w
  1890     16EA  1683               	bsf	3,5	;RP0=1, select bank1
  1891     16EB  1303               	bcf	3,6	;RP1=0, select bank1
  1892     16EC  00CA               	movwf	(main@V2+3)^(0+128)
  1893     16ED  1283               	bcf	3,5	;RP0=0, select bank0
  1894     16EE  1303               	bcf	3,6	;RP1=0, select bank0
  1895     16EF  083E               	movf	?___fldiv+2,w
  1896     16F0  1683               	bsf	3,5	;RP0=1, select bank1
  1897     16F1  1303               	bcf	3,6	;RP1=0, select bank1
  1898     16F2  00C9               	movwf	(main@V2+2)^(0+128)
  1899     16F3  1283               	bcf	3,5	;RP0=0, select bank0
  1900     16F4  1303               	bcf	3,6	;RP1=0, select bank0
  1901     16F5  083D               	movf	?___fldiv+1,w
  1902     16F6  1683               	bsf	3,5	;RP0=1, select bank1
  1903     16F7  1303               	bcf	3,6	;RP1=0, select bank1
  1904     16F8  00C8               	movwf	(main@V2+1)^(0+128)
  1905     16F9  1283               	bcf	3,5	;RP0=0, select bank0
  1906     16FA  1303               	bcf	3,6	;RP1=0, select bank0
  1907     16FB  083C               	movf	?___fldiv,w
  1908     16FC  1683               	bsf	3,5	;RP0=1, select bank1
  1909     16FD  1303               	bcf	3,6	;RP1=0, select bank1
  1910     16FE  00C7               	movwf	main@V2^(0+128)
  1911     16FF                     l4011:
  1912                           
  1913                           ;main.c: 111:       sprintf(ADC2, "%.2f", V2);
  1914     16FF  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1915     1700  00A0               	movwf	sprintf@f^(0+128)
  1916     1701  084A               	movf	(main@V2+3)^(0+128),w
  1917     1702  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1918     1703  0849               	movf	(main@V2+2)^(0+128),w
  1919     1704  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1920     1705  0848               	movf	(main@V2+1)^(0+128),w
  1921     1706  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1922     1707  0847               	movf	main@V2^(0+128),w
  1923     1708  00A1               	movwf	(?_sprintf^(0+128)+1)
  1924     1709  30D4               	movlw	(low (main@ADC2| 0))& (0+255)
  1925     170A  120A  118A  2077  160A  118A  	fcall	_sprintf
  1926     170F                     l4013:
  1927                           
  1928                           ;main.c: 112:       Lcd_Set_Cursor_8bits(2,7);
  1929     170F  3007               	movlw	7
  1930     1710  00F4               	movwf	Lcd_Set_Cursor_8bits@b
  1931     1711  3002               	movlw	2
  1932     1712  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  1933                           
  1934                           ;main.c: 113:       Lcd_Write_String_8bits(ADC2);
  1935     1717  30D4               	movlw	(low (main@ADC2| 0))& (0+255)
  1936     1718  00F3               	movwf	Lcd_Write_String_8bits@a
  1937     1719  3000               	movlw	0
  1938     171A  00F4               	movwf	Lcd_Write_String_8bits@a+1
  1939     171B  160A  158A  2283  160A  118A  	fcall	_Lcd_Write_String_8bits
  1940     1720                     l4015:
  1941                           
  1942                           ;main.c: 114:       Lcd_Set_Cursor_8bits(2,11);
  1943     1720  300B               	movlw	11
  1944     1721  00F4               	movwf	Lcd_Set_Cursor_8bits@b
  1945     1722  3002               	movlw	2
  1946     1723  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  1947     1728                     l4017:
  1948                           
  1949                           ;main.c: 115:       Lcd_Write_Char_8bits('V');
  1950     1728  3056               	movlw	86
  1951     1729  160A  158A  211E  160A  118A  	fcall	_Lcd_Write_Char_8bits
  1952     172E                     l4019:
  1953                           
  1954                           ;main.c: 117:       char signo = read_char_UART();
  1955     172E  160A  158A  20EF  160A  118A  	fcall	_read_char_UART
  1956     1733  1683               	bsf	3,5	;RP0=1, select bank1
  1957     1734  1303               	bcf	3,6	;RP1=0, select bank1
  1958     1735  00D7               	movwf	main@signo^(0+128)
  1959     1736                     l4021:
  1960                           
  1961                           ;main.c: 119:       if (signo == '+')
  1962     1736  302B               	movlw	43
  1963     1737  0657               	xorwf	main@signo^(0+128),w
  1964     1738  1D03               	btfss	3,2
  1965     1739  2F3B               	goto	u6561
  1966     173A  2F3C               	goto	u6560
  1967     173B                     u6561:
  1968     173B  2F43               	goto	l4025
  1969     173C                     u6560:
  1970     173C                     l4023:
  1971                           
  1972                           ;main.c: 120:         {;main.c: 121:             NUM++;
  1973     173C  3001               	movlw	1
  1974     173D  07DB               	addwf	main@NUM^(0+128),f
  1975     173E  1803               	skipnc
  1976     173F  0ADC               	incf	(main@NUM+1)^(0+128),f
  1977     1740  3000               	movlw	0
  1978     1741  07DC               	addwf	(main@NUM+1)^(0+128),f
  1979                           
  1980                           ;main.c: 123:         }
  1981     1742  2F4F               	goto	l55
  1982     1743                     l4025:
  1983     1743  302D               	movlw	45
  1984     1744  0657               	xorwf	main@signo^(0+128),w
  1985     1745  1D03               	btfss	3,2
  1986     1746  2F48               	goto	u6571
  1987     1747  2F49               	goto	u6570
  1988     1748                     u6571:
  1989     1748  2F4F               	goto	l55
  1990     1749                     u6570:
  1991     1749                     l4027:
  1992                           
  1993                           ;main.c: 125:         {;main.c: 126:             NUM--;
  1994     1749  30FF               	movlw	255
  1995     174A  07DB               	addwf	main@NUM^(0+128),f
  1996     174B  1803               	skipnc
  1997     174C  0ADC               	incf	(main@NUM+1)^(0+128),f
  1998     174D  30FF               	movlw	255
  1999     174E  07DC               	addwf	(main@NUM+1)^(0+128),f
  2000     174F                     l55:
  2001                           
  2002                           ;main.c: 130:       PORTB = NUM;
  2003     174F  085B               	movf	main@NUM^(0+128),w
  2004     1750  1283               	bcf	3,5	;RP0=0, select bank0
  2005     1751  1303               	bcf	3,6	;RP1=0, select bank0
  2006     1752  0086               	movwf	6	;volatile
  2007     1753                     l4029:
  2008                           
  2009                           ;main.c: 132:       if (NUM < 0)
  2010     1753  1683               	bsf	3,5	;RP0=1, select bank1
  2011     1754  1303               	bcf	3,6	;RP1=0, select bank1
  2012     1755  1FDC               	btfss	(main@NUM+1)^(0+128),7
  2013     1756  2F58               	goto	u6581
  2014     1757  2F59               	goto	u6580
  2015     1758                     u6581:
  2016     1758  2F5B               	goto	l4033
  2017     1759                     u6580:
  2018     1759                     l4031:
  2019                           
  2020                           ;main.c: 133:       {;main.c: 134:           NUM = 0;
  2021     1759  01DB               	clrf	main@NUM^(0+128)
  2022     175A  01DC               	clrf	(main@NUM+1)^(0+128)
  2023     175B                     l4033:
  2024                           
  2025                           ;main.c: 137:       NUM_C = (NUM/100);
  2026     175B  3064               	movlw	100
  2027     175C  00F0               	movwf	___awdiv@divisor
  2028     175D  3000               	movlw	0
  2029     175E  00F1               	movwf	___awdiv@divisor+1
  2030     175F  085C               	movf	(main@NUM+1)^(0+128),w
  2031     1760  00F3               	movwf	___awdiv@dividend+1
  2032     1761  085B               	movf	main@NUM^(0+128),w
  2033     1762  00F2               	movwf	___awdiv@dividend
  2034     1763  120A  118A  2010  160A  118A  	fcall	___awdiv
  2035     1768  0871               	movf	?___awdiv+1,w
  2036     1769  1683               	bsf	3,5	;RP0=1, select bank1
  2037     176A  1303               	bcf	3,6	;RP1=0, select bank1
  2038     176B  00D0               	movwf	(main@NUM_C+1)^(0+128)
  2039     176C  0870               	movf	?___awdiv,w
  2040     176D  00CF               	movwf	main@NUM_C^(0+128)
  2041     176E                     l4035:
  2042                           
  2043                           ;main.c: 138:       NUM_D = (NUM/10)%10;
  2044     176E  300A               	movlw	10
  2045     176F  00F9               	movwf	___awmod@divisor
  2046     1770  3000               	movlw	0
  2047     1771  00FA               	movwf	___awmod@divisor+1
  2048     1772  300A               	movlw	10
  2049     1773  00F0               	movwf	___awdiv@divisor
  2050     1774  3000               	movlw	0
  2051     1775  00F1               	movwf	___awdiv@divisor+1
  2052     1776  085C               	movf	(main@NUM+1)^(0+128),w
  2053     1777  00F3               	movwf	___awdiv@dividend+1
  2054     1778  085B               	movf	main@NUM^(0+128),w
  2055     1779  00F2               	movwf	___awdiv@dividend
  2056     177A  120A  118A  2010  160A  118A  	fcall	___awdiv
  2057     177F  0871               	movf	?___awdiv+1,w
  2058     1780  00FC               	movwf	___awmod@dividend+1
  2059     1781  0870               	movf	?___awdiv,w
  2060     1782  00FB               	movwf	___awmod@dividend
  2061     1783  160A  158A  23EF  160A  118A  	fcall	___awmod
  2062     1788  087A               	movf	?___awmod+1,w
  2063     1789  1683               	bsf	3,5	;RP0=1, select bank1
  2064     178A  1303               	bcf	3,6	;RP1=0, select bank1
  2065     178B  00CE               	movwf	(main@NUM_D+1)^(0+128)
  2066     178C  0879               	movf	?___awmod,w
  2067     178D  00CD               	movwf	main@NUM_D^(0+128)
  2068     178E                     l4037:
  2069                           
  2070                           ;main.c: 139:       NUM_U = NUM%10;
  2071     178E  300A               	movlw	10
  2072     178F  00F9               	movwf	___awmod@divisor
  2073     1790  3000               	movlw	0
  2074     1791  00FA               	movwf	___awmod@divisor+1
  2075     1792  085C               	movf	(main@NUM+1)^(0+128),w
  2076     1793  00FC               	movwf	___awmod@dividend+1
  2077     1794  085B               	movf	main@NUM^(0+128),w
  2078     1795  00FB               	movwf	___awmod@dividend
  2079     1796  160A  158A  23EF  160A  118A  	fcall	___awmod
  2080     179B  087A               	movf	?___awmod+1,w
  2081     179C  1683               	bsf	3,5	;RP0=1, select bank1
  2082     179D  1303               	bcf	3,6	;RP1=0, select bank1
  2083     179E  00CC               	movwf	(main@NUM_U+1)^(0+128)
  2084     179F  0879               	movf	?___awmod,w
  2085     17A0  00CB               	movwf	main@NUM_U^(0+128)
  2086     17A1                     l4039:
  2087                           
  2088                           ;main.c: 141:       sprintf(CONT, "%.d", NUM_C);
  2089     17A1  30A2               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2090     17A2  00A0               	movwf	sprintf@f^(0+128)
  2091     17A3  0850               	movf	(main@NUM_C+1)^(0+128),w
  2092     17A4  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2093     17A5  084F               	movf	main@NUM_C^(0+128),w
  2094     17A6  00A1               	movwf	(?_sprintf^(0+128)+1)
  2095     17A7  30D8               	movlw	(low (main@CONT| 0))& (0+255)
  2096     17A8  120A  118A  2077  160A  118A  	fcall	_sprintf
  2097     17AD                     l4041:
  2098                           
  2099                           ;main.c: 142:       Lcd_Set_Cursor_8bits(2,13);
  2100     17AD  300D               	movlw	13
  2101     17AE  00F4               	movwf	Lcd_Set_Cursor_8bits@b
  2102     17AF  3002               	movlw	2
  2103     17B0  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  2104     17B5                     l4043:
  2105                           
  2106                           ;main.c: 143:       Lcd_Write_String_8bits(CONT);
  2107     17B5  30D8               	movlw	(low (main@CONT| 0))& (0+255)
  2108     17B6  00F3               	movwf	Lcd_Write_String_8bits@a
  2109     17B7  3000               	movlw	0
  2110     17B8  00F4               	movwf	Lcd_Write_String_8bits@a+1
  2111     17B9  160A  158A  2283  160A  118A  	fcall	_Lcd_Write_String_8bits
  2112     17BE                     l4045:
  2113                           
  2114                           ;main.c: 145:       sprintf(CONT, "%.d", NUM_D);
  2115     17BE  30A2               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2116     17BF  1683               	bsf	3,5	;RP0=1, select bank1
  2117     17C0  1303               	bcf	3,6	;RP1=0, select bank1
  2118     17C1  00A0               	movwf	sprintf@f^(0+128)
  2119     17C2  084E               	movf	(main@NUM_D+1)^(0+128),w
  2120     17C3  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2121     17C4  084D               	movf	main@NUM_D^(0+128),w
  2122     17C5  00A1               	movwf	(?_sprintf^(0+128)+1)
  2123     17C6  30D8               	movlw	(low (main@CONT| 0))& (0+255)
  2124     17C7  120A  118A  2077  160A  118A  	fcall	_sprintf
  2125     17CC                     l4047:
  2126                           
  2127                           ;main.c: 146:       Lcd_Set_Cursor_8bits(2,14);
  2128     17CC  300E               	movlw	14
  2129     17CD  00F4               	movwf	Lcd_Set_Cursor_8bits@b
  2130     17CE  3002               	movlw	2
  2131     17CF  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  2132     17D4                     l4049:
  2133                           
  2134                           ;main.c: 147:       Lcd_Write_String_8bits(CONT);
  2135     17D4  30D8               	movlw	(low (main@CONT| 0))& (0+255)
  2136     17D5  00F3               	movwf	Lcd_Write_String_8bits@a
  2137     17D6  3000               	movlw	0
  2138     17D7  00F4               	movwf	Lcd_Write_String_8bits@a+1
  2139     17D8  160A  158A  2283  160A  118A  	fcall	_Lcd_Write_String_8bits
  2140     17DD                     l4051:
  2141                           
  2142                           ;main.c: 149:       sprintf(CONT, "%.d", NUM_U);
  2143     17DD  30A2               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2144     17DE  1683               	bsf	3,5	;RP0=1, select bank1
  2145     17DF  1303               	bcf	3,6	;RP1=0, select bank1
  2146     17E0  00A0               	movwf	sprintf@f^(0+128)
  2147     17E1  084C               	movf	(main@NUM_U+1)^(0+128),w
  2148     17E2  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2149     17E3  084B               	movf	main@NUM_U^(0+128),w
  2150     17E4  00A1               	movwf	(?_sprintf^(0+128)+1)
  2151     17E5  30D8               	movlw	(low (main@CONT| 0))& (0+255)
  2152     17E6  120A  118A  2077  160A  118A  	fcall	_sprintf
  2153     17EB                     l4053:
  2154                           
  2155                           ;main.c: 150:       Lcd_Set_Cursor_8bits(2,15);
  2156     17EB  300F               	movlw	15
  2157     17EC  00F4               	movwf	Lcd_Set_Cursor_8bits@b
  2158     17ED  3002               	movlw	2
  2159     17EE  160A  158A  214E  160A  118A  	fcall	_Lcd_Set_Cursor_8bits
  2160     17F3                     l4055:
  2161                           
  2162                           ;main.c: 151:       Lcd_Write_String_8bits(CONT);
  2163     17F3  30D8               	movlw	(low (main@CONT| 0))& (0+255)
  2164     17F4  00F3               	movwf	Lcd_Write_String_8bits@a
  2165     17F5  3000               	movlw	0
  2166     17F6  00F4               	movwf	Lcd_Write_String_8bits@a+1
  2167     17F7  160A  158A  2283  160A  118A  	fcall	_Lcd_Write_String_8bits
  2168     17FC  2E0E               	goto	l53
  2169     17FD  120A  118A  2800   	ljmp	start
  2170     1800                     __end_of_main:
  2171                           
  2172                           	psect	text1
  2173     0077                     __ptext1:	
  2174 ;; *************** function _sprintf *****************
  2175 ;; Defined at:
  2176 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  sp              1    wreg     PTR unsigned char 
  2179 ;;		 -> main@CONT(3), main@ADC2(3), main@ADC1(3), 
  2180 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2181 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(5), 
  2182 ;;		 -> STR_4(5), 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  2185 ;;		 -> main@CONT(3), main@ADC2(3), main@ADC1(3), 
  2186 ;;  fval            4   27[BANK1 ] PTR unsigned char 
  2187 ;;  val             4   23[BANK1 ] unsigned long 
  2188 ;;  tmpval          4   19[BANK1 ] struct .
  2189 ;;  prec            2   31[BANK1 ] int 
  2190 ;;  eexp            2   17[BANK1 ] int 
  2191 ;;  flag            2   15[BANK1 ] unsigned short 
  2192 ;;  cp              2    0        PTR const unsigned char 
  2193 ;;  len             2    0        unsigned int 
  2194 ;;  width           2    0        int 
  2195 ;;  c               1   34[BANK1 ] unsigned char 
  2196 ;;  ap              1   14[BANK1 ] PTR void [1]
  2197 ;;		 -> ?_sprintf(2), 
  2198 ;;  d               1    0        unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  2    0[BANK1 ] int 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2208 ;;      Params:         0       0       5       0       0
  2209 ;;      Locals:         0       0      25       0       0
  2210 ;;      Temps:          0       0       5       0       0
  2211 ;;      Totals:         0       0      35       0       0
  2212 ;;Total ram usage:       35 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 3
  2215 ;; This function calls:
  2216 ;;		___awdiv
  2217 ;;		___fladd
  2218 ;;		___fleq
  2219 ;;		___flge
  2220 ;;		___flmul
  2221 ;;		___flneg
  2222 ;;		___flsub
  2223 ;;		___fltol
  2224 ;;		___lldiv
  2225 ;;		___llmod
  2226 ;;		___wmul
  2227 ;;		___xxtofl
  2228 ;;		__div_to_l_
  2229 ;;		__tdiv_to_l_
  2230 ;;		_fround
  2231 ;;		_isdigit
  2232 ;;		_scale
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238     0077                     _sprintf:	
  2239                           ;psect for function _sprintf
  2240                           
  2241                           
  2242                           ;incstack = 0
  2243                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2244                           ;sprintf@sp stored from wreg
  2245     0077  1683               	bsf	3,5	;RP0=1, select bank1
  2246     0078  1303               	bcf	3,6	;RP1=0, select bank1
  2247     0079  00C1               	movwf	sprintf@sp^(0+128)
  2248     007A                     l3595:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2251     007A  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2252     007B  00AE               	movwf	sprintf@ap^(0+128)
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2255     007C  2FE7               	goto	l3821
  2256     007D                     l3597:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2259     007D  3025               	movlw	37
  2260     007E  0642               	xorwf	sprintf@c^(0+128),w
  2261     007F  1903               	btfsc	3,2
  2262     0080  2882               	goto	u5851
  2263     0081  2883               	goto	u5850
  2264     0082                     u5851:
  2265     0082  288D               	goto	l3603
  2266     0083                     u5850:
  2267     0083                     l3599:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2270     0083  0841               	movf	sprintf@sp^(0+128),w
  2271     0084  0084               	movwf	4
  2272     0085  0842               	movf	sprintf@c^(0+128),w
  2273     0086  1383               	bcf	3,7	;select IRP bank0
  2274     0087  0080               	movwf	0
  2275     0088                     l3601:
  2276     0088  3001               	movlw	1
  2277     0089  00A5               	movwf	??_sprintf^(0+128)
  2278     008A  0825               	movf	??_sprintf^(0+128),w
  2279     008B  07C1               	addwf	sprintf@sp^(0+128),f
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2282     008C  2FE7               	goto	l3821
  2283     008D                     l3603:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2286     008D  01AF               	clrf	sprintf@flag^(0+128)
  2287     008E  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2288     008F                     l3605:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2291     008F  0820               	movf	sprintf@f^(0+128),w
  2292     0090  0084               	movwf	4
  2293     0091  160A  158A  200A  120A  118A  	fcall	stringdir
  2294     0096  3A2E               	xorlw	46
  2295     0097  1D03               	skipz
  2296     0098  289A               	goto	u5861
  2297     0099  289B               	goto	u5860
  2298     009A                     u5861:
  2299     009A  28E0               	goto	l3621
  2300     009B                     u5860:
  2301     009B                     l3607:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2304     009B  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2305     009C                     l3609:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2308     009C  3001               	movlw	1
  2309     009D  00A5               	movwf	??_sprintf^(0+128)
  2310     009E  0825               	movf	??_sprintf^(0+128),w
  2311     009F  07A0               	addwf	sprintf@f^(0+128),f
  2312     00A0                     l3611:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2315     00A0  01BF               	clrf	sprintf@prec^(0+128)
  2316     00A1  01C0               	clrf	(sprintf@prec+1)^(0+128)
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2319     00A2  28CF               	goto	l3619
  2320     00A3                     l3613:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2323     00A3  300A               	movlw	10
  2324     00A4  00F0               	movwf	___wmul@multiplier
  2325     00A5  3000               	movlw	0
  2326     00A6  00F1               	movwf	___wmul@multiplier+1
  2327     00A7  1683               	bsf	3,5	;RP0=1, select bank1
  2328     00A8  1303               	bcf	3,6	;RP1=0, select bank1
  2329     00A9  0840               	movf	(sprintf@prec+1)^(0+128),w
  2330     00AA  00F3               	movwf	___wmul@multiplicand+1
  2331     00AB  083F               	movf	sprintf@prec^(0+128),w
  2332     00AC  00F2               	movwf	___wmul@multiplicand
  2333     00AD  160A  158A  2192  120A  118A  	fcall	___wmul
  2334     00B2  0871               	movf	?___wmul+1,w
  2335     00B3  1683               	bsf	3,5	;RP0=1, select bank1
  2336     00B4  1303               	bcf	3,6	;RP1=0, select bank1
  2337     00B5  00C0               	movwf	(sprintf@prec+1)^(0+128)
  2338     00B6  0870               	movf	?___wmul,w
  2339     00B7  00BF               	movwf	sprintf@prec^(0+128)
  2340     00B8                     l3615:
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2343     00B8  0820               	movf	sprintf@f^(0+128),w
  2344     00B9  0084               	movwf	4
  2345     00BA  160A  158A  200A  120A  118A  	fcall	stringdir
  2346     00BF  3ED0               	addlw	208
  2347     00C0  00A5               	movwf	??_sprintf^(0+128)
  2348     00C1  30FF               	movlw	255
  2349     00C2  1803               	skipnc
  2350     00C3  3000               	movlw	0
  2351     00C4  00A6               	movwf	(??_sprintf^(0+128)+1)
  2352     00C5  0825               	movf	??_sprintf^(0+128),w
  2353     00C6  07BF               	addwf	sprintf@prec^(0+128),f
  2354     00C7  1803               	skipnc
  2355     00C8  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  2356     00C9  0826               	movf	(??_sprintf+1)^(0+128),w
  2357     00CA  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  2358     00CB                     l3617:
  2359     00CB  3001               	movlw	1
  2360     00CC  00A5               	movwf	??_sprintf^(0+128)
  2361     00CD  0825               	movf	??_sprintf^(0+128),w
  2362     00CE  07A0               	addwf	sprintf@f^(0+128),f
  2363     00CF                     l3619:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2366     00CF  0820               	movf	sprintf@f^(0+128),w
  2367     00D0  0084               	movwf	4
  2368     00D1  160A  158A  200A  120A  118A  	fcall	stringdir
  2369     00D6  160A  158A  20F8  120A  118A  	fcall	_isdigit
  2370     00DB  1803               	btfsc	3,0
  2371     00DC  28DE               	goto	u5871
  2372     00DD  28DF               	goto	u5870
  2373     00DE                     u5871:
  2374     00DE  28A3               	goto	l3613
  2375     00DF                     u5870:
  2376     00DF  28E6               	goto	l3627
  2377     00E0                     l3621:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2380     00E0  01BF               	clrf	sprintf@prec^(0+128)
  2381     00E1  01C0               	clrf	(sprintf@prec+1)^(0+128)
  2382     00E2                     l3623:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2385     00E2  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2386     00E3  28E6               	goto	l3627
  2387     00E4                     l362:	
  2388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2389                           
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2392     00E4  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2395     00E5  2908               	goto	l3629
  2396     00E6                     l3627:
  2397     00E6  3001               	movlw	1
  2398     00E7  1683               	bsf	3,5	;RP0=1, select bank1
  2399     00E8  1303               	bcf	3,6	;RP1=0, select bank1
  2400     00E9  07A0               	addwf	sprintf@f^(0+128),f
  2401     00EA  30FF               	movlw	-1
  2402     00EB  0720               	addwf	sprintf@f^(0+128),w
  2403     00EC  0084               	movwf	4
  2404     00ED  160A  158A  200A  120A  118A  	fcall	stringdir
  2405     00F2  00C2               	movwf	sprintf@c^(0+128)
  2406     00F3  00A5               	movwf	??_sprintf^(0+128)
  2407     00F4  01A6               	clrf	(??_sprintf^(0+128)+1)
  2408                           
  2409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2410                           ; Switch size 1, requested type "simple"
  2411                           ; Number of cases is 1, Range of values is 0 to 0
  2412                           ; switch strategies available:
  2413                           ; Name         Instructions Cycles
  2414                           ; simple_byte            4     3 (average)
  2415                           ; direct_byte           11     8 (fixed)
  2416                           ; jumptable            260     6 (fixed)
  2417                           ;	Chosen strategy is simple_byte
  2418     00F5  0826               	movf	(??_sprintf+1)^(0+128),w
  2419     00F6  3A00               	xorlw	0	; case 0
  2420     00F7  1903               	skipnz
  2421     00F8  28FA               	goto	l4091
  2422     00F9  2FE7               	goto	l3821
  2423     00FA                     l4091:
  2424                           
  2425                           ; Switch size 1, requested type "simple"
  2426                           ; Number of cases is 4, Range of values is 0 to 105
  2427                           ; switch strategies available:
  2428                           ; Name         Instructions Cycles
  2429                           ; simple_byte           13     7 (average)
  2430                           ; jumptable            260     6 (fixed)
  2431                           ;	Chosen strategy is simple_byte
  2432     00FA  0825               	movf	??_sprintf^(0+128),w
  2433     00FB  3A00               	xorlw	0	; case 0
  2434     00FC  1903               	skipnz
  2435     00FD  2FF7               	goto	l3823
  2436     00FE  3A64               	xorlw	100	; case 100
  2437     00FF  1903               	skipnz
  2438     0100  2908               	goto	l3629
  2439     0101  3A02               	xorlw	2	; case 102
  2440     0102  1903               	skipnz
  2441     0103  28E4               	goto	l362
  2442     0104  3A0F               	xorlw	15	; case 105
  2443     0105  1903               	skipnz
  2444     0106  2908               	goto	l3629
  2445     0107  2FE7               	goto	l3821
  2446     0108                     l3629:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2449     0108  3000               	movlw	0
  2450     0109  052F               	andwf	sprintf@flag^(0+128),w
  2451     010A  00A5               	movwf	??_sprintf^(0+128)
  2452     010B  3007               	movlw	7
  2453     010C  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2454     010D  00A6               	movwf	(??_sprintf+1)^(0+128)
  2455     010E  0825               	movf	??_sprintf^(0+128),w
  2456     010F  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2457     0110  1903               	btfsc	3,2
  2458     0111  2913               	goto	u5881
  2459     0112  2914               	goto	u5880
  2460     0113                     u5881:
  2461     0113  2EC5               	goto	l3771
  2462     0114                     u5880:
  2463     0114                     l3631:
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2466     0114  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2467     0115  2917               	goto	u5891
  2468     0116  2918               	goto	u5890
  2469     0117                     u5891:
  2470     0117  291C               	goto	l3635
  2471     0118                     u5890:
  2472     0118                     l3633:
  2473                           
  2474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2475     0118  3006               	movlw	6
  2476     0119  00BF               	movwf	sprintf@prec^(0+128)
  2477     011A  3000               	movlw	0
  2478     011B  00C0               	movwf	(sprintf@prec^(0+128)+1)
  2479     011C                     l3635:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2482     011C  082E               	movf	sprintf@ap^(0+128),w
  2483     011D  0084               	movwf	4
  2484     011E  1383               	bcf	3,7	;select IRP bank0
  2485     011F  0800               	movf	0,w
  2486     0120  00BB               	movwf	sprintf@fval^(0+128)
  2487     0121  0A84               	incf	4,f
  2488     0122  0800               	movf	0,w
  2489     0123  00BC               	movwf	(sprintf@fval+1)^(0+128)
  2490     0124  0A84               	incf	4,f
  2491     0125  0800               	movf	0,w
  2492     0126  00BD               	movwf	(sprintf@fval+2)^(0+128)
  2493     0127  0A84               	incf	4,f
  2494     0128  0800               	movf	0,w
  2495     0129  00BE               	movwf	(sprintf@fval+3)^(0+128)
  2496     012A                     l3637:
  2497     012A  3004               	movlw	4
  2498     012B  00A5               	movwf	??_sprintf^(0+128)
  2499     012C  0825               	movf	??_sprintf^(0+128),w
  2500     012D  07AE               	addwf	sprintf@ap^(0+128),f
  2501     012E                     l3639:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2504     012E  083E               	movf	(sprintf@fval+3)^(0+128),w
  2505     012F  00F3               	movwf	___flge@ff1+3
  2506     0130  083D               	movf	(sprintf@fval+2)^(0+128),w
  2507     0131  00F2               	movwf	___flge@ff1+2
  2508     0132  083C               	movf	(sprintf@fval+1)^(0+128),w
  2509     0133  00F1               	movwf	___flge@ff1+1
  2510     0134  083B               	movf	sprintf@fval^(0+128),w
  2511     0135  00F0               	movwf	___flge@ff1
  2512     0136  3000               	movlw	0
  2513     0137  00F7               	movwf	___flge@ff2+3
  2514     0138  3000               	movlw	0
  2515     0139  00F6               	movwf	___flge@ff2+2
  2516     013A  3000               	movlw	0
  2517     013B  00F5               	movwf	___flge@ff2+1
  2518     013C  3000               	movlw	0
  2519     013D  00F4               	movwf	___flge@ff2
  2520     013E  120A  158A  2002  120A  118A  	fcall	___flge
  2521     0143  1803               	btfsc	3,0
  2522     0144  2946               	goto	u5901
  2523     0145  2947               	goto	u5900
  2524     0146                     u5901:
  2525     0146  2964               	goto	l3645
  2526     0147                     u5900:
  2527     0147                     l3641:
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2530     0147  1683               	bsf	3,5	;RP0=1, select bank1
  2531     0148  1303               	bcf	3,6	;RP1=0, select bank1
  2532     0149  083E               	movf	(sprintf@fval+3)^(0+128),w
  2533     014A  00F3               	movwf	___flneg@f1+3
  2534     014B  083D               	movf	(sprintf@fval+2)^(0+128),w
  2535     014C  00F2               	movwf	___flneg@f1+2
  2536     014D  083C               	movf	(sprintf@fval+1)^(0+128),w
  2537     014E  00F1               	movwf	___flneg@f1+1
  2538     014F  083B               	movf	sprintf@fval^(0+128),w
  2539     0150  00F0               	movwf	___flneg@f1
  2540     0151  120A  118A  2005  120A  118A  	fcall	___flneg
  2541     0156  0873               	movf	?___flneg+3,w
  2542     0157  1683               	bsf	3,5	;RP0=1, select bank1
  2543     0158  1303               	bcf	3,6	;RP1=0, select bank1
  2544     0159  00BE               	movwf	(sprintf@fval+3)^(0+128)
  2545     015A  0872               	movf	?___flneg+2,w
  2546     015B  00BD               	movwf	(sprintf@fval+2)^(0+128)
  2547     015C  0871               	movf	?___flneg+1,w
  2548     015D  00BC               	movwf	(sprintf@fval+1)^(0+128)
  2549     015E  0870               	movf	?___flneg,w
  2550     015F  00BB               	movwf	sprintf@fval^(0+128)
  2551     0160                     l3643:
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2554     0160  3003               	movlw	3
  2555     0161  04AF               	iorwf	sprintf@flag^(0+128),f
  2556     0162  3000               	movlw	0
  2557     0163  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2558     0164                     l3645:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2561     0164  1683               	bsf	3,5	;RP0=1, select bank1
  2562     0165  1303               	bcf	3,6	;RP1=0, select bank1
  2563     0166  01B1               	clrf	sprintf@eexp^(0+128)
  2564     0167  01B2               	clrf	(sprintf@eexp+1)^(0+128)
  2565     0168                     l3647:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2568     0168  083E               	movf	(sprintf@fval+3)^(0+128),w
  2569     0169  00F3               	movwf	___fleq@ff1+3
  2570     016A  083D               	movf	(sprintf@fval+2)^(0+128),w
  2571     016B  00F2               	movwf	___fleq@ff1+2
  2572     016C  083C               	movf	(sprintf@fval+1)^(0+128),w
  2573     016D  00F1               	movwf	___fleq@ff1+1
  2574     016E  083B               	movf	sprintf@fval^(0+128),w
  2575     016F  00F0               	movwf	___fleq@ff1
  2576     0170  3000               	movlw	0
  2577     0171  00F7               	movwf	___fleq@ff2+3
  2578     0172  3000               	movlw	0
  2579     0173  00F6               	movwf	___fleq@ff2+2
  2580     0174  3000               	movlw	0
  2581     0175  00F5               	movwf	___fleq@ff2+1
  2582     0176  3000               	movlw	0
  2583     0177  00F4               	movwf	___fleq@ff2
  2584     0178  160A  158A  234B  120A  118A  	fcall	___fleq
  2585     017D  1803               	btfsc	3,0
  2586     017E  2980               	goto	u5911
  2587     017F  2981               	goto	u5910
  2588     0180                     u5911:
  2589     0180  2A71               	goto	l3673
  2590     0181                     u5910:
  2591     0181                     l3649:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2594     0181  1003               	clrc
  2595     0182  1683               	bsf	3,5	;RP0=1, select bank1
  2596     0183  1303               	bcf	3,6	;RP1=0, select bank1
  2597     0184  0D3D               	rlf	(sprintf@fval+2)^(0+128),w
  2598     0185  0D3E               	rlf	(sprintf@fval+3)^(0+128),w
  2599     0186  3E82               	addlw	130
  2600     0187  00B1               	movwf	sprintf@eexp^(0+128)
  2601     0188  30FF               	movlw	255
  2602     0189  1803               	skipnc
  2603     018A  3000               	movlw	0
  2604     018B  00B2               	movwf	(sprintf@eexp^(0+128)+1)
  2605     018C                     l3651:
  2606                           
  2607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2608     018C  30FF               	movlw	255
  2609     018D  07B1               	addwf	sprintf@eexp^(0+128),f
  2610     018E  1803               	skipnc
  2611     018F  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  2612     0190  30FF               	movlw	255
  2613     0191  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  2614     0192                     l3653:
  2615                           
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2617     0192  3003               	movlw	3
  2618     0193  00F0               	movwf	___wmul@multiplier
  2619     0194  3000               	movlw	0
  2620     0195  00F1               	movwf	___wmul@multiplier+1
  2621     0196  0832               	movf	(sprintf@eexp+1)^(0+128),w
  2622     0197  00F3               	movwf	___wmul@multiplicand+1
  2623     0198  0831               	movf	sprintf@eexp^(0+128),w
  2624     0199  00F2               	movwf	___wmul@multiplicand
  2625     019A  160A  158A  2192  120A  118A  	fcall	___wmul
  2626     019F  0871               	movf	?___wmul+1,w
  2627     01A0  1683               	bsf	3,5	;RP0=1, select bank1
  2628     01A1  1303               	bcf	3,6	;RP1=0, select bank1
  2629     01A2  00B2               	movwf	(sprintf@eexp+1)^(0+128)
  2630     01A3  0870               	movf	?___wmul,w
  2631     01A4  00B1               	movwf	sprintf@eexp^(0+128)
  2632     01A5                     l3655:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2635     01A5  300A               	movlw	10
  2636     01A6  00F0               	movwf	___awdiv@divisor
  2637     01A7  3000               	movlw	0
  2638     01A8  00F1               	movwf	___awdiv@divisor+1
  2639     01A9  0832               	movf	(sprintf@eexp+1)^(0+128),w
  2640     01AA  00F3               	movwf	___awdiv@dividend+1
  2641     01AB  0831               	movf	sprintf@eexp^(0+128),w
  2642     01AC  00F2               	movwf	___awdiv@dividend
  2643     01AD  120A  118A  2010  120A  118A  	fcall	___awdiv
  2644     01B2  0871               	movf	?___awdiv+1,w
  2645     01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2646     01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2647     01B5  00B2               	movwf	(sprintf@eexp+1)^(0+128)
  2648     01B6  0870               	movf	?___awdiv,w
  2649     01B7  00B1               	movwf	sprintf@eexp^(0+128)
  2650     01B8                     l3657:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2653     01B8  1FB2               	btfss	(sprintf@eexp+1)^(0+128),7
  2654     01B9  29BB               	goto	u5921
  2655     01BA  29BC               	goto	u5920
  2656     01BB                     u5921:
  2657     01BB  29C2               	goto	l3661
  2658     01BC                     u5920:
  2659     01BC                     l3659:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2662     01BC  30FF               	movlw	255
  2663     01BD  07B1               	addwf	sprintf@eexp^(0+128),f
  2664     01BE  1803               	skipnc
  2665     01BF  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  2666     01C0  30FF               	movlw	255
  2667     01C1  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  2668     01C2                     l3661:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2671     01C2  0331               	decf	sprintf@eexp^(0+128),w
  2672     01C3  3AFF               	xorlw	255
  2673     01C4  120A  158A  24A1  120A  118A  	fcall	_scale
  2674     01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2675     01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2676     01CB  083F               	movf	?_scale+3,w
  2677     01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2678     01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2679     01CE  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2680     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2681     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2682     01D1  083E               	movf	?_scale+2,w
  2683     01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2684     01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2685     01D4  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2686     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2687     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2688     01D7  083D               	movf	?_scale+1,w
  2689     01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2690     01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2691     01DA  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2692     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2693     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2694     01DD  083C               	movf	?_scale,w
  2695     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2696     01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2697     01E0  00B3               	movwf	sprintf@tmpval^(0+128)
  2698     01E1                     l3663:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2701     01E1  083E               	movf	(sprintf@fval+3)^(0+128),w
  2702     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2703     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2704     01E4  00A5               	movwf	___flmul@b+3
  2705     01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2706     01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2707     01E7  083D               	movf	(sprintf@fval+2)^(0+128),w
  2708     01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2709     01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2710     01EA  00A4               	movwf	___flmul@b+2
  2711     01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2712     01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2713     01ED  083C               	movf	(sprintf@fval+1)^(0+128),w
  2714     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2715     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2716     01F0  00A3               	movwf	___flmul@b+1
  2717     01F1  1683               	bsf	3,5	;RP0=1, select bank1
  2718     01F2  1303               	bcf	3,6	;RP1=0, select bank1
  2719     01F3  083B               	movf	sprintf@fval^(0+128),w
  2720     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2721     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2722     01F6  00A2               	movwf	___flmul@b
  2723     01F7  1683               	bsf	3,5	;RP0=1, select bank1
  2724     01F8  1303               	bcf	3,6	;RP1=0, select bank1
  2725     01F9  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2726     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2727     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2728     01FC  00A9               	movwf	___flmul@a+3
  2729     01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2730     01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2731     01FF  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2732     0200  1283               	bcf	3,5	;RP0=0, select bank0
  2733     0201  1303               	bcf	3,6	;RP1=0, select bank0
  2734     0202  00A8               	movwf	___flmul@a+2
  2735     0203  1683               	bsf	3,5	;RP0=1, select bank1
  2736     0204  1303               	bcf	3,6	;RP1=0, select bank1
  2737     0205  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2738     0206  1283               	bcf	3,5	;RP0=0, select bank0
  2739     0207  1303               	bcf	3,6	;RP1=0, select bank0
  2740     0208  00A7               	movwf	___flmul@a+1
  2741     0209  1683               	bsf	3,5	;RP0=1, select bank1
  2742     020A  1303               	bcf	3,6	;RP1=0, select bank1
  2743     020B  0833               	movf	sprintf@tmpval^(0+128),w
  2744     020C  1283               	bcf	3,5	;RP0=0, select bank0
  2745     020D  1303               	bcf	3,6	;RP1=0, select bank0
  2746     020E  00A6               	movwf	___flmul@a
  2747     020F  120A  158A  215C  120A  118A  	fcall	___flmul
  2748     0214  1283               	bcf	3,5	;RP0=0, select bank0
  2749     0215  1303               	bcf	3,6	;RP1=0, select bank0
  2750     0216  0825               	movf	?___flmul+3,w
  2751     0217  1683               	bsf	3,5	;RP0=1, select bank1
  2752     0218  1303               	bcf	3,6	;RP1=0, select bank1
  2753     0219  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2754     021A  1283               	bcf	3,5	;RP0=0, select bank0
  2755     021B  1303               	bcf	3,6	;RP1=0, select bank0
  2756     021C  0824               	movf	?___flmul+2,w
  2757     021D  1683               	bsf	3,5	;RP0=1, select bank1
  2758     021E  1303               	bcf	3,6	;RP1=0, select bank1
  2759     021F  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2760     0220  1283               	bcf	3,5	;RP0=0, select bank0
  2761     0221  1303               	bcf	3,6	;RP1=0, select bank0
  2762     0222  0823               	movf	?___flmul+1,w
  2763     0223  1683               	bsf	3,5	;RP0=1, select bank1
  2764     0224  1303               	bcf	3,6	;RP1=0, select bank1
  2765     0225  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2766     0226  1283               	bcf	3,5	;RP0=0, select bank0
  2767     0227  1303               	bcf	3,6	;RP1=0, select bank0
  2768     0228  0822               	movf	?___flmul,w
  2769     0229  1683               	bsf	3,5	;RP0=1, select bank1
  2770     022A  1303               	bcf	3,6	;RP1=0, select bank1
  2771     022B  00B3               	movwf	sprintf@tmpval^(0+128)
  2772     022C                     l3665:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2775     022C  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2776     022D  00F3               	movwf	___flge@ff1+3
  2777     022E  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2778     022F  00F2               	movwf	___flge@ff1+2
  2779     0230  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2780     0231  00F1               	movwf	___flge@ff1+1
  2781     0232  0833               	movf	sprintf@tmpval^(0+128),w
  2782     0233  00F0               	movwf	___flge@ff1
  2783     0234  303F               	movlw	63
  2784     0235  00F7               	movwf	___flge@ff2+3
  2785     0236  3080               	movlw	128
  2786     0237  00F6               	movwf	___flge@ff2+2
  2787     0238  3000               	movlw	0
  2788     0239  00F5               	movwf	___flge@ff2+1
  2789     023A  3000               	movlw	0
  2790     023B  00F4               	movwf	___flge@ff2
  2791     023C  120A  158A  2002  120A  118A  	fcall	___flge
  2792     0241  1803               	btfsc	3,0
  2793     0242  2A44               	goto	u5931
  2794     0243  2A45               	goto	u5930
  2795     0244                     u5931:
  2796     0244  2A4E               	goto	l3669
  2797     0245                     u5930:
  2798     0245                     l3667:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2801     0245  30FF               	movlw	255
  2802     0246  1683               	bsf	3,5	;RP0=1, select bank1
  2803     0247  1303               	bcf	3,6	;RP1=0, select bank1
  2804     0248  07B1               	addwf	sprintf@eexp^(0+128),f
  2805     0249  1803               	skipnc
  2806     024A  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  2807     024B  30FF               	movlw	255
  2808     024C  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  2809     024D  2A71               	goto	l3673
  2810     024E                     l3669:
  2811     024E  1683               	bsf	3,5	;RP0=1, select bank1
  2812     024F  1303               	bcf	3,6	;RP1=0, select bank1
  2813     0250  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2814     0251  00F3               	movwf	___flge@ff1+3
  2815     0252  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2816     0253  00F2               	movwf	___flge@ff1+2
  2817     0254  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2818     0255  00F1               	movwf	___flge@ff1+1
  2819     0256  0833               	movf	sprintf@tmpval^(0+128),w
  2820     0257  00F0               	movwf	___flge@ff1
  2821     0258  3041               	movlw	65
  2822     0259  00F7               	movwf	___flge@ff2+3
  2823     025A  3020               	movlw	32
  2824     025B  00F6               	movwf	___flge@ff2+2
  2825     025C  3000               	movlw	0
  2826     025D  00F5               	movwf	___flge@ff2+1
  2827     025E  3000               	movlw	0
  2828     025F  00F4               	movwf	___flge@ff2
  2829     0260  120A  158A  2002  120A  118A  	fcall	___flge
  2830     0265  1C03               	btfss	3,0
  2831     0266  2A68               	goto	u5941
  2832     0267  2A69               	goto	u5940
  2833     0268                     u5941:
  2834     0268  2A71               	goto	l3673
  2835     0269                     u5940:
  2836     0269                     l3671:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2839     0269  3001               	movlw	1
  2840     026A  1683               	bsf	3,5	;RP0=1, select bank1
  2841     026B  1303               	bcf	3,6	;RP1=0, select bank1
  2842     026C  07B1               	addwf	sprintf@eexp^(0+128),f
  2843     026D  1803               	skipnc
  2844     026E  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  2845     026F  3000               	movlw	0
  2846     0270  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  2847     0271                     l3673:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2850     0271  1683               	bsf	3,5	;RP0=1, select bank1
  2851     0272  1303               	bcf	3,6	;RP1=0, select bank1
  2852     0273  0840               	movf	(sprintf@prec+1)^(0+128),w
  2853     0274  3A80               	xorlw	128
  2854     0275  00FF               	movwf	btemp+1
  2855     0276  3080               	movlw	128
  2856     0277  027F               	subwf	btemp+1,w
  2857     0278  1D03               	skipz
  2858     0279  2A7C               	goto	u5955
  2859     027A  300D               	movlw	13
  2860     027B  023F               	subwf	sprintf@prec^(0+128),w
  2861     027C                     u5955:
  2862     027C  1803               	skipnc
  2863     027D  2A7F               	goto	u5951
  2864     027E  2A80               	goto	u5950
  2865     027F                     u5951:
  2866     027F  2AC7               	goto	l3677
  2867     0280                     u5950:
  2868     0280                     l3675:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2871     0280  1683               	bsf	3,5	;RP0=1, select bank1
  2872     0281  1303               	bcf	3,6	;RP1=0, select bank1
  2873     0282  083F               	movf	sprintf@prec^(0+128),w
  2874     0283  160A  118A  213C  120A  118A  	fcall	_fround
  2875     0288  1283               	bcf	3,5	;RP0=0, select bank0
  2876     0289  1303               	bcf	3,6	;RP1=0, select bank0
  2877     028A  083F               	movf	?_fround+3,w
  2878     028B  00D3               	movwf	___fladd@b+3
  2879     028C  083E               	movf	?_fround+2,w
  2880     028D  00D2               	movwf	___fladd@b+2
  2881     028E  083D               	movf	?_fround+1,w
  2882     028F  00D1               	movwf	___fladd@b+1
  2883     0290  083C               	movf	?_fround,w
  2884     0291  00D0               	movwf	___fladd@b
  2885     0292  1683               	bsf	3,5	;RP0=1, select bank1
  2886     0293  1303               	bcf	3,6	;RP1=0, select bank1
  2887     0294  083E               	movf	(sprintf@fval+3)^(0+128),w
  2888     0295  1283               	bcf	3,5	;RP0=0, select bank0
  2889     0296  1303               	bcf	3,6	;RP1=0, select bank0
  2890     0297  00D7               	movwf	___fladd@a+3
  2891     0298  1683               	bsf	3,5	;RP0=1, select bank1
  2892     0299  1303               	bcf	3,6	;RP1=0, select bank1
  2893     029A  083D               	movf	(sprintf@fval+2)^(0+128),w
  2894     029B  1283               	bcf	3,5	;RP0=0, select bank0
  2895     029C  1303               	bcf	3,6	;RP1=0, select bank0
  2896     029D  00D6               	movwf	___fladd@a+2
  2897     029E  1683               	bsf	3,5	;RP0=1, select bank1
  2898     029F  1303               	bcf	3,6	;RP1=0, select bank1
  2899     02A0  083C               	movf	(sprintf@fval+1)^(0+128),w
  2900     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2901     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2902     02A3  00D5               	movwf	___fladd@a+1
  2903     02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2904     02A5  1303               	bcf	3,6	;RP1=0, select bank1
  2905     02A6  083B               	movf	sprintf@fval^(0+128),w
  2906     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2907     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2908     02A9  00D4               	movwf	___fladd@a
  2909     02AA  160A  118A  2347  120A  118A  	fcall	___fladd
  2910     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2911     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2912     02B1  0853               	movf	?___fladd+3,w
  2913     02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2914     02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2915     02B4  00BE               	movwf	(sprintf@fval+3)^(0+128)
  2916     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2917     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2918     02B7  0852               	movf	?___fladd+2,w
  2919     02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2920     02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2921     02BA  00BD               	movwf	(sprintf@fval+2)^(0+128)
  2922     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2923     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2924     02BD  0851               	movf	?___fladd+1,w
  2925     02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2926     02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2927     02C0  00BC               	movwf	(sprintf@fval+1)^(0+128)
  2928     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2929     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2930     02C3  0850               	movf	?___fladd,w
  2931     02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2932     02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2933     02C6  00BB               	movwf	sprintf@fval^(0+128)
  2934     02C7                     l3677:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2937     02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2938     02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2939     02C9  0832               	movf	(sprintf@eexp+1)^(0+128),w
  2940     02CA  3A80               	xorlw	128
  2941     02CB  00FF               	movwf	btemp+1
  2942     02CC  3080               	movlw	128
  2943     02CD  027F               	subwf	btemp+1,w
  2944     02CE  1D03               	skipz
  2945     02CF  2AD2               	goto	u5965
  2946     02D0  300A               	movlw	10
  2947     02D1  0231               	subwf	sprintf@eexp^(0+128),w
  2948     02D2                     u5965:
  2949     02D2  1803               	skipnc
  2950     02D3  2AD5               	goto	u5961
  2951     02D4  2AD6               	goto	u5960
  2952     02D5                     u5961:
  2953     02D5  2B27               	goto	l3685
  2954     02D6                     u5960:
  2955     02D6                     l3679:
  2956     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2957     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2958     02D8  083E               	movf	(sprintf@fval+3)^(0+128),w
  2959     02D9  00F3               	movwf	___fleq@ff1+3
  2960     02DA  083D               	movf	(sprintf@fval+2)^(0+128),w
  2961     02DB  00F2               	movwf	___fleq@ff1+2
  2962     02DC  083C               	movf	(sprintf@fval+1)^(0+128),w
  2963     02DD  00F1               	movwf	___fleq@ff1+1
  2964     02DE  083B               	movf	sprintf@fval^(0+128),w
  2965     02DF  00F0               	movwf	___fleq@ff1
  2966     02E0  3000               	movlw	0
  2967     02E1  00F7               	movwf	___fleq@ff2+3
  2968     02E2  3000               	movlw	0
  2969     02E3  00F6               	movwf	___fleq@ff2+2
  2970     02E4  3000               	movlw	0
  2971     02E5  00F5               	movwf	___fleq@ff2+1
  2972     02E6  3000               	movlw	0
  2973     02E7  00F4               	movwf	___fleq@ff2
  2974     02E8  160A  158A  234B  120A  118A  	fcall	___fleq
  2975     02ED  1803               	btfsc	3,0
  2976     02EE  2AF0               	goto	u5971
  2977     02EF  2AF1               	goto	u5970
  2978     02F0                     u5971:
  2979     02F0  2B99               	goto	l3699
  2980     02F1                     u5970:
  2981     02F1                     l3681:
  2982     02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2983     02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2984     02F3  083E               	movf	(sprintf@fval+3)^(0+128),w
  2985     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2986     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2987     02F6  00D2               	movwf	___fltol@f1+3
  2988     02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2989     02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2990     02F9  083D               	movf	(sprintf@fval+2)^(0+128),w
  2991     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2992     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2993     02FC  00D1               	movwf	___fltol@f1+2
  2994     02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2995     02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2996     02FF  083C               	movf	(sprintf@fval+1)^(0+128),w
  2997     0300  1283               	bcf	3,5	;RP0=0, select bank0
  2998     0301  1303               	bcf	3,6	;RP1=0, select bank0
  2999     0302  00D0               	movwf	___fltol@f1+1
  3000     0303  1683               	bsf	3,5	;RP0=1, select bank1
  3001     0304  1303               	bcf	3,6	;RP1=0, select bank1
  3002     0305  083B               	movf	sprintf@fval^(0+128),w
  3003     0306  1283               	bcf	3,5	;RP0=0, select bank0
  3004     0307  1303               	bcf	3,6	;RP1=0, select bank0
  3005     0308  00CF               	movwf	___fltol@f1
  3006     0309  160A  118A  200C  120A  118A  	fcall	___fltol
  3007     030E  1283               	bcf	3,5	;RP0=0, select bank0
  3008     030F  1303               	bcf	3,6	;RP1=0, select bank0
  3009     0310  0852               	movf	?___fltol+3,w
  3010     0311  0451               	iorwf	?___fltol+2,w
  3011     0312  0450               	iorwf	?___fltol+1,w
  3012     0313  044F               	iorwf	?___fltol,w
  3013     0314  1D03               	skipz
  3014     0315  2B17               	goto	u5981
  3015     0316  2B18               	goto	u5980
  3016     0317                     u5981:
  3017     0317  2B99               	goto	l3699
  3018     0318                     u5980:
  3019     0318                     l3683:
  3020     0318  1683               	bsf	3,5	;RP0=1, select bank1
  3021     0319  1303               	bcf	3,6	;RP1=0, select bank1
  3022     031A  0832               	movf	(sprintf@eexp+1)^(0+128),w
  3023     031B  3A80               	xorlw	128
  3024     031C  00FF               	movwf	btemp+1
  3025     031D  3080               	movlw	128
  3026     031E  027F               	subwf	btemp+1,w
  3027     031F  1D03               	skipz
  3028     0320  2B23               	goto	u5995
  3029     0321  3002               	movlw	2
  3030     0322  0231               	subwf	sprintf@eexp^(0+128),w
  3031     0323                     u5995:
  3032     0323  1C03               	skipc
  3033     0324  2B26               	goto	u5991
  3034     0325  2B27               	goto	u5990
  3035     0326                     u5991:
  3036     0326  2B99               	goto	l3699
  3037     0327                     u5990:
  3038     0327                     l3685:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3041     0327  1683               	bsf	3,5	;RP0=1, select bank1
  3042     0328  1303               	bcf	3,6	;RP1=0, select bank1
  3043     0329  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  3044     032A  00F3               	movwf	___flge@ff1+3
  3045     032B  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  3046     032C  00F2               	movwf	___flge@ff1+2
  3047     032D  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  3048     032E  00F1               	movwf	___flge@ff1+1
  3049     032F  0833               	movf	sprintf@tmpval^(0+128),w
  3050     0330  00F0               	movwf	___flge@ff1
  3051     0331  3040               	movlw	64
  3052     0332  00F7               	movwf	___flge@ff2+3
  3053     0333  3089               	movlw	137
  3054     0334  00F6               	movwf	___flge@ff2+2
  3055     0335  3070               	movlw	112
  3056     0336  00F5               	movwf	___flge@ff2+1
  3057     0337  305F               	movlw	95
  3058     0338  00F4               	movwf	___flge@ff2
  3059     0339  120A  158A  2002  120A  118A  	fcall	___flge
  3060     033E  1803               	btfsc	3,0
  3061     033F  2B41               	goto	u6001
  3062     0340  2B42               	goto	u6000
  3063     0341                     u6001:
  3064     0341  2B4B               	goto	l3689
  3065     0342                     u6000:
  3066     0342                     l3687:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3069     0342  30F7               	movlw	247
  3070     0343  1683               	bsf	3,5	;RP0=1, select bank1
  3071     0344  1303               	bcf	3,6	;RP1=0, select bank1
  3072     0345  07B1               	addwf	sprintf@eexp^(0+128),f
  3073     0346  1803               	skipnc
  3074     0347  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  3075     0348  30FF               	movlw	255
  3076     0349  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3079     034A  2B53               	goto	l3691
  3080     034B                     l3689:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3083     034B  30F8               	movlw	248
  3084     034C  1683               	bsf	3,5	;RP0=1, select bank1
  3085     034D  1303               	bcf	3,6	;RP1=0, select bank1
  3086     034E  07B1               	addwf	sprintf@eexp^(0+128),f
  3087     034F  1803               	skipnc
  3088     0350  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  3089     0351  30FF               	movlw	255
  3090     0352  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  3091     0353                     l3691:
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3094     0353  0831               	movf	sprintf@eexp^(0+128),w
  3095     0354  120A  158A  24A1  120A  118A  	fcall	_scale
  3096     0359  1283               	bcf	3,5	;RP0=0, select bank0
  3097     035A  1303               	bcf	3,6	;RP1=0, select bank0
  3098     035B  083F               	movf	?_scale+3,w
  3099     035C  1683               	bsf	3,5	;RP0=1, select bank1
  3100     035D  1303               	bcf	3,6	;RP1=0, select bank1
  3101     035E  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3102     035F  1283               	bcf	3,5	;RP0=0, select bank0
  3103     0360  1303               	bcf	3,6	;RP1=0, select bank0
  3104     0361  083E               	movf	?_scale+2,w
  3105     0362  1683               	bsf	3,5	;RP0=1, select bank1
  3106     0363  1303               	bcf	3,6	;RP1=0, select bank1
  3107     0364  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3108     0365  1283               	bcf	3,5	;RP0=0, select bank0
  3109     0366  1303               	bcf	3,6	;RP1=0, select bank0
  3110     0367  083D               	movf	?_scale+1,w
  3111     0368  1683               	bsf	3,5	;RP0=1, select bank1
  3112     0369  1303               	bcf	3,6	;RP1=0, select bank1
  3113     036A  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3114     036B  1283               	bcf	3,5	;RP0=0, select bank0
  3115     036C  1303               	bcf	3,6	;RP1=0, select bank0
  3116     036D  083C               	movf	?_scale,w
  3117     036E  1683               	bsf	3,5	;RP0=1, select bank1
  3118     036F  1303               	bcf	3,6	;RP1=0, select bank1
  3119     0370  00B3               	movwf	sprintf@tmpval^(0+128)
  3120     0371                     l3693:
  3121     0371  083E               	movf	(sprintf@fval+3)^(0+128),w
  3122     0372  00F3               	movwf	__div_to_l_@f1+3
  3123     0373  083D               	movf	(sprintf@fval+2)^(0+128),w
  3124     0374  00F2               	movwf	__div_to_l_@f1+2
  3125     0375  083C               	movf	(sprintf@fval+1)^(0+128),w
  3126     0376  00F1               	movwf	__div_to_l_@f1+1
  3127     0377  083B               	movf	sprintf@fval^(0+128),w
  3128     0378  00F0               	movwf	__div_to_l_@f1
  3129     0379  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  3130     037A  00F7               	movwf	__div_to_l_@f2+3
  3131     037B  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  3132     037C  00F6               	movwf	__div_to_l_@f2+2
  3133     037D  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  3134     037E  00F5               	movwf	__div_to_l_@f2+1
  3135     037F  0833               	movf	sprintf@tmpval^(0+128),w
  3136     0380  00F4               	movwf	__div_to_l_@f2
  3137     0381  120A  158A  20A4  120A  118A  	fcall	__div_to_l_
  3138     0386  0873               	movf	?__div_to_l_+3,w
  3139     0387  1683               	bsf	3,5	;RP0=1, select bank1
  3140     0388  1303               	bcf	3,6	;RP1=0, select bank1
  3141     0389  00BA               	movwf	(sprintf@val+3)^(0+128)
  3142     038A  0872               	movf	?__div_to_l_+2,w
  3143     038B  00B9               	movwf	(sprintf@val+2)^(0+128)
  3144     038C  0871               	movf	?__div_to_l_+1,w
  3145     038D  00B8               	movwf	(sprintf@val+1)^(0+128)
  3146     038E  0870               	movf	?__div_to_l_,w
  3147     038F  00B7               	movwf	sprintf@val^(0+128)
  3148     0390                     l3697:
  3149                           
  3150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3151     0390  3000               	movlw	0
  3152     0391  00BE               	movwf	(sprintf@fval+3)^(0+128)
  3153     0392  3000               	movlw	0
  3154     0393  00BD               	movwf	(sprintf@fval+2)^(0+128)
  3155     0394  3000               	movlw	0
  3156     0395  00BC               	movwf	(sprintf@fval+1)^(0+128)
  3157     0396  3000               	movlw	0
  3158     0397  00BB               	movwf	sprintf@fval^(0+128)
  3159                           
  3160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3161     0398  2C1D               	goto	l3705
  3162     0399                     l3699:
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3165     0399  1683               	bsf	3,5	;RP0=1, select bank1
  3166     039A  1303               	bcf	3,6	;RP1=0, select bank1
  3167     039B  083E               	movf	(sprintf@fval+3)^(0+128),w
  3168     039C  1283               	bcf	3,5	;RP0=0, select bank0
  3169     039D  1303               	bcf	3,6	;RP1=0, select bank0
  3170     039E  00D2               	movwf	___fltol@f1+3
  3171     039F  1683               	bsf	3,5	;RP0=1, select bank1
  3172     03A0  1303               	bcf	3,6	;RP1=0, select bank1
  3173     03A1  083D               	movf	(sprintf@fval+2)^(0+128),w
  3174     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3175     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3176     03A4  00D1               	movwf	___fltol@f1+2
  3177     03A5  1683               	bsf	3,5	;RP0=1, select bank1
  3178     03A6  1303               	bcf	3,6	;RP1=0, select bank1
  3179     03A7  083C               	movf	(sprintf@fval+1)^(0+128),w
  3180     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  3181     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  3182     03AA  00D0               	movwf	___fltol@f1+1
  3183     03AB  1683               	bsf	3,5	;RP0=1, select bank1
  3184     03AC  1303               	bcf	3,6	;RP1=0, select bank1
  3185     03AD  083B               	movf	sprintf@fval^(0+128),w
  3186     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3187     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3188     03B0  00CF               	movwf	___fltol@f1
  3189     03B1  160A  118A  200C  120A  118A  	fcall	___fltol
  3190     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  3191     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  3192     03B8  0852               	movf	?___fltol+3,w
  3193     03B9  1683               	bsf	3,5	;RP0=1, select bank1
  3194     03BA  1303               	bcf	3,6	;RP1=0, select bank1
  3195     03BB  00BA               	movwf	(sprintf@val+3)^(0+128)
  3196     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3197     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3198     03BE  0851               	movf	?___fltol+2,w
  3199     03BF  1683               	bsf	3,5	;RP0=1, select bank1
  3200     03C0  1303               	bcf	3,6	;RP1=0, select bank1
  3201     03C1  00B9               	movwf	(sprintf@val+2)^(0+128)
  3202     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3203     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3204     03C4  0850               	movf	?___fltol+1,w
  3205     03C5  1683               	bsf	3,5	;RP0=1, select bank1
  3206     03C6  1303               	bcf	3,6	;RP1=0, select bank1
  3207     03C7  00B8               	movwf	(sprintf@val+1)^(0+128)
  3208     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3209     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3210     03CA  084F               	movf	?___fltol,w
  3211     03CB  1683               	bsf	3,5	;RP0=1, select bank1
  3212     03CC  1303               	bcf	3,6	;RP1=0, select bank1
  3213     03CD  00B7               	movwf	sprintf@val^(0+128)
  3214     03CE                     l3701:
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3217     03CE  083A               	movf	(sprintf@val+3)^(0+128),w
  3218     03CF  00F3               	movwf	___xxtofl@val+3
  3219     03D0  0839               	movf	(sprintf@val+2)^(0+128),w
  3220     03D1  00F2               	movwf	___xxtofl@val+2
  3221     03D2  0838               	movf	(sprintf@val+1)^(0+128),w
  3222     03D3  00F1               	movwf	___xxtofl@val+1
  3223     03D4  0837               	movf	sprintf@val^(0+128),w
  3224     03D5  00F0               	movwf	___xxtofl@val
  3225     03D6  3000               	movlw	0
  3226     03D7  160A  118A  2084  120A  118A  	fcall	___xxtofl
  3227     03DC  0873               	movf	?___xxtofl+3,w
  3228     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  3229     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  3230     03DF  00E7               	movwf	___flsub@a+3
  3231     03E0  0872               	movf	?___xxtofl+2,w
  3232     03E1  00E6               	movwf	___flsub@a+2
  3233     03E2  0871               	movf	?___xxtofl+1,w
  3234     03E3  00E5               	movwf	___flsub@a+1
  3235     03E4  0870               	movf	?___xxtofl,w
  3236     03E5  00E4               	movwf	___flsub@a
  3237     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  3238     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  3239     03E8  083E               	movf	(sprintf@fval+3)^(0+128),w
  3240     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3241     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3242     03EB  00EB               	movwf	___flsub@b+3
  3243     03EC  1683               	bsf	3,5	;RP0=1, select bank1
  3244     03ED  1303               	bcf	3,6	;RP1=0, select bank1
  3245     03EE  083D               	movf	(sprintf@fval+2)^(0+128),w
  3246     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  3247     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  3248     03F1  00EA               	movwf	___flsub@b+2
  3249     03F2  1683               	bsf	3,5	;RP0=1, select bank1
  3250     03F3  1303               	bcf	3,6	;RP1=0, select bank1
  3251     03F4  083C               	movf	(sprintf@fval+1)^(0+128),w
  3252     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3253     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  3254     03F7  00E9               	movwf	___flsub@b+1
  3255     03F8  1683               	bsf	3,5	;RP0=1, select bank1
  3256     03F9  1303               	bcf	3,6	;RP1=0, select bank1
  3257     03FA  083B               	movf	sprintf@fval^(0+128),w
  3258     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3259     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  3260     03FD  00E8               	movwf	___flsub@b
  3261     03FE  160A  158A  216E  120A  118A  	fcall	___flsub
  3262     0403  1283               	bcf	3,5	;RP0=0, select bank0
  3263     0404  1303               	bcf	3,6	;RP1=0, select bank0
  3264     0405  0867               	movf	?___flsub+3,w
  3265     0406  1683               	bsf	3,5	;RP0=1, select bank1
  3266     0407  1303               	bcf	3,6	;RP1=0, select bank1
  3267     0408  00BE               	movwf	(sprintf@fval+3)^(0+128)
  3268     0409  1283               	bcf	3,5	;RP0=0, select bank0
  3269     040A  1303               	bcf	3,6	;RP1=0, select bank0
  3270     040B  0866               	movf	?___flsub+2,w
  3271     040C  1683               	bsf	3,5	;RP0=1, select bank1
  3272     040D  1303               	bcf	3,6	;RP1=0, select bank1
  3273     040E  00BD               	movwf	(sprintf@fval+2)^(0+128)
  3274     040F  1283               	bcf	3,5	;RP0=0, select bank0
  3275     0410  1303               	bcf	3,6	;RP1=0, select bank0
  3276     0411  0865               	movf	?___flsub+1,w
  3277     0412  1683               	bsf	3,5	;RP0=1, select bank1
  3278     0413  1303               	bcf	3,6	;RP1=0, select bank1
  3279     0414  00BC               	movwf	(sprintf@fval+1)^(0+128)
  3280     0415  1283               	bcf	3,5	;RP0=0, select bank0
  3281     0416  1303               	bcf	3,6	;RP1=0, select bank0
  3282     0417  0864               	movf	?___flsub,w
  3283     0418  1683               	bsf	3,5	;RP0=1, select bank1
  3284     0419  1303               	bcf	3,6	;RP1=0, select bank1
  3285     041A  00BB               	movwf	sprintf@fval^(0+128)
  3286     041B                     l3703:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3289     041B  01B1               	clrf	sprintf@eexp^(0+128)
  3290     041C  01B2               	clrf	(sprintf@eexp+1)^(0+128)
  3291     041D                     l3705:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3294     041D  01C2               	clrf	sprintf@c^(0+128)
  3295     041E  0AC2               	incf	sprintf@c^(0+128),f
  3296     041F                     l3711:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3299     041F  0842               	movf	sprintf@c^(0+128),w
  3300     0420  00A5               	movwf	??_sprintf^(0+128)
  3301     0421  3001               	movlw	1
  3302     0422                     u6015:
  3303     0422  1003               	clrc
  3304     0423  0DA5               	rlf	??_sprintf^(0+128),f
  3305     0424  3EFF               	addlw	-1
  3306     0425  1D03               	skipz
  3307     0426  2C22               	goto	u6015
  3308     0427  1003               	clrc
  3309     0428  0D25               	rlf	??_sprintf^(0+128),w
  3310     0429  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3311     042A  0084               	movwf	4
  3312     042B  160A  158A  200A  120A  118A  	fcall	stringdir
  3313     0430  00A6               	movwf	(??_sprintf+1)^(0+128)
  3314     0431  160A  158A  200A  120A  118A  	fcall	stringdir
  3315     0436  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3316     0437  160A  158A  200A  120A  118A  	fcall	stringdir
  3317     043C  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3318     043D  160A  158A  200A  120A  118A  	fcall	stringdir
  3319     0442  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3320     0443  0829               	movf	(??_sprintf+4)^(0+128),w
  3321     0444  023A               	subwf	(sprintf@val+3)^(0+128),w
  3322     0445  1D03               	skipz
  3323     0446  2C51               	goto	u6025
  3324     0447  0828               	movf	(??_sprintf+3)^(0+128),w
  3325     0448  0239               	subwf	(sprintf@val+2)^(0+128),w
  3326     0449  1D03               	skipz
  3327     044A  2C51               	goto	u6025
  3328     044B  0827               	movf	(??_sprintf+2)^(0+128),w
  3329     044C  0238               	subwf	(sprintf@val+1)^(0+128),w
  3330     044D  1D03               	skipz
  3331     044E  2C51               	goto	u6025
  3332     044F  0826               	movf	(??_sprintf+1)^(0+128),w
  3333     0450  0237               	subwf	sprintf@val^(0+128),w
  3334     0451                     u6025:
  3335     0451  1803               	skipnc
  3336     0452  2C54               	goto	u6021
  3337     0453  2C55               	goto	u6020
  3338     0454                     u6021:
  3339     0454  2C56               	goto	l3715
  3340     0455                     u6020:
  3341     0455  2C60               	goto	l3717
  3342     0456                     l3715:
  3343     0456  3001               	movlw	1
  3344     0457  00A5               	movwf	??_sprintf^(0+128)
  3345     0458  0825               	movf	??_sprintf^(0+128),w
  3346     0459  07C2               	addwf	sprintf@c^(0+128),f
  3347     045A  300A               	movlw	10
  3348     045B  0642               	xorwf	sprintf@c^(0+128),w
  3349     045C  1D03               	btfss	3,2
  3350     045D  2C5F               	goto	u6031
  3351     045E  2C60               	goto	u6030
  3352     045F                     u6031:
  3353     045F  2C1F               	goto	l3711
  3354     0460                     u6030:
  3355     0460                     l3717:
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3358     0460  3003               	movlw	3
  3359     0461  052F               	andwf	sprintf@flag^(0+128),w
  3360     0462  00A5               	movwf	??_sprintf^(0+128)
  3361     0463  3000               	movlw	0
  3362     0464  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3363     0465  00A6               	movwf	(??_sprintf+1)^(0+128)
  3364     0466  0825               	movf	??_sprintf^(0+128),w
  3365     0467  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3366     0468  1903               	btfsc	3,2
  3367     0469  2C6B               	goto	u6041
  3368     046A  2C6C               	goto	u6040
  3369     046B                     u6041:
  3370     046B  2CFA               	goto	l390
  3371     046C                     u6040:
  3372     046C                     l3719:
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3375     046C  0841               	movf	sprintf@sp^(0+128),w
  3376     046D  0084               	movwf	4
  3377     046E  302D               	movlw	45
  3378     046F  1383               	bcf	3,7	;select IRP bank0
  3379     0470  0080               	movwf	0
  3380     0471                     l3721:
  3381     0471  3001               	movlw	1
  3382     0472  00A5               	movwf	??_sprintf^(0+128)
  3383     0473  0825               	movf	??_sprintf^(0+128),w
  3384     0474  07C1               	addwf	sprintf@sp^(0+128),f
  3385     0475  2CFA               	goto	l390
  3386     0476                     l3723:
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3389     0476  0842               	movf	sprintf@c^(0+128),w
  3390     0477  00A5               	movwf	??_sprintf^(0+128)
  3391     0478  3001               	movlw	1
  3392     0479                     u6055:
  3393     0479  1003               	clrc
  3394     047A  0DA5               	rlf	??_sprintf^(0+128),f
  3395     047B  3EFF               	addlw	-1
  3396     047C  1D03               	skipz
  3397     047D  2C79               	goto	u6055
  3398     047E  1003               	clrc
  3399     047F  0D25               	rlf	??_sprintf^(0+128),w
  3400     0480  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3401     0481  0084               	movwf	4
  3402     0482  160A  158A  200A  120A  118A  	fcall	stringdir
  3403     0487  00F0               	movwf	___lldiv@divisor
  3404     0488  160A  158A  200A  120A  118A  	fcall	stringdir
  3405     048D  00F1               	movwf	___lldiv@divisor+1
  3406     048E  160A  158A  200A  120A  118A  	fcall	stringdir
  3407     0493  00F2               	movwf	___lldiv@divisor+2
  3408     0494  160A  158A  200A  120A  118A  	fcall	stringdir
  3409     0499  00F3               	movwf	___lldiv@divisor+3
  3410     049A  083A               	movf	(sprintf@val+3)^(0+128),w
  3411     049B  00F7               	movwf	___lldiv@dividend+3
  3412     049C  0839               	movf	(sprintf@val+2)^(0+128),w
  3413     049D  00F6               	movwf	___lldiv@dividend+2
  3414     049E  0838               	movf	(sprintf@val+1)^(0+128),w
  3415     049F  00F5               	movwf	___lldiv@dividend+1
  3416     04A0  0837               	movf	sprintf@val^(0+128),w
  3417     04A1  00F4               	movwf	___lldiv@dividend
  3418     04A2  160A  158A  2510  120A  118A  	fcall	___lldiv
  3419     04A7  0873               	movf	?___lldiv+3,w
  3420     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3421     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  3422     04AA  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3423     04AB  0872               	movf	?___lldiv+2,w
  3424     04AC  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3425     04AD  0871               	movf	?___lldiv+1,w
  3426     04AE  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3427     04AF  0870               	movf	?___lldiv,w
  3428     04B0  00B3               	movwf	sprintf@tmpval^(0+128)
  3429     04B1                     l3725:
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3432     04B1  3000               	movlw	0
  3433     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3434     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  3435     04B4  00A3               	movwf	___llmod@divisor+3
  3436     04B5  3000               	movlw	0
  3437     04B6  00A2               	movwf	___llmod@divisor+2
  3438     04B7  3000               	movlw	0
  3439     04B8  00A1               	movwf	___llmod@divisor+1
  3440     04B9  300A               	movlw	10
  3441     04BA  00A0               	movwf	___llmod@divisor
  3442     04BB  1683               	bsf	3,5	;RP0=1, select bank1
  3443     04BC  1303               	bcf	3,6	;RP1=0, select bank1
  3444     04BD  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  3445     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  3446     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  3447     04C0  00A7               	movwf	___llmod@dividend+3
  3448     04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3449     04C2  1303               	bcf	3,6	;RP1=0, select bank1
  3450     04C3  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  3451     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  3452     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  3453     04C6  00A6               	movwf	___llmod@dividend+2
  3454     04C7  1683               	bsf	3,5	;RP0=1, select bank1
  3455     04C8  1303               	bcf	3,6	;RP1=0, select bank1
  3456     04C9  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  3457     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3458     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3459     04CC  00A5               	movwf	___llmod@dividend+1
  3460     04CD  1683               	bsf	3,5	;RP0=1, select bank1
  3461     04CE  1303               	bcf	3,6	;RP1=0, select bank1
  3462     04CF  0833               	movf	sprintf@tmpval^(0+128),w
  3463     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  3464     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  3465     04D2  00A4               	movwf	___llmod@dividend
  3466     04D3  160A  158A  2399  120A  118A  	fcall	___llmod
  3467     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3468     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3469     04DA  0823               	movf	?___llmod+3,w
  3470     04DB  1683               	bsf	3,5	;RP0=1, select bank1
  3471     04DC  1303               	bcf	3,6	;RP1=0, select bank1
  3472     04DD  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3473     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3474     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  3475     04E0  0822               	movf	?___llmod+2,w
  3476     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3477     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3478     04E3  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3479     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3480     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3481     04E6  0821               	movf	?___llmod+1,w
  3482     04E7  1683               	bsf	3,5	;RP0=1, select bank1
  3483     04E8  1303               	bcf	3,6	;RP1=0, select bank1
  3484     04E9  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3485     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3486     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  3487     04EC  0820               	movf	?___llmod,w
  3488     04ED  1683               	bsf	3,5	;RP0=1, select bank1
  3489     04EE  1303               	bcf	3,6	;RP1=0, select bank1
  3490     04EF  00B3               	movwf	sprintf@tmpval^(0+128)
  3491     04F0                     l3727:
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3494     04F0  0841               	movf	sprintf@sp^(0+128),w
  3495     04F1  0084               	movwf	4
  3496     04F2  0833               	movf	sprintf@tmpval^(0+128),w
  3497     04F3  3E30               	addlw	48
  3498     04F4  1383               	bcf	3,7	;select IRP bank0
  3499     04F5  0080               	movwf	0
  3500     04F6  3001               	movlw	1
  3501     04F7  00A5               	movwf	??_sprintf^(0+128)
  3502     04F8  0825               	movf	??_sprintf^(0+128),w
  3503     04F9  07C1               	addwf	sprintf@sp^(0+128),f
  3504     04FA                     l390:	
  3505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3506                           
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3509     04FA  3001               	movlw	1
  3510     04FB  02C2               	subwf	sprintf@c^(0+128),f
  3511     04FC  0A42               	incf	sprintf@c^(0+128),w
  3512     04FD  1D03               	btfss	3,2
  3513     04FE  2D00               	goto	u6061
  3514     04FF  2D01               	goto	u6060
  3515     0500                     u6061:
  3516     0500  2C76               	goto	l3723
  3517     0501                     u6060:
  3518     0501  2D13               	goto	l3735
  3519     0502                     l3729:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3522     0502  1683               	bsf	3,5	;RP0=1, select bank1
  3523     0503  1303               	bcf	3,6	;RP1=0, select bank1
  3524     0504  0841               	movf	sprintf@sp^(0+128),w
  3525     0505  0084               	movwf	4
  3526     0506  3030               	movlw	48
  3527     0507  1383               	bcf	3,7	;select IRP bank0
  3528     0508  0080               	movwf	0
  3529     0509                     l3731:
  3530     0509  3001               	movlw	1
  3531     050A  00A5               	movwf	??_sprintf^(0+128)
  3532     050B  0825               	movf	??_sprintf^(0+128),w
  3533     050C  07C1               	addwf	sprintf@sp^(0+128),f
  3534     050D                     l3733:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3537     050D  30FF               	movlw	255
  3538     050E  07B1               	addwf	sprintf@eexp^(0+128),f
  3539     050F  1803               	skipnc
  3540     0510  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  3541     0511  30FF               	movlw	255
  3542     0512  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  3543     0513                     l3735:
  3544                           
  3545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3546     0513  0832               	movf	(sprintf@eexp+1)^(0+128),w
  3547     0514  3A80               	xorlw	128
  3548     0515  00FF               	movwf	btemp+1
  3549     0516  3080               	movlw	128
  3550     0517  027F               	subwf	btemp+1,w
  3551     0518  1D03               	skipz
  3552     0519  2D1C               	goto	u6075
  3553     051A  3001               	movlw	1
  3554     051B  0231               	subwf	sprintf@eexp^(0+128),w
  3555     051C                     u6075:
  3556     051C  1803               	skipnc
  3557     051D  2D1F               	goto	u6071
  3558     051E  2D20               	goto	u6070
  3559     051F                     u6071:
  3560     051F  2D02               	goto	l3729
  3561     0520                     u6070:
  3562     0520                     l3737:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3565     0520  1683               	bsf	3,5	;RP0=1, select bank1
  3566     0521  1303               	bcf	3,6	;RP1=0, select bank1
  3567     0522  0840               	movf	(sprintf@prec+1)^(0+128),w
  3568     0523  3A80               	xorlw	128
  3569     0524  00FF               	movwf	btemp+1
  3570     0525  3080               	movlw	128
  3571     0526  027F               	subwf	btemp+1,w
  3572     0527  1D03               	skipz
  3573     0528  2D2B               	goto	u6085
  3574     0529  3009               	movlw	9
  3575     052A  023F               	subwf	sprintf@prec^(0+128),w
  3576     052B                     u6085:
  3577     052B  1C03               	skipc
  3578     052C  2D2E               	goto	u6081
  3579     052D  2D2F               	goto	u6080
  3580     052E                     u6081:
  3581     052E  2D34               	goto	l3741
  3582     052F                     u6080:
  3583     052F                     l3739:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3586     052F  3008               	movlw	8
  3587     0530  1683               	bsf	3,5	;RP0=1, select bank1
  3588     0531  1303               	bcf	3,6	;RP1=0, select bank1
  3589     0532  00C2               	movwf	sprintf@c^(0+128)
  3590     0533  2D38               	goto	l397
  3591     0534                     l3741:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3594     0534  1683               	bsf	3,5	;RP0=1, select bank1
  3595     0535  1303               	bcf	3,6	;RP1=0, select bank1
  3596     0536  083F               	movf	sprintf@prec^(0+128),w
  3597     0537  00C2               	movwf	sprintf@c^(0+128)
  3598     0538                     l397:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3601     0538  0842               	movf	sprintf@c^(0+128),w
  3602     0539  00A5               	movwf	??_sprintf^(0+128)
  3603     053A  01A6               	clrf	(??_sprintf^(0+128)+1)
  3604     053B  0825               	movf	??_sprintf^(0+128),w
  3605     053C  02BF               	subwf	sprintf@prec^(0+128),f
  3606     053D  0826               	movf	(??_sprintf+1)^(0+128),w
  3607     053E  1C03               	skipc
  3608     053F  03C0               	decf	(sprintf@prec+1)^(0+128),f
  3609     0540  02C0               	subwf	(sprintf@prec+1)^(0+128),f
  3610     0541                     l3743:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3613     0541  0842               	movf	sprintf@c^(0+128),w
  3614     0542  1903               	btfsc	3,2
  3615     0543  2D45               	goto	u6091
  3616     0544  2D46               	goto	u6090
  3617     0545                     u6091:
  3618     0545  2D4F               	goto	l3749
  3619     0546                     u6090:
  3620     0546                     l3745:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3623     0546  0841               	movf	sprintf@sp^(0+128),w
  3624     0547  0084               	movwf	4
  3625     0548  302E               	movlw	46
  3626     0549  1383               	bcf	3,7	;select IRP bank0
  3627     054A  0080               	movwf	0
  3628     054B                     l3747:
  3629     054B  3001               	movlw	1
  3630     054C  00A5               	movwf	??_sprintf^(0+128)
  3631     054D  0825               	movf	??_sprintf^(0+128),w
  3632     054E  07C1               	addwf	sprintf@sp^(0+128),f
  3633     054F                     l3749:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3636     054F  0842               	movf	sprintf@c^(0+128),w
  3637     0550  120A  158A  24A1  120A  118A  	fcall	_scale
  3638     0555  1283               	bcf	3,5	;RP0=0, select bank0
  3639     0556  1303               	bcf	3,6	;RP1=0, select bank0
  3640     0557  083F               	movf	?_scale+3,w
  3641     0558  1683               	bsf	3,5	;RP0=1, select bank1
  3642     0559  1303               	bcf	3,6	;RP1=0, select bank1
  3643     055A  00AD               	movwf	(_sprintf$1301+3)^(0+128)
  3644     055B  1283               	bcf	3,5	;RP0=0, select bank0
  3645     055C  1303               	bcf	3,6	;RP1=0, select bank0
  3646     055D  083E               	movf	?_scale+2,w
  3647     055E  1683               	bsf	3,5	;RP0=1, select bank1
  3648     055F  1303               	bcf	3,6	;RP1=0, select bank1
  3649     0560  00AC               	movwf	(_sprintf$1301+2)^(0+128)
  3650     0561  1283               	bcf	3,5	;RP0=0, select bank0
  3651     0562  1303               	bcf	3,6	;RP1=0, select bank0
  3652     0563  083D               	movf	?_scale+1,w
  3653     0564  1683               	bsf	3,5	;RP0=1, select bank1
  3654     0565  1303               	bcf	3,6	;RP1=0, select bank1
  3655     0566  00AB               	movwf	(_sprintf$1301+1)^(0+128)
  3656     0567  1283               	bcf	3,5	;RP0=0, select bank0
  3657     0568  1303               	bcf	3,6	;RP1=0, select bank0
  3658     0569  083C               	movf	?_scale,w
  3659     056A  1683               	bsf	3,5	;RP0=1, select bank1
  3660     056B  1303               	bcf	3,6	;RP1=0, select bank1
  3661     056C  00AA               	movwf	_sprintf$1301^(0+128)
  3662     056D                     l3751:
  3663                           
  3664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3665     056D  082D               	movf	(_sprintf$1301+3)^(0+128),w
  3666     056E  1283               	bcf	3,5	;RP0=0, select bank0
  3667     056F  1303               	bcf	3,6	;RP1=0, select bank0
  3668     0570  00A9               	movwf	___flmul@a+3
  3669     0571  1683               	bsf	3,5	;RP0=1, select bank1
  3670     0572  1303               	bcf	3,6	;RP1=0, select bank1
  3671     0573  082C               	movf	(_sprintf$1301+2)^(0+128),w
  3672     0574  1283               	bcf	3,5	;RP0=0, select bank0
  3673     0575  1303               	bcf	3,6	;RP1=0, select bank0
  3674     0576  00A8               	movwf	___flmul@a+2
  3675     0577  1683               	bsf	3,5	;RP0=1, select bank1
  3676     0578  1303               	bcf	3,6	;RP1=0, select bank1
  3677     0579  082B               	movf	(_sprintf$1301+1)^(0+128),w
  3678     057A  1283               	bcf	3,5	;RP0=0, select bank0
  3679     057B  1303               	bcf	3,6	;RP1=0, select bank0
  3680     057C  00A7               	movwf	___flmul@a+1
  3681     057D  1683               	bsf	3,5	;RP0=1, select bank1
  3682     057E  1303               	bcf	3,6	;RP1=0, select bank1
  3683     057F  082A               	movf	_sprintf$1301^(0+128),w
  3684     0580  1283               	bcf	3,5	;RP0=0, select bank0
  3685     0581  1303               	bcf	3,6	;RP1=0, select bank0
  3686     0582  00A6               	movwf	___flmul@a
  3687     0583  1683               	bsf	3,5	;RP0=1, select bank1
  3688     0584  1303               	bcf	3,6	;RP1=0, select bank1
  3689     0585  083E               	movf	(sprintf@fval+3)^(0+128),w
  3690     0586  1283               	bcf	3,5	;RP0=0, select bank0
  3691     0587  1303               	bcf	3,6	;RP1=0, select bank0
  3692     0588  00A5               	movwf	___flmul@b+3
  3693     0589  1683               	bsf	3,5	;RP0=1, select bank1
  3694     058A  1303               	bcf	3,6	;RP1=0, select bank1
  3695     058B  083D               	movf	(sprintf@fval+2)^(0+128),w
  3696     058C  1283               	bcf	3,5	;RP0=0, select bank0
  3697     058D  1303               	bcf	3,6	;RP1=0, select bank0
  3698     058E  00A4               	movwf	___flmul@b+2
  3699     058F  1683               	bsf	3,5	;RP0=1, select bank1
  3700     0590  1303               	bcf	3,6	;RP1=0, select bank1
  3701     0591  083C               	movf	(sprintf@fval+1)^(0+128),w
  3702     0592  1283               	bcf	3,5	;RP0=0, select bank0
  3703     0593  1303               	bcf	3,6	;RP1=0, select bank0
  3704     0594  00A3               	movwf	___flmul@b+1
  3705     0595  1683               	bsf	3,5	;RP0=1, select bank1
  3706     0596  1303               	bcf	3,6	;RP1=0, select bank1
  3707     0597  083B               	movf	sprintf@fval^(0+128),w
  3708     0598  1283               	bcf	3,5	;RP0=0, select bank0
  3709     0599  1303               	bcf	3,6	;RP1=0, select bank0
  3710     059A  00A2               	movwf	___flmul@b
  3711     059B  120A  158A  215C  120A  118A  	fcall	___flmul
  3712     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3713     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3714     05A2  0825               	movf	?___flmul+3,w
  3715     05A3  00D2               	movwf	___fltol@f1+3
  3716     05A4  0824               	movf	?___flmul+2,w
  3717     05A5  00D1               	movwf	___fltol@f1+2
  3718     05A6  0823               	movf	?___flmul+1,w
  3719     05A7  00D0               	movwf	___fltol@f1+1
  3720     05A8  0822               	movf	?___flmul,w
  3721     05A9  00CF               	movwf	___fltol@f1
  3722     05AA  160A  118A  200C  120A  118A  	fcall	___fltol
  3723     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3724     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3725     05B1  0852               	movf	?___fltol+3,w
  3726     05B2  1683               	bsf	3,5	;RP0=1, select bank1
  3727     05B3  1303               	bcf	3,6	;RP1=0, select bank1
  3728     05B4  00BA               	movwf	(sprintf@val+3)^(0+128)
  3729     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3730     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3731     05B7  0851               	movf	?___fltol+2,w
  3732     05B8  1683               	bsf	3,5	;RP0=1, select bank1
  3733     05B9  1303               	bcf	3,6	;RP1=0, select bank1
  3734     05BA  00B9               	movwf	(sprintf@val+2)^(0+128)
  3735     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3736     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  3737     05BD  0850               	movf	?___fltol+1,w
  3738     05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3739     05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3740     05C0  00B8               	movwf	(sprintf@val+1)^(0+128)
  3741     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  3742     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  3743     05C3  084F               	movf	?___fltol,w
  3744     05C4  1683               	bsf	3,5	;RP0=1, select bank1
  3745     05C5  1303               	bcf	3,6	;RP1=0, select bank1
  3746     05C6  00B7               	movwf	sprintf@val^(0+128)
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3749     05C7  2EA7               	goto	l3761
  3750     05C8                     l3753:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3753     05C8  0842               	movf	sprintf@c^(0+128),w
  3754     05C9  00A5               	movwf	??_sprintf^(0+128)
  3755     05CA  3001               	movlw	1
  3756     05CB                     u6105:
  3757     05CB  1003               	clrc
  3758     05CC  0DA5               	rlf	??_sprintf^(0+128),f
  3759     05CD  3EFF               	addlw	-1
  3760     05CE  1D03               	skipz
  3761     05CF  2DCB               	goto	u6105
  3762     05D0  1003               	clrc
  3763     05D1  0D25               	rlf	??_sprintf^(0+128),w
  3764     05D2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3765     05D3  0084               	movwf	4
  3766     05D4  160A  158A  200A  120A  118A  	fcall	stringdir
  3767     05D9  00F0               	movwf	___lldiv@divisor
  3768     05DA  160A  158A  200A  120A  118A  	fcall	stringdir
  3769     05DF  00F1               	movwf	___lldiv@divisor+1
  3770     05E0  160A  158A  200A  120A  118A  	fcall	stringdir
  3771     05E5  00F2               	movwf	___lldiv@divisor+2
  3772     05E6  160A  158A  200A  120A  118A  	fcall	stringdir
  3773     05EB  00F3               	movwf	___lldiv@divisor+3
  3774     05EC  083A               	movf	(sprintf@val+3)^(0+128),w
  3775     05ED  00F7               	movwf	___lldiv@dividend+3
  3776     05EE  0839               	movf	(sprintf@val+2)^(0+128),w
  3777     05EF  00F6               	movwf	___lldiv@dividend+2
  3778     05F0  0838               	movf	(sprintf@val+1)^(0+128),w
  3779     05F1  00F5               	movwf	___lldiv@dividend+1
  3780     05F2  0837               	movf	sprintf@val^(0+128),w
  3781     05F3  00F4               	movwf	___lldiv@dividend
  3782     05F4  160A  158A  2510  120A  118A  	fcall	___lldiv
  3783     05F9  0873               	movf	?___lldiv+3,w
  3784     05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3785     05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3786     05FC  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3787     05FD  0872               	movf	?___lldiv+2,w
  3788     05FE  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3789     05FF  0871               	movf	?___lldiv+1,w
  3790     0600  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3791     0601  0870               	movf	?___lldiv,w
  3792     0602  00B3               	movwf	sprintf@tmpval^(0+128)
  3793     0603                     l3755:
  3794                           
  3795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3796     0603  3000               	movlw	0
  3797     0604  1283               	bcf	3,5	;RP0=0, select bank0
  3798     0605  1303               	bcf	3,6	;RP1=0, select bank0
  3799     0606  00A3               	movwf	___llmod@divisor+3
  3800     0607  3000               	movlw	0
  3801     0608  00A2               	movwf	___llmod@divisor+2
  3802     0609  3000               	movlw	0
  3803     060A  00A1               	movwf	___llmod@divisor+1
  3804     060B  300A               	movlw	10
  3805     060C  00A0               	movwf	___llmod@divisor
  3806     060D  1683               	bsf	3,5	;RP0=1, select bank1
  3807     060E  1303               	bcf	3,6	;RP1=0, select bank1
  3808     060F  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  3809     0610  1283               	bcf	3,5	;RP0=0, select bank0
  3810     0611  1303               	bcf	3,6	;RP1=0, select bank0
  3811     0612  00A7               	movwf	___llmod@dividend+3
  3812     0613  1683               	bsf	3,5	;RP0=1, select bank1
  3813     0614  1303               	bcf	3,6	;RP1=0, select bank1
  3814     0615  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  3815     0616  1283               	bcf	3,5	;RP0=0, select bank0
  3816     0617  1303               	bcf	3,6	;RP1=0, select bank0
  3817     0618  00A6               	movwf	___llmod@dividend+2
  3818     0619  1683               	bsf	3,5	;RP0=1, select bank1
  3819     061A  1303               	bcf	3,6	;RP1=0, select bank1
  3820     061B  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  3821     061C  1283               	bcf	3,5	;RP0=0, select bank0
  3822     061D  1303               	bcf	3,6	;RP1=0, select bank0
  3823     061E  00A5               	movwf	___llmod@dividend+1
  3824     061F  1683               	bsf	3,5	;RP0=1, select bank1
  3825     0620  1303               	bcf	3,6	;RP1=0, select bank1
  3826     0621  0833               	movf	sprintf@tmpval^(0+128),w
  3827     0622  1283               	bcf	3,5	;RP0=0, select bank0
  3828     0623  1303               	bcf	3,6	;RP1=0, select bank0
  3829     0624  00A4               	movwf	___llmod@dividend
  3830     0625  160A  158A  2399  120A  118A  	fcall	___llmod
  3831     062A  1283               	bcf	3,5	;RP0=0, select bank0
  3832     062B  1303               	bcf	3,6	;RP1=0, select bank0
  3833     062C  0823               	movf	?___llmod+3,w
  3834     062D  1683               	bsf	3,5	;RP0=1, select bank1
  3835     062E  1303               	bcf	3,6	;RP1=0, select bank1
  3836     062F  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3837     0630  1283               	bcf	3,5	;RP0=0, select bank0
  3838     0631  1303               	bcf	3,6	;RP1=0, select bank0
  3839     0632  0822               	movf	?___llmod+2,w
  3840     0633  1683               	bsf	3,5	;RP0=1, select bank1
  3841     0634  1303               	bcf	3,6	;RP1=0, select bank1
  3842     0635  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3843     0636  1283               	bcf	3,5	;RP0=0, select bank0
  3844     0637  1303               	bcf	3,6	;RP1=0, select bank0
  3845     0638  0821               	movf	?___llmod+1,w
  3846     0639  1683               	bsf	3,5	;RP0=1, select bank1
  3847     063A  1303               	bcf	3,6	;RP1=0, select bank1
  3848     063B  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3849     063C  1283               	bcf	3,5	;RP0=0, select bank0
  3850     063D  1303               	bcf	3,6	;RP1=0, select bank0
  3851     063E  0820               	movf	?___llmod,w
  3852     063F  1683               	bsf	3,5	;RP0=1, select bank1
  3853     0640  1303               	bcf	3,6	;RP1=0, select bank1
  3854     0641  00B3               	movwf	sprintf@tmpval^(0+128)
  3855     0642                     l3757:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3858     0642  0841               	movf	sprintf@sp^(0+128),w
  3859     0643  0084               	movwf	4
  3860     0644  0833               	movf	sprintf@tmpval^(0+128),w
  3861     0645  3E30               	addlw	48
  3862     0646  1383               	bcf	3,7	;select IRP bank0
  3863     0647  0080               	movwf	0
  3864     0648  3001               	movlw	1
  3865     0649  00A5               	movwf	??_sprintf^(0+128)
  3866     064A  0825               	movf	??_sprintf^(0+128),w
  3867     064B  07C1               	addwf	sprintf@sp^(0+128),f
  3868     064C                     l3759:
  3869                           
  3870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3871     064C  0842               	movf	sprintf@c^(0+128),w
  3872     064D  00A5               	movwf	??_sprintf^(0+128)
  3873     064E  3001               	movlw	1
  3874     064F                     u6115:
  3875     064F  1003               	clrc
  3876     0650  0DA5               	rlf	??_sprintf^(0+128),f
  3877     0651  3EFF               	addlw	-1
  3878     0652  1D03               	skipz
  3879     0653  2E4F               	goto	u6115
  3880     0654  1003               	clrc
  3881     0655  0D25               	rlf	??_sprintf^(0+128),w
  3882     0656  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3883     0657  0084               	movwf	4
  3884     0658  160A  158A  200A  120A  118A  	fcall	stringdir
  3885     065D  1283               	bcf	3,5	;RP0=0, select bank0
  3886     065E  1303               	bcf	3,6	;RP1=0, select bank0
  3887     065F  00A0               	movwf	___llmod@divisor
  3888     0660  160A  158A  200A  120A  118A  	fcall	stringdir
  3889     0665  00A1               	movwf	___llmod@divisor+1
  3890     0666  160A  158A  200A  120A  118A  	fcall	stringdir
  3891     066B  00A2               	movwf	___llmod@divisor+2
  3892     066C  160A  158A  200A  120A  118A  	fcall	stringdir
  3893     0671  00A3               	movwf	___llmod@divisor+3
  3894     0672  1683               	bsf	3,5	;RP0=1, select bank1
  3895     0673  1303               	bcf	3,6	;RP1=0, select bank1
  3896     0674  083A               	movf	(sprintf@val+3)^(0+128),w
  3897     0675  1283               	bcf	3,5	;RP0=0, select bank0
  3898     0676  1303               	bcf	3,6	;RP1=0, select bank0
  3899     0677  00A7               	movwf	___llmod@dividend+3
  3900     0678  1683               	bsf	3,5	;RP0=1, select bank1
  3901     0679  1303               	bcf	3,6	;RP1=0, select bank1
  3902     067A  0839               	movf	(sprintf@val+2)^(0+128),w
  3903     067B  1283               	bcf	3,5	;RP0=0, select bank0
  3904     067C  1303               	bcf	3,6	;RP1=0, select bank0
  3905     067D  00A6               	movwf	___llmod@dividend+2
  3906     067E  1683               	bsf	3,5	;RP0=1, select bank1
  3907     067F  1303               	bcf	3,6	;RP1=0, select bank1
  3908     0680  0838               	movf	(sprintf@val+1)^(0+128),w
  3909     0681  1283               	bcf	3,5	;RP0=0, select bank0
  3910     0682  1303               	bcf	3,6	;RP1=0, select bank0
  3911     0683  00A5               	movwf	___llmod@dividend+1
  3912     0684  1683               	bsf	3,5	;RP0=1, select bank1
  3913     0685  1303               	bcf	3,6	;RP1=0, select bank1
  3914     0686  0837               	movf	sprintf@val^(0+128),w
  3915     0687  1283               	bcf	3,5	;RP0=0, select bank0
  3916     0688  1303               	bcf	3,6	;RP1=0, select bank0
  3917     0689  00A4               	movwf	___llmod@dividend
  3918     068A  160A  158A  2399  120A  118A  	fcall	___llmod
  3919     068F  1283               	bcf	3,5	;RP0=0, select bank0
  3920     0690  1303               	bcf	3,6	;RP1=0, select bank0
  3921     0691  0823               	movf	?___llmod+3,w
  3922     0692  1683               	bsf	3,5	;RP0=1, select bank1
  3923     0693  1303               	bcf	3,6	;RP1=0, select bank1
  3924     0694  00BA               	movwf	(sprintf@val+3)^(0+128)
  3925     0695  1283               	bcf	3,5	;RP0=0, select bank0
  3926     0696  1303               	bcf	3,6	;RP1=0, select bank0
  3927     0697  0822               	movf	?___llmod+2,w
  3928     0698  1683               	bsf	3,5	;RP0=1, select bank1
  3929     0699  1303               	bcf	3,6	;RP1=0, select bank1
  3930     069A  00B9               	movwf	(sprintf@val+2)^(0+128)
  3931     069B  1283               	bcf	3,5	;RP0=0, select bank0
  3932     069C  1303               	bcf	3,6	;RP1=0, select bank0
  3933     069D  0821               	movf	?___llmod+1,w
  3934     069E  1683               	bsf	3,5	;RP0=1, select bank1
  3935     069F  1303               	bcf	3,6	;RP1=0, select bank1
  3936     06A0  00B8               	movwf	(sprintf@val+1)^(0+128)
  3937     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3938     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  3939     06A3  0820               	movf	?___llmod,w
  3940     06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3941     06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3942     06A6  00B7               	movwf	sprintf@val^(0+128)
  3943     06A7                     l3761:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3946     06A7  3001               	movlw	1
  3947     06A8  02C2               	subwf	sprintf@c^(0+128),f
  3948     06A9  0A42               	incf	sprintf@c^(0+128),w
  3949     06AA  1D03               	btfss	3,2
  3950     06AB  2EAD               	goto	u6121
  3951     06AC  2EAE               	goto	u6120
  3952     06AD                     u6121:
  3953     06AD  2DC8               	goto	l3753
  3954     06AE                     u6120:
  3955     06AE  2EBE               	goto	l3769
  3956     06AF                     l3763:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3959     06AF  0841               	movf	sprintf@sp^(0+128),w
  3960     06B0  0084               	movwf	4
  3961     06B1  3030               	movlw	48
  3962     06B2  1383               	bcf	3,7	;select IRP bank0
  3963     06B3  0080               	movwf	0
  3964     06B4                     l3765:
  3965     06B4  3001               	movlw	1
  3966     06B5  00A5               	movwf	??_sprintf^(0+128)
  3967     06B6  0825               	movf	??_sprintf^(0+128),w
  3968     06B7  07C1               	addwf	sprintf@sp^(0+128),f
  3969     06B8                     l3767:
  3970                           
  3971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3972     06B8  30FF               	movlw	255
  3973     06B9  07BF               	addwf	sprintf@prec^(0+128),f
  3974     06BA  1803               	skipnc
  3975     06BB  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3976     06BC  30FF               	movlw	255
  3977     06BD  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3978     06BE                     l3769:
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3981     06BE  083F               	movf	sprintf@prec^(0+128),w
  3982     06BF  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3983     06C0  1D03               	btfss	3,2
  3984     06C1  2EC3               	goto	u6131
  3985     06C2  2EC4               	goto	u6130
  3986     06C3                     u6131:
  3987     06C3  2EAF               	goto	l3763
  3988     06C4                     u6130:
  3989     06C4  2FE7               	goto	l3821
  3990     06C5                     l3771:
  3991                           
  3992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3993     06C5  082E               	movf	sprintf@ap^(0+128),w
  3994     06C6  0084               	movwf	4
  3995     06C7  1383               	bcf	3,7	;select IRP bank0
  3996     06C8  0800               	movf	0,w
  3997     06C9  00A5               	movwf	??_sprintf^(0+128)
  3998     06CA  0A84               	incf	4,f
  3999     06CB  0800               	movf	0,w
  4000     06CC  00A6               	movwf	(??_sprintf^(0+128)+1)
  4001     06CD  0825               	movf	??_sprintf^(0+128),w
  4002     06CE  00B7               	movwf	sprintf@val^(0+128)
  4003     06CF  0826               	movf	(??_sprintf+1)^(0+128),w
  4004     06D0  00B8               	movwf	(sprintf@val+1)^(0+128)
  4005     06D1  3000               	movlw	0
  4006     06D2  1BB8               	btfsc	(sprintf@val+1)^(0+128),7
  4007     06D3  30FF               	movlw	255
  4008     06D4  00B9               	movwf	(sprintf@val+2)^(0+128)
  4009     06D5  00BA               	movwf	(sprintf@val+3)^(0+128)
  4010     06D6                     l3773:
  4011     06D6  3002               	movlw	2
  4012     06D7  00A5               	movwf	??_sprintf^(0+128)
  4013     06D8  0825               	movf	??_sprintf^(0+128),w
  4014     06D9  07AE               	addwf	sprintf@ap^(0+128),f
  4015     06DA                     l3775:
  4016                           
  4017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  4018     06DA  1FBA               	btfss	(sprintf@val+3)^(0+128),7
  4019     06DB  2EDD               	goto	u6141
  4020     06DC  2EDE               	goto	u6140
  4021     06DD                     u6141:
  4022     06DD  2EED               	goto	l3781
  4023     06DE                     u6140:
  4024     06DE                     l3777:
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4027     06DE  3003               	movlw	3
  4028     06DF  04AF               	iorwf	sprintf@flag^(0+128),f
  4029     06E0  3000               	movlw	0
  4030     06E1  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  4031     06E2                     l3779:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4034     06E2  09B7               	comf	sprintf@val^(0+128),f
  4035     06E3  09B8               	comf	(sprintf@val+1)^(0+128),f
  4036     06E4  09B9               	comf	(sprintf@val+2)^(0+128),f
  4037     06E5  09BA               	comf	(sprintf@val+3)^(0+128),f
  4038     06E6  0AB7               	incf	sprintf@val^(0+128),f
  4039     06E7  1903               	skipnz
  4040     06E8  0AB8               	incf	(sprintf@val+1)^(0+128),f
  4041     06E9  1903               	skipnz
  4042     06EA  0AB9               	incf	(sprintf@val+2)^(0+128),f
  4043     06EB  1903               	skipnz
  4044     06EC  0ABA               	incf	(sprintf@val+3)^(0+128),f
  4045     06ED                     l3781:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  4048     06ED  083F               	movf	sprintf@prec^(0+128),w
  4049     06EE  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  4050     06EF  1D03               	btfss	3,2
  4051     06F0  2EF2               	goto	u6151
  4052     06F1  2EF3               	goto	u6150
  4053     06F2                     u6151:
  4054     06F2  2F01               	goto	l3787
  4055     06F3                     u6150:
  4056     06F3                     l3783:
  4057     06F3  083A               	movf	(sprintf@val+3)^(0+128),w
  4058     06F4  0439               	iorwf	(sprintf@val+2)^(0+128),w
  4059     06F5  0438               	iorwf	(sprintf@val+1)^(0+128),w
  4060     06F6  0437               	iorwf	sprintf@val^(0+128),w
  4061     06F7  1D03               	skipz
  4062     06F8  2EFA               	goto	u6161
  4063     06F9  2EFB               	goto	u6160
  4064     06FA                     u6161:
  4065     06FA  2F01               	goto	l3787
  4066     06FB                     u6160:
  4067     06FB                     l3785:
  4068                           
  4069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4070     06FB  3001               	movlw	1
  4071     06FC  07BF               	addwf	sprintf@prec^(0+128),f
  4072     06FD  1803               	skipnc
  4073     06FE  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  4074     06FF  3000               	movlw	0
  4075     0700  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  4076     0701                     l3787:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4079     0701  01C2               	clrf	sprintf@c^(0+128)
  4080     0702  0AC2               	incf	sprintf@c^(0+128),f
  4081     0703                     l3793:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4084     0703  0842               	movf	sprintf@c^(0+128),w
  4085     0704  00A5               	movwf	??_sprintf^(0+128)
  4086     0705  3001               	movlw	1
  4087     0706                     u6175:
  4088     0706  1003               	clrc
  4089     0707  0DA5               	rlf	??_sprintf^(0+128),f
  4090     0708  3EFF               	addlw	-1
  4091     0709  1D03               	skipz
  4092     070A  2F06               	goto	u6175
  4093     070B  1003               	clrc
  4094     070C  0D25               	rlf	??_sprintf^(0+128),w
  4095     070D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4096     070E  0084               	movwf	4
  4097     070F  160A  158A  200A  120A  118A  	fcall	stringdir
  4098     0714  00A6               	movwf	(??_sprintf+1)^(0+128)
  4099     0715  160A  158A  200A  120A  118A  	fcall	stringdir
  4100     071A  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  4101     071B  160A  158A  200A  120A  118A  	fcall	stringdir
  4102     0720  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  4103     0721  160A  158A  200A  120A  118A  	fcall	stringdir
  4104     0726  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  4105     0727  0829               	movf	(??_sprintf+4)^(0+128),w
  4106     0728  023A               	subwf	(sprintf@val+3)^(0+128),w
  4107     0729  1D03               	skipz
  4108     072A  2F35               	goto	u6185
  4109     072B  0828               	movf	(??_sprintf+3)^(0+128),w
  4110     072C  0239               	subwf	(sprintf@val+2)^(0+128),w
  4111     072D  1D03               	skipz
  4112     072E  2F35               	goto	u6185
  4113     072F  0827               	movf	(??_sprintf+2)^(0+128),w
  4114     0730  0238               	subwf	(sprintf@val+1)^(0+128),w
  4115     0731  1D03               	skipz
  4116     0732  2F35               	goto	u6185
  4117     0733  0826               	movf	(??_sprintf+1)^(0+128),w
  4118     0734  0237               	subwf	sprintf@val^(0+128),w
  4119     0735                     u6185:
  4120     0735  1803               	skipnc
  4121     0736  2F38               	goto	u6181
  4122     0737  2F39               	goto	u6180
  4123     0738                     u6181:
  4124     0738  2F3A               	goto	l3797
  4125     0739                     u6180:
  4126     0739  2F44               	goto	l3799
  4127     073A                     l3797:
  4128     073A  3001               	movlw	1
  4129     073B  00A5               	movwf	??_sprintf^(0+128)
  4130     073C  0825               	movf	??_sprintf^(0+128),w
  4131     073D  07C2               	addwf	sprintf@c^(0+128),f
  4132     073E  300A               	movlw	10
  4133     073F  0642               	xorwf	sprintf@c^(0+128),w
  4134     0740  1D03               	btfss	3,2
  4135     0741  2F43               	goto	u6191
  4136     0742  2F44               	goto	u6190
  4137     0743                     u6191:
  4138     0743  2F03               	goto	l3793
  4139     0744                     u6190:
  4140     0744                     l3799:
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4143     0744  0840               	movf	(sprintf@prec+1)^(0+128),w
  4144     0745  3A80               	xorlw	128
  4145     0746  3C80               	sublw	128
  4146     0747  1D03               	skipz
  4147     0748  2F4B               	goto	u6205
  4148     0749  083F               	movf	sprintf@prec^(0+128),w
  4149     074A  0242               	subwf	sprintf@c^(0+128),w
  4150     074B                     u6205:
  4151     074B  1803               	skipnc
  4152     074C  2F4E               	goto	u6201
  4153     074D  2F4F               	goto	u6200
  4154     074E                     u6201:
  4155     074E  2F50               	goto	l3803
  4156     074F                     u6200:
  4157     074F                     l3801:
  4158     074F  2F68               	goto	l3807
  4159     0750                     l3803:
  4160     0750  1683               	bsf	3,5	;RP0=1, select bank1
  4161     0751  1303               	bcf	3,6	;RP1=0, select bank1
  4162     0752  0840               	movf	(sprintf@prec+1)^(0+128),w
  4163     0753  3A80               	xorlw	128
  4164     0754  00A5               	movwf	??_sprintf^(0+128)
  4165     0755  3080               	movlw	128
  4166     0756  0225               	subwf	??_sprintf^(0+128),w
  4167     0757  1D03               	skipz
  4168     0758  2F5B               	goto	u6215
  4169     0759  0842               	movf	sprintf@c^(0+128),w
  4170     075A  023F               	subwf	sprintf@prec^(0+128),w
  4171     075B                     u6215:
  4172     075B  1803               	skipnc
  4173     075C  2F5E               	goto	u6211
  4174     075D  2F5F               	goto	u6210
  4175     075E                     u6211:
  4176     075E  2F68               	goto	l3807
  4177     075F                     u6210:
  4178     075F                     l3805:
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4181     075F  1683               	bsf	3,5	;RP0=1, select bank1
  4182     0760  1303               	bcf	3,6	;RP1=0, select bank1
  4183     0761  0842               	movf	sprintf@c^(0+128),w
  4184     0762  00A5               	movwf	??_sprintf^(0+128)
  4185     0763  01A6               	clrf	(??_sprintf^(0+128)+1)
  4186     0764  0825               	movf	??_sprintf^(0+128),w
  4187     0765  00BF               	movwf	sprintf@prec^(0+128)
  4188     0766  0826               	movf	(??_sprintf+1)^(0+128),w
  4189     0767  00C0               	movwf	(sprintf@prec+1)^(0+128)
  4190     0768                     l3807:
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4193     0768  3003               	movlw	3
  4194     0769  1683               	bsf	3,5	;RP0=1, select bank1
  4195     076A  1303               	bcf	3,6	;RP1=0, select bank1
  4196     076B  052F               	andwf	sprintf@flag^(0+128),w
  4197     076C  00A5               	movwf	??_sprintf^(0+128)
  4198     076D  3000               	movlw	0
  4199     076E  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4200     076F  00A6               	movwf	(??_sprintf+1)^(0+128)
  4201     0770  0825               	movf	??_sprintf^(0+128),w
  4202     0771  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4203     0772  1903               	btfsc	3,2
  4204     0773  2F75               	goto	u6221
  4205     0774  2F76               	goto	u6220
  4206     0775                     u6221:
  4207     0775  2FD9               	goto	l3819
  4208     0776                     u6220:
  4209     0776                     l3809:
  4210                           
  4211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4212     0776  0841               	movf	sprintf@sp^(0+128),w
  4213     0777  0084               	movwf	4
  4214     0778  302D               	movlw	45
  4215     0779  1383               	bcf	3,7	;select IRP bank0
  4216     077A  0080               	movwf	0
  4217     077B                     l3811:
  4218     077B  3001               	movlw	1
  4219     077C  00A5               	movwf	??_sprintf^(0+128)
  4220     077D  0825               	movf	??_sprintf^(0+128),w
  4221     077E  07C1               	addwf	sprintf@sp^(0+128),f
  4222     077F  2FD9               	goto	l3819
  4223     0780                     l3813:
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4226     0780  3000               	movlw	0
  4227     0781  1283               	bcf	3,5	;RP0=0, select bank0
  4228     0782  1303               	bcf	3,6	;RP1=0, select bank0
  4229     0783  00A3               	movwf	___llmod@divisor+3
  4230     0784  3000               	movlw	0
  4231     0785  00A2               	movwf	___llmod@divisor+2
  4232     0786  3000               	movlw	0
  4233     0787  00A1               	movwf	___llmod@divisor+1
  4234     0788  300A               	movlw	10
  4235     0789  00A0               	movwf	___llmod@divisor
  4236     078A  1683               	bsf	3,5	;RP0=1, select bank1
  4237     078B  1303               	bcf	3,6	;RP1=0, select bank1
  4238     078C  083F               	movf	sprintf@prec^(0+128),w
  4239     078D  00A5               	movwf	??_sprintf^(0+128)
  4240     078E  3001               	movlw	1
  4241     078F                     u6235:
  4242     078F  1003               	clrc
  4243     0790  0DA5               	rlf	??_sprintf^(0+128),f
  4244     0791  3EFF               	addlw	-1
  4245     0792  1D03               	skipz
  4246     0793  2F8F               	goto	u6235
  4247     0794  1003               	clrc
  4248     0795  0D25               	rlf	??_sprintf^(0+128),w
  4249     0796  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4250     0797  0084               	movwf	4
  4251     0798  160A  158A  200A  120A  118A  	fcall	stringdir
  4252     079D  00F0               	movwf	___lldiv@divisor
  4253     079E  160A  158A  200A  120A  118A  	fcall	stringdir
  4254     07A3  00F1               	movwf	___lldiv@divisor+1
  4255     07A4  160A  158A  200A  120A  118A  	fcall	stringdir
  4256     07A9  00F2               	movwf	___lldiv@divisor+2
  4257     07AA  160A  158A  200A  120A  118A  	fcall	stringdir
  4258     07AF  00F3               	movwf	___lldiv@divisor+3
  4259     07B0  083A               	movf	(sprintf@val+3)^(0+128),w
  4260     07B1  00F7               	movwf	___lldiv@dividend+3
  4261     07B2  0839               	movf	(sprintf@val+2)^(0+128),w
  4262     07B3  00F6               	movwf	___lldiv@dividend+2
  4263     07B4  0838               	movf	(sprintf@val+1)^(0+128),w
  4264     07B5  00F5               	movwf	___lldiv@dividend+1
  4265     07B6  0837               	movf	sprintf@val^(0+128),w
  4266     07B7  00F4               	movwf	___lldiv@dividend
  4267     07B8  160A  158A  2510  120A  118A  	fcall	___lldiv
  4268     07BD  0873               	movf	?___lldiv+3,w
  4269     07BE  1283               	bcf	3,5	;RP0=0, select bank0
  4270     07BF  1303               	bcf	3,6	;RP1=0, select bank0
  4271     07C0  00A7               	movwf	___llmod@dividend+3
  4272     07C1  0872               	movf	?___lldiv+2,w
  4273     07C2  00A6               	movwf	___llmod@dividend+2
  4274     07C3  0871               	movf	?___lldiv+1,w
  4275     07C4  00A5               	movwf	___llmod@dividend+1
  4276     07C5  0870               	movf	?___lldiv,w
  4277     07C6  00A4               	movwf	___llmod@dividend
  4278     07C7  160A  158A  2399  120A  118A  	fcall	___llmod
  4279     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  4280     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  4281     07CE  0820               	movf	?___llmod,w
  4282     07CF  3E30               	addlw	48
  4283     07D0  1683               	bsf	3,5	;RP0=1, select bank1
  4284     07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4285     07D2  00C2               	movwf	sprintf@c^(0+128)
  4286     07D3                     l3815:
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4289     07D3  0841               	movf	sprintf@sp^(0+128),w
  4290     07D4  0084               	movwf	4
  4291     07D5  0842               	movf	sprintf@c^(0+128),w
  4292     07D6  1383               	bcf	3,7	;select IRP bank0
  4293     07D7  0080               	movwf	0
  4294     07D8  2F7B               	goto	l3811
  4295     07D9                     l3819:
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4298     07D9  30FF               	movlw	255
  4299     07DA  07BF               	addwf	sprintf@prec^(0+128),f
  4300     07DB  1803               	skipnc
  4301     07DC  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  4302     07DD  30FF               	movlw	255
  4303     07DE  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  4304     07DF  0A3F               	incf	sprintf@prec^(0+128),w
  4305     07E0  1D03               	skipz
  4306     07E1  2FE6               	goto	u6241
  4307     07E2  0A40               	incf	(sprintf@prec+1)^(0+128),w
  4308     07E3  1D03               	btfss	3,2
  4309     07E4  2FE6               	goto	u6241
  4310     07E5  2FE7               	goto	u6240
  4311     07E6                     u6241:
  4312     07E6  2F80               	goto	l3813
  4313     07E7                     u6240:
  4314     07E7                     l3821:
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4317     07E7  3001               	movlw	1
  4318     07E8  07A0               	addwf	sprintf@f^(0+128),f
  4319     07E9  30FF               	movlw	-1
  4320     07EA  0720               	addwf	sprintf@f^(0+128),w
  4321     07EB  0084               	movwf	4
  4322     07EC  160A  158A  200A  120A  118A  	fcall	stringdir
  4323     07F1  00C2               	movwf	sprintf@c^(0+128)
  4324     07F2  0842               	movf	sprintf@c^(0+128),w
  4325     07F3  1D03               	btfss	3,2
  4326     07F4  2FF6               	goto	u6251
  4327     07F5  2FF7               	goto	u6250
  4328     07F6                     u6251:
  4329     07F6  287D               	goto	l3597
  4330     07F7                     u6250:
  4331     07F7                     l3823:
  4332                           
  4333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4334     07F7  0841               	movf	sprintf@sp^(0+128),w
  4335     07F8  0084               	movwf	4
  4336     07F9  1383               	bcf	3,7	;select IRP bank0
  4337     07FA  0180               	clrf	0
  4338     07FB                     l418:
  4339     07FB  0008               	return
  4340     07FC                     __end_of_sprintf:
  4341                           
  4342                           	psect	text2
  4343     0CA1                     __ptext2:	
  4344 ;; *************** function _scale *****************
  4345 ;; Defined at:
  4346 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  scl             1    wreg     char 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  scl             1   46[BANK0 ] char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  4   28[BANK0 ] char 
  4353 ;; Registers used:
  4354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4360 ;;      Params:         0       4       0       0       0
  4361 ;;      Locals:         0       5       0       0       0
  4362 ;;      Temps:          0      10       0       0       0
  4363 ;;      Totals:         0      19       0       0       0
  4364 ;;Total ram usage:       19 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 2
  4367 ;; This function calls:
  4368 ;;		___awdiv
  4369 ;;		___awmod
  4370 ;;		___flmul
  4371 ;; This function is called by:
  4372 ;;		_sprintf
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376     0CA1                     _scale:	
  4377                           ;psect for function _scale
  4378                           
  4379                           
  4380                           ;incstack = 0
  4381                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4382                           ;scale@scl stored from wreg
  4383     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  4384     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  4385     0CA3  00CE               	movwf	scale@scl
  4386     0CA4                     l3127:
  4387                           
  4388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4389     0CA4  1FCE               	btfss	scale@scl,7
  4390     0CA5  2CA7               	goto	u4701
  4391     0CA6  2CA8               	goto	u4700
  4392     0CA7                     u4701:
  4393     0CA7  2E55               	goto	l3149
  4394     0CA8                     u4700:
  4395     0CA8                     l3129:
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4398     0CA8  09CE               	comf	scale@scl,f
  4399     0CA9  0ACE               	incf	scale@scl,f
  4400     0CAA                     l3131:
  4401                           
  4402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4403     0CAA  084E               	movf	scale@scl,w
  4404     0CAB  3A80               	xorlw	128
  4405     0CAC  3E12               	addlw	-238
  4406     0CAD  1C03               	skipc
  4407     0CAE  2CB0               	goto	u4711
  4408     0CAF  2CB1               	goto	u4710
  4409     0CB0                     u4711:
  4410     0CB0  2D99               	goto	l3139
  4411     0CB1                     u4710:
  4412     0CB1                     l3133:
  4413                           
  4414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4415     0CB1  300A               	movlw	10
  4416     0CB2  00F0               	movwf	___awdiv@divisor
  4417     0CB3  3000               	movlw	0
  4418     0CB4  00F1               	movwf	___awdiv@divisor+1
  4419     0CB5  084E               	movf	scale@scl,w
  4420     0CB6  00FB               	movwf	___awmod@dividend
  4421     0CB7  01FC               	clrf	___awmod@dividend+1
  4422     0CB8  1BFB               	btfsc	___awmod@dividend,7
  4423     0CB9  03FC               	decf	___awmod@dividend+1,f
  4424     0CBA  3064               	movlw	100
  4425     0CBB  00F9               	movwf	___awmod@divisor
  4426     0CBC  3000               	movlw	0
  4427     0CBD  00FA               	movwf	___awmod@divisor+1
  4428     0CBE  160A  158A  23EF  120A  158A  	fcall	___awmod
  4429     0CC3  087A               	movf	?___awmod+1,w
  4430     0CC4  00F3               	movwf	___awdiv@dividend+1
  4431     0CC5  0879               	movf	?___awmod,w
  4432     0CC6  00F2               	movwf	___awdiv@dividend
  4433     0CC7  120A  118A  2010  120A  158A  	fcall	___awdiv
  4434     0CCC  0870               	movf	?___awdiv,w
  4435     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4436     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4437     0CCF  00C0               	movwf	??_scale
  4438     0CD0  3001               	movlw	1
  4439     0CD1                     u4725:
  4440     0CD1  1003               	clrc
  4441     0CD2  0DC0               	rlf	??_scale,f
  4442     0CD3  3EFF               	addlw	-1
  4443     0CD4  1D03               	skipz
  4444     0CD5  2CD1               	goto	u4725
  4445     0CD6  1003               	clrc
  4446     0CD7  0D40               	rlf	??_scale,w
  4447     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4448     0CD9  0084               	movwf	4
  4449     0CDA  160A  158A  200A  120A  158A  	fcall	stringdir
  4450     0CDF  00C1               	movwf	??_scale+1
  4451     0CE0  160A  158A  200A  120A  158A  	fcall	stringdir
  4452     0CE5  00C2               	movwf	??_scale+2
  4453     0CE6  160A  158A  200A  120A  158A  	fcall	stringdir
  4454     0CEB  00C3               	movwf	??_scale+3
  4455     0CEC  160A  158A  200A  120A  158A  	fcall	stringdir
  4456     0CF1  00C4               	movwf	??_scale+4
  4457     0CF2  0844               	movf	??_scale+4,w
  4458     0CF3  00A5               	movwf	___flmul@b+3
  4459     0CF4  0843               	movf	??_scale+3,w
  4460     0CF5  00A4               	movwf	___flmul@b+2
  4461     0CF6  0842               	movf	??_scale+2,w
  4462     0CF7  00A3               	movwf	___flmul@b+1
  4463     0CF8  0841               	movf	??_scale+1,w
  4464     0CF9  00A2               	movwf	___flmul@b
  4465     0CFA  3064               	movlw	100
  4466     0CFB  00F0               	movwf	___awdiv@divisor
  4467     0CFC  3000               	movlw	0
  4468     0CFD  00F1               	movwf	___awdiv@divisor+1
  4469     0CFE  084E               	movf	scale@scl,w
  4470     0CFF  00F2               	movwf	___awdiv@dividend
  4471     0D00  01F3               	clrf	___awdiv@dividend+1
  4472     0D01  1BF2               	btfsc	___awdiv@dividend,7
  4473     0D02  03F3               	decf	___awdiv@dividend+1,f
  4474     0D03  120A  118A  2010  120A  158A  	fcall	___awdiv
  4475     0D08  0870               	movf	?___awdiv,w
  4476     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4477     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4478     0D0B  00C5               	movwf	??_scale+5
  4479     0D0C  3001               	movlw	1
  4480     0D0D                     u4735:
  4481     0D0D  1003               	clrc
  4482     0D0E  0DC5               	rlf	??_scale+5,f
  4483     0D0F  3EFF               	addlw	-1
  4484     0D10  1D03               	skipz
  4485     0D11  2D0D               	goto	u4735
  4486     0D12  1003               	clrc
  4487     0D13  0D45               	rlf	??_scale+5,w
  4488     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4489     0D15  0084               	movwf	4
  4490     0D16  160A  158A  200A  120A  158A  	fcall	stringdir
  4491     0D1B  00C6               	movwf	??_scale+6
  4492     0D1C  160A  158A  200A  120A  158A  	fcall	stringdir
  4493     0D21  00C7               	movwf	??_scale+7
  4494     0D22  160A  158A  200A  120A  158A  	fcall	stringdir
  4495     0D27  00C8               	movwf	??_scale+8
  4496     0D28  160A  158A  200A  120A  158A  	fcall	stringdir
  4497     0D2D  00C9               	movwf	??_scale+9
  4498     0D2E  0849               	movf	??_scale+9,w
  4499     0D2F  00A9               	movwf	___flmul@a+3
  4500     0D30  0848               	movf	??_scale+8,w
  4501     0D31  00A8               	movwf	___flmul@a+2
  4502     0D32  0847               	movf	??_scale+7,w
  4503     0D33  00A7               	movwf	___flmul@a+1
  4504     0D34  0846               	movf	??_scale+6,w
  4505     0D35  00A6               	movwf	___flmul@a
  4506     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  4507     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4508     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4509     0D3D  0825               	movf	?___flmul+3,w
  4510     0D3E  00CD               	movwf	_scale$1300+3
  4511     0D3F  0824               	movf	?___flmul+2,w
  4512     0D40  00CC               	movwf	_scale$1300+2
  4513     0D41  0823               	movf	?___flmul+1,w
  4514     0D42  00CB               	movwf	_scale$1300+1
  4515     0D43  0822               	movf	?___flmul,w
  4516     0D44  00CA               	movwf	_scale$1300
  4517                           
  4518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4519     0D45  300A               	movlw	10
  4520     0D46  00F9               	movwf	___awmod@divisor
  4521     0D47  3000               	movlw	0
  4522     0D48  00FA               	movwf	___awmod@divisor+1
  4523     0D49  084E               	movf	scale@scl,w
  4524     0D4A  00FB               	movwf	___awmod@dividend
  4525     0D4B  01FC               	clrf	___awmod@dividend+1
  4526     0D4C  1BFB               	btfsc	___awmod@dividend,7
  4527     0D4D  03FC               	decf	___awmod@dividend+1,f
  4528     0D4E  160A  158A  23EF  120A  158A  	fcall	___awmod
  4529     0D53  0879               	movf	?___awmod,w
  4530     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4531     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4532     0D56  00C0               	movwf	??_scale
  4533     0D57  3001               	movlw	1
  4534     0D58                     u4745:
  4535     0D58  1003               	clrc
  4536     0D59  0DC0               	rlf	??_scale,f
  4537     0D5A  3EFF               	addlw	-1
  4538     0D5B  1D03               	skipz
  4539     0D5C  2D58               	goto	u4745
  4540     0D5D  1003               	clrc
  4541     0D5E  0D40               	rlf	??_scale,w
  4542     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4543     0D60  0084               	movwf	4
  4544     0D61  160A  158A  200A  120A  158A  	fcall	stringdir
  4545     0D66  00C1               	movwf	??_scale+1
  4546     0D67  160A  158A  200A  120A  158A  	fcall	stringdir
  4547     0D6C  00C2               	movwf	??_scale+2
  4548     0D6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4549     0D72  00C3               	movwf	??_scale+3
  4550     0D73  160A  158A  200A  120A  158A  	fcall	stringdir
  4551     0D78  00C4               	movwf	??_scale+4
  4552     0D79  0844               	movf	??_scale+4,w
  4553     0D7A  00A5               	movwf	___flmul@b+3
  4554     0D7B  0843               	movf	??_scale+3,w
  4555     0D7C  00A4               	movwf	___flmul@b+2
  4556     0D7D  0842               	movf	??_scale+2,w
  4557     0D7E  00A3               	movwf	___flmul@b+1
  4558     0D7F  0841               	movf	??_scale+1,w
  4559     0D80  00A2               	movwf	___flmul@b
  4560     0D81  084D               	movf	_scale$1300+3,w
  4561     0D82  00A9               	movwf	___flmul@a+3
  4562     0D83  084C               	movf	_scale$1300+2,w
  4563     0D84  00A8               	movwf	___flmul@a+2
  4564     0D85  084B               	movf	_scale$1300+1,w
  4565     0D86  00A7               	movwf	___flmul@a+1
  4566     0D87  084A               	movf	_scale$1300,w
  4567     0D88  00A6               	movwf	___flmul@a
  4568     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  4569     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4570     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  4571     0D90  0825               	movf	?___flmul+3,w
  4572     0D91  00BF               	movwf	?_scale+3
  4573     0D92  0824               	movf	?___flmul+2,w
  4574     0D93  00BE               	movwf	?_scale+2
  4575     0D94  0823               	movf	?___flmul+1,w
  4576     0D95  00BD               	movwf	?_scale+1
  4577     0D96  0822               	movf	?___flmul,w
  4578     0D97  00BC               	movwf	?_scale
  4579     0D98  2FFF               	goto	l343
  4580     0D99                     l3139:
  4581     0D99  084E               	movf	scale@scl,w
  4582     0D9A  3A80               	xorlw	128
  4583     0D9B  3E75               	addlw	-139
  4584     0D9C  1C03               	skipc
  4585     0D9D  2D9F               	goto	u4751
  4586     0D9E  2DA0               	goto	u4750
  4587     0D9F                     u4751:
  4588     0D9F  2E28               	goto	l3145
  4589     0DA0                     u4750:
  4590     0DA0                     l3141:
  4591                           
  4592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4593     0DA0  300A               	movlw	10
  4594     0DA1  00F9               	movwf	___awmod@divisor
  4595     0DA2  3000               	movlw	0
  4596     0DA3  00FA               	movwf	___awmod@divisor+1
  4597     0DA4  084E               	movf	scale@scl,w
  4598     0DA5  00FB               	movwf	___awmod@dividend
  4599     0DA6  01FC               	clrf	___awmod@dividend+1
  4600     0DA7  1BFB               	btfsc	___awmod@dividend,7
  4601     0DA8  03FC               	decf	___awmod@dividend+1,f
  4602     0DA9  160A  158A  23EF  120A  158A  	fcall	___awmod
  4603     0DAE  0879               	movf	?___awmod,w
  4604     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4605     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4606     0DB1  00C0               	movwf	??_scale
  4607     0DB2  3001               	movlw	1
  4608     0DB3                     u4765:
  4609     0DB3  1003               	clrc
  4610     0DB4  0DC0               	rlf	??_scale,f
  4611     0DB5  3EFF               	addlw	-1
  4612     0DB6  1D03               	skipz
  4613     0DB7  2DB3               	goto	u4765
  4614     0DB8  1003               	clrc
  4615     0DB9  0D40               	rlf	??_scale,w
  4616     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4617     0DBB  0084               	movwf	4
  4618     0DBC  160A  158A  200A  120A  158A  	fcall	stringdir
  4619     0DC1  00C1               	movwf	??_scale+1
  4620     0DC2  160A  158A  200A  120A  158A  	fcall	stringdir
  4621     0DC7  00C2               	movwf	??_scale+2
  4622     0DC8  160A  158A  200A  120A  158A  	fcall	stringdir
  4623     0DCD  00C3               	movwf	??_scale+3
  4624     0DCE  160A  158A  200A  120A  158A  	fcall	stringdir
  4625     0DD3  00C4               	movwf	??_scale+4
  4626     0DD4  0844               	movf	??_scale+4,w
  4627     0DD5  00A5               	movwf	___flmul@b+3
  4628     0DD6  0843               	movf	??_scale+3,w
  4629     0DD7  00A4               	movwf	___flmul@b+2
  4630     0DD8  0842               	movf	??_scale+2,w
  4631     0DD9  00A3               	movwf	___flmul@b+1
  4632     0DDA  0841               	movf	??_scale+1,w
  4633     0DDB  00A2               	movwf	___flmul@b
  4634     0DDC  300A               	movlw	10
  4635     0DDD  00F0               	movwf	___awdiv@divisor
  4636     0DDE  3000               	movlw	0
  4637     0DDF  00F1               	movwf	___awdiv@divisor+1
  4638     0DE0  084E               	movf	scale@scl,w
  4639     0DE1  00F2               	movwf	___awdiv@dividend
  4640     0DE2  01F3               	clrf	___awdiv@dividend+1
  4641     0DE3  1BF2               	btfsc	___awdiv@dividend,7
  4642     0DE4  03F3               	decf	___awdiv@dividend+1,f
  4643     0DE5  120A  118A  2010  120A  158A  	fcall	___awdiv
  4644     0DEA  0870               	movf	?___awdiv,w
  4645     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4646     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4647     0DED  00C5               	movwf	??_scale+5
  4648     0DEE  3001               	movlw	1
  4649     0DEF                     u4775:
  4650     0DEF  1003               	clrc
  4651     0DF0  0DC5               	rlf	??_scale+5,f
  4652     0DF1  3EFF               	addlw	-1
  4653     0DF2  1D03               	skipz
  4654     0DF3  2DEF               	goto	u4775
  4655     0DF4  1003               	clrc
  4656     0DF5  0D45               	rlf	??_scale+5,w
  4657     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4658     0DF7  0084               	movwf	4
  4659     0DF8  160A  158A  200A  120A  158A  	fcall	stringdir
  4660     0DFD  00C6               	movwf	??_scale+6
  4661     0DFE  160A  158A  200A  120A  158A  	fcall	stringdir
  4662     0E03  00C7               	movwf	??_scale+7
  4663     0E04  160A  158A  200A  120A  158A  	fcall	stringdir
  4664     0E09  00C8               	movwf	??_scale+8
  4665     0E0A  160A  158A  200A  120A  158A  	fcall	stringdir
  4666     0E0F  00C9               	movwf	??_scale+9
  4667     0E10  0849               	movf	??_scale+9,w
  4668     0E11  00A9               	movwf	___flmul@a+3
  4669     0E12  0848               	movf	??_scale+8,w
  4670     0E13  00A8               	movwf	___flmul@a+2
  4671     0E14  0847               	movf	??_scale+7,w
  4672     0E15  00A7               	movwf	___flmul@a+1
  4673     0E16  0846               	movf	??_scale+6,w
  4674     0E17  00A6               	movwf	___flmul@a
  4675     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  4676     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4677     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4678     0E1F  0825               	movf	?___flmul+3,w
  4679     0E20  00BF               	movwf	?_scale+3
  4680     0E21  0824               	movf	?___flmul+2,w
  4681     0E22  00BE               	movwf	?_scale+2
  4682     0E23  0823               	movf	?___flmul+1,w
  4683     0E24  00BD               	movwf	?_scale+1
  4684     0E25  0822               	movf	?___flmul,w
  4685     0E26  00BC               	movwf	?_scale
  4686     0E27  2FFF               	goto	l343
  4687     0E28                     l3145:
  4688                           
  4689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4690     0E28  084E               	movf	scale@scl,w
  4691     0E29  00C0               	movwf	??_scale
  4692     0E2A  3001               	movlw	1
  4693     0E2B                     u4785:
  4694     0E2B  1003               	clrc
  4695     0E2C  0DC0               	rlf	??_scale,f
  4696     0E2D  3EFF               	addlw	-1
  4697     0E2E  1D03               	skipz
  4698     0E2F  2E2B               	goto	u4785
  4699     0E30  1003               	clrc
  4700     0E31  0D40               	rlf	??_scale,w
  4701     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4702     0E33  0084               	movwf	4
  4703     0E34  160A  158A  200A  120A  158A  	fcall	stringdir
  4704     0E39  00C1               	movwf	??_scale+1
  4705     0E3A  160A  158A  200A  120A  158A  	fcall	stringdir
  4706     0E3F  00C2               	movwf	??_scale+2
  4707     0E40  160A  158A  200A  120A  158A  	fcall	stringdir
  4708     0E45  00C3               	movwf	??_scale+3
  4709     0E46  160A  158A  200A  120A  158A  	fcall	stringdir
  4710     0E4B  00C4               	movwf	??_scale+4
  4711     0E4C  0844               	movf	??_scale+4,w
  4712     0E4D  00BF               	movwf	?_scale+3
  4713     0E4E  0843               	movf	??_scale+3,w
  4714     0E4F  00BE               	movwf	?_scale+2
  4715     0E50  0842               	movf	??_scale+2,w
  4716     0E51  00BD               	movwf	?_scale+1
  4717     0E52  0841               	movf	??_scale+1,w
  4718     0E53  00BC               	movwf	?_scale
  4719     0E54  2FFF               	goto	l343
  4720     0E55                     l3149:
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4723     0E55  084E               	movf	scale@scl,w
  4724     0E56  3A80               	xorlw	128
  4725     0E57  3E12               	addlw	-238
  4726     0E58  1C03               	skipc
  4727     0E59  2E5B               	goto	u4791
  4728     0E5A  2E5C               	goto	u4790
  4729     0E5B                     u4791:
  4730     0E5B  2F44               	goto	l3157
  4731     0E5C                     u4790:
  4732     0E5C                     l3151:
  4733                           
  4734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4735     0E5C  300A               	movlw	10
  4736     0E5D  00F0               	movwf	___awdiv@divisor
  4737     0E5E  3000               	movlw	0
  4738     0E5F  00F1               	movwf	___awdiv@divisor+1
  4739     0E60  084E               	movf	scale@scl,w
  4740     0E61  00FB               	movwf	___awmod@dividend
  4741     0E62  01FC               	clrf	___awmod@dividend+1
  4742     0E63  1BFB               	btfsc	___awmod@dividend,7
  4743     0E64  03FC               	decf	___awmod@dividend+1,f
  4744     0E65  3064               	movlw	100
  4745     0E66  00F9               	movwf	___awmod@divisor
  4746     0E67  3000               	movlw	0
  4747     0E68  00FA               	movwf	___awmod@divisor+1
  4748     0E69  160A  158A  23EF  120A  158A  	fcall	___awmod
  4749     0E6E  087A               	movf	?___awmod+1,w
  4750     0E6F  00F3               	movwf	___awdiv@dividend+1
  4751     0E70  0879               	movf	?___awmod,w
  4752     0E71  00F2               	movwf	___awdiv@dividend
  4753     0E72  120A  118A  2010  120A  158A  	fcall	___awdiv
  4754     0E77  0870               	movf	?___awdiv,w
  4755     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4756     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4757     0E7A  00C0               	movwf	??_scale
  4758     0E7B  3001               	movlw	1
  4759     0E7C                     u4805:
  4760     0E7C  1003               	clrc
  4761     0E7D  0DC0               	rlf	??_scale,f
  4762     0E7E  3EFF               	addlw	-1
  4763     0E7F  1D03               	skipz
  4764     0E80  2E7C               	goto	u4805
  4765     0E81  1003               	clrc
  4766     0E82  0D40               	rlf	??_scale,w
  4767     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4768     0E84  0084               	movwf	4
  4769     0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  4770     0E8A  00C1               	movwf	??_scale+1
  4771     0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  4772     0E90  00C2               	movwf	??_scale+2
  4773     0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  4774     0E96  00C3               	movwf	??_scale+3
  4775     0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  4776     0E9C  00C4               	movwf	??_scale+4
  4777     0E9D  0844               	movf	??_scale+4,w
  4778     0E9E  00A5               	movwf	___flmul@b+3
  4779     0E9F  0843               	movf	??_scale+3,w
  4780     0EA0  00A4               	movwf	___flmul@b+2
  4781     0EA1  0842               	movf	??_scale+2,w
  4782     0EA2  00A3               	movwf	___flmul@b+1
  4783     0EA3  0841               	movf	??_scale+1,w
  4784     0EA4  00A2               	movwf	___flmul@b
  4785     0EA5  3064               	movlw	100
  4786     0EA6  00F0               	movwf	___awdiv@divisor
  4787     0EA7  3000               	movlw	0
  4788     0EA8  00F1               	movwf	___awdiv@divisor+1
  4789     0EA9  084E               	movf	scale@scl,w
  4790     0EAA  00F2               	movwf	___awdiv@dividend
  4791     0EAB  01F3               	clrf	___awdiv@dividend+1
  4792     0EAC  1BF2               	btfsc	___awdiv@dividend,7
  4793     0EAD  03F3               	decf	___awdiv@dividend+1,f
  4794     0EAE  120A  118A  2010  120A  158A  	fcall	___awdiv
  4795     0EB3  0870               	movf	?___awdiv,w
  4796     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4797     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4798     0EB6  00C5               	movwf	??_scale+5
  4799     0EB7  3001               	movlw	1
  4800     0EB8                     u4815:
  4801     0EB8  1003               	clrc
  4802     0EB9  0DC5               	rlf	??_scale+5,f
  4803     0EBA  3EFF               	addlw	-1
  4804     0EBB  1D03               	skipz
  4805     0EBC  2EB8               	goto	u4815
  4806     0EBD  1003               	clrc
  4807     0EBE  0D45               	rlf	??_scale+5,w
  4808     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4809     0EC0  0084               	movwf	4
  4810     0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  4811     0EC6  00C6               	movwf	??_scale+6
  4812     0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  4813     0ECC  00C7               	movwf	??_scale+7
  4814     0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  4815     0ED2  00C8               	movwf	??_scale+8
  4816     0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  4817     0ED8  00C9               	movwf	??_scale+9
  4818     0ED9  0849               	movf	??_scale+9,w
  4819     0EDA  00A9               	movwf	___flmul@a+3
  4820     0EDB  0848               	movf	??_scale+8,w
  4821     0EDC  00A8               	movwf	___flmul@a+2
  4822     0EDD  0847               	movf	??_scale+7,w
  4823     0EDE  00A7               	movwf	___flmul@a+1
  4824     0EDF  0846               	movf	??_scale+6,w
  4825     0EE0  00A6               	movwf	___flmul@a
  4826     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4827     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4828     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4829     0EE8  0825               	movf	?___flmul+3,w
  4830     0EE9  00CD               	movwf	_scale$1300+3
  4831     0EEA  0824               	movf	?___flmul+2,w
  4832     0EEB  00CC               	movwf	_scale$1300+2
  4833     0EEC  0823               	movf	?___flmul+1,w
  4834     0EED  00CB               	movwf	_scale$1300+1
  4835     0EEE  0822               	movf	?___flmul,w
  4836     0EEF  00CA               	movwf	_scale$1300
  4837                           
  4838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4839     0EF0  300A               	movlw	10
  4840     0EF1  00F9               	movwf	___awmod@divisor
  4841     0EF2  3000               	movlw	0
  4842     0EF3  00FA               	movwf	___awmod@divisor+1
  4843     0EF4  084E               	movf	scale@scl,w
  4844     0EF5  00FB               	movwf	___awmod@dividend
  4845     0EF6  01FC               	clrf	___awmod@dividend+1
  4846     0EF7  1BFB               	btfsc	___awmod@dividend,7
  4847     0EF8  03FC               	decf	___awmod@dividend+1,f
  4848     0EF9  160A  158A  23EF  120A  158A  	fcall	___awmod
  4849     0EFE  0879               	movf	?___awmod,w
  4850     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4851     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4852     0F01  00C0               	movwf	??_scale
  4853     0F02  3001               	movlw	1
  4854     0F03                     u4825:
  4855     0F03  1003               	clrc
  4856     0F04  0DC0               	rlf	??_scale,f
  4857     0F05  3EFF               	addlw	-1
  4858     0F06  1D03               	skipz
  4859     0F07  2F03               	goto	u4825
  4860     0F08  1003               	clrc
  4861     0F09  0D40               	rlf	??_scale,w
  4862     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4863     0F0B  0084               	movwf	4
  4864     0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4865     0F11  00C1               	movwf	??_scale+1
  4866     0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  4867     0F17  00C2               	movwf	??_scale+2
  4868     0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  4869     0F1D  00C3               	movwf	??_scale+3
  4870     0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  4871     0F23  00C4               	movwf	??_scale+4
  4872     0F24  0844               	movf	??_scale+4,w
  4873     0F25  00A5               	movwf	___flmul@b+3
  4874     0F26  0843               	movf	??_scale+3,w
  4875     0F27  00A4               	movwf	___flmul@b+2
  4876     0F28  0842               	movf	??_scale+2,w
  4877     0F29  00A3               	movwf	___flmul@b+1
  4878     0F2A  0841               	movf	??_scale+1,w
  4879     0F2B  00A2               	movwf	___flmul@b
  4880     0F2C  084D               	movf	_scale$1300+3,w
  4881     0F2D  00A9               	movwf	___flmul@a+3
  4882     0F2E  084C               	movf	_scale$1300+2,w
  4883     0F2F  00A8               	movwf	___flmul@a+2
  4884     0F30  084B               	movf	_scale$1300+1,w
  4885     0F31  00A7               	movwf	___flmul@a+1
  4886     0F32  084A               	movf	_scale$1300,w
  4887     0F33  00A6               	movwf	___flmul@a
  4888     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4889     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4890     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4891     0F3B  0825               	movf	?___flmul+3,w
  4892     0F3C  00BF               	movwf	?_scale+3
  4893     0F3D  0824               	movf	?___flmul+2,w
  4894     0F3E  00BE               	movwf	?_scale+2
  4895     0F3F  0823               	movf	?___flmul+1,w
  4896     0F40  00BD               	movwf	?_scale+1
  4897     0F41  0822               	movf	?___flmul,w
  4898     0F42  00BC               	movwf	?_scale
  4899     0F43  2FFF               	goto	l343
  4900     0F44                     l3157:
  4901     0F44  084E               	movf	scale@scl,w
  4902     0F45  3A80               	xorlw	128
  4903     0F46  3E75               	addlw	-139
  4904     0F47  1C03               	skipc
  4905     0F48  2F4A               	goto	u4831
  4906     0F49  2F4B               	goto	u4830
  4907     0F4A                     u4831:
  4908     0F4A  2FD3               	goto	l3163
  4909     0F4B                     u4830:
  4910     0F4B                     l3159:
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4913     0F4B  300A               	movlw	10
  4914     0F4C  00F9               	movwf	___awmod@divisor
  4915     0F4D  3000               	movlw	0
  4916     0F4E  00FA               	movwf	___awmod@divisor+1
  4917     0F4F  084E               	movf	scale@scl,w
  4918     0F50  00FB               	movwf	___awmod@dividend
  4919     0F51  01FC               	clrf	___awmod@dividend+1
  4920     0F52  1BFB               	btfsc	___awmod@dividend,7
  4921     0F53  03FC               	decf	___awmod@dividend+1,f
  4922     0F54  160A  158A  23EF  120A  158A  	fcall	___awmod
  4923     0F59  0879               	movf	?___awmod,w
  4924     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4925     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4926     0F5C  00C0               	movwf	??_scale
  4927     0F5D  3001               	movlw	1
  4928     0F5E                     u4845:
  4929     0F5E  1003               	clrc
  4930     0F5F  0DC0               	rlf	??_scale,f
  4931     0F60  3EFF               	addlw	-1
  4932     0F61  1D03               	skipz
  4933     0F62  2F5E               	goto	u4845
  4934     0F63  1003               	clrc
  4935     0F64  0D40               	rlf	??_scale,w
  4936     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4937     0F66  0084               	movwf	4
  4938     0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  4939     0F6C  00C1               	movwf	??_scale+1
  4940     0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4941     0F72  00C2               	movwf	??_scale+2
  4942     0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  4943     0F78  00C3               	movwf	??_scale+3
  4944     0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  4945     0F7E  00C4               	movwf	??_scale+4
  4946     0F7F  0844               	movf	??_scale+4,w
  4947     0F80  00A5               	movwf	___flmul@b+3
  4948     0F81  0843               	movf	??_scale+3,w
  4949     0F82  00A4               	movwf	___flmul@b+2
  4950     0F83  0842               	movf	??_scale+2,w
  4951     0F84  00A3               	movwf	___flmul@b+1
  4952     0F85  0841               	movf	??_scale+1,w
  4953     0F86  00A2               	movwf	___flmul@b
  4954     0F87  300A               	movlw	10
  4955     0F88  00F0               	movwf	___awdiv@divisor
  4956     0F89  3000               	movlw	0
  4957     0F8A  00F1               	movwf	___awdiv@divisor+1
  4958     0F8B  084E               	movf	scale@scl,w
  4959     0F8C  00F2               	movwf	___awdiv@dividend
  4960     0F8D  01F3               	clrf	___awdiv@dividend+1
  4961     0F8E  1BF2               	btfsc	___awdiv@dividend,7
  4962     0F8F  03F3               	decf	___awdiv@dividend+1,f
  4963     0F90  120A  118A  2010  120A  158A  	fcall	___awdiv
  4964     0F95  0870               	movf	?___awdiv,w
  4965     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4966     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4967     0F98  00C5               	movwf	??_scale+5
  4968     0F99  3001               	movlw	1
  4969     0F9A                     u4855:
  4970     0F9A  1003               	clrc
  4971     0F9B  0DC5               	rlf	??_scale+5,f
  4972     0F9C  3EFF               	addlw	-1
  4973     0F9D  1D03               	skipz
  4974     0F9E  2F9A               	goto	u4855
  4975     0F9F  1003               	clrc
  4976     0FA0  0D45               	rlf	??_scale+5,w
  4977     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4978     0FA2  0084               	movwf	4
  4979     0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4980     0FA8  00C6               	movwf	??_scale+6
  4981     0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4982     0FAE  00C7               	movwf	??_scale+7
  4983     0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  4984     0FB4  00C8               	movwf	??_scale+8
  4985     0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  4986     0FBA  00C9               	movwf	??_scale+9
  4987     0FBB  0849               	movf	??_scale+9,w
  4988     0FBC  00A9               	movwf	___flmul@a+3
  4989     0FBD  0848               	movf	??_scale+8,w
  4990     0FBE  00A8               	movwf	___flmul@a+2
  4991     0FBF  0847               	movf	??_scale+7,w
  4992     0FC0  00A7               	movwf	___flmul@a+1
  4993     0FC1  0846               	movf	??_scale+6,w
  4994     0FC2  00A6               	movwf	___flmul@a
  4995     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4996     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4997     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4998     0FCA  0825               	movf	?___flmul+3,w
  4999     0FCB  00BF               	movwf	?_scale+3
  5000     0FCC  0824               	movf	?___flmul+2,w
  5001     0FCD  00BE               	movwf	?_scale+2
  5002     0FCE  0823               	movf	?___flmul+1,w
  5003     0FCF  00BD               	movwf	?_scale+1
  5004     0FD0  0822               	movf	?___flmul,w
  5005     0FD1  00BC               	movwf	?_scale
  5006     0FD2  2FFF               	goto	l343
  5007     0FD3                     l3163:
  5008                           
  5009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5010     0FD3  084E               	movf	scale@scl,w
  5011     0FD4  00C0               	movwf	??_scale
  5012     0FD5  3001               	movlw	1
  5013     0FD6                     u4865:
  5014     0FD6  1003               	clrc
  5015     0FD7  0DC0               	rlf	??_scale,f
  5016     0FD8  3EFF               	addlw	-1
  5017     0FD9  1D03               	skipz
  5018     0FDA  2FD6               	goto	u4865
  5019     0FDB  1003               	clrc
  5020     0FDC  0D40               	rlf	??_scale,w
  5021     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5022     0FDE  0084               	movwf	4
  5023     0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  5024     0FE4  00C1               	movwf	??_scale+1
  5025     0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  5026     0FEA  00C2               	movwf	??_scale+2
  5027     0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  5028     0FF0  00C3               	movwf	??_scale+3
  5029     0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  5030     0FF6  00C4               	movwf	??_scale+4
  5031     0FF7  0844               	movf	??_scale+4,w
  5032     0FF8  00BF               	movwf	?_scale+3
  5033     0FF9  0843               	movf	??_scale+3,w
  5034     0FFA  00BE               	movwf	?_scale+2
  5035     0FFB  0842               	movf	??_scale+2,w
  5036     0FFC  00BD               	movwf	?_scale+1
  5037     0FFD  0841               	movf	??_scale+1,w
  5038     0FFE  00BC               	movwf	?_scale
  5039     0FFF                     l343:
  5040     0FFF  0008               	return
  5041     1000                     __end_of_scale:
  5042                           
  5043                           	psect	text3
  5044     1BEF                     __ptext3:	
  5045 ;; *************** function ___awmod *****************
  5046 ;; Defined at:
  5047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  divisor         2    9[COMMON] int 
  5050 ;;  dividend        2   11[COMMON] int 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  sign            1    1[BANK0 ] unsigned char 
  5053 ;;  counter         1    0[BANK0 ] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  2    9[COMMON] int 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5063 ;;      Params:         4       0       0       0       0
  5064 ;;      Locals:         0       2       0       0       0
  5065 ;;      Temps:          1       0       0       0       0
  5066 ;;      Totals:         5       2       0       0       0
  5067 ;;Total ram usage:        7 bytes
  5068 ;; Hardware stack levels used: 1
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_main
  5073 ;;		_scale
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077     1BEF                     ___awmod:	
  5078                           ;psect for function ___awmod
  5079                           
  5080     1BEF                     l2669:	
  5081                           ;incstack = 0
  5082                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5083                           
  5084     1BEF  1283               	bcf	3,5	;RP0=0, select bank0
  5085     1BF0  1303               	bcf	3,6	;RP1=0, select bank0
  5086     1BF1  01A1               	clrf	___awmod@sign
  5087     1BF2                     l2671:
  5088     1BF2  1FFC               	btfss	___awmod@dividend+1,7
  5089     1BF3  2BF5               	goto	u3571
  5090     1BF4  2BF6               	goto	u3570
  5091     1BF5                     u3571:
  5092     1BF5  2BFD               	goto	l2677
  5093     1BF6                     u3570:
  5094     1BF6                     l2673:
  5095     1BF6  09FB               	comf	___awmod@dividend,f
  5096     1BF7  09FC               	comf	___awmod@dividend+1,f
  5097     1BF8  0AFB               	incf	___awmod@dividend,f
  5098     1BF9  1903               	skipnz
  5099     1BFA  0AFC               	incf	___awmod@dividend+1,f
  5100     1BFB                     l2675:
  5101     1BFB  01A1               	clrf	___awmod@sign
  5102     1BFC  0AA1               	incf	___awmod@sign,f
  5103     1BFD                     l2677:
  5104     1BFD  1FFA               	btfss	___awmod@divisor+1,7
  5105     1BFE  2C00               	goto	u3581
  5106     1BFF  2C01               	goto	u3580
  5107     1C00                     u3581:
  5108     1C00  2C06               	goto	l2681
  5109     1C01                     u3580:
  5110     1C01                     l2679:
  5111     1C01  09F9               	comf	___awmod@divisor,f
  5112     1C02  09FA               	comf	___awmod@divisor+1,f
  5113     1C03  0AF9               	incf	___awmod@divisor,f
  5114     1C04  1903               	skipnz
  5115     1C05  0AFA               	incf	___awmod@divisor+1,f
  5116     1C06                     l2681:
  5117     1C06  0879               	movf	___awmod@divisor,w
  5118     1C07  047A               	iorwf	___awmod@divisor+1,w
  5119     1C08  1903               	btfsc	3,2
  5120     1C09  2C0B               	goto	u3591
  5121     1C0A  2C0C               	goto	u3590
  5122     1C0B                     u3591:
  5123     1C0B  2C3B               	goto	l2699
  5124     1C0C                     u3590:
  5125     1C0C                     l2683:
  5126     1C0C  01A0               	clrf	___awmod@counter
  5127     1C0D  0AA0               	incf	___awmod@counter,f
  5128     1C0E  2C1A               	goto	l2689
  5129     1C0F                     l2685:
  5130     1C0F  3001               	movlw	1
  5131     1C10                     u3605:
  5132     1C10  1003               	clrc
  5133     1C11  0DF9               	rlf	___awmod@divisor,f
  5134     1C12  0DFA               	rlf	___awmod@divisor+1,f
  5135     1C13  3EFF               	addlw	-1
  5136     1C14  1D03               	skipz
  5137     1C15  2C10               	goto	u3605
  5138     1C16                     l2687:
  5139     1C16  3001               	movlw	1
  5140     1C17  00FD               	movwf	??___awmod
  5141     1C18  087D               	movf	??___awmod,w
  5142     1C19  07A0               	addwf	___awmod@counter,f
  5143     1C1A                     l2689:
  5144     1C1A  1FFA               	btfss	___awmod@divisor+1,7
  5145     1C1B  2C1D               	goto	u3611
  5146     1C1C  2C1E               	goto	u3610
  5147     1C1D                     u3611:
  5148     1C1D  2C0F               	goto	l2685
  5149     1C1E                     u3610:
  5150     1C1E                     l2691:
  5151     1C1E  087A               	movf	___awmod@divisor+1,w
  5152     1C1F  027C               	subwf	___awmod@dividend+1,w
  5153     1C20  1D03               	skipz
  5154     1C21  2C24               	goto	u3625
  5155     1C22  0879               	movf	___awmod@divisor,w
  5156     1C23  027B               	subwf	___awmod@dividend,w
  5157     1C24                     u3625:
  5158     1C24  1C03               	skipc
  5159     1C25  2C27               	goto	u3621
  5160     1C26  2C28               	goto	u3620
  5161     1C27                     u3621:
  5162     1C27  2C2E               	goto	l2695
  5163     1C28                     u3620:
  5164     1C28                     l2693:
  5165     1C28  0879               	movf	___awmod@divisor,w
  5166     1C29  02FB               	subwf	___awmod@dividend,f
  5167     1C2A  087A               	movf	___awmod@divisor+1,w
  5168     1C2B  1C03               	skipc
  5169     1C2C  03FC               	decf	___awmod@dividend+1,f
  5170     1C2D  02FC               	subwf	___awmod@dividend+1,f
  5171     1C2E                     l2695:
  5172     1C2E  3001               	movlw	1
  5173     1C2F                     u3635:
  5174     1C2F  1003               	clrc
  5175     1C30  0CFA               	rrf	___awmod@divisor+1,f
  5176     1C31  0CF9               	rrf	___awmod@divisor,f
  5177     1C32  3EFF               	addlw	-1
  5178     1C33  1D03               	skipz
  5179     1C34  2C2F               	goto	u3635
  5180     1C35                     l2697:
  5181     1C35  3001               	movlw	1
  5182     1C36  02A0               	subwf	___awmod@counter,f
  5183     1C37  1D03               	btfss	3,2
  5184     1C38  2C3A               	goto	u3641
  5185     1C39  2C3B               	goto	u3640
  5186     1C3A                     u3641:
  5187     1C3A  2C1E               	goto	l2691
  5188     1C3B                     u3640:
  5189     1C3B                     l2699:
  5190     1C3B  0821               	movf	___awmod@sign,w
  5191     1C3C  1903               	btfsc	3,2
  5192     1C3D  2C3F               	goto	u3651
  5193     1C3E  2C40               	goto	u3650
  5194     1C3F                     u3651:
  5195     1C3F  2C45               	goto	l2703
  5196     1C40                     u3650:
  5197     1C40                     l2701:
  5198     1C40  09FB               	comf	___awmod@dividend,f
  5199     1C41  09FC               	comf	___awmod@dividend+1,f
  5200     1C42  0AFB               	incf	___awmod@dividend,f
  5201     1C43  1903               	skipnz
  5202     1C44  0AFC               	incf	___awmod@dividend+1,f
  5203     1C45                     l2703:
  5204     1C45  087C               	movf	___awmod@dividend+1,w
  5205     1C46  00FA               	movwf	?___awmod+1
  5206     1C47  087B               	movf	___awmod@dividend,w
  5207     1C48  00F9               	movwf	?___awmod
  5208     1C49                     l588:
  5209     1C49  0008               	return
  5210     1C4A                     __end_of___awmod:
  5211                           
  5212                           	psect	text4
  5213     0010                     __ptext4:	
  5214 ;; *************** function ___awdiv *****************
  5215 ;; Defined at:
  5216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  divisor         2    0[COMMON] int 
  5219 ;;  dividend        2    2[COMMON] int 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  quotient        2    7[COMMON] int 
  5222 ;;  sign            1    6[COMMON] unsigned char 
  5223 ;;  counter         1    5[COMMON] unsigned char 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  2    0[COMMON] int 
  5226 ;; Registers used:
  5227 ;;		wreg, status,2, status,0
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5233 ;;      Params:         4       0       0       0       0
  5234 ;;      Locals:         4       0       0       0       0
  5235 ;;      Temps:          1       0       0       0       0
  5236 ;;      Totals:         9       0       0       0       0
  5237 ;;Total ram usage:        9 bytes
  5238 ;; Hardware stack levels used: 1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_main
  5243 ;;		_scale
  5244 ;;		_sprintf
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248     0010                     ___awdiv:	
  5249                           ;psect for function ___awdiv
  5250                           
  5251     0010                     l2625:	
  5252                           ;incstack = 0
  5253                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5254                           
  5255     0010  01F6               	clrf	___awdiv@sign
  5256     0011                     l2627:
  5257     0011  1FF1               	btfss	___awdiv@divisor+1,7
  5258     0012  2814               	goto	u3471
  5259     0013  2815               	goto	u3470
  5260     0014                     u3471:
  5261     0014  281C               	goto	l2633
  5262     0015                     u3470:
  5263     0015                     l2629:
  5264     0015  09F0               	comf	___awdiv@divisor,f
  5265     0016  09F1               	comf	___awdiv@divisor+1,f
  5266     0017  0AF0               	incf	___awdiv@divisor,f
  5267     0018  1903               	skipnz
  5268     0019  0AF1               	incf	___awdiv@divisor+1,f
  5269     001A                     l2631:
  5270     001A  01F6               	clrf	___awdiv@sign
  5271     001B  0AF6               	incf	___awdiv@sign,f
  5272     001C                     l2633:
  5273     001C  1FF3               	btfss	___awdiv@dividend+1,7
  5274     001D  281F               	goto	u3481
  5275     001E  2820               	goto	u3480
  5276     001F                     u3481:
  5277     001F  2829               	goto	l2639
  5278     0020                     u3480:
  5279     0020                     l2635:
  5280     0020  09F2               	comf	___awdiv@dividend,f
  5281     0021  09F3               	comf	___awdiv@dividend+1,f
  5282     0022  0AF2               	incf	___awdiv@dividend,f
  5283     0023  1903               	skipnz
  5284     0024  0AF3               	incf	___awdiv@dividend+1,f
  5285     0025                     l2637:
  5286     0025  3001               	movlw	1
  5287     0026  00F4               	movwf	??___awdiv
  5288     0027  0874               	movf	??___awdiv,w
  5289     0028  06F6               	xorwf	___awdiv@sign,f
  5290     0029                     l2639:
  5291     0029  01F7               	clrf	___awdiv@quotient
  5292     002A  01F8               	clrf	___awdiv@quotient+1
  5293     002B                     l2641:
  5294     002B  0870               	movf	___awdiv@divisor,w
  5295     002C  0471               	iorwf	___awdiv@divisor+1,w
  5296     002D  1903               	btfsc	3,2
  5297     002E  2830               	goto	u3491
  5298     002F  2831               	goto	u3490
  5299     0030                     u3491:
  5300     0030  2868               	goto	l2661
  5301     0031                     u3490:
  5302     0031                     l2643:
  5303     0031  01F5               	clrf	___awdiv@counter
  5304     0032  0AF5               	incf	___awdiv@counter,f
  5305     0033  283F               	goto	l2649
  5306     0034                     l2645:
  5307     0034  3001               	movlw	1
  5308     0035                     u3505:
  5309     0035  1003               	clrc
  5310     0036  0DF0               	rlf	___awdiv@divisor,f
  5311     0037  0DF1               	rlf	___awdiv@divisor+1,f
  5312     0038  3EFF               	addlw	-1
  5313     0039  1D03               	skipz
  5314     003A  2835               	goto	u3505
  5315     003B                     l2647:
  5316     003B  3001               	movlw	1
  5317     003C  00F4               	movwf	??___awdiv
  5318     003D  0874               	movf	??___awdiv,w
  5319     003E  07F5               	addwf	___awdiv@counter,f
  5320     003F                     l2649:
  5321     003F  1FF1               	btfss	___awdiv@divisor+1,7
  5322     0040  2842               	goto	u3511
  5323     0041  2843               	goto	u3510
  5324     0042                     u3511:
  5325     0042  2834               	goto	l2645
  5326     0043                     u3510:
  5327     0043                     l2651:
  5328     0043  3001               	movlw	1
  5329     0044                     u3525:
  5330     0044  1003               	clrc
  5331     0045  0DF7               	rlf	___awdiv@quotient,f
  5332     0046  0DF8               	rlf	___awdiv@quotient+1,f
  5333     0047  3EFF               	addlw	-1
  5334     0048  1D03               	skipz
  5335     0049  2844               	goto	u3525
  5336     004A  0871               	movf	___awdiv@divisor+1,w
  5337     004B  0273               	subwf	___awdiv@dividend+1,w
  5338     004C  1D03               	skipz
  5339     004D  2850               	goto	u3535
  5340     004E  0870               	movf	___awdiv@divisor,w
  5341     004F  0272               	subwf	___awdiv@dividend,w
  5342     0050                     u3535:
  5343     0050  1C03               	skipc
  5344     0051  2853               	goto	u3531
  5345     0052  2854               	goto	u3530
  5346     0053                     u3531:
  5347     0053  285B               	goto	l2657
  5348     0054                     u3530:
  5349     0054                     l2653:
  5350     0054  0870               	movf	___awdiv@divisor,w
  5351     0055  02F2               	subwf	___awdiv@dividend,f
  5352     0056  0871               	movf	___awdiv@divisor+1,w
  5353     0057  1C03               	skipc
  5354     0058  03F3               	decf	___awdiv@dividend+1,f
  5355     0059  02F3               	subwf	___awdiv@dividend+1,f
  5356     005A                     l2655:
  5357     005A  1477               	bsf	___awdiv@quotient,0
  5358     005B                     l2657:
  5359     005B  3001               	movlw	1
  5360     005C                     u3545:
  5361     005C  1003               	clrc
  5362     005D  0CF1               	rrf	___awdiv@divisor+1,f
  5363     005E  0CF0               	rrf	___awdiv@divisor,f
  5364     005F  3EFF               	addlw	-1
  5365     0060  1D03               	skipz
  5366     0061  285C               	goto	u3545
  5367     0062                     l2659:
  5368     0062  3001               	movlw	1
  5369     0063  02F5               	subwf	___awdiv@counter,f
  5370     0064  1D03               	btfss	3,2
  5371     0065  2867               	goto	u3551
  5372     0066  2868               	goto	u3550
  5373     0067                     u3551:
  5374     0067  2843               	goto	l2651
  5375     0068                     u3550:
  5376     0068                     l2661:
  5377     0068  0876               	movf	___awdiv@sign,w
  5378     0069  1903               	btfsc	3,2
  5379     006A  286C               	goto	u3561
  5380     006B  286D               	goto	u3560
  5381     006C                     u3561:
  5382     006C  2872               	goto	l2665
  5383     006D                     u3560:
  5384     006D                     l2663:
  5385     006D  09F7               	comf	___awdiv@quotient,f
  5386     006E  09F8               	comf	___awdiv@quotient+1,f
  5387     006F  0AF7               	incf	___awdiv@quotient,f
  5388     0070  1903               	skipnz
  5389     0071  0AF8               	incf	___awdiv@quotient+1,f
  5390     0072                     l2665:
  5391     0072  0878               	movf	___awdiv@quotient+1,w
  5392     0073  00F1               	movwf	?___awdiv+1
  5393     0074  0877               	movf	___awdiv@quotient,w
  5394     0075  00F0               	movwf	?___awdiv
  5395     0076                     l575:
  5396     0076  0008               	return
  5397     0077                     __end_of___awdiv:
  5398                           
  5399                           	psect	text5
  5400     18F8                     __ptext5:	
  5401 ;; *************** function _isdigit *****************
  5402 ;; Defined at:
  5403 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  c               1    wreg     unsigned char 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  c               1    1[COMMON] unsigned char 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;		None               void
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5417 ;;      Params:         0       0       0       0       0
  5418 ;;      Locals:         2       0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0
  5420 ;;      Totals:         2       0       0       0       0
  5421 ;;Total ram usage:        2 bytes
  5422 ;; Hardware stack levels used: 1
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_sprintf
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430     18F8                     _isdigit:	
  5431                           ;psect for function _isdigit
  5432                           
  5433                           
  5434                           ;incstack = 0
  5435                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5436                           ;isdigit@c stored from wreg
  5437     18F8  00F1               	movwf	isdigit@c
  5438     18F9                     l3167:
  5439     18F9  01F0               	clrf	_isdigit$1095
  5440     18FA                     l3169:
  5441     18FA  303A               	movlw	58
  5442     18FB  0271               	subwf	isdigit@c,w
  5443     18FC  1803               	skipnc
  5444     18FD  28FF               	goto	u4871
  5445     18FE  2900               	goto	u4870
  5446     18FF                     u4871:
  5447     18FF  2908               	goto	l3175
  5448     1900                     u4870:
  5449     1900                     l3171:
  5450     1900  3030               	movlw	48
  5451     1901  0271               	subwf	isdigit@c,w
  5452     1902  1C03               	skipc
  5453     1903  2905               	goto	u4881
  5454     1904  2906               	goto	u4880
  5455     1905                     u4881:
  5456     1905  2908               	goto	l3175
  5457     1906                     u4880:
  5458     1906                     l3173:
  5459     1906  01F0               	clrf	_isdigit$1095
  5460     1907  0AF0               	incf	_isdigit$1095,f
  5461     1908                     l3175:
  5462     1908  0C70               	rrf	_isdigit$1095,w
  5463     1909                     l909:
  5464     1909  0008               	return
  5465     190A                     __end_of_isdigit:
  5466                           
  5467                           	psect	text6
  5468     113C                     __ptext6:	
  5469 ;; *************** function _fround *****************
  5470 ;; Defined at:
  5471 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  prec            1    wreg     unsigned char 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  prec            1   47[BANK0 ] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  4   28[BANK0 ] unsigned char 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5485 ;;      Params:         0       4       0       0       0
  5486 ;;      Locals:         0       9       0       0       0
  5487 ;;      Temps:          0       7       0       0       0
  5488 ;;      Totals:         0      20       0       0       0
  5489 ;;Total ram usage:       20 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; Hardware stack levels required when called: 2
  5492 ;; This function calls:
  5493 ;;		___flmul
  5494 ;;		___lwdiv
  5495 ;;		___lwmod
  5496 ;; This function is called by:
  5497 ;;		_sprintf
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501     113C                     _fround:	
  5502                           ;psect for function _fround
  5503                           
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5507                           ;fround@prec stored from wreg
  5508     113C  1283               	bcf	3,5	;RP0=0, select bank0
  5509     113D  1303               	bcf	3,6	;RP1=0, select bank0
  5510     113E  00CF               	movwf	fround@prec
  5511     113F                     l3109:
  5512                           
  5513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5514     113F  306E               	movlw	110
  5515     1140  024F               	subwf	fround@prec,w
  5516     1141  1C03               	skipc
  5517     1142  2944               	goto	u4621
  5518     1143  2945               	goto	u4620
  5519     1144                     u4621:
  5520     1144  2A52               	goto	l3117
  5521     1145                     u4620:
  5522     1145                     l3111:
  5523                           
  5524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5525     1145  303F               	movlw	63
  5526     1146  00A5               	movwf	___flmul@b+3
  5527     1147  3000               	movlw	0
  5528     1148  00A4               	movwf	___flmul@b+2
  5529     1149  3000               	movlw	0
  5530     114A  00A3               	movwf	___flmul@b+1
  5531     114B  3000               	movlw	0
  5532     114C  00A2               	movwf	___flmul@b
  5533     114D  3064               	movlw	100
  5534     114E  00F6               	movwf	___lwdiv@divisor
  5535     114F  3000               	movlw	0
  5536     1150  00F7               	movwf	___lwdiv@divisor+1
  5537     1151  084F               	movf	fround@prec,w
  5538     1152  00C0               	movwf	??_fround
  5539     1153  01C1               	clrf	??_fround+1
  5540     1154  0840               	movf	??_fround,w
  5541     1155  00F8               	movwf	___lwdiv@dividend
  5542     1156  0841               	movf	??_fround+1,w
  5543     1157  00F9               	movwf	___lwdiv@dividend+1
  5544     1158  160A  158A  2307  160A  118A  	fcall	___lwdiv
  5545     115D  0876               	movf	?___lwdiv,w
  5546     115E  1283               	bcf	3,5	;RP0=0, select bank0
  5547     115F  1303               	bcf	3,6	;RP1=0, select bank0
  5548     1160  00C2               	movwf	??_fround+2
  5549     1161  3001               	movlw	1
  5550     1162                     u4635:
  5551     1162  1003               	clrc
  5552     1163  0DC2               	rlf	??_fround+2,f
  5553     1164  3EFF               	addlw	-1
  5554     1165  1D03               	skipz
  5555     1166  2962               	goto	u4635
  5556     1167  1003               	clrc
  5557     1168  0D42               	rlf	??_fround+2,w
  5558     1169  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5559     116A  0084               	movwf	4
  5560     116B  160A  158A  200A  160A  118A  	fcall	stringdir
  5561     1170  00C3               	movwf	??_fround+3
  5562     1171  160A  158A  200A  160A  118A  	fcall	stringdir
  5563     1176  00C4               	movwf	??_fround+4
  5564     1177  160A  158A  200A  160A  118A  	fcall	stringdir
  5565     117C  00C5               	movwf	??_fround+5
  5566     117D  160A  158A  200A  160A  118A  	fcall	stringdir
  5567     1182  00C6               	movwf	??_fround+6
  5568     1183  0846               	movf	??_fround+6,w
  5569     1184  00A9               	movwf	___flmul@a+3
  5570     1185  0845               	movf	??_fround+5,w
  5571     1186  00A8               	movwf	___flmul@a+2
  5572     1187  0844               	movf	??_fround+4,w
  5573     1188  00A7               	movwf	___flmul@a+1
  5574     1189  0843               	movf	??_fround+3,w
  5575     118A  00A6               	movwf	___flmul@a
  5576     118B  120A  158A  215C  160A  118A  	fcall	___flmul
  5577     1190  1283               	bcf	3,5	;RP0=0, select bank0
  5578     1191  1303               	bcf	3,6	;RP1=0, select bank0
  5579     1192  0825               	movf	?___flmul+3,w
  5580     1193  00CE               	movwf	_fround$1298+3
  5581     1194  0824               	movf	?___flmul+2,w
  5582     1195  00CD               	movwf	_fround$1298+2
  5583     1196  0823               	movf	?___flmul+1,w
  5584     1197  00CC               	movwf	_fround$1298+1
  5585     1198  0822               	movf	?___flmul,w
  5586     1199  00CB               	movwf	_fround$1298
  5587                           
  5588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5589     119A  300A               	movlw	10
  5590     119B  00F6               	movwf	___lwdiv@divisor
  5591     119C  3000               	movlw	0
  5592     119D  00F7               	movwf	___lwdiv@divisor+1
  5593     119E  084F               	movf	fround@prec,w
  5594     119F  00C0               	movwf	??_fround
  5595     11A0  01C1               	clrf	??_fround+1
  5596     11A1  0840               	movf	??_fround,w
  5597     11A2  00F2               	movwf	___lwmod@dividend
  5598     11A3  0841               	movf	??_fround+1,w
  5599     11A4  00F3               	movwf	___lwmod@dividend+1
  5600     11A5  3064               	movlw	100
  5601     11A6  00F0               	movwf	___lwmod@divisor
  5602     11A7  3000               	movlw	0
  5603     11A8  00F1               	movwf	___lwmod@divisor+1
  5604     11A9  160A  158A  220B  160A  118A  	fcall	___lwmod
  5605     11AE  0871               	movf	?___lwmod+1,w
  5606     11AF  00F9               	movwf	___lwdiv@dividend+1
  5607     11B0  0870               	movf	?___lwmod,w
  5608     11B1  00F8               	movwf	___lwdiv@dividend
  5609     11B2  160A  158A  2307  160A  118A  	fcall	___lwdiv
  5610     11B7  0876               	movf	?___lwdiv,w
  5611     11B8  1283               	bcf	3,5	;RP0=0, select bank0
  5612     11B9  1303               	bcf	3,6	;RP1=0, select bank0
  5613     11BA  00C2               	movwf	??_fround+2
  5614     11BB  3001               	movlw	1
  5615     11BC                     u4645:
  5616     11BC  1003               	clrc
  5617     11BD  0DC2               	rlf	??_fround+2,f
  5618     11BE  3EFF               	addlw	-1
  5619     11BF  1D03               	skipz
  5620     11C0  29BC               	goto	u4645
  5621     11C1  1003               	clrc
  5622     11C2  0D42               	rlf	??_fround+2,w
  5623     11C3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5624     11C4  0084               	movwf	4
  5625     11C5  160A  158A  200A  160A  118A  	fcall	stringdir
  5626     11CA  00C3               	movwf	??_fround+3
  5627     11CB  160A  158A  200A  160A  118A  	fcall	stringdir
  5628     11D0  00C4               	movwf	??_fround+4
  5629     11D1  160A  158A  200A  160A  118A  	fcall	stringdir
  5630     11D6  00C5               	movwf	??_fround+5
  5631     11D7  160A  158A  200A  160A  118A  	fcall	stringdir
  5632     11DC  00C6               	movwf	??_fround+6
  5633     11DD  0846               	movf	??_fround+6,w
  5634     11DE  00A5               	movwf	___flmul@b+3
  5635     11DF  0845               	movf	??_fround+5,w
  5636     11E0  00A4               	movwf	___flmul@b+2
  5637     11E1  0844               	movf	??_fround+4,w
  5638     11E2  00A3               	movwf	___flmul@b+1
  5639     11E3  0843               	movf	??_fround+3,w
  5640     11E4  00A2               	movwf	___flmul@b
  5641     11E5  084E               	movf	_fround$1298+3,w
  5642     11E6  00A9               	movwf	___flmul@a+3
  5643     11E7  084D               	movf	_fround$1298+2,w
  5644     11E8  00A8               	movwf	___flmul@a+2
  5645     11E9  084C               	movf	_fround$1298+1,w
  5646     11EA  00A7               	movwf	___flmul@a+1
  5647     11EB  084B               	movf	_fround$1298,w
  5648     11EC  00A6               	movwf	___flmul@a
  5649     11ED  120A  158A  215C  160A  118A  	fcall	___flmul
  5650     11F2  1283               	bcf	3,5	;RP0=0, select bank0
  5651     11F3  1303               	bcf	3,6	;RP1=0, select bank0
  5652     11F4  0825               	movf	?___flmul+3,w
  5653     11F5  00CA               	movwf	_fround$1299+3
  5654     11F6  0824               	movf	?___flmul+2,w
  5655     11F7  00C9               	movwf	_fround$1299+2
  5656     11F8  0823               	movf	?___flmul+1,w
  5657     11F9  00C8               	movwf	_fround$1299+1
  5658     11FA  0822               	movf	?___flmul,w
  5659     11FB  00C7               	movwf	_fround$1299
  5660                           
  5661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5662     11FC  300A               	movlw	10
  5663     11FD  00F0               	movwf	___lwmod@divisor
  5664     11FE  3000               	movlw	0
  5665     11FF  00F1               	movwf	___lwmod@divisor+1
  5666     1200  084F               	movf	fround@prec,w
  5667     1201  00C0               	movwf	??_fround
  5668     1202  01C1               	clrf	??_fround+1
  5669     1203  0840               	movf	??_fround,w
  5670     1204  00F2               	movwf	___lwmod@dividend
  5671     1205  0841               	movf	??_fround+1,w
  5672     1206  00F3               	movwf	___lwmod@dividend+1
  5673     1207  160A  158A  220B  160A  118A  	fcall	___lwmod
  5674     120C  0870               	movf	?___lwmod,w
  5675     120D  1283               	bcf	3,5	;RP0=0, select bank0
  5676     120E  1303               	bcf	3,6	;RP1=0, select bank0
  5677     120F  00C2               	movwf	??_fround+2
  5678     1210  3001               	movlw	1
  5679     1211                     u4655:
  5680     1211  1003               	clrc
  5681     1212  0DC2               	rlf	??_fround+2,f
  5682     1213  3EFF               	addlw	-1
  5683     1214  1D03               	skipz
  5684     1215  2A11               	goto	u4655
  5685     1216  1003               	clrc
  5686     1217  0D42               	rlf	??_fround+2,w
  5687     1218  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5688     1219  0084               	movwf	4
  5689     121A  160A  158A  200A  160A  118A  	fcall	stringdir
  5690     121F  00C3               	movwf	??_fround+3
  5691     1220  160A  158A  200A  160A  118A  	fcall	stringdir
  5692     1225  00C4               	movwf	??_fround+4
  5693     1226  160A  158A  200A  160A  118A  	fcall	stringdir
  5694     122B  00C5               	movwf	??_fround+5
  5695     122C  160A  158A  200A  160A  118A  	fcall	stringdir
  5696     1231  00C6               	movwf	??_fround+6
  5697     1232  0846               	movf	??_fround+6,w
  5698     1233  00A5               	movwf	___flmul@b+3
  5699     1234  0845               	movf	??_fround+5,w
  5700     1235  00A4               	movwf	___flmul@b+2
  5701     1236  0844               	movf	??_fround+4,w
  5702     1237  00A3               	movwf	___flmul@b+1
  5703     1238  0843               	movf	??_fround+3,w
  5704     1239  00A2               	movwf	___flmul@b
  5705     123A  084A               	movf	_fround$1299+3,w
  5706     123B  00A9               	movwf	___flmul@a+3
  5707     123C  0849               	movf	_fround$1299+2,w
  5708     123D  00A8               	movwf	___flmul@a+2
  5709     123E  0848               	movf	_fround$1299+1,w
  5710     123F  00A7               	movwf	___flmul@a+1
  5711     1240  0847               	movf	_fround$1299,w
  5712     1241  00A6               	movwf	___flmul@a
  5713     1242  120A  158A  215C  160A  118A  	fcall	___flmul
  5714     1247  1283               	bcf	3,5	;RP0=0, select bank0
  5715     1248  1303               	bcf	3,6	;RP1=0, select bank0
  5716     1249  0825               	movf	?___flmul+3,w
  5717     124A  00BF               	movwf	?_fround+3
  5718     124B  0824               	movf	?___flmul+2,w
  5719     124C  00BE               	movwf	?_fround+2
  5720     124D  0823               	movf	?___flmul+1,w
  5721     124E  00BD               	movwf	?_fround+1
  5722     124F  0822               	movf	?___flmul,w
  5723     1250  00BC               	movwf	?_fround
  5724     1251  2B46               	goto	l336
  5725     1252                     l3117:
  5726     1252  300B               	movlw	11
  5727     1253  024F               	subwf	fround@prec,w
  5728     1254  1C03               	skipc
  5729     1255  2A57               	goto	u4661
  5730     1256  2A58               	goto	u4660
  5731     1257                     u4661:
  5732     1257  2B03               	goto	l3123
  5733     1258                     u4660:
  5734     1258                     l3119:
  5735                           
  5736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5737     1258  303F               	movlw	63
  5738     1259  00A5               	movwf	___flmul@b+3
  5739     125A  3000               	movlw	0
  5740     125B  00A4               	movwf	___flmul@b+2
  5741     125C  3000               	movlw	0
  5742     125D  00A3               	movwf	___flmul@b+1
  5743     125E  3000               	movlw	0
  5744     125F  00A2               	movwf	___flmul@b
  5745     1260  300A               	movlw	10
  5746     1261  00F6               	movwf	___lwdiv@divisor
  5747     1262  3000               	movlw	0
  5748     1263  00F7               	movwf	___lwdiv@divisor+1
  5749     1264  084F               	movf	fround@prec,w
  5750     1265  00C0               	movwf	??_fround
  5751     1266  01C1               	clrf	??_fround+1
  5752     1267  0840               	movf	??_fround,w
  5753     1268  00F8               	movwf	___lwdiv@dividend
  5754     1269  0841               	movf	??_fround+1,w
  5755     126A  00F9               	movwf	___lwdiv@dividend+1
  5756     126B  160A  158A  2307  160A  118A  	fcall	___lwdiv
  5757     1270  0876               	movf	?___lwdiv,w
  5758     1271  1283               	bcf	3,5	;RP0=0, select bank0
  5759     1272  1303               	bcf	3,6	;RP1=0, select bank0
  5760     1273  00C2               	movwf	??_fround+2
  5761     1274  3001               	movlw	1
  5762     1275                     u4675:
  5763     1275  1003               	clrc
  5764     1276  0DC2               	rlf	??_fround+2,f
  5765     1277  3EFF               	addlw	-1
  5766     1278  1D03               	skipz
  5767     1279  2A75               	goto	u4675
  5768     127A  1003               	clrc
  5769     127B  0D42               	rlf	??_fround+2,w
  5770     127C  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5771     127D  0084               	movwf	4
  5772     127E  160A  158A  200A  160A  118A  	fcall	stringdir
  5773     1283  00C3               	movwf	??_fround+3
  5774     1284  160A  158A  200A  160A  118A  	fcall	stringdir
  5775     1289  00C4               	movwf	??_fround+4
  5776     128A  160A  158A  200A  160A  118A  	fcall	stringdir
  5777     128F  00C5               	movwf	??_fround+5
  5778     1290  160A  158A  200A  160A  118A  	fcall	stringdir
  5779     1295  00C6               	movwf	??_fround+6
  5780     1296  0846               	movf	??_fround+6,w
  5781     1297  00A9               	movwf	___flmul@a+3
  5782     1298  0845               	movf	??_fround+5,w
  5783     1299  00A8               	movwf	___flmul@a+2
  5784     129A  0844               	movf	??_fround+4,w
  5785     129B  00A7               	movwf	___flmul@a+1
  5786     129C  0843               	movf	??_fround+3,w
  5787     129D  00A6               	movwf	___flmul@a
  5788     129E  120A  158A  215C  160A  118A  	fcall	___flmul
  5789     12A3  1283               	bcf	3,5	;RP0=0, select bank0
  5790     12A4  1303               	bcf	3,6	;RP1=0, select bank0
  5791     12A5  0825               	movf	?___flmul+3,w
  5792     12A6  00CE               	movwf	_fround$1298+3
  5793     12A7  0824               	movf	?___flmul+2,w
  5794     12A8  00CD               	movwf	_fround$1298+2
  5795     12A9  0823               	movf	?___flmul+1,w
  5796     12AA  00CC               	movwf	_fround$1298+1
  5797     12AB  0822               	movf	?___flmul,w
  5798     12AC  00CB               	movwf	_fround$1298
  5799                           
  5800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5801     12AD  300A               	movlw	10
  5802     12AE  00F0               	movwf	___lwmod@divisor
  5803     12AF  3000               	movlw	0
  5804     12B0  00F1               	movwf	___lwmod@divisor+1
  5805     12B1  084F               	movf	fround@prec,w
  5806     12B2  00C0               	movwf	??_fround
  5807     12B3  01C1               	clrf	??_fround+1
  5808     12B4  0840               	movf	??_fround,w
  5809     12B5  00F2               	movwf	___lwmod@dividend
  5810     12B6  0841               	movf	??_fround+1,w
  5811     12B7  00F3               	movwf	___lwmod@dividend+1
  5812     12B8  160A  158A  220B  160A  118A  	fcall	___lwmod
  5813     12BD  0870               	movf	?___lwmod,w
  5814     12BE  1283               	bcf	3,5	;RP0=0, select bank0
  5815     12BF  1303               	bcf	3,6	;RP1=0, select bank0
  5816     12C0  00C2               	movwf	??_fround+2
  5817     12C1  3001               	movlw	1
  5818     12C2                     u4685:
  5819     12C2  1003               	clrc
  5820     12C3  0DC2               	rlf	??_fround+2,f
  5821     12C4  3EFF               	addlw	-1
  5822     12C5  1D03               	skipz
  5823     12C6  2AC2               	goto	u4685
  5824     12C7  1003               	clrc
  5825     12C8  0D42               	rlf	??_fround+2,w
  5826     12C9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5827     12CA  0084               	movwf	4
  5828     12CB  160A  158A  200A  160A  118A  	fcall	stringdir
  5829     12D0  00C3               	movwf	??_fround+3
  5830     12D1  160A  158A  200A  160A  118A  	fcall	stringdir
  5831     12D6  00C4               	movwf	??_fround+4
  5832     12D7  160A  158A  200A  160A  118A  	fcall	stringdir
  5833     12DC  00C5               	movwf	??_fround+5
  5834     12DD  160A  158A  200A  160A  118A  	fcall	stringdir
  5835     12E2  00C6               	movwf	??_fround+6
  5836     12E3  0846               	movf	??_fround+6,w
  5837     12E4  00A5               	movwf	___flmul@b+3
  5838     12E5  0845               	movf	??_fround+5,w
  5839     12E6  00A4               	movwf	___flmul@b+2
  5840     12E7  0844               	movf	??_fround+4,w
  5841     12E8  00A3               	movwf	___flmul@b+1
  5842     12E9  0843               	movf	??_fround+3,w
  5843     12EA  00A2               	movwf	___flmul@b
  5844     12EB  084E               	movf	_fround$1298+3,w
  5845     12EC  00A9               	movwf	___flmul@a+3
  5846     12ED  084D               	movf	_fround$1298+2,w
  5847     12EE  00A8               	movwf	___flmul@a+2
  5848     12EF  084C               	movf	_fround$1298+1,w
  5849     12F0  00A7               	movwf	___flmul@a+1
  5850     12F1  084B               	movf	_fround$1298,w
  5851     12F2  00A6               	movwf	___flmul@a
  5852     12F3  120A  158A  215C  160A  118A  	fcall	___flmul
  5853     12F8  1283               	bcf	3,5	;RP0=0, select bank0
  5854     12F9  1303               	bcf	3,6	;RP1=0, select bank0
  5855     12FA  0825               	movf	?___flmul+3,w
  5856     12FB  00BF               	movwf	?_fround+3
  5857     12FC  0824               	movf	?___flmul+2,w
  5858     12FD  00BE               	movwf	?_fround+2
  5859     12FE  0823               	movf	?___flmul+1,w
  5860     12FF  00BD               	movwf	?_fround+1
  5861     1300  0822               	movf	?___flmul,w
  5862     1301  00BC               	movwf	?_fround
  5863     1302  2B46               	goto	l336
  5864     1303                     l3123:
  5865                           
  5866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5867     1303  303F               	movlw	63
  5868     1304  00A5               	movwf	___flmul@b+3
  5869     1305  3000               	movlw	0
  5870     1306  00A4               	movwf	___flmul@b+2
  5871     1307  3000               	movlw	0
  5872     1308  00A3               	movwf	___flmul@b+1
  5873     1309  3000               	movlw	0
  5874     130A  00A2               	movwf	___flmul@b
  5875     130B  084F               	movf	fround@prec,w
  5876     130C  00C0               	movwf	??_fround
  5877     130D  3001               	movlw	1
  5878     130E                     u4695:
  5879     130E  1003               	clrc
  5880     130F  0DC0               	rlf	??_fround,f
  5881     1310  3EFF               	addlw	-1
  5882     1311  1D03               	skipz
  5883     1312  2B0E               	goto	u4695
  5884     1313  1003               	clrc
  5885     1314  0D40               	rlf	??_fround,w
  5886     1315  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5887     1316  0084               	movwf	4
  5888     1317  160A  158A  200A  160A  118A  	fcall	stringdir
  5889     131C  00C1               	movwf	??_fround+1
  5890     131D  160A  158A  200A  160A  118A  	fcall	stringdir
  5891     1322  00C2               	movwf	??_fround+2
  5892     1323  160A  158A  200A  160A  118A  	fcall	stringdir
  5893     1328  00C3               	movwf	??_fround+3
  5894     1329  160A  158A  200A  160A  118A  	fcall	stringdir
  5895     132E  00C4               	movwf	??_fround+4
  5896     132F  0844               	movf	??_fround+4,w
  5897     1330  00A9               	movwf	___flmul@a+3
  5898     1331  0843               	movf	??_fround+3,w
  5899     1332  00A8               	movwf	___flmul@a+2
  5900     1333  0842               	movf	??_fround+2,w
  5901     1334  00A7               	movwf	___flmul@a+1
  5902     1335  0841               	movf	??_fround+1,w
  5903     1336  00A6               	movwf	___flmul@a
  5904     1337  120A  158A  215C  160A  118A  	fcall	___flmul
  5905     133C  1283               	bcf	3,5	;RP0=0, select bank0
  5906     133D  1303               	bcf	3,6	;RP1=0, select bank0
  5907     133E  0825               	movf	?___flmul+3,w
  5908     133F  00BF               	movwf	?_fround+3
  5909     1340  0824               	movf	?___flmul+2,w
  5910     1341  00BE               	movwf	?_fround+2
  5911     1342  0823               	movf	?___flmul+1,w
  5912     1343  00BD               	movwf	?_fround+1
  5913     1344  0822               	movf	?___flmul,w
  5914     1345  00BC               	movwf	?_fround
  5915     1346                     l336:
  5916     1346  0008               	return
  5917     1347                     __end_of_fround:
  5918                           
  5919                           	psect	text7
  5920     1A0B                     __ptext7:	
  5921 ;; *************** function ___lwmod *****************
  5922 ;; Defined at:
  5923 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  divisor         2    0[COMMON] unsigned int 
  5926 ;;  dividend        2    2[COMMON] unsigned int 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  counter         1    5[COMMON] unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  2    0[COMMON] unsigned int 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5938 ;;      Params:         4       0       0       0       0
  5939 ;;      Locals:         1       0       0       0       0
  5940 ;;      Temps:          1       0       0       0       0
  5941 ;;      Totals:         6       0       0       0       0
  5942 ;;Total ram usage:        6 bytes
  5943 ;; Hardware stack levels used: 1
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_fround
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951     1A0B                     ___lwmod:	
  5952                           ;psect for function ___lwmod
  5953                           
  5954     1A0B                     l2733:	
  5955                           ;incstack = 0
  5956                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5957                           
  5958     1A0B  0870               	movf	___lwmod@divisor,w
  5959     1A0C  0471               	iorwf	___lwmod@divisor+1,w
  5960     1A0D  1903               	btfsc	3,2
  5961     1A0E  2A10               	goto	u3731
  5962     1A0F  2A11               	goto	u3730
  5963     1A10                     u3731:
  5964     1A10  2A40               	goto	l2751
  5965     1A11                     u3730:
  5966     1A11                     l2735:
  5967     1A11  01F5               	clrf	___lwmod@counter
  5968     1A12  0AF5               	incf	___lwmod@counter,f
  5969     1A13  2A1F               	goto	l2741
  5970     1A14                     l2737:
  5971     1A14  3001               	movlw	1
  5972     1A15                     u3745:
  5973     1A15  1003               	clrc
  5974     1A16  0DF0               	rlf	___lwmod@divisor,f
  5975     1A17  0DF1               	rlf	___lwmod@divisor+1,f
  5976     1A18  3EFF               	addlw	-1
  5977     1A19  1D03               	skipz
  5978     1A1A  2A15               	goto	u3745
  5979     1A1B                     l2739:
  5980     1A1B  3001               	movlw	1
  5981     1A1C  00F4               	movwf	??___lwmod
  5982     1A1D  0874               	movf	??___lwmod,w
  5983     1A1E  07F5               	addwf	___lwmod@counter,f
  5984     1A1F                     l2741:
  5985     1A1F  1FF1               	btfss	___lwmod@divisor+1,7
  5986     1A20  2A22               	goto	u3751
  5987     1A21  2A23               	goto	u3750
  5988     1A22                     u3751:
  5989     1A22  2A14               	goto	l2737
  5990     1A23                     u3750:
  5991     1A23                     l2743:
  5992     1A23  0871               	movf	___lwmod@divisor+1,w
  5993     1A24  0273               	subwf	___lwmod@dividend+1,w
  5994     1A25  1D03               	skipz
  5995     1A26  2A29               	goto	u3765
  5996     1A27  0870               	movf	___lwmod@divisor,w
  5997     1A28  0272               	subwf	___lwmod@dividend,w
  5998     1A29                     u3765:
  5999     1A29  1C03               	skipc
  6000     1A2A  2A2C               	goto	u3761
  6001     1A2B  2A2D               	goto	u3760
  6002     1A2C                     u3761:
  6003     1A2C  2A33               	goto	l2747
  6004     1A2D                     u3760:
  6005     1A2D                     l2745:
  6006     1A2D  0870               	movf	___lwmod@divisor,w
  6007     1A2E  02F2               	subwf	___lwmod@dividend,f
  6008     1A2F  0871               	movf	___lwmod@divisor+1,w
  6009     1A30  1C03               	skipc
  6010     1A31  03F3               	decf	___lwmod@dividend+1,f
  6011     1A32  02F3               	subwf	___lwmod@dividend+1,f
  6012     1A33                     l2747:
  6013     1A33  3001               	movlw	1
  6014     1A34                     u3775:
  6015     1A34  1003               	clrc
  6016     1A35  0CF1               	rrf	___lwmod@divisor+1,f
  6017     1A36  0CF0               	rrf	___lwmod@divisor,f
  6018     1A37  3EFF               	addlw	-1
  6019     1A38  1D03               	skipz
  6020     1A39  2A34               	goto	u3775
  6021     1A3A                     l2749:
  6022     1A3A  3001               	movlw	1
  6023     1A3B  02F5               	subwf	___lwmod@counter,f
  6024     1A3C  1D03               	btfss	3,2
  6025     1A3D  2A3F               	goto	u3781
  6026     1A3E  2A40               	goto	u3780
  6027     1A3F                     u3781:
  6028     1A3F  2A23               	goto	l2743
  6029     1A40                     u3780:
  6030     1A40                     l2751:
  6031     1A40  0873               	movf	___lwmod@dividend+1,w
  6032     1A41  00F1               	movwf	?___lwmod+1
  6033     1A42  0872               	movf	___lwmod@dividend,w
  6034     1A43  00F0               	movwf	?___lwmod
  6035     1A44                     l738:
  6036     1A44  0008               	return
  6037     1A45                     __end_of___lwmod:
  6038                           
  6039                           	psect	text8
  6040     1B07                     __ptext8:	
  6041 ;; *************** function ___lwdiv *****************
  6042 ;; Defined at:
  6043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  divisor         2    6[COMMON] unsigned int 
  6046 ;;  dividend        2    8[COMMON] unsigned int 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  quotient        2   11[COMMON] unsigned int 
  6049 ;;  counter         1   13[COMMON] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  2    6[COMMON] unsigned int 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6059 ;;      Params:         4       0       0       0       0
  6060 ;;      Locals:         3       0       0       0       0
  6061 ;;      Temps:          1       0       0       0       0
  6062 ;;      Totals:         8       0       0       0       0
  6063 ;;Total ram usage:        8 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_fround
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072     1B07                     ___lwdiv:	
  6073                           ;psect for function ___lwdiv
  6074                           
  6075     1B07                     l2707:	
  6076                           ;incstack = 0
  6077                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6078                           
  6079     1B07  01FB               	clrf	___lwdiv@quotient
  6080     1B08  01FC               	clrf	___lwdiv@quotient+1
  6081     1B09                     l2709:
  6082     1B09  0876               	movf	___lwdiv@divisor,w
  6083     1B0A  0477               	iorwf	___lwdiv@divisor+1,w
  6084     1B0B  1903               	btfsc	3,2
  6085     1B0C  2B0E               	goto	u3661
  6086     1B0D  2B0F               	goto	u3660
  6087     1B0E                     u3661:
  6088     1B0E  2B46               	goto	l2729
  6089     1B0F                     u3660:
  6090     1B0F                     l2711:
  6091     1B0F  01FD               	clrf	___lwdiv@counter
  6092     1B10  0AFD               	incf	___lwdiv@counter,f
  6093     1B11  2B1D               	goto	l2717
  6094     1B12                     l2713:
  6095     1B12  3001               	movlw	1
  6096     1B13                     u3675:
  6097     1B13  1003               	clrc
  6098     1B14  0DF6               	rlf	___lwdiv@divisor,f
  6099     1B15  0DF7               	rlf	___lwdiv@divisor+1,f
  6100     1B16  3EFF               	addlw	-1
  6101     1B17  1D03               	skipz
  6102     1B18  2B13               	goto	u3675
  6103     1B19                     l2715:
  6104     1B19  3001               	movlw	1
  6105     1B1A  00FA               	movwf	??___lwdiv
  6106     1B1B  087A               	movf	??___lwdiv,w
  6107     1B1C  07FD               	addwf	___lwdiv@counter,f
  6108     1B1D                     l2717:
  6109     1B1D  1FF7               	btfss	___lwdiv@divisor+1,7
  6110     1B1E  2B20               	goto	u3681
  6111     1B1F  2B21               	goto	u3680
  6112     1B20                     u3681:
  6113     1B20  2B12               	goto	l2713
  6114     1B21                     u3680:
  6115     1B21                     l2719:
  6116     1B21  3001               	movlw	1
  6117     1B22                     u3695:
  6118     1B22  1003               	clrc
  6119     1B23  0DFB               	rlf	___lwdiv@quotient,f
  6120     1B24  0DFC               	rlf	___lwdiv@quotient+1,f
  6121     1B25  3EFF               	addlw	-1
  6122     1B26  1D03               	skipz
  6123     1B27  2B22               	goto	u3695
  6124     1B28  0877               	movf	___lwdiv@divisor+1,w
  6125     1B29  0279               	subwf	___lwdiv@dividend+1,w
  6126     1B2A  1D03               	skipz
  6127     1B2B  2B2E               	goto	u3705
  6128     1B2C  0876               	movf	___lwdiv@divisor,w
  6129     1B2D  0278               	subwf	___lwdiv@dividend,w
  6130     1B2E                     u3705:
  6131     1B2E  1C03               	skipc
  6132     1B2F  2B31               	goto	u3701
  6133     1B30  2B32               	goto	u3700
  6134     1B31                     u3701:
  6135     1B31  2B39               	goto	l2725
  6136     1B32                     u3700:
  6137     1B32                     l2721:
  6138     1B32  0876               	movf	___lwdiv@divisor,w
  6139     1B33  02F8               	subwf	___lwdiv@dividend,f
  6140     1B34  0877               	movf	___lwdiv@divisor+1,w
  6141     1B35  1C03               	skipc
  6142     1B36  03F9               	decf	___lwdiv@dividend+1,f
  6143     1B37  02F9               	subwf	___lwdiv@dividend+1,f
  6144     1B38                     l2723:
  6145     1B38  147B               	bsf	___lwdiv@quotient,0
  6146     1B39                     l2725:
  6147     1B39  3001               	movlw	1
  6148     1B3A                     u3715:
  6149     1B3A  1003               	clrc
  6150     1B3B  0CF7               	rrf	___lwdiv@divisor+1,f
  6151     1B3C  0CF6               	rrf	___lwdiv@divisor,f
  6152     1B3D  3EFF               	addlw	-1
  6153     1B3E  1D03               	skipz
  6154     1B3F  2B3A               	goto	u3715
  6155     1B40                     l2727:
  6156     1B40  3001               	movlw	1
  6157     1B41  02FD               	subwf	___lwdiv@counter,f
  6158     1B42  1D03               	btfss	3,2
  6159     1B43  2B45               	goto	u3721
  6160     1B44  2B46               	goto	u3720
  6161     1B45                     u3721:
  6162     1B45  2B21               	goto	l2719
  6163     1B46                     u3720:
  6164     1B46                     l2729:
  6165     1B46  087C               	movf	___lwdiv@quotient+1,w
  6166     1B47  00F7               	movwf	?___lwdiv+1
  6167     1B48  087B               	movf	___lwdiv@quotient,w
  6168     1B49  00F6               	movwf	?___lwdiv
  6169     1B4A                     l728:
  6170     1B4A  0008               	return
  6171     1B4B                     __end_of___lwdiv:
  6172                           
  6173                           	psect	text9
  6174     095C                     __ptext9:	
  6175 ;; *************** function ___flmul *****************
  6176 ;; Defined at:
  6177 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  b               4    2[BANK0 ] unsigned int 
  6180 ;;  a               4    6[BANK0 ] unsigned int 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  prod            4   22[BANK0 ] struct .
  6183 ;;  grs             4   16[BANK0 ] unsigned long 
  6184 ;;  temp            2   26[BANK0 ] struct .
  6185 ;;  bexp            1   21[BANK0 ] unsigned char 
  6186 ;;  aexp            1   20[BANK0 ] unsigned char 
  6187 ;;  sign            1   15[BANK0 ] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  4    2[BANK0 ] unsigned char 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6197 ;;      Params:         0       8       0       0       0
  6198 ;;      Locals:         0      13       0       0       0
  6199 ;;      Temps:          0       5       0       0       0
  6200 ;;      Totals:         0      26       0       0       0
  6201 ;;Total ram usage:       26 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 1
  6204 ;; This function calls:
  6205 ;;		__Umul8_16
  6206 ;; This function is called by:
  6207 ;;		_main
  6208 ;;		_fround
  6209 ;;		_scale
  6210 ;;		_sprintf
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214     095C                     ___flmul:	
  6215                           ;psect for function ___flmul
  6216                           
  6217     095C                     l2949:	
  6218                           ;incstack = 0
  6219                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6220                           
  6221     095C  1283               	bcf	3,5	;RP0=0, select bank0
  6222     095D  1303               	bcf	3,6	;RP1=0, select bank0
  6223     095E  0825               	movf	___flmul@b+3,w
  6224     095F  3980               	andlw	128
  6225     0960  00AF               	movwf	___flmul@sign
  6226     0961                     l2951:
  6227     0961  0825               	movf	___flmul@b+3,w
  6228     0962  00AA               	movwf	??___flmul
  6229     0963  072A               	addwf	??___flmul,w
  6230     0964  00B5               	movwf	___flmul@bexp
  6231     0965                     l2953:
  6232     0965  1FA4               	btfss	___flmul@b+2,7
  6233     0966  2968               	goto	u4251
  6234     0967  2969               	goto	u4250
  6235     0968                     u4251:
  6236     0968  296A               	goto	l2957
  6237     0969                     u4250:
  6238     0969                     l2955:
  6239     0969  1435               	bsf	___flmul@bexp,0
  6240     096A                     l2957:
  6241     096A  0835               	movf	___flmul@bexp,w
  6242     096B  1903               	btfsc	3,2
  6243     096C  296E               	goto	u4261
  6244     096D  296F               	goto	u4260
  6245     096E                     u4261:
  6246     096E  297E               	goto	l2965
  6247     096F                     u4260:
  6248     096F                     l2959:
  6249     096F  0A35               	incf	___flmul@bexp,w
  6250     0970  1D03               	btfss	3,2
  6251     0971  2973               	goto	u4271
  6252     0972  2974               	goto	u4270
  6253     0973                     u4271:
  6254     0973  297C               	goto	l2963
  6255     0974                     u4270:
  6256     0974                     l2961:
  6257     0974  3000               	movlw	0
  6258     0975  00A5               	movwf	___flmul@b+3
  6259     0976  3000               	movlw	0
  6260     0977  00A4               	movwf	___flmul@b+2
  6261     0978  3000               	movlw	0
  6262     0979  00A3               	movwf	___flmul@b+1
  6263     097A  3000               	movlw	0
  6264     097B  00A2               	movwf	___flmul@b
  6265     097C                     l2963:
  6266     097C  17A4               	bsf	___flmul@b+2,7
  6267     097D  2986               	goto	l2967
  6268     097E                     l2965:
  6269     097E  3000               	movlw	0
  6270     097F  00A5               	movwf	___flmul@b+3
  6271     0980  3000               	movlw	0
  6272     0981  00A4               	movwf	___flmul@b+2
  6273     0982  3000               	movlw	0
  6274     0983  00A3               	movwf	___flmul@b+1
  6275     0984  3000               	movlw	0
  6276     0985  00A2               	movwf	___flmul@b
  6277     0986                     l2967:
  6278     0986  0829               	movf	___flmul@a+3,w
  6279     0987  3980               	andlw	128
  6280     0988  00AA               	movwf	??___flmul
  6281     0989  082A               	movf	??___flmul,w
  6282     098A  06AF               	xorwf	___flmul@sign,f
  6283     098B                     l2969:
  6284     098B  0829               	movf	___flmul@a+3,w
  6285     098C  00AA               	movwf	??___flmul
  6286     098D  072A               	addwf	??___flmul,w
  6287     098E  00B4               	movwf	___flmul@aexp
  6288     098F                     l2971:
  6289     098F  1FA8               	btfss	___flmul@a+2,7
  6290     0990  2992               	goto	u4281
  6291     0991  2993               	goto	u4280
  6292     0992                     u4281:
  6293     0992  2994               	goto	l2975
  6294     0993                     u4280:
  6295     0993                     l2973:
  6296     0993  1434               	bsf	___flmul@aexp,0
  6297     0994                     l2975:
  6298     0994  0834               	movf	___flmul@aexp,w
  6299     0995  1903               	btfsc	3,2
  6300     0996  2998               	goto	u4291
  6301     0997  2999               	goto	u4290
  6302     0998                     u4291:
  6303     0998  29A8               	goto	l2983
  6304     0999                     u4290:
  6305     0999                     l2977:
  6306     0999  0A34               	incf	___flmul@aexp,w
  6307     099A  1D03               	btfss	3,2
  6308     099B  299D               	goto	u4301
  6309     099C  299E               	goto	u4300
  6310     099D                     u4301:
  6311     099D  29A6               	goto	l2981
  6312     099E                     u4300:
  6313     099E                     l2979:
  6314     099E  3000               	movlw	0
  6315     099F  00A9               	movwf	___flmul@a+3
  6316     09A0  3000               	movlw	0
  6317     09A1  00A8               	movwf	___flmul@a+2
  6318     09A2  3000               	movlw	0
  6319     09A3  00A7               	movwf	___flmul@a+1
  6320     09A4  3000               	movlw	0
  6321     09A5  00A6               	movwf	___flmul@a
  6322     09A6                     l2981:
  6323     09A6  17A8               	bsf	___flmul@a+2,7
  6324     09A7  29B0               	goto	l2985
  6325     09A8                     l2983:
  6326     09A8  3000               	movlw	0
  6327     09A9  00A9               	movwf	___flmul@a+3
  6328     09AA  3000               	movlw	0
  6329     09AB  00A8               	movwf	___flmul@a+2
  6330     09AC  3000               	movlw	0
  6331     09AD  00A7               	movwf	___flmul@a+1
  6332     09AE  3000               	movlw	0
  6333     09AF  00A6               	movwf	___flmul@a
  6334     09B0                     l2985:
  6335     09B0  0834               	movf	___flmul@aexp,w
  6336     09B1  1903               	btfsc	3,2
  6337     09B2  29B4               	goto	u4311
  6338     09B3  29B5               	goto	u4310
  6339     09B4                     u4311:
  6340     09B4  29BA               	goto	l2989
  6341     09B5                     u4310:
  6342     09B5                     l2987:
  6343     09B5  0835               	movf	___flmul@bexp,w
  6344     09B6  1D03               	btfss	3,2
  6345     09B7  29B9               	goto	u4321
  6346     09B8  29BA               	goto	u4320
  6347     09B9                     u4321:
  6348     09B9  29C3               	goto	l2993
  6349     09BA                     u4320:
  6350     09BA                     l2989:
  6351     09BA  3000               	movlw	0
  6352     09BB  00A5               	movwf	?___flmul+3
  6353     09BC  3000               	movlw	0
  6354     09BD  00A4               	movwf	?___flmul+2
  6355     09BE  3000               	movlw	0
  6356     09BF  00A3               	movwf	?___flmul+1
  6357     09C0  3000               	movlw	0
  6358     09C1  00A2               	movwf	?___flmul
  6359     09C2  2CA0               	goto	l845
  6360     09C3                     l2993:
  6361     09C3  0822               	movf	___flmul@b,w
  6362     09C4  00F0               	movwf	__Umul8_16@multiplicand
  6363     09C5  0828               	movf	___flmul@a+2,w
  6364     09C6  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6365     09CB  0871               	movf	?__Umul8_16+1,w
  6366     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6367     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  6368     09CE  00BB               	movwf	___flmul@temp+1
  6369     09CF  0870               	movf	?__Umul8_16,w
  6370     09D0  00BA               	movwf	___flmul@temp
  6371     09D1                     l2995:
  6372     09D1  083A               	movf	___flmul@temp,w
  6373     09D2  00AA               	movwf	??___flmul
  6374     09D3  01AB               	clrf	??___flmul+1
  6375     09D4  01AC               	clrf	??___flmul+2
  6376     09D5  01AD               	clrf	??___flmul+3
  6377     09D6  082D               	movf	??___flmul+3,w
  6378     09D7  00B3               	movwf	___flmul@grs+3
  6379     09D8  082C               	movf	??___flmul+2,w
  6380     09D9  00B2               	movwf	___flmul@grs+2
  6381     09DA  082B               	movf	??___flmul+1,w
  6382     09DB  00B1               	movwf	___flmul@grs+1
  6383     09DC  082A               	movf	??___flmul,w
  6384     09DD  00B0               	movwf	___flmul@grs
  6385     09DE                     l2997:
  6386     09DE  083B               	movf	___flmul@temp+1,w
  6387     09DF  00AA               	movwf	??___flmul
  6388     09E0  01AB               	clrf	??___flmul+1
  6389     09E1  01AC               	clrf	??___flmul+2
  6390     09E2  01AD               	clrf	??___flmul+3
  6391     09E3  082D               	movf	??___flmul+3,w
  6392     09E4  00B9               	movwf	___flmul@prod+3
  6393     09E5  082C               	movf	??___flmul+2,w
  6394     09E6  00B8               	movwf	___flmul@prod+2
  6395     09E7  082B               	movf	??___flmul+1,w
  6396     09E8  00B7               	movwf	___flmul@prod+1
  6397     09E9  082A               	movf	??___flmul,w
  6398     09EA  00B6               	movwf	___flmul@prod
  6399     09EB  0823               	movf	___flmul@b+1,w
  6400     09EC  00F0               	movwf	__Umul8_16@multiplicand
  6401     09ED  0827               	movf	___flmul@a+1,w
  6402     09EE  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6403     09F3  0871               	movf	?__Umul8_16+1,w
  6404     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  6405     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  6406     09F6  00BB               	movwf	___flmul@temp+1
  6407     09F7  0870               	movf	?__Umul8_16,w
  6408     09F8  00BA               	movwf	___flmul@temp
  6409     09F9                     l2999:
  6410     09F9  083A               	movf	___flmul@temp,w
  6411     09FA  00AA               	movwf	??___flmul
  6412     09FB  01AB               	clrf	??___flmul+1
  6413     09FC  01AC               	clrf	??___flmul+2
  6414     09FD  01AD               	clrf	??___flmul+3
  6415     09FE  082A               	movf	??___flmul,w
  6416     09FF  07B0               	addwf	___flmul@grs,f
  6417     0A00  082B               	movf	??___flmul+1,w
  6418     0A01  1103               	clrz
  6419     0A02  1803               	skipnc
  6420     0A03  3E01               	addlw	1
  6421     0A04  1903               	skipnz
  6422     0A05  2A07               	goto	u4331
  6423     0A06  07B1               	addwf	___flmul@grs+1,f
  6424     0A07                     u4331:
  6425     0A07  082C               	movf	??___flmul+2,w
  6426     0A08  1103               	clrz
  6427     0A09  1803               	skipnc
  6428     0A0A  3E01               	addlw	1
  6429     0A0B  1903               	skipnz
  6430     0A0C  2A0E               	goto	u4332
  6431     0A0D  07B2               	addwf	___flmul@grs+2,f
  6432     0A0E                     u4332:
  6433     0A0E  082D               	movf	??___flmul+3,w
  6434     0A0F  1103               	clrz
  6435     0A10  1803               	skipnc
  6436     0A11  3E01               	addlw	1
  6437     0A12  1903               	skipnz
  6438     0A13  2A15               	goto	u4333
  6439     0A14  07B3               	addwf	___flmul@grs+3,f
  6440     0A15                     u4333:
  6441     0A15                     l3001:
  6442     0A15  083B               	movf	___flmul@temp+1,w
  6443     0A16  00AA               	movwf	??___flmul
  6444     0A17  01AB               	clrf	??___flmul+1
  6445     0A18  01AC               	clrf	??___flmul+2
  6446     0A19  01AD               	clrf	??___flmul+3
  6447     0A1A  082A               	movf	??___flmul,w
  6448     0A1B  07B6               	addwf	___flmul@prod,f
  6449     0A1C  082B               	movf	??___flmul+1,w
  6450     0A1D  1103               	clrz
  6451     0A1E  1803               	skipnc
  6452     0A1F  3E01               	addlw	1
  6453     0A20  1903               	skipnz
  6454     0A21  2A23               	goto	u4341
  6455     0A22  07B7               	addwf	___flmul@prod+1,f
  6456     0A23                     u4341:
  6457     0A23  082C               	movf	??___flmul+2,w
  6458     0A24  1103               	clrz
  6459     0A25  1803               	skipnc
  6460     0A26  3E01               	addlw	1
  6461     0A27  1903               	skipnz
  6462     0A28  2A2A               	goto	u4342
  6463     0A29  07B8               	addwf	___flmul@prod+2,f
  6464     0A2A                     u4342:
  6465     0A2A  082D               	movf	??___flmul+3,w
  6466     0A2B  1103               	clrz
  6467     0A2C  1803               	skipnc
  6468     0A2D  3E01               	addlw	1
  6469     0A2E  1903               	skipnz
  6470     0A2F  2A31               	goto	u4343
  6471     0A30  07B9               	addwf	___flmul@prod+3,f
  6472     0A31                     u4343:
  6473     0A31  0824               	movf	___flmul@b+2,w
  6474     0A32  00F0               	movwf	__Umul8_16@multiplicand
  6475     0A33  0826               	movf	___flmul@a,w
  6476     0A34  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6477     0A39  0871               	movf	?__Umul8_16+1,w
  6478     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  6479     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  6480     0A3C  00BB               	movwf	___flmul@temp+1
  6481     0A3D  0870               	movf	?__Umul8_16,w
  6482     0A3E  00BA               	movwf	___flmul@temp
  6483     0A3F                     l3003:
  6484     0A3F  083A               	movf	___flmul@temp,w
  6485     0A40  00AA               	movwf	??___flmul
  6486     0A41  01AB               	clrf	??___flmul+1
  6487     0A42  01AC               	clrf	??___flmul+2
  6488     0A43  01AD               	clrf	??___flmul+3
  6489     0A44  082A               	movf	??___flmul,w
  6490     0A45  07B0               	addwf	___flmul@grs,f
  6491     0A46  082B               	movf	??___flmul+1,w
  6492     0A47  1103               	clrz
  6493     0A48  1803               	skipnc
  6494     0A49  3E01               	addlw	1
  6495     0A4A  1903               	skipnz
  6496     0A4B  2A4D               	goto	u4351
  6497     0A4C  07B1               	addwf	___flmul@grs+1,f
  6498     0A4D                     u4351:
  6499     0A4D  082C               	movf	??___flmul+2,w
  6500     0A4E  1103               	clrz
  6501     0A4F  1803               	skipnc
  6502     0A50  3E01               	addlw	1
  6503     0A51  1903               	skipnz
  6504     0A52  2A54               	goto	u4352
  6505     0A53  07B2               	addwf	___flmul@grs+2,f
  6506     0A54                     u4352:
  6507     0A54  082D               	movf	??___flmul+3,w
  6508     0A55  1103               	clrz
  6509     0A56  1803               	skipnc
  6510     0A57  3E01               	addlw	1
  6511     0A58  1903               	skipnz
  6512     0A59  2A5B               	goto	u4353
  6513     0A5A  07B3               	addwf	___flmul@grs+3,f
  6514     0A5B                     u4353:
  6515     0A5B                     l3005:
  6516     0A5B  083B               	movf	___flmul@temp+1,w
  6517     0A5C  00AA               	movwf	??___flmul
  6518     0A5D  01AB               	clrf	??___flmul+1
  6519     0A5E  01AC               	clrf	??___flmul+2
  6520     0A5F  01AD               	clrf	??___flmul+3
  6521     0A60  082A               	movf	??___flmul,w
  6522     0A61  07B6               	addwf	___flmul@prod,f
  6523     0A62  082B               	movf	??___flmul+1,w
  6524     0A63  1103               	clrz
  6525     0A64  1803               	skipnc
  6526     0A65  3E01               	addlw	1
  6527     0A66  1903               	skipnz
  6528     0A67  2A69               	goto	u4361
  6529     0A68  07B7               	addwf	___flmul@prod+1,f
  6530     0A69                     u4361:
  6531     0A69  082C               	movf	??___flmul+2,w
  6532     0A6A  1103               	clrz
  6533     0A6B  1803               	skipnc
  6534     0A6C  3E01               	addlw	1
  6535     0A6D  1903               	skipnz
  6536     0A6E  2A70               	goto	u4362
  6537     0A6F  07B8               	addwf	___flmul@prod+2,f
  6538     0A70                     u4362:
  6539     0A70  082D               	movf	??___flmul+3,w
  6540     0A71  1103               	clrz
  6541     0A72  1803               	skipnc
  6542     0A73  3E01               	addlw	1
  6543     0A74  1903               	skipnz
  6544     0A75  2A77               	goto	u4363
  6545     0A76  07B9               	addwf	___flmul@prod+3,f
  6546     0A77                     u4363:
  6547     0A77                     l3007:
  6548     0A77  3008               	movlw	8
  6549     0A78  00AA               	movwf	??___flmul
  6550     0A79                     u4375:
  6551     0A79  1003               	clrc
  6552     0A7A  0DB0               	rlf	___flmul@grs,f
  6553     0A7B  0DB1               	rlf	___flmul@grs+1,f
  6554     0A7C  0DB2               	rlf	___flmul@grs+2,f
  6555     0A7D  0DB3               	rlf	___flmul@grs+3,f
  6556     0A7E  0BAA               	decfsz	??___flmul,f
  6557     0A7F  2A79               	goto	u4375
  6558     0A80                     l3009:
  6559     0A80  0823               	movf	___flmul@b+1,w
  6560     0A81  00F0               	movwf	__Umul8_16@multiplicand
  6561     0A82  0826               	movf	___flmul@a,w
  6562     0A83  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6563     0A88  0871               	movf	?__Umul8_16+1,w
  6564     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  6565     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  6566     0A8B  00BB               	movwf	___flmul@temp+1
  6567     0A8C  0870               	movf	?__Umul8_16,w
  6568     0A8D  00BA               	movwf	___flmul@temp
  6569     0A8E                     l3011:
  6570     0A8E  083A               	movf	___flmul@temp,w
  6571     0A8F  00AA               	movwf	??___flmul
  6572     0A90  083B               	movf	___flmul@temp+1,w
  6573     0A91  00AB               	movwf	??___flmul+1
  6574     0A92  01AC               	clrf	??___flmul+2
  6575     0A93  01AD               	clrf	??___flmul+3
  6576     0A94  082A               	movf	??___flmul,w
  6577     0A95  07B0               	addwf	___flmul@grs,f
  6578     0A96  082B               	movf	??___flmul+1,w
  6579     0A97  1103               	clrz
  6580     0A98  1803               	skipnc
  6581     0A99  3E01               	addlw	1
  6582     0A9A  1903               	skipnz
  6583     0A9B  2A9D               	goto	u4381
  6584     0A9C  07B1               	addwf	___flmul@grs+1,f
  6585     0A9D                     u4381:
  6586     0A9D  082C               	movf	??___flmul+2,w
  6587     0A9E  1103               	clrz
  6588     0A9F  1803               	skipnc
  6589     0AA0  3E01               	addlw	1
  6590     0AA1  1903               	skipnz
  6591     0AA2  2AA4               	goto	u4382
  6592     0AA3  07B2               	addwf	___flmul@grs+2,f
  6593     0AA4                     u4382:
  6594     0AA4  082D               	movf	??___flmul+3,w
  6595     0AA5  1103               	clrz
  6596     0AA6  1803               	skipnc
  6597     0AA7  3E01               	addlw	1
  6598     0AA8  1903               	skipnz
  6599     0AA9  2AAB               	goto	u4383
  6600     0AAA  07B3               	addwf	___flmul@grs+3,f
  6601     0AAB                     u4383:
  6602     0AAB                     l3013:
  6603     0AAB  0822               	movf	___flmul@b,w
  6604     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  6605     0AAD  0827               	movf	___flmul@a+1,w
  6606     0AAE  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6607     0AB3  0871               	movf	?__Umul8_16+1,w
  6608     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  6609     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  6610     0AB6  00BB               	movwf	___flmul@temp+1
  6611     0AB7  0870               	movf	?__Umul8_16,w
  6612     0AB8  00BA               	movwf	___flmul@temp
  6613     0AB9                     l3015:
  6614     0AB9  083A               	movf	___flmul@temp,w
  6615     0ABA  00AA               	movwf	??___flmul
  6616     0ABB  083B               	movf	___flmul@temp+1,w
  6617     0ABC  00AB               	movwf	??___flmul+1
  6618     0ABD  01AC               	clrf	??___flmul+2
  6619     0ABE  01AD               	clrf	??___flmul+3
  6620     0ABF  082A               	movf	??___flmul,w
  6621     0AC0  07B0               	addwf	___flmul@grs,f
  6622     0AC1  082B               	movf	??___flmul+1,w
  6623     0AC2  1103               	clrz
  6624     0AC3  1803               	skipnc
  6625     0AC4  3E01               	addlw	1
  6626     0AC5  1903               	skipnz
  6627     0AC6  2AC8               	goto	u4391
  6628     0AC7  07B1               	addwf	___flmul@grs+1,f
  6629     0AC8                     u4391:
  6630     0AC8  082C               	movf	??___flmul+2,w
  6631     0AC9  1103               	clrz
  6632     0ACA  1803               	skipnc
  6633     0ACB  3E01               	addlw	1
  6634     0ACC  1903               	skipnz
  6635     0ACD  2ACF               	goto	u4392
  6636     0ACE  07B2               	addwf	___flmul@grs+2,f
  6637     0ACF                     u4392:
  6638     0ACF  082D               	movf	??___flmul+3,w
  6639     0AD0  1103               	clrz
  6640     0AD1  1803               	skipnc
  6641     0AD2  3E01               	addlw	1
  6642     0AD3  1903               	skipnz
  6643     0AD4  2AD6               	goto	u4393
  6644     0AD5  07B3               	addwf	___flmul@grs+3,f
  6645     0AD6                     u4393:
  6646     0AD6                     l3017:
  6647     0AD6  3008               	movlw	8
  6648     0AD7  00AA               	movwf	??___flmul
  6649     0AD8                     u4405:
  6650     0AD8  1003               	clrc
  6651     0AD9  0DB0               	rlf	___flmul@grs,f
  6652     0ADA  0DB1               	rlf	___flmul@grs+1,f
  6653     0ADB  0DB2               	rlf	___flmul@grs+2,f
  6654     0ADC  0DB3               	rlf	___flmul@grs+3,f
  6655     0ADD  0BAA               	decfsz	??___flmul,f
  6656     0ADE  2AD8               	goto	u4405
  6657     0ADF  0822               	movf	___flmul@b,w
  6658     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  6659     0AE1  0826               	movf	___flmul@a,w
  6660     0AE2  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6661     0AE7  0871               	movf	?__Umul8_16+1,w
  6662     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  6663     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  6664     0AEA  00BB               	movwf	___flmul@temp+1
  6665     0AEB  0870               	movf	?__Umul8_16,w
  6666     0AEC  00BA               	movwf	___flmul@temp
  6667     0AED                     l3019:
  6668     0AED  083A               	movf	___flmul@temp,w
  6669     0AEE  00AA               	movwf	??___flmul
  6670     0AEF  083B               	movf	___flmul@temp+1,w
  6671     0AF0  00AB               	movwf	??___flmul+1
  6672     0AF1  01AC               	clrf	??___flmul+2
  6673     0AF2  01AD               	clrf	??___flmul+3
  6674     0AF3  082A               	movf	??___flmul,w
  6675     0AF4  07B0               	addwf	___flmul@grs,f
  6676     0AF5  082B               	movf	??___flmul+1,w
  6677     0AF6  1103               	clrz
  6678     0AF7  1803               	skipnc
  6679     0AF8  3E01               	addlw	1
  6680     0AF9  1903               	skipnz
  6681     0AFA  2AFC               	goto	u4411
  6682     0AFB  07B1               	addwf	___flmul@grs+1,f
  6683     0AFC                     u4411:
  6684     0AFC  082C               	movf	??___flmul+2,w
  6685     0AFD  1103               	clrz
  6686     0AFE  1803               	skipnc
  6687     0AFF  3E01               	addlw	1
  6688     0B00  1903               	skipnz
  6689     0B01  2B03               	goto	u4412
  6690     0B02  07B2               	addwf	___flmul@grs+2,f
  6691     0B03                     u4412:
  6692     0B03  082D               	movf	??___flmul+3,w
  6693     0B04  1103               	clrz
  6694     0B05  1803               	skipnc
  6695     0B06  3E01               	addlw	1
  6696     0B07  1903               	skipnz
  6697     0B08  2B0A               	goto	u4413
  6698     0B09  07B3               	addwf	___flmul@grs+3,f
  6699     0B0A                     u4413:
  6700     0B0A                     l3021:
  6701     0B0A  0823               	movf	___flmul@b+1,w
  6702     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  6703     0B0C  0828               	movf	___flmul@a+2,w
  6704     0B0D  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6705     0B12  0871               	movf	?__Umul8_16+1,w
  6706     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  6707     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  6708     0B15  00BB               	movwf	___flmul@temp+1
  6709     0B16  0870               	movf	?__Umul8_16,w
  6710     0B17  00BA               	movwf	___flmul@temp
  6711     0B18  083A               	movf	___flmul@temp,w
  6712     0B19  00AA               	movwf	??___flmul
  6713     0B1A  083B               	movf	___flmul@temp+1,w
  6714     0B1B  00AB               	movwf	??___flmul+1
  6715     0B1C  01AC               	clrf	??___flmul+2
  6716     0B1D  01AD               	clrf	??___flmul+3
  6717     0B1E  082A               	movf	??___flmul,w
  6718     0B1F  07B6               	addwf	___flmul@prod,f
  6719     0B20  082B               	movf	??___flmul+1,w
  6720     0B21  1103               	clrz
  6721     0B22  1803               	skipnc
  6722     0B23  3E01               	addlw	1
  6723     0B24  1903               	skipnz
  6724     0B25  2B27               	goto	u4421
  6725     0B26  07B7               	addwf	___flmul@prod+1,f
  6726     0B27                     u4421:
  6727     0B27  082C               	movf	??___flmul+2,w
  6728     0B28  1103               	clrz
  6729     0B29  1803               	skipnc
  6730     0B2A  3E01               	addlw	1
  6731     0B2B  1903               	skipnz
  6732     0B2C  2B2E               	goto	u4422
  6733     0B2D  07B8               	addwf	___flmul@prod+2,f
  6734     0B2E                     u4422:
  6735     0B2E  082D               	movf	??___flmul+3,w
  6736     0B2F  1103               	clrz
  6737     0B30  1803               	skipnc
  6738     0B31  3E01               	addlw	1
  6739     0B32  1903               	skipnz
  6740     0B33  2B35               	goto	u4423
  6741     0B34  07B9               	addwf	___flmul@prod+3,f
  6742     0B35                     u4423:
  6743     0B35                     l3023:
  6744     0B35  0824               	movf	___flmul@b+2,w
  6745     0B36  00F0               	movwf	__Umul8_16@multiplicand
  6746     0B37  0827               	movf	___flmul@a+1,w
  6747     0B38  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6748     0B3D  0871               	movf	?__Umul8_16+1,w
  6749     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  6750     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  6751     0B40  00BB               	movwf	___flmul@temp+1
  6752     0B41  0870               	movf	?__Umul8_16,w
  6753     0B42  00BA               	movwf	___flmul@temp
  6754     0B43                     l3025:
  6755     0B43  083A               	movf	___flmul@temp,w
  6756     0B44  00AA               	movwf	??___flmul
  6757     0B45  083B               	movf	___flmul@temp+1,w
  6758     0B46  00AB               	movwf	??___flmul+1
  6759     0B47  01AC               	clrf	??___flmul+2
  6760     0B48  01AD               	clrf	??___flmul+3
  6761     0B49  082A               	movf	??___flmul,w
  6762     0B4A  07B6               	addwf	___flmul@prod,f
  6763     0B4B  082B               	movf	??___flmul+1,w
  6764     0B4C  1103               	clrz
  6765     0B4D  1803               	skipnc
  6766     0B4E  3E01               	addlw	1
  6767     0B4F  1903               	skipnz
  6768     0B50  2B52               	goto	u4431
  6769     0B51  07B7               	addwf	___flmul@prod+1,f
  6770     0B52                     u4431:
  6771     0B52  082C               	movf	??___flmul+2,w
  6772     0B53  1103               	clrz
  6773     0B54  1803               	skipnc
  6774     0B55  3E01               	addlw	1
  6775     0B56  1903               	skipnz
  6776     0B57  2B59               	goto	u4432
  6777     0B58  07B8               	addwf	___flmul@prod+2,f
  6778     0B59                     u4432:
  6779     0B59  082D               	movf	??___flmul+3,w
  6780     0B5A  1103               	clrz
  6781     0B5B  1803               	skipnc
  6782     0B5C  3E01               	addlw	1
  6783     0B5D  1903               	skipnz
  6784     0B5E  2B60               	goto	u4433
  6785     0B5F  07B9               	addwf	___flmul@prod+3,f
  6786     0B60                     u4433:
  6787     0B60  0824               	movf	___flmul@b+2,w
  6788     0B61  00F0               	movwf	__Umul8_16@multiplicand
  6789     0B62  0828               	movf	___flmul@a+2,w
  6790     0B63  160A  158A  21B7  120A  158A  	fcall	__Umul8_16
  6791     0B68  0871               	movf	?__Umul8_16+1,w
  6792     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  6793     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6794     0B6B  00BB               	movwf	___flmul@temp+1
  6795     0B6C  0870               	movf	?__Umul8_16,w
  6796     0B6D  00BA               	movwf	___flmul@temp
  6797     0B6E                     l3027:
  6798     0B6E  083A               	movf	___flmul@temp,w
  6799     0B6F  00AA               	movwf	??___flmul
  6800     0B70  083B               	movf	___flmul@temp+1,w
  6801     0B71  00AB               	movwf	??___flmul+1
  6802     0B72  01AC               	clrf	??___flmul+2
  6803     0B73  01AD               	clrf	??___flmul+3
  6804     0B74  3008               	movlw	8
  6805     0B75                     u4445:
  6806     0B75  1003               	clrc
  6807     0B76  0DAA               	rlf	??___flmul,f
  6808     0B77  0DAB               	rlf	??___flmul+1,f
  6809     0B78  0DAC               	rlf	??___flmul+2,f
  6810     0B79  0DAD               	rlf	??___flmul+3,f
  6811     0B7A                     u4440:
  6812     0B7A  3EFF               	addlw	-1
  6813     0B7B  1D03               	skipz
  6814     0B7C  2B75               	goto	u4445
  6815     0B7D  082A               	movf	??___flmul,w
  6816     0B7E  07B6               	addwf	___flmul@prod,f
  6817     0B7F  082B               	movf	??___flmul+1,w
  6818     0B80  1103               	clrz
  6819     0B81  1803               	skipnc
  6820     0B82  3E01               	addlw	1
  6821     0B83  1903               	skipnz
  6822     0B84  2B86               	goto	u4451
  6823     0B85  07B7               	addwf	___flmul@prod+1,f
  6824     0B86                     u4451:
  6825     0B86  082C               	movf	??___flmul+2,w
  6826     0B87  1103               	clrz
  6827     0B88  1803               	skipnc
  6828     0B89  3E01               	addlw	1
  6829     0B8A  1903               	skipnz
  6830     0B8B  2B8D               	goto	u4452
  6831     0B8C  07B8               	addwf	___flmul@prod+2,f
  6832     0B8D                     u4452:
  6833     0B8D  082D               	movf	??___flmul+3,w
  6834     0B8E  1103               	clrz
  6835     0B8F  1803               	skipnc
  6836     0B90  3E01               	addlw	1
  6837     0B91  1903               	skipnz
  6838     0B92  2B94               	goto	u4453
  6839     0B93  07B9               	addwf	___flmul@prod+3,f
  6840     0B94                     u4453:
  6841     0B94                     l3029:
  6842     0B94  0830               	movf	___flmul@grs,w
  6843     0B95  00AA               	movwf	??___flmul
  6844     0B96  0831               	movf	___flmul@grs+1,w
  6845     0B97  00AB               	movwf	??___flmul+1
  6846     0B98  0832               	movf	___flmul@grs+2,w
  6847     0B99  00AC               	movwf	??___flmul+2
  6848     0B9A  0833               	movf	___flmul@grs+3,w
  6849     0B9B  00AD               	movwf	??___flmul+3
  6850     0B9C  3018               	movlw	24
  6851     0B9D                     u4465:
  6852     0B9D  1003               	clrc
  6853     0B9E  0CAD               	rrf	??___flmul+3,f
  6854     0B9F  0CAC               	rrf	??___flmul+2,f
  6855     0BA0  0CAB               	rrf	??___flmul+1,f
  6856     0BA1  0CAA               	rrf	??___flmul,f
  6857     0BA2                     u4460:
  6858     0BA2  3EFF               	addlw	-1
  6859     0BA3  1D03               	skipz
  6860     0BA4  2B9D               	goto	u4465
  6861     0BA5  082A               	movf	??___flmul,w
  6862     0BA6  07B6               	addwf	___flmul@prod,f
  6863     0BA7  082B               	movf	??___flmul+1,w
  6864     0BA8  1103               	clrz
  6865     0BA9  1803               	skipnc
  6866     0BAA  3E01               	addlw	1
  6867     0BAB  1903               	skipnz
  6868     0BAC  2BAE               	goto	u4471
  6869     0BAD  07B7               	addwf	___flmul@prod+1,f
  6870     0BAE                     u4471:
  6871     0BAE  082C               	movf	??___flmul+2,w
  6872     0BAF  1103               	clrz
  6873     0BB0  1803               	skipnc
  6874     0BB1  3E01               	addlw	1
  6875     0BB2  1903               	skipnz
  6876     0BB3  2BB5               	goto	u4472
  6877     0BB4  07B8               	addwf	___flmul@prod+2,f
  6878     0BB5                     u4472:
  6879     0BB5  082D               	movf	??___flmul+3,w
  6880     0BB6  1103               	clrz
  6881     0BB7  1803               	skipnc
  6882     0BB8  3E01               	addlw	1
  6883     0BB9  1903               	skipnz
  6884     0BBA  2BBC               	goto	u4473
  6885     0BBB  07B9               	addwf	___flmul@prod+3,f
  6886     0BBC                     u4473:
  6887     0BBC                     l3031:
  6888     0BBC  3008               	movlw	8
  6889     0BBD  00AA               	movwf	??___flmul
  6890     0BBE                     u4485:
  6891     0BBE  1003               	clrc
  6892     0BBF  0DB0               	rlf	___flmul@grs,f
  6893     0BC0  0DB1               	rlf	___flmul@grs+1,f
  6894     0BC1  0DB2               	rlf	___flmul@grs+2,f
  6895     0BC2  0DB3               	rlf	___flmul@grs+3,f
  6896     0BC3  0BAA               	decfsz	??___flmul,f
  6897     0BC4  2BBE               	goto	u4485
  6898     0BC5                     l3033:
  6899     0BC5  0835               	movf	___flmul@bexp,w
  6900     0BC6  0734               	addwf	___flmul@aexp,w
  6901     0BC7  00AA               	movwf	??___flmul
  6902     0BC8  01AB               	clrf	??___flmul+1
  6903     0BC9  0DAB               	rlf	??___flmul+1,f
  6904     0BCA  082A               	movf	??___flmul,w
  6905     0BCB  3E82               	addlw	130
  6906     0BCC  00BA               	movwf	___flmul@temp
  6907     0BCD  082B               	movf	??___flmul+1,w
  6908     0BCE  1803               	skipnc
  6909     0BCF  3E01               	addlw	1
  6910     0BD0  3EFF               	addlw	255
  6911     0BD1  00BB               	movwf	___flmul@temp+1
  6912     0BD2  2BF0               	goto	l3045
  6913     0BD3                     l3035:
  6914     0BD3  3001               	movlw	1
  6915     0BD4  00AA               	movwf	??___flmul
  6916     0BD5                     u4495:
  6917     0BD5  1003               	clrc
  6918     0BD6  0DB6               	rlf	___flmul@prod,f
  6919     0BD7  0DB7               	rlf	___flmul@prod+1,f
  6920     0BD8  0DB8               	rlf	___flmul@prod+2,f
  6921     0BD9  0DB9               	rlf	___flmul@prod+3,f
  6922     0BDA  0BAA               	decfsz	??___flmul,f
  6923     0BDB  2BD5               	goto	u4495
  6924     0BDC                     l3037:
  6925     0BDC  1FB3               	btfss	___flmul@grs+3,7
  6926     0BDD  2BDF               	goto	u4501
  6927     0BDE  2BE0               	goto	u4500
  6928     0BDF                     u4501:
  6929     0BDF  2BE1               	goto	l3041
  6930     0BE0                     u4500:
  6931     0BE0                     l3039:
  6932     0BE0  1436               	bsf	___flmul@prod,0
  6933     0BE1                     l3041:
  6934     0BE1  3001               	movlw	1
  6935     0BE2  00AA               	movwf	??___flmul
  6936     0BE3                     u4515:
  6937     0BE3  1003               	clrc
  6938     0BE4  0DB0               	rlf	___flmul@grs,f
  6939     0BE5  0DB1               	rlf	___flmul@grs+1,f
  6940     0BE6  0DB2               	rlf	___flmul@grs+2,f
  6941     0BE7  0DB3               	rlf	___flmul@grs+3,f
  6942     0BE8  0BAA               	decfsz	??___flmul,f
  6943     0BE9  2BE3               	goto	u4515
  6944     0BEA                     l3043:
  6945     0BEA  30FF               	movlw	255
  6946     0BEB  07BA               	addwf	___flmul@temp,f
  6947     0BEC  1803               	skipnc
  6948     0BED  0ABB               	incf	___flmul@temp+1,f
  6949     0BEE  30FF               	movlw	255
  6950     0BEF  07BB               	addwf	___flmul@temp+1,f
  6951     0BF0                     l3045:
  6952     0BF0  1FB8               	btfss	___flmul@prod+2,7
  6953     0BF1  2BF3               	goto	u4521
  6954     0BF2  2BF4               	goto	u4520
  6955     0BF3                     u4521:
  6956     0BF3  2BD3               	goto	l3035
  6957     0BF4                     u4520:
  6958     0BF4                     l3047:
  6959     0BF4  01B4               	clrf	___flmul@aexp
  6960     0BF5                     l3049:
  6961     0BF5  1FB3               	btfss	___flmul@grs+3,7
  6962     0BF6  2BF8               	goto	u4531
  6963     0BF7  2BF9               	goto	u4530
  6964     0BF8                     u4531:
  6965     0BF8  2C15               	goto	l3057
  6966     0BF9                     u4530:
  6967     0BF9                     l3051:
  6968     0BF9  30FF               	movlw	255
  6969     0BFA  0530               	andwf	___flmul@grs,w
  6970     0BFB  00AA               	movwf	??___flmul
  6971     0BFC  30FF               	movlw	255
  6972     0BFD  0531               	andwf	___flmul@grs+1,w
  6973     0BFE  00AB               	movwf	??___flmul+1
  6974     0BFF  30FF               	movlw	255
  6975     0C00  0532               	andwf	___flmul@grs+2,w
  6976     0C01  00AC               	movwf	??___flmul+2
  6977     0C02  307F               	movlw	127
  6978     0C03  0533               	andwf	___flmul@grs+3,w
  6979     0C04  00AD               	movwf	??___flmul+3
  6980     0C05  082D               	movf	??___flmul+3,w
  6981     0C06  042C               	iorwf	??___flmul+2,w
  6982     0C07  042B               	iorwf	??___flmul+1,w
  6983     0C08  042A               	iorwf	??___flmul,w
  6984     0C09  1903               	skipnz
  6985     0C0A  2C0C               	goto	u4541
  6986     0C0B  2C0D               	goto	u4540
  6987     0C0C                     u4541:
  6988     0C0C  2C10               	goto	l851
  6989     0C0D                     u4540:
  6990     0C0D                     l3053:
  6991     0C0D  01B4               	clrf	___flmul@aexp
  6992     0C0E  0AB4               	incf	___flmul@aexp,f
  6993     0C0F  2C15               	goto	l3057
  6994     0C10                     l851:
  6995     0C10  1C36               	btfss	___flmul@prod,0
  6996     0C11  2C13               	goto	u4551
  6997     0C12  2C14               	goto	u4550
  6998     0C13                     u4551:
  6999     0C13  2C15               	goto	l3057
  7000     0C14                     u4550:
  7001     0C14  2C0D               	goto	l3053
  7002     0C15                     l3057:
  7003     0C15  0834               	movf	___flmul@aexp,w
  7004     0C16  1903               	btfsc	3,2
  7005     0C17  2C19               	goto	u4561
  7006     0C18  2C1A               	goto	u4560
  7007     0C19                     u4561:
  7008     0C19  2C4B               	goto	l3067
  7009     0C1A                     u4560:
  7010     0C1A                     l3059:
  7011     0C1A  3001               	movlw	1
  7012     0C1B  07B6               	addwf	___flmul@prod,f
  7013     0C1C  3000               	movlw	0
  7014     0C1D  1803               	skipnc
  7015     0C1E  3001               	movlw	1
  7016     0C1F  07B7               	addwf	___flmul@prod+1,f
  7017     0C20  3000               	movlw	0
  7018     0C21  1803               	skipnc
  7019     0C22  3001               	movlw	1
  7020     0C23  07B8               	addwf	___flmul@prod+2,f
  7021     0C24  3000               	movlw	0
  7022     0C25  1803               	skipnc
  7023     0C26  3001               	movlw	1
  7024     0C27  07B9               	addwf	___flmul@prod+3,f
  7025     0C28                     l3061:
  7026     0C28  1C39               	btfss	___flmul@prod+3,0
  7027     0C29  2C2B               	goto	u4571
  7028     0C2A  2C2C               	goto	u4570
  7029     0C2B                     u4571:
  7030     0C2B  2C4B               	goto	l3067
  7031     0C2C                     u4570:
  7032     0C2C                     l3063:
  7033     0C2C  0836               	movf	___flmul@prod,w
  7034     0C2D  00AA               	movwf	??___flmul
  7035     0C2E  0837               	movf	___flmul@prod+1,w
  7036     0C2F  00AB               	movwf	??___flmul+1
  7037     0C30  0838               	movf	___flmul@prod+2,w
  7038     0C31  00AC               	movwf	??___flmul+2
  7039     0C32  0839               	movf	___flmul@prod+3,w
  7040     0C33  00AD               	movwf	??___flmul+3
  7041     0C34  3001               	movlw	1
  7042     0C35  00AE               	movwf	??___flmul+4
  7043     0C36                     u4585:
  7044     0C36  0D2D               	rlf	??___flmul+3,w
  7045     0C37  0CAD               	rrf	??___flmul+3,f
  7046     0C38  0CAC               	rrf	??___flmul+2,f
  7047     0C39  0CAB               	rrf	??___flmul+1,f
  7048     0C3A  0CAA               	rrf	??___flmul,f
  7049     0C3B                     u4580:
  7050     0C3B  0BAE               	decfsz	??___flmul+4,f
  7051     0C3C  2C36               	goto	u4585
  7052     0C3D  082D               	movf	??___flmul+3,w
  7053     0C3E  00B9               	movwf	___flmul@prod+3
  7054     0C3F  082C               	movf	??___flmul+2,w
  7055     0C40  00B8               	movwf	___flmul@prod+2
  7056     0C41  082B               	movf	??___flmul+1,w
  7057     0C42  00B7               	movwf	___flmul@prod+1
  7058     0C43  082A               	movf	??___flmul,w
  7059     0C44  00B6               	movwf	___flmul@prod
  7060     0C45                     l3065:
  7061     0C45  3001               	movlw	1
  7062     0C46  07BA               	addwf	___flmul@temp,f
  7063     0C47  1803               	skipnc
  7064     0C48  0ABB               	incf	___flmul@temp+1,f
  7065     0C49  3000               	movlw	0
  7066     0C4A  07BB               	addwf	___flmul@temp+1,f
  7067     0C4B                     l3067:
  7068     0C4B  083B               	movf	___flmul@temp+1,w
  7069     0C4C  3A80               	xorlw	128
  7070     0C4D  00FF               	movwf	btemp+1
  7071     0C4E  3080               	movlw	128
  7072     0C4F  027F               	subwf	btemp+1,w
  7073     0C50  1D03               	skipz
  7074     0C51  2C54               	goto	u4595
  7075     0C52  30FF               	movlw	255
  7076     0C53  023A               	subwf	___flmul@temp,w
  7077     0C54                     u4595:
  7078     0C54  1C03               	skipc
  7079     0C55  2C57               	goto	u4591
  7080     0C56  2C58               	goto	u4590
  7081     0C57                     u4591:
  7082     0C57  2C63               	goto	l3071
  7083     0C58                     u4590:
  7084     0C58                     l3069:
  7085     0C58  307F               	movlw	127
  7086     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  7087     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  7088     0C5B  00B9               	movwf	___flmul@prod+3
  7089     0C5C  3080               	movlw	128
  7090     0C5D  00B8               	movwf	___flmul@prod+2
  7091     0C5E  3000               	movlw	0
  7092     0C5F  00B7               	movwf	___flmul@prod+1
  7093     0C60  3000               	movlw	0
  7094     0C61  00B6               	movwf	___flmul@prod
  7095     0C62  2C94               	goto	l857
  7096     0C63                     l3071:
  7097     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  7098     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  7099     0C65  083B               	movf	___flmul@temp+1,w
  7100     0C66  3A80               	xorlw	128
  7101     0C67  00FF               	movwf	btemp+1
  7102     0C68  3080               	movlw	128
  7103     0C69  027F               	subwf	btemp+1,w
  7104     0C6A  1D03               	skipz
  7105     0C6B  2C6E               	goto	u4605
  7106     0C6C  3001               	movlw	1
  7107     0C6D  023A               	subwf	___flmul@temp,w
  7108     0C6E                     u4605:
  7109     0C6E  1803               	skipnc
  7110     0C6F  2C71               	goto	u4601
  7111     0C70  2C72               	goto	u4600
  7112     0C71                     u4601:
  7113     0C71  2C7E               	goto	l3077
  7114     0C72                     u4600:
  7115     0C72                     l3073:
  7116     0C72  3000               	movlw	0
  7117     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  7118     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  7119     0C75  00B9               	movwf	___flmul@prod+3
  7120     0C76  3000               	movlw	0
  7121     0C77  00B8               	movwf	___flmul@prod+2
  7122     0C78  3000               	movlw	0
  7123     0C79  00B7               	movwf	___flmul@prod+1
  7124     0C7A  3000               	movlw	0
  7125     0C7B  00B6               	movwf	___flmul@prod
  7126     0C7C                     l3075:
  7127     0C7C  01AF               	clrf	___flmul@sign
  7128     0C7D  2C94               	goto	l857
  7129     0C7E                     l3077:
  7130     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  7131     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  7132     0C80  083A               	movf	___flmul@temp,w
  7133     0C81  00B5               	movwf	___flmul@bexp
  7134     0C82  30FF               	movlw	255
  7135     0C83  05B6               	andwf	___flmul@prod,f
  7136     0C84  30FF               	movlw	255
  7137     0C85  05B7               	andwf	___flmul@prod+1,f
  7138     0C86  307F               	movlw	127
  7139     0C87  05B8               	andwf	___flmul@prod+2,f
  7140     0C88  3000               	movlw	0
  7141     0C89  05B9               	andwf	___flmul@prod+3,f
  7142     0C8A                     l3079:
  7143     0C8A  1C35               	btfss	___flmul@bexp,0
  7144     0C8B  2C8D               	goto	u4611
  7145     0C8C  2C8E               	goto	u4610
  7146     0C8D                     u4611:
  7147     0C8D  2C8F               	goto	l3083
  7148     0C8E                     u4610:
  7149     0C8E                     l3081:
  7150     0C8E  17B8               	bsf	___flmul@prod+2,7
  7151     0C8F                     l3083:
  7152     0C8F  0835               	movf	___flmul@bexp,w
  7153     0C90  00AA               	movwf	??___flmul
  7154     0C91  1003               	clrc
  7155     0C92  0C2A               	rrf	??___flmul,w
  7156     0C93  00B9               	movwf	___flmul@prod+3
  7157     0C94                     l857:
  7158     0C94  082F               	movf	___flmul@sign,w
  7159     0C95  00AA               	movwf	??___flmul
  7160     0C96  082A               	movf	??___flmul,w
  7161     0C97  04B9               	iorwf	___flmul@prod+3,f
  7162     0C98                     l3085:
  7163     0C98  0839               	movf	___flmul@prod+3,w
  7164     0C99  00A5               	movwf	?___flmul+3
  7165     0C9A  0838               	movf	___flmul@prod+2,w
  7166     0C9B  00A4               	movwf	?___flmul+2
  7167     0C9C  0837               	movf	___flmul@prod+1,w
  7168     0C9D  00A3               	movwf	?___flmul+1
  7169     0C9E  0836               	movf	___flmul@prod,w
  7170     0C9F  00A2               	movwf	?___flmul
  7171     0CA0                     l845:
  7172     0CA0  0008               	return
  7173     0CA1                     __end_of___flmul:
  7174                           
  7175                           	psect	text10
  7176     19B7                     __ptext10:	
  7177 ;; *************** function __Umul8_16 *****************
  7178 ;; Defined at:
  7179 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  multiplier      1    wreg     unsigned char 
  7182 ;;  multiplicand    1    0[COMMON] unsigned char 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;  multiplier      1    8[COMMON] unsigned char 
  7185 ;;  word_mpld       2    6[COMMON] unsigned int 
  7186 ;;  product         2    4[COMMON] unsigned int 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  2    0[COMMON] unsigned int 
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7196 ;;      Params:         2       0       0       0       0
  7197 ;;      Locals:         5       0       0       0       0
  7198 ;;      Temps:          2       0       0       0       0
  7199 ;;      Totals:         9       0       0       0       0
  7200 ;;Total ram usage:        9 bytes
  7201 ;; Hardware stack levels used: 1
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		___flmul
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209     19B7                     __Umul8_16:	
  7210                           ;psect for function __Umul8_16
  7211                           
  7212                           
  7213                           ;incstack = 0
  7214                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7215                           ;__Umul8_16@multiplier stored from wreg
  7216     19B7  00F8               	movwf	__Umul8_16@multiplier
  7217     19B8                     l2593:
  7218     19B8  01F4               	clrf	__Umul8_16@product
  7219     19B9  01F5               	clrf	__Umul8_16@product+1
  7220     19BA                     l2595:
  7221     19BA  0870               	movf	__Umul8_16@multiplicand,w
  7222     19BB  00F2               	movwf	??__Umul8_16
  7223     19BC  01F3               	clrf	??__Umul8_16+1
  7224     19BD  0872               	movf	??__Umul8_16,w
  7225     19BE  00F6               	movwf	__Umul8_16@word_mpld
  7226     19BF  0873               	movf	??__Umul8_16+1,w
  7227     19C0  00F7               	movwf	__Umul8_16@word_mpld+1
  7228     19C1                     l2597:
  7229     19C1  1C78               	btfss	__Umul8_16@multiplier,0
  7230     19C2  29C4               	goto	u3361
  7231     19C3  29C5               	goto	u3360
  7232     19C4                     u3361:
  7233     19C4  29CB               	goto	l864
  7234     19C5                     u3360:
  7235     19C5                     l2599:
  7236     19C5  0876               	movf	__Umul8_16@word_mpld,w
  7237     19C6  07F4               	addwf	__Umul8_16@product,f
  7238     19C7  1803               	skipnc
  7239     19C8  0AF5               	incf	__Umul8_16@product+1,f
  7240     19C9  0877               	movf	__Umul8_16@word_mpld+1,w
  7241     19CA  07F5               	addwf	__Umul8_16@product+1,f
  7242     19CB                     l864:
  7243     19CB  3001               	movlw	1
  7244     19CC                     u3375:
  7245     19CC  1003               	clrc
  7246     19CD  0DF6               	rlf	__Umul8_16@word_mpld,f
  7247     19CE  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7248     19CF  3EFF               	addlw	-1
  7249     19D0  1D03               	skipz
  7250     19D1  29CC               	goto	u3375
  7251     19D2  1003               	clrc
  7252     19D3  0CF8               	rrf	__Umul8_16@multiplier,f
  7253     19D4                     l2601:
  7254     19D4  0878               	movf	__Umul8_16@multiplier,w
  7255     19D5  1D03               	btfss	3,2
  7256     19D6  29D8               	goto	u3381
  7257     19D7  29D9               	goto	u3380
  7258     19D8                     u3381:
  7259     19D8  29C1               	goto	l2597
  7260     19D9                     u3380:
  7261     19D9                     l2603:
  7262     19D9  0875               	movf	__Umul8_16@product+1,w
  7263     19DA  00F1               	movwf	?__Umul8_16+1
  7264     19DB  0874               	movf	__Umul8_16@product,w
  7265     19DC  00F0               	movwf	?__Umul8_16
  7266     19DD                     l866:
  7267     19DD  0008               	return
  7268     19DE                     __end_of__Umul8_16:
  7269                           
  7270                           	psect	text11
  7271     1D76                     __ptext11:	
  7272 ;; *************** function __tdiv_to_l_ *****************
  7273 ;; Defined at:
  7274 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  f1              4    0[COMMON] float 
  7277 ;;  f2              4    4[COMMON] float 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  quot            4    0[BANK0 ] unsigned long 
  7280 ;;  exp1            1    5[BANK0 ] unsigned char 
  7281 ;;  cntr            1    4[BANK0 ] unsigned char 
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  4    0[COMMON] unsigned long 
  7284 ;; Registers used:
  7285 ;;		wreg, status,2, status,0
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7291 ;;      Params:         8       0       0       0       0
  7292 ;;      Locals:         0       6       0       0       0
  7293 ;;      Temps:          3       0       0       0       0
  7294 ;;      Totals:        11       6       0       0       0
  7295 ;;Total ram usage:       17 bytes
  7296 ;; Hardware stack levels used: 1
  7297 ;; This function calls:
  7298 ;;		Nothing
  7299 ;; This function is called by:
  7300 ;;		_sprintf
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304     1D76                     __tdiv_to_l_:	
  7305                           ;psect for function __tdiv_to_l_
  7306                           
  7307     1D76                     l3179:	
  7308                           ;incstack = 0
  7309                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7310                           
  7311     1D76  0870               	movf	__tdiv_to_l_@f1,w
  7312     1D77  00F8               	movwf	??__tdiv_to_l_
  7313     1D78  0871               	movf	__tdiv_to_l_@f1+1,w
  7314     1D79  00F9               	movwf	??__tdiv_to_l_+1
  7315     1D7A  0872               	movf	__tdiv_to_l_@f1+2,w
  7316     1D7B  00FA               	movwf	??__tdiv_to_l_+2
  7317     1D7C  1003               	clrc
  7318     1D7D  0D79               	rlf	??__tdiv_to_l_+1,w
  7319     1D7E  0D7A               	rlf	??__tdiv_to_l_+2,w
  7320     1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  7321     1D80  1303               	bcf	3,6	;RP1=0, select bank0
  7322     1D81  00A5               	movwf	__tdiv_to_l_@exp1
  7323     1D82  0825               	movf	__tdiv_to_l_@exp1,w
  7324     1D83  1D03               	btfss	3,2
  7325     1D84  2D86               	goto	u4891
  7326     1D85  2D87               	goto	u4890
  7327     1D86                     u4891:
  7328     1D86  2D90               	goto	l3185
  7329     1D87                     u4890:
  7330     1D87                     l3181:
  7331     1D87  3000               	movlw	0
  7332     1D88  00F3               	movwf	?__tdiv_to_l_+3
  7333     1D89  3000               	movlw	0
  7334     1D8A  00F2               	movwf	?__tdiv_to_l_+2
  7335     1D8B  3000               	movlw	0
  7336     1D8C  00F1               	movwf	?__tdiv_to_l_+1
  7337     1D8D  3000               	movlw	0
  7338     1D8E  00F0               	movwf	?__tdiv_to_l_
  7339     1D8F  2E2C               	goto	l639
  7340     1D90                     l3185:
  7341     1D90  0874               	movf	__tdiv_to_l_@f2,w
  7342     1D91  00F8               	movwf	??__tdiv_to_l_
  7343     1D92  0875               	movf	__tdiv_to_l_@f2+1,w
  7344     1D93  00F9               	movwf	??__tdiv_to_l_+1
  7345     1D94  0876               	movf	__tdiv_to_l_@f2+2,w
  7346     1D95  00FA               	movwf	??__tdiv_to_l_+2
  7347     1D96  1003               	clrc
  7348     1D97  0D79               	rlf	??__tdiv_to_l_+1,w
  7349     1D98  0D7A               	rlf	??__tdiv_to_l_+2,w
  7350     1D99  00A4               	movwf	__tdiv_to_l_@cntr
  7351     1D9A  0824               	movf	__tdiv_to_l_@cntr,w
  7352     1D9B  1D03               	btfss	3,2
  7353     1D9C  2D9E               	goto	u4901
  7354     1D9D  2D9F               	goto	u4900
  7355     1D9E                     u4901:
  7356     1D9E  2DA0               	goto	l640
  7357     1D9F                     u4900:
  7358     1D9F  2D87               	goto	l3181
  7359     1DA0                     l640:
  7360     1DA0  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7361     1DA1                     l3191:
  7362     1DA1  30FF               	movlw	255
  7363     1DA2  05F0               	andwf	__tdiv_to_l_@f1,f
  7364     1DA3  30FF               	movlw	255
  7365     1DA4  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7366     1DA5  3000               	movlw	0
  7367     1DA6  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7368     1DA7                     l3193:
  7369     1DA7  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7370     1DA8  30FF               	movlw	255
  7371     1DA9  05F4               	andwf	__tdiv_to_l_@f2,f
  7372     1DAA  30FF               	movlw	255
  7373     1DAB  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7374     1DAC  3000               	movlw	0
  7375     1DAD  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7376     1DAE  3000               	movlw	0
  7377     1DAF  00A3               	movwf	__tdiv_to_l_@quot+3
  7378     1DB0  3000               	movlw	0
  7379     1DB1  00A2               	movwf	__tdiv_to_l_@quot+2
  7380     1DB2  3000               	movlw	0
  7381     1DB3  00A1               	movwf	__tdiv_to_l_@quot+1
  7382     1DB4  3000               	movlw	0
  7383     1DB5  00A0               	movwf	__tdiv_to_l_@quot
  7384     1DB6                     l3195:
  7385     1DB6  307F               	movlw	127
  7386     1DB7  02A5               	subwf	__tdiv_to_l_@exp1,f
  7387     1DB8                     l3197:
  7388     1DB8  3098               	movlw	152
  7389     1DB9  0724               	addwf	__tdiv_to_l_@cntr,w
  7390     1DBA  00F8               	movwf	??__tdiv_to_l_
  7391     1DBB  0878               	movf	??__tdiv_to_l_,w
  7392     1DBC  02A5               	subwf	__tdiv_to_l_@exp1,f
  7393     1DBD  3018               	movlw	24
  7394     1DBE  00A4               	movwf	__tdiv_to_l_@cntr
  7395     1DBF                     l3199:
  7396     1DBF  3001               	movlw	1
  7397     1DC0  00F8               	movwf	??__tdiv_to_l_
  7398     1DC1                     u4915:
  7399     1DC1  1003               	clrc
  7400     1DC2  0DA0               	rlf	__tdiv_to_l_@quot,f
  7401     1DC3  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7402     1DC4  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7403     1DC5  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7404     1DC6  0BF8               	decfsz	??__tdiv_to_l_,f
  7405     1DC7  2DC1               	goto	u4915
  7406     1DC8                     l3201:
  7407     1DC8  0876               	movf	__tdiv_to_l_@f2+2,w
  7408     1DC9  0272               	subwf	__tdiv_to_l_@f1+2,w
  7409     1DCA  1D03               	skipz
  7410     1DCB  2DD2               	goto	u4925
  7411     1DCC  0875               	movf	__tdiv_to_l_@f2+1,w
  7412     1DCD  0271               	subwf	__tdiv_to_l_@f1+1,w
  7413     1DCE  1D03               	skipz
  7414     1DCF  2DD2               	goto	u4925
  7415     1DD0  0874               	movf	__tdiv_to_l_@f2,w
  7416     1DD1  0270               	subwf	__tdiv_to_l_@f1,w
  7417     1DD2                     u4925:
  7418     1DD2  1C03               	skipc
  7419     1DD3  2DD5               	goto	u4921
  7420     1DD4  2DD6               	goto	u4920
  7421     1DD5                     u4921:
  7422     1DD5  2DE1               	goto	l3207
  7423     1DD6                     u4920:
  7424     1DD6                     l3203:
  7425     1DD6  0874               	movf	__tdiv_to_l_@f2,w
  7426     1DD7  02F0               	subwf	__tdiv_to_l_@f1,f
  7427     1DD8  0875               	movf	__tdiv_to_l_@f2+1,w
  7428     1DD9  1C03               	skipc
  7429     1DDA  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7430     1DDB  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7431     1DDC  0876               	movf	__tdiv_to_l_@f2+2,w
  7432     1DDD  1C03               	skipc
  7433     1DDE  0A76               	incf	__tdiv_to_l_@f2+2,w
  7434     1DDF  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7435     1DE0                     l3205:
  7436     1DE0  1420               	bsf	__tdiv_to_l_@quot,0
  7437     1DE1                     l3207:
  7438     1DE1  3001               	movlw	1
  7439     1DE2                     u4935:
  7440     1DE2  1003               	clrc
  7441     1DE3  0DF0               	rlf	__tdiv_to_l_@f1,f
  7442     1DE4  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7443     1DE5  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7444     1DE6  3EFF               	addlw	-1
  7445     1DE7  1D03               	skipz
  7446     1DE8  2DE2               	goto	u4935
  7447     1DE9                     l3209:
  7448     1DE9  3001               	movlw	1
  7449     1DEA  02A4               	subwf	__tdiv_to_l_@cntr,f
  7450     1DEB  1D03               	btfss	3,2
  7451     1DEC  2DEE               	goto	u4941
  7452     1DED  2DEF               	goto	u4940
  7453     1DEE                     u4941:
  7454     1DEE  2DBF               	goto	l3199
  7455     1DEF                     u4940:
  7456     1DEF                     l643:
  7457     1DEF  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7458     1DF0  2DF2               	goto	u4951
  7459     1DF1  2DF3               	goto	u4950
  7460     1DF2                     u4951:
  7461     1DF2  2E0D               	goto	l3219
  7462     1DF3                     u4950:
  7463     1DF3                     l3211:
  7464     1DF3  0825               	movf	__tdiv_to_l_@exp1,w
  7465     1DF4  3A80               	xorlw	128
  7466     1DF5  3E97               	addlw	151
  7467     1DF6  1803               	skipnc
  7468     1DF7  2DF9               	goto	u4961
  7469     1DF8  2DFA               	goto	u4960
  7470     1DF9                     u4961:
  7471     1DF9  2DFB               	goto	l3217
  7472     1DFA                     u4960:
  7473     1DFA  2D87               	goto	l3181
  7474     1DFB                     l3217:
  7475     1DFB  3001               	movlw	1
  7476     1DFC                     u4975:
  7477     1DFC  1003               	clrc
  7478     1DFD  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7479     1DFE  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7480     1DFF  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7481     1E00  0CA0               	rrf	__tdiv_to_l_@quot,f
  7482     1E01  3EFF               	addlw	-1
  7483     1E02  1D03               	skipz
  7484     1E03  2DFC               	goto	u4975
  7485     1E04  3001               	movlw	1
  7486     1E05  00F8               	movwf	??__tdiv_to_l_
  7487     1E06  0878               	movf	??__tdiv_to_l_,w
  7488     1E07  07A5               	addwf	__tdiv_to_l_@exp1,f
  7489     1E08  1D03               	btfss	3,2
  7490     1E09  2E0B               	goto	u4981
  7491     1E0A  2E0C               	goto	u4980
  7492     1E0B                     u4981:
  7493     1E0B  2DFB               	goto	l3217
  7494     1E0C                     u4980:
  7495     1E0C  2E24               	goto	l3227
  7496     1E0D                     l3219:
  7497     1E0D  3018               	movlw	24
  7498     1E0E  0225               	subwf	__tdiv_to_l_@exp1,w
  7499     1E0F  1C03               	skipc
  7500     1E10  2E12               	goto	u4991
  7501     1E11  2E13               	goto	u4990
  7502     1E12                     u4991:
  7503     1E12  2E1F               	goto	l650
  7504     1E13                     u4990:
  7505     1E13  2D87               	goto	l3181
  7506     1E14                     l3225:
  7507     1E14  3001               	movlw	1
  7508     1E15  00F8               	movwf	??__tdiv_to_l_
  7509     1E16                     u5005:
  7510     1E16  1003               	clrc
  7511     1E17  0DA0               	rlf	__tdiv_to_l_@quot,f
  7512     1E18  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7513     1E19  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7514     1E1A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7515     1E1B  0BF8               	decfsz	??__tdiv_to_l_,f
  7516     1E1C  2E16               	goto	u5005
  7517     1E1D  3001               	movlw	1
  7518     1E1E  02A5               	subwf	__tdiv_to_l_@exp1,f
  7519     1E1F                     l650:
  7520     1E1F  0825               	movf	__tdiv_to_l_@exp1,w
  7521     1E20  1D03               	btfss	3,2
  7522     1E21  2E23               	goto	u5011
  7523     1E22  2E24               	goto	u5010
  7524     1E23                     u5011:
  7525     1E23  2E14               	goto	l3225
  7526     1E24                     u5010:
  7527     1E24                     l3227:
  7528     1E24  0823               	movf	__tdiv_to_l_@quot+3,w
  7529     1E25  00F3               	movwf	?__tdiv_to_l_+3
  7530     1E26  0822               	movf	__tdiv_to_l_@quot+2,w
  7531     1E27  00F2               	movwf	?__tdiv_to_l_+2
  7532     1E28  0821               	movf	__tdiv_to_l_@quot+1,w
  7533     1E29  00F1               	movwf	?__tdiv_to_l_+1
  7534     1E2A  0820               	movf	__tdiv_to_l_@quot,w
  7535     1E2B  00F0               	movwf	?__tdiv_to_l_
  7536     1E2C                     l639:
  7537     1E2C  0008               	return
  7538     1E2D                     __end_of__tdiv_to_l_:
  7539                           
  7540                           	psect	text12
  7541     08A4                     __ptext12:	
  7542 ;; *************** function __div_to_l_ *****************
  7543 ;; Defined at:
  7544 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  f1              4    0[COMMON] unsigned long 
  7547 ;;  f2              4    4[COMMON] unsigned long 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;  quot            4    0[BANK0 ] unsigned long 
  7550 ;;  exp1            1    5[BANK0 ] unsigned char 
  7551 ;;  cntr            1    4[BANK0 ] unsigned char 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  4    0[COMMON] unsigned long 
  7554 ;; Registers used:
  7555 ;;		wreg, status,2, status,0
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7561 ;;      Params:         8       0       0       0       0
  7562 ;;      Locals:         0       6       0       0       0
  7563 ;;      Temps:          1       0       0       0       0
  7564 ;;      Totals:         9       6       0       0       0
  7565 ;;Total ram usage:       15 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		_sprintf
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574     08A4                     __div_to_l_:	
  7575                           ;psect for function __div_to_l_
  7576                           
  7577     08A4                     l3231:	
  7578                           ;incstack = 0
  7579                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7580                           
  7581     08A4  1003               	clrc
  7582     08A5  0D72               	rlf	__div_to_l_@f1+2,w
  7583     08A6  0D73               	rlf	__div_to_l_@f1+3,w
  7584     08A7  1283               	bcf	3,5	;RP0=0, select bank0
  7585     08A8  1303               	bcf	3,6	;RP1=0, select bank0
  7586     08A9  00A5               	movwf	__div_to_l_@exp1
  7587     08AA  0825               	movf	__div_to_l_@exp1,w
  7588     08AB  1D03               	btfss	3,2
  7589     08AC  28AE               	goto	u5021
  7590     08AD  28AF               	goto	u5020
  7591     08AE                     u5021:
  7592     08AE  28B8               	goto	l3237
  7593     08AF                     u5020:
  7594     08AF                     l3233:
  7595     08AF  3000               	movlw	0
  7596     08B0  00F3               	movwf	?__div_to_l_+3
  7597     08B1  3000               	movlw	0
  7598     08B2  00F2               	movwf	?__div_to_l_+2
  7599     08B3  3000               	movlw	0
  7600     08B4  00F1               	movwf	?__div_to_l_+1
  7601     08B5  3000               	movlw	0
  7602     08B6  00F0               	movwf	?__div_to_l_
  7603     08B7  295B               	goto	l592
  7604     08B8                     l3237:
  7605     08B8  1003               	clrc
  7606     08B9  0D76               	rlf	__div_to_l_@f2+2,w
  7607     08BA  0D77               	rlf	__div_to_l_@f2+3,w
  7608     08BB  00A4               	movwf	__div_to_l_@cntr
  7609     08BC  0824               	movf	__div_to_l_@cntr,w
  7610     08BD  1D03               	btfss	3,2
  7611     08BE  28C0               	goto	u5031
  7612     08BF  28C1               	goto	u5030
  7613     08C0                     u5031:
  7614     08C0  28C2               	goto	l593
  7615     08C1                     u5030:
  7616     08C1  28AF               	goto	l3233
  7617     08C2                     l593:
  7618     08C2  17F2               	bsf	__div_to_l_@f1+2,7
  7619     08C3                     l3243:
  7620     08C3  30FF               	movlw	255
  7621     08C4  05F0               	andwf	__div_to_l_@f1,f
  7622     08C5  30FF               	movlw	255
  7623     08C6  05F1               	andwf	__div_to_l_@f1+1,f
  7624     08C7  30FF               	movlw	255
  7625     08C8  05F2               	andwf	__div_to_l_@f1+2,f
  7626     08C9  3000               	movlw	0
  7627     08CA  05F3               	andwf	__div_to_l_@f1+3,f
  7628     08CB                     l3245:
  7629     08CB  17F6               	bsf	__div_to_l_@f2+2,7
  7630     08CC  30FF               	movlw	255
  7631     08CD  05F4               	andwf	__div_to_l_@f2,f
  7632     08CE  30FF               	movlw	255
  7633     08CF  05F5               	andwf	__div_to_l_@f2+1,f
  7634     08D0  30FF               	movlw	255
  7635     08D1  05F6               	andwf	__div_to_l_@f2+2,f
  7636     08D2  3000               	movlw	0
  7637     08D3  05F7               	andwf	__div_to_l_@f2+3,f
  7638     08D4  3000               	movlw	0
  7639     08D5  00A3               	movwf	__div_to_l_@quot+3
  7640     08D6  3000               	movlw	0
  7641     08D7  00A2               	movwf	__div_to_l_@quot+2
  7642     08D8  3000               	movlw	0
  7643     08D9  00A1               	movwf	__div_to_l_@quot+1
  7644     08DA  3000               	movlw	0
  7645     08DB  00A0               	movwf	__div_to_l_@quot
  7646     08DC                     l3247:
  7647     08DC  307F               	movlw	127
  7648     08DD  02A5               	subwf	__div_to_l_@exp1,f
  7649     08DE                     l3249:
  7650     08DE  30A0               	movlw	160
  7651     08DF  0724               	addwf	__div_to_l_@cntr,w
  7652     08E0  00F8               	movwf	??__div_to_l_
  7653     08E1  0878               	movf	??__div_to_l_,w
  7654     08E2  02A5               	subwf	__div_to_l_@exp1,f
  7655     08E3  3020               	movlw	32
  7656     08E4  00A4               	movwf	__div_to_l_@cntr
  7657     08E5                     l3251:
  7658     08E5  3001               	movlw	1
  7659     08E6  00F8               	movwf	??__div_to_l_
  7660     08E7                     u5045:
  7661     08E7  1003               	clrc
  7662     08E8  0DA0               	rlf	__div_to_l_@quot,f
  7663     08E9  0DA1               	rlf	__div_to_l_@quot+1,f
  7664     08EA  0DA2               	rlf	__div_to_l_@quot+2,f
  7665     08EB  0DA3               	rlf	__div_to_l_@quot+3,f
  7666     08EC  0BF8               	decfsz	??__div_to_l_,f
  7667     08ED  28E7               	goto	u5045
  7668     08EE                     l3253:
  7669     08EE  0877               	movf	__div_to_l_@f2+3,w
  7670     08EF  0273               	subwf	__div_to_l_@f1+3,w
  7671     08F0  1D03               	skipz
  7672     08F1  28FC               	goto	u5055
  7673     08F2  0876               	movf	__div_to_l_@f2+2,w
  7674     08F3  0272               	subwf	__div_to_l_@f1+2,w
  7675     08F4  1D03               	skipz
  7676     08F5  28FC               	goto	u5055
  7677     08F6  0875               	movf	__div_to_l_@f2+1,w
  7678     08F7  0271               	subwf	__div_to_l_@f1+1,w
  7679     08F8  1D03               	skipz
  7680     08F9  28FC               	goto	u5055
  7681     08FA  0874               	movf	__div_to_l_@f2,w
  7682     08FB  0270               	subwf	__div_to_l_@f1,w
  7683     08FC                     u5055:
  7684     08FC  1C03               	skipc
  7685     08FD  28FF               	goto	u5051
  7686     08FE  2900               	goto	u5050
  7687     08FF                     u5051:
  7688     08FF  290F               	goto	l3259
  7689     0900                     u5050:
  7690     0900                     l3255:
  7691     0900  0874               	movf	__div_to_l_@f2,w
  7692     0901  02F0               	subwf	__div_to_l_@f1,f
  7693     0902  0875               	movf	__div_to_l_@f2+1,w
  7694     0903  1C03               	skipc
  7695     0904  0F75               	incfsz	__div_to_l_@f2+1,w
  7696     0905  02F1               	subwf	__div_to_l_@f1+1,f
  7697     0906  0876               	movf	__div_to_l_@f2+2,w
  7698     0907  1C03               	skipc
  7699     0908  0F76               	incfsz	__div_to_l_@f2+2,w
  7700     0909  02F2               	subwf	__div_to_l_@f1+2,f
  7701     090A  0877               	movf	__div_to_l_@f2+3,w
  7702     090B  1C03               	skipc
  7703     090C  0F77               	incfsz	__div_to_l_@f2+3,w
  7704     090D  02F3               	subwf	__div_to_l_@f1+3,f
  7705     090E                     l3257:
  7706     090E  1420               	bsf	__div_to_l_@quot,0
  7707     090F                     l3259:
  7708     090F  3001               	movlw	1
  7709     0910  00F8               	movwf	??__div_to_l_
  7710     0911                     u5065:
  7711     0911  1003               	clrc
  7712     0912  0DF0               	rlf	__div_to_l_@f1,f
  7713     0913  0DF1               	rlf	__div_to_l_@f1+1,f
  7714     0914  0DF2               	rlf	__div_to_l_@f1+2,f
  7715     0915  0DF3               	rlf	__div_to_l_@f1+3,f
  7716     0916  0BF8               	decfsz	??__div_to_l_,f
  7717     0917  2911               	goto	u5065
  7718     0918                     l3261:
  7719     0918  3001               	movlw	1
  7720     0919  02A4               	subwf	__div_to_l_@cntr,f
  7721     091A  1D03               	btfss	3,2
  7722     091B  291D               	goto	u5071
  7723     091C  291E               	goto	u5070
  7724     091D                     u5071:
  7725     091D  28E5               	goto	l3251
  7726     091E                     u5070:
  7727     091E                     l596:
  7728     091E  1FA5               	btfss	__div_to_l_@exp1,7
  7729     091F  2921               	goto	u5081
  7730     0920  2922               	goto	u5080
  7731     0921                     u5081:
  7732     0921  293C               	goto	l3271
  7733     0922                     u5080:
  7734     0922                     l3263:
  7735     0922  0825               	movf	__div_to_l_@exp1,w
  7736     0923  3A80               	xorlw	128
  7737     0924  3E9F               	addlw	159
  7738     0925  1803               	skipnc
  7739     0926  2928               	goto	u5091
  7740     0927  2929               	goto	u5090
  7741     0928                     u5091:
  7742     0928  292A               	goto	l3269
  7743     0929                     u5090:
  7744     0929  28AF               	goto	l3233
  7745     092A                     l3269:
  7746     092A  3001               	movlw	1
  7747     092B                     u5105:
  7748     092B  1003               	clrc
  7749     092C  0CA3               	rrf	__div_to_l_@quot+3,f
  7750     092D  0CA2               	rrf	__div_to_l_@quot+2,f
  7751     092E  0CA1               	rrf	__div_to_l_@quot+1,f
  7752     092F  0CA0               	rrf	__div_to_l_@quot,f
  7753     0930  3EFF               	addlw	-1
  7754     0931  1D03               	skipz
  7755     0932  292B               	goto	u5105
  7756     0933  3001               	movlw	1
  7757     0934  00F8               	movwf	??__div_to_l_
  7758     0935  0878               	movf	??__div_to_l_,w
  7759     0936  07A5               	addwf	__div_to_l_@exp1,f
  7760     0937  1D03               	btfss	3,2
  7761     0938  293A               	goto	u5111
  7762     0939  293B               	goto	u5110
  7763     093A                     u5111:
  7764     093A  292A               	goto	l3269
  7765     093B                     u5110:
  7766     093B  2953               	goto	l3279
  7767     093C                     l3271:
  7768     093C  3020               	movlw	32
  7769     093D  0225               	subwf	__div_to_l_@exp1,w
  7770     093E  1C03               	skipc
  7771     093F  2941               	goto	u5121
  7772     0940  2942               	goto	u5120
  7773     0941                     u5121:
  7774     0941  294E               	goto	l603
  7775     0942                     u5120:
  7776     0942  28AF               	goto	l3233
  7777     0943                     l3277:
  7778     0943  3001               	movlw	1
  7779     0944  00F8               	movwf	??__div_to_l_
  7780     0945                     u5135:
  7781     0945  1003               	clrc
  7782     0946  0DA0               	rlf	__div_to_l_@quot,f
  7783     0947  0DA1               	rlf	__div_to_l_@quot+1,f
  7784     0948  0DA2               	rlf	__div_to_l_@quot+2,f
  7785     0949  0DA3               	rlf	__div_to_l_@quot+3,f
  7786     094A  0BF8               	decfsz	??__div_to_l_,f
  7787     094B  2945               	goto	u5135
  7788     094C  3001               	movlw	1
  7789     094D  02A5               	subwf	__div_to_l_@exp1,f
  7790     094E                     l603:
  7791     094E  0825               	movf	__div_to_l_@exp1,w
  7792     094F  1D03               	btfss	3,2
  7793     0950  2952               	goto	u5141
  7794     0951  2953               	goto	u5140
  7795     0952                     u5141:
  7796     0952  2943               	goto	l3277
  7797     0953                     u5140:
  7798     0953                     l3279:
  7799     0953  0823               	movf	__div_to_l_@quot+3,w
  7800     0954  00F3               	movwf	?__div_to_l_+3
  7801     0955  0822               	movf	__div_to_l_@quot+2,w
  7802     0956  00F2               	movwf	?__div_to_l_+2
  7803     0957  0821               	movf	__div_to_l_@quot+1,w
  7804     0958  00F1               	movwf	?__div_to_l_+1
  7805     0959  0820               	movf	__div_to_l_@quot,w
  7806     095A  00F0               	movwf	?__div_to_l_
  7807     095B                     l592:
  7808     095B  0008               	return
  7809     095C                     __end_of__div_to_l_:
  7810                           
  7811                           	psect	text13
  7812     1084                     __ptext13:	
  7813 ;; *************** function ___xxtofl *****************
  7814 ;; Defined at:
  7815 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  sign            1    wreg     unsigned char 
  7818 ;;  val             4    0[COMMON] long 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  sign            1    8[COMMON] unsigned char 
  7821 ;;  arg             4   10[COMMON] unsigned long 
  7822 ;;  exp             1    9[COMMON] unsigned char 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  4    0[COMMON] unsigned char 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7832 ;;      Params:         4       0       0       0       0
  7833 ;;      Locals:         6       0       0       0       0
  7834 ;;      Temps:          4       0       0       0       0
  7835 ;;      Totals:        14       0       0       0       0
  7836 ;;Total ram usage:       14 bytes
  7837 ;; Hardware stack levels used: 1
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_main
  7842 ;;		_sprintf
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846     1084                     ___xxtofl:	
  7847                           ;psect for function ___xxtofl
  7848                           
  7849                           
  7850                           ;incstack = 0
  7851                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7852                           ;___xxtofl@sign stored from wreg
  7853     1084  00F8               	movwf	___xxtofl@sign
  7854     1085                     l3423:
  7855     1085  0878               	movf	___xxtofl@sign,w
  7856     1086  1903               	btfsc	3,2
  7857     1087  2889               	goto	u5531
  7858     1088  288A               	goto	u5530
  7859     1089                     u5531:
  7860     1089  289E               	goto	l3429
  7861     108A                     u5530:
  7862     108A                     l3425:
  7863     108A  1FF3               	btfss	___xxtofl@val+3,7
  7864     108B  288D               	goto	u5541
  7865     108C  288E               	goto	u5540
  7866     108D                     u5541:
  7867     108D  289E               	goto	l3429
  7868     108E                     u5540:
  7869     108E                     l3427:
  7870     108E  0970               	comf	___xxtofl@val,w
  7871     108F  00FA               	movwf	___xxtofl@arg
  7872     1090  0971               	comf	___xxtofl@val+1,w
  7873     1091  00FB               	movwf	___xxtofl@arg+1
  7874     1092  0972               	comf	___xxtofl@val+2,w
  7875     1093  00FC               	movwf	___xxtofl@arg+2
  7876     1094  0973               	comf	___xxtofl@val+3,w
  7877     1095  00FD               	movwf	___xxtofl@arg+3
  7878     1096  0AFA               	incf	___xxtofl@arg,f
  7879     1097  1903               	skipnz
  7880     1098  0AFB               	incf	___xxtofl@arg+1,f
  7881     1099  1903               	skipnz
  7882     109A  0AFC               	incf	___xxtofl@arg+2,f
  7883     109B  1903               	skipnz
  7884     109C  0AFD               	incf	___xxtofl@arg+3,f
  7885     109D  28A6               	goto	l889
  7886     109E                     l3429:
  7887     109E  0873               	movf	___xxtofl@val+3,w
  7888     109F  00FD               	movwf	___xxtofl@arg+3
  7889     10A0  0872               	movf	___xxtofl@val+2,w
  7890     10A1  00FC               	movwf	___xxtofl@arg+2
  7891     10A2  0871               	movf	___xxtofl@val+1,w
  7892     10A3  00FB               	movwf	___xxtofl@arg+1
  7893     10A4  0870               	movf	___xxtofl@val,w
  7894     10A5  00FA               	movwf	___xxtofl@arg
  7895     10A6                     l889:
  7896     10A6  0873               	movf	___xxtofl@val+3,w
  7897     10A7  0472               	iorwf	___xxtofl@val+2,w
  7898     10A8  0471               	iorwf	___xxtofl@val+1,w
  7899     10A9  0470               	iorwf	___xxtofl@val,w
  7900     10AA  1D03               	skipz
  7901     10AB  28AD               	goto	u5551
  7902     10AC  28AE               	goto	u5550
  7903     10AD                     u5551:
  7904     10AD  28B7               	goto	l3435
  7905     10AE                     u5550:
  7906     10AE                     l3431:
  7907     10AE  3000               	movlw	0
  7908     10AF  00F3               	movwf	?___xxtofl+3
  7909     10B0  3000               	movlw	0
  7910     10B1  00F2               	movwf	?___xxtofl+2
  7911     10B2  3000               	movlw	0
  7912     10B3  00F1               	movwf	?___xxtofl+1
  7913     10B4  3000               	movlw	0
  7914     10B5  00F0               	movwf	?___xxtofl
  7915     10B6  293B               	goto	l891
  7916     10B7                     l3435:
  7917     10B7  3096               	movlw	150
  7918     10B8  00F9               	movwf	___xxtofl@exp
  7919     10B9  28C7               	goto	l3439
  7920     10BA                     l3437:
  7921     10BA  3001               	movlw	1
  7922     10BB  00F4               	movwf	??___xxtofl
  7923     10BC  0874               	movf	??___xxtofl,w
  7924     10BD  07F9               	addwf	___xxtofl@exp,f
  7925     10BE  3001               	movlw	1
  7926     10BF                     u5565:
  7927     10BF  1003               	clrc
  7928     10C0  0CFD               	rrf	___xxtofl@arg+3,f
  7929     10C1  0CFC               	rrf	___xxtofl@arg+2,f
  7930     10C2  0CFB               	rrf	___xxtofl@arg+1,f
  7931     10C3  0CFA               	rrf	___xxtofl@arg,f
  7932     10C4  3EFF               	addlw	-1
  7933     10C5  1D03               	skipz
  7934     10C6  28BF               	goto	u5565
  7935     10C7                     l3439:
  7936     10C7  30FE               	movlw	254
  7937     10C8  057D               	andwf	___xxtofl@arg+3,w
  7938     10C9  1D03               	btfss	3,2
  7939     10CA  28CC               	goto	u5571
  7940     10CB  28CD               	goto	u5570
  7941     10CC                     u5571:
  7942     10CC  28BA               	goto	l3437
  7943     10CD                     u5570:
  7944     10CD  28E9               	goto	l895
  7945     10CE                     l3441:
  7946     10CE  3001               	movlw	1
  7947     10CF  00F4               	movwf	??___xxtofl
  7948     10D0  0874               	movf	??___xxtofl,w
  7949     10D1  07F9               	addwf	___xxtofl@exp,f
  7950     10D2                     l3443:
  7951     10D2  3001               	movlw	1
  7952     10D3  07FA               	addwf	___xxtofl@arg,f
  7953     10D4  3000               	movlw	0
  7954     10D5  1803               	skipnc
  7955     10D6  3001               	movlw	1
  7956     10D7  07FB               	addwf	___xxtofl@arg+1,f
  7957     10D8  3000               	movlw	0
  7958     10D9  1803               	skipnc
  7959     10DA  3001               	movlw	1
  7960     10DB  07FC               	addwf	___xxtofl@arg+2,f
  7961     10DC  3000               	movlw	0
  7962     10DD  1803               	skipnc
  7963     10DE  3001               	movlw	1
  7964     10DF  07FD               	addwf	___xxtofl@arg+3,f
  7965     10E0                     l3445:
  7966     10E0  3001               	movlw	1
  7967     10E1                     u5585:
  7968     10E1  1003               	clrc
  7969     10E2  0CFD               	rrf	___xxtofl@arg+3,f
  7970     10E3  0CFC               	rrf	___xxtofl@arg+2,f
  7971     10E4  0CFB               	rrf	___xxtofl@arg+1,f
  7972     10E5  0CFA               	rrf	___xxtofl@arg,f
  7973     10E6  3EFF               	addlw	-1
  7974     10E7  1D03               	skipz
  7975     10E8  28E1               	goto	u5585
  7976     10E9                     l895:
  7977     10E9  30FF               	movlw	255
  7978     10EA  057D               	andwf	___xxtofl@arg+3,w
  7979     10EB  1D03               	btfss	3,2
  7980     10EC  28EE               	goto	u5591
  7981     10ED  28EF               	goto	u5590
  7982     10EE                     u5591:
  7983     10EE  28CE               	goto	l3441
  7984     10EF                     u5590:
  7985     10EF  28FB               	goto	l3449
  7986     10F0                     l3447:
  7987     10F0  3001               	movlw	1
  7988     10F1  02F9               	subwf	___xxtofl@exp,f
  7989     10F2  3001               	movlw	1
  7990     10F3  00F4               	movwf	??___xxtofl
  7991     10F4                     u5605:
  7992     10F4  1003               	clrc
  7993     10F5  0DFA               	rlf	___xxtofl@arg,f
  7994     10F6  0DFB               	rlf	___xxtofl@arg+1,f
  7995     10F7  0DFC               	rlf	___xxtofl@arg+2,f
  7996     10F8  0DFD               	rlf	___xxtofl@arg+3,f
  7997     10F9  0BF4               	decfsz	??___xxtofl,f
  7998     10FA  28F4               	goto	u5605
  7999     10FB                     l3449:
  8000     10FB  1BFC               	btfsc	___xxtofl@arg+2,7
  8001     10FC  28FE               	goto	u5611
  8002     10FD  28FF               	goto	u5610
  8003     10FE                     u5611:
  8004     10FE  2905               	goto	l902
  8005     10FF                     u5610:
  8006     10FF                     l3451:
  8007     10FF  3002               	movlw	2
  8008     1100  0279               	subwf	___xxtofl@exp,w
  8009     1101  1803               	skipnc
  8010     1102  2904               	goto	u5621
  8011     1103  2905               	goto	u5620
  8012     1104                     u5621:
  8013     1104  28F0               	goto	l3447
  8014     1105                     u5620:
  8015     1105                     l902:
  8016     1105  1879               	btfsc	___xxtofl@exp,0
  8017     1106  2908               	goto	u5631
  8018     1107  2909               	goto	u5630
  8019     1108                     u5631:
  8020     1108  2911               	goto	l903
  8021     1109                     u5630:
  8022     1109                     l3453:
  8023     1109  30FF               	movlw	255
  8024     110A  05FA               	andwf	___xxtofl@arg,f
  8025     110B  30FF               	movlw	255
  8026     110C  05FB               	andwf	___xxtofl@arg+1,f
  8027     110D  307F               	movlw	127
  8028     110E  05FC               	andwf	___xxtofl@arg+2,f
  8029     110F  30FF               	movlw	255
  8030     1110  05FD               	andwf	___xxtofl@arg+3,f
  8031     1111                     l903:
  8032     1111  1003               	clrc
  8033     1112  0CF9               	rrf	___xxtofl@exp,f
  8034     1113                     l3455:
  8035     1113  0879               	movf	___xxtofl@exp,w
  8036     1114  00F4               	movwf	??___xxtofl
  8037     1115  01F5               	clrf	??___xxtofl+1
  8038     1116  01F6               	clrf	??___xxtofl+2
  8039     1117  01F7               	clrf	??___xxtofl+3
  8040     1118  3018               	movlw	24
  8041     1119                     u5645:
  8042     1119  1003               	clrc
  8043     111A  0DF4               	rlf	??___xxtofl,f
  8044     111B  0DF5               	rlf	??___xxtofl+1,f
  8045     111C  0DF6               	rlf	??___xxtofl+2,f
  8046     111D  0DF7               	rlf	??___xxtofl+3,f
  8047     111E                     u5640:
  8048     111E  3EFF               	addlw	-1
  8049     111F  1D03               	skipz
  8050     1120  2919               	goto	u5645
  8051     1121  0874               	movf	??___xxtofl,w
  8052     1122  04FA               	iorwf	___xxtofl@arg,f
  8053     1123  0875               	movf	??___xxtofl+1,w
  8054     1124  04FB               	iorwf	___xxtofl@arg+1,f
  8055     1125  0876               	movf	??___xxtofl+2,w
  8056     1126  04FC               	iorwf	___xxtofl@arg+2,f
  8057     1127  0877               	movf	??___xxtofl+3,w
  8058     1128  04FD               	iorwf	___xxtofl@arg+3,f
  8059     1129                     l3457:
  8060     1129  0878               	movf	___xxtofl@sign,w
  8061     112A  1903               	btfsc	3,2
  8062     112B  292D               	goto	u5651
  8063     112C  292E               	goto	u5650
  8064     112D                     u5651:
  8065     112D  2933               	goto	l3463
  8066     112E                     u5650:
  8067     112E                     l3459:
  8068     112E  1FF3               	btfss	___xxtofl@val+3,7
  8069     112F  2931               	goto	u5661
  8070     1130  2932               	goto	u5660
  8071     1131                     u5661:
  8072     1131  2933               	goto	l3463
  8073     1132                     u5660:
  8074     1132                     l3461:
  8075     1132  17FD               	bsf	___xxtofl@arg+3,7
  8076     1133                     l3463:
  8077     1133  087D               	movf	___xxtofl@arg+3,w
  8078     1134  00F3               	movwf	?___xxtofl+3
  8079     1135  087C               	movf	___xxtofl@arg+2,w
  8080     1136  00F2               	movwf	?___xxtofl+2
  8081     1137  087B               	movf	___xxtofl@arg+1,w
  8082     1138  00F1               	movwf	?___xxtofl+1
  8083     1139  087A               	movf	___xxtofl@arg,w
  8084     113A  00F0               	movwf	?___xxtofl
  8085     113B                     l891:
  8086     113B  0008               	return
  8087     113C                     __end_of___xxtofl:
  8088                           
  8089                           	psect	text14
  8090     1992                     __ptext14:	
  8091 ;; *************** function ___wmul *****************
  8092 ;; Defined at:
  8093 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  multiplier      2    0[COMMON] unsigned int 
  8096 ;;  multiplicand    2    2[COMMON] unsigned int 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  product         2    4[COMMON] unsigned int 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  2    0[COMMON] unsigned int 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, status,0
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8108 ;;      Params:         4       0       0       0       0
  8109 ;;      Locals:         2       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0
  8111 ;;      Totals:         6       0       0       0       0
  8112 ;;Total ram usage:        6 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_sprintf
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121     1992                     ___wmul:	
  8122                           ;psect for function ___wmul
  8123                           
  8124     1992                     l3283:	
  8125                           ;incstack = 0
  8126                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8127                           
  8128     1992  01F4               	clrf	___wmul@product
  8129     1993  01F5               	clrf	___wmul@product+1
  8130     1994                     l3285:
  8131     1994  1C70               	btfss	___wmul@multiplier,0
  8132     1995  2997               	goto	u5151
  8133     1996  2998               	goto	u5150
  8134     1997                     u5151:
  8135     1997  299E               	goto	l422
  8136     1998                     u5150:
  8137     1998                     l3287:
  8138     1998  0872               	movf	___wmul@multiplicand,w
  8139     1999  07F4               	addwf	___wmul@product,f
  8140     199A  1803               	skipnc
  8141     199B  0AF5               	incf	___wmul@product+1,f
  8142     199C  0873               	movf	___wmul@multiplicand+1,w
  8143     199D  07F5               	addwf	___wmul@product+1,f
  8144     199E                     l422:
  8145     199E  3001               	movlw	1
  8146     199F                     u5165:
  8147     199F  1003               	clrc
  8148     19A0  0DF2               	rlf	___wmul@multiplicand,f
  8149     19A1  0DF3               	rlf	___wmul@multiplicand+1,f
  8150     19A2  3EFF               	addlw	-1
  8151     19A3  1D03               	skipz
  8152     19A4  299F               	goto	u5165
  8153     19A5                     l3289:
  8154     19A5  3001               	movlw	1
  8155     19A6                     u5175:
  8156     19A6  1003               	clrc
  8157     19A7  0CF1               	rrf	___wmul@multiplier+1,f
  8158     19A8  0CF0               	rrf	___wmul@multiplier,f
  8159     19A9  3EFF               	addlw	-1
  8160     19AA  1D03               	skipz
  8161     19AB  29A6               	goto	u5175
  8162     19AC                     l3291:
  8163     19AC  0870               	movf	___wmul@multiplier,w
  8164     19AD  0471               	iorwf	___wmul@multiplier+1,w
  8165     19AE  1D03               	btfss	3,2
  8166     19AF  29B1               	goto	u5181
  8167     19B0  29B2               	goto	u5180
  8168     19B1                     u5181:
  8169     19B1  2994               	goto	l3285
  8170     19B2                     u5180:
  8171     19B2                     l3293:
  8172     19B2  0875               	movf	___wmul@product+1,w
  8173     19B3  00F1               	movwf	?___wmul+1
  8174     19B4  0874               	movf	___wmul@product,w
  8175     19B5  00F0               	movwf	?___wmul
  8176     19B6                     l424:
  8177     19B6  0008               	return
  8178     19B7                     __end_of___wmul:
  8179                           
  8180                           	psect	text15
  8181     1B99                     __ptext15:	
  8182 ;; *************** function ___llmod *****************
  8183 ;; Defined at:
  8184 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  divisor         4    0[BANK0 ] unsigned long 
  8187 ;;  dividend        4    4[BANK0 ] unsigned long 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  counter         1    9[BANK0 ] unsigned char 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  4    0[BANK0 ] unsigned long 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8199 ;;      Params:         0       8       0       0       0
  8200 ;;      Locals:         0       1       0       0       0
  8201 ;;      Temps:          0       1       0       0       0
  8202 ;;      Totals:         0      10       0       0       0
  8203 ;;Total ram usage:       10 bytes
  8204 ;; Hardware stack levels used: 1
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_sprintf
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212     1B99                     ___llmod:	
  8213                           ;psect for function ___llmod
  8214                           
  8215     1B99                     l3397:	
  8216                           ;incstack = 0
  8217                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8218                           
  8219     1B99  1283               	bcf	3,5	;RP0=0, select bank0
  8220     1B9A  1303               	bcf	3,6	;RP1=0, select bank0
  8221     1B9B  0823               	movf	___llmod@divisor+3,w
  8222     1B9C  0422               	iorwf	___llmod@divisor+2,w
  8223     1B9D  0421               	iorwf	___llmod@divisor+1,w
  8224     1B9E  0420               	iorwf	___llmod@divisor,w
  8225     1B9F  1903               	skipnz
  8226     1BA0  2BA2               	goto	u5471
  8227     1BA1  2BA3               	goto	u5470
  8228     1BA2                     u5471:
  8229     1BA2  2BE6               	goto	l3413
  8230     1BA3                     u5470:
  8231     1BA3                     l3399:
  8232     1BA3  01A9               	clrf	___llmod@counter
  8233     1BA4  0AA9               	incf	___llmod@counter,f
  8234     1BA5  2BB3               	goto	l3403
  8235     1BA6                     l3401:
  8236     1BA6  3001               	movlw	1
  8237     1BA7  00A8               	movwf	??___llmod
  8238     1BA8                     u5485:
  8239     1BA8  1003               	clrc
  8240     1BA9  0DA0               	rlf	___llmod@divisor,f
  8241     1BAA  0DA1               	rlf	___llmod@divisor+1,f
  8242     1BAB  0DA2               	rlf	___llmod@divisor+2,f
  8243     1BAC  0DA3               	rlf	___llmod@divisor+3,f
  8244     1BAD  0BA8               	decfsz	??___llmod,f
  8245     1BAE  2BA8               	goto	u5485
  8246     1BAF  3001               	movlw	1
  8247     1BB0  00A8               	movwf	??___llmod
  8248     1BB1  0828               	movf	??___llmod,w
  8249     1BB2  07A9               	addwf	___llmod@counter,f
  8250     1BB3                     l3403:
  8251     1BB3  1FA3               	btfss	___llmod@divisor+3,7
  8252     1BB4  2BB6               	goto	u5491
  8253     1BB5  2BB7               	goto	u5490
  8254     1BB6                     u5491:
  8255     1BB6  2BA6               	goto	l3401
  8256     1BB7                     u5490:
  8257     1BB7                     l3405:
  8258     1BB7  0823               	movf	___llmod@divisor+3,w
  8259     1BB8  0227               	subwf	___llmod@dividend+3,w
  8260     1BB9  1D03               	skipz
  8261     1BBA  2BC5               	goto	u5505
  8262     1BBB  0822               	movf	___llmod@divisor+2,w
  8263     1BBC  0226               	subwf	___llmod@dividend+2,w
  8264     1BBD  1D03               	skipz
  8265     1BBE  2BC5               	goto	u5505
  8266     1BBF  0821               	movf	___llmod@divisor+1,w
  8267     1BC0  0225               	subwf	___llmod@dividend+1,w
  8268     1BC1  1D03               	skipz
  8269     1BC2  2BC5               	goto	u5505
  8270     1BC3  0820               	movf	___llmod@divisor,w
  8271     1BC4  0224               	subwf	___llmod@dividend,w
  8272     1BC5                     u5505:
  8273     1BC5  1C03               	skipc
  8274     1BC6  2BC8               	goto	u5501
  8275     1BC7  2BC9               	goto	u5500
  8276     1BC8                     u5501:
  8277     1BC8  2BD7               	goto	l3409
  8278     1BC9                     u5500:
  8279     1BC9                     l3407:
  8280     1BC9  0820               	movf	___llmod@divisor,w
  8281     1BCA  02A4               	subwf	___llmod@dividend,f
  8282     1BCB  0821               	movf	___llmod@divisor+1,w
  8283     1BCC  1C03               	skipc
  8284     1BCD  0F21               	incfsz	___llmod@divisor+1,w
  8285     1BCE  02A5               	subwf	___llmod@dividend+1,f
  8286     1BCF  0822               	movf	___llmod@divisor+2,w
  8287     1BD0  1C03               	skipc
  8288     1BD1  0F22               	incfsz	___llmod@divisor+2,w
  8289     1BD2  02A6               	subwf	___llmod@dividend+2,f
  8290     1BD3  0823               	movf	___llmod@divisor+3,w
  8291     1BD4  1C03               	skipc
  8292     1BD5  0F23               	incfsz	___llmod@divisor+3,w
  8293     1BD6  02A7               	subwf	___llmod@dividend+3,f
  8294     1BD7                     l3409:
  8295     1BD7  3001               	movlw	1
  8296     1BD8                     u5515:
  8297     1BD8  1003               	clrc
  8298     1BD9  0CA3               	rrf	___llmod@divisor+3,f
  8299     1BDA  0CA2               	rrf	___llmod@divisor+2,f
  8300     1BDB  0CA1               	rrf	___llmod@divisor+1,f
  8301     1BDC  0CA0               	rrf	___llmod@divisor,f
  8302     1BDD  3EFF               	addlw	-1
  8303     1BDE  1D03               	skipz
  8304     1BDF  2BD8               	goto	u5515
  8305     1BE0                     l3411:
  8306     1BE0  3001               	movlw	1
  8307     1BE1  02A9               	subwf	___llmod@counter,f
  8308     1BE2  1D03               	btfss	3,2
  8309     1BE3  2BE5               	goto	u5521
  8310     1BE4  2BE6               	goto	u5520
  8311     1BE5                     u5521:
  8312     1BE5  2BB7               	goto	l3405
  8313     1BE6                     u5520:
  8314     1BE6                     l3413:
  8315     1BE6  0827               	movf	___llmod@dividend+3,w
  8316     1BE7  00A3               	movwf	?___llmod+3
  8317     1BE8  0826               	movf	___llmod@dividend+2,w
  8318     1BE9  00A2               	movwf	?___llmod+2
  8319     1BEA  0825               	movf	___llmod@dividend+1,w
  8320     1BEB  00A1               	movwf	?___llmod+1
  8321     1BEC  0824               	movf	___llmod@dividend,w
  8322     1BED  00A0               	movwf	?___llmod
  8323     1BEE                     l678:
  8324     1BEE  0008               	return
  8325     1BEF                     __end_of___llmod:
  8326                           
  8327                           	psect	text16
  8328     1D10                     __ptext16:	
  8329 ;; *************** function ___lldiv *****************
  8330 ;; Defined at:
  8331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  divisor         4    0[COMMON] unsigned long 
  8334 ;;  dividend        4    4[COMMON] unsigned long 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  quotient        4    9[COMMON] unsigned long 
  8337 ;;  counter         1   13[COMMON] unsigned char 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  4    0[COMMON] unsigned long 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8347 ;;      Params:         8       0       0       0       0
  8348 ;;      Locals:         5       0       0       0       0
  8349 ;;      Temps:          1       0       0       0       0
  8350 ;;      Totals:        14       0       0       0       0
  8351 ;;Total ram usage:       14 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_sprintf
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360     1D10                     ___lldiv:	
  8361                           ;psect for function ___lldiv
  8362                           
  8363     1D10                     l3297:	
  8364                           ;incstack = 0
  8365                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8366                           
  8367     1D10  3000               	movlw	0
  8368     1D11  00FC               	movwf	___lldiv@quotient+3
  8369     1D12  3000               	movlw	0
  8370     1D13  00FB               	movwf	___lldiv@quotient+2
  8371     1D14  3000               	movlw	0
  8372     1D15  00FA               	movwf	___lldiv@quotient+1
  8373     1D16  3000               	movlw	0
  8374     1D17  00F9               	movwf	___lldiv@quotient
  8375     1D18  0873               	movf	___lldiv@divisor+3,w
  8376     1D19  0472               	iorwf	___lldiv@divisor+2,w
  8377     1D1A  0471               	iorwf	___lldiv@divisor+1,w
  8378     1D1B  0470               	iorwf	___lldiv@divisor,w
  8379     1D1C  1903               	skipnz
  8380     1D1D  2D1F               	goto	u5191
  8381     1D1E  2D20               	goto	u5190
  8382     1D1F                     u5191:
  8383     1D1F  2D6D               	goto	l3317
  8384     1D20                     u5190:
  8385     1D20                     l3299:
  8386     1D20  01FD               	clrf	___lldiv@counter
  8387     1D21  0AFD               	incf	___lldiv@counter,f
  8388     1D22  2D30               	goto	l3303
  8389     1D23                     l3301:
  8390     1D23  3001               	movlw	1
  8391     1D24  00F8               	movwf	??___lldiv
  8392     1D25                     u5205:
  8393     1D25  1003               	clrc
  8394     1D26  0DF0               	rlf	___lldiv@divisor,f
  8395     1D27  0DF1               	rlf	___lldiv@divisor+1,f
  8396     1D28  0DF2               	rlf	___lldiv@divisor+2,f
  8397     1D29  0DF3               	rlf	___lldiv@divisor+3,f
  8398     1D2A  0BF8               	decfsz	??___lldiv,f
  8399     1D2B  2D25               	goto	u5205
  8400     1D2C  3001               	movlw	1
  8401     1D2D  00F8               	movwf	??___lldiv
  8402     1D2E  0878               	movf	??___lldiv,w
  8403     1D2F  07FD               	addwf	___lldiv@counter,f
  8404     1D30                     l3303:
  8405     1D30  1FF3               	btfss	___lldiv@divisor+3,7
  8406     1D31  2D33               	goto	u5211
  8407     1D32  2D34               	goto	u5210
  8408     1D33                     u5211:
  8409     1D33  2D23               	goto	l3301
  8410     1D34                     u5210:
  8411     1D34                     l3305:
  8412     1D34  3001               	movlw	1
  8413     1D35  00F8               	movwf	??___lldiv
  8414     1D36                     u5225:
  8415     1D36  1003               	clrc
  8416     1D37  0DF9               	rlf	___lldiv@quotient,f
  8417     1D38  0DFA               	rlf	___lldiv@quotient+1,f
  8418     1D39  0DFB               	rlf	___lldiv@quotient+2,f
  8419     1D3A  0DFC               	rlf	___lldiv@quotient+3,f
  8420     1D3B  0BF8               	decfsz	??___lldiv,f
  8421     1D3C  2D36               	goto	u5225
  8422     1D3D                     l3307:
  8423     1D3D  0873               	movf	___lldiv@divisor+3,w
  8424     1D3E  0277               	subwf	___lldiv@dividend+3,w
  8425     1D3F  1D03               	skipz
  8426     1D40  2D4B               	goto	u5235
  8427     1D41  0872               	movf	___lldiv@divisor+2,w
  8428     1D42  0276               	subwf	___lldiv@dividend+2,w
  8429     1D43  1D03               	skipz
  8430     1D44  2D4B               	goto	u5235
  8431     1D45  0871               	movf	___lldiv@divisor+1,w
  8432     1D46  0275               	subwf	___lldiv@dividend+1,w
  8433     1D47  1D03               	skipz
  8434     1D48  2D4B               	goto	u5235
  8435     1D49  0870               	movf	___lldiv@divisor,w
  8436     1D4A  0274               	subwf	___lldiv@dividend,w
  8437     1D4B                     u5235:
  8438     1D4B  1C03               	skipc
  8439     1D4C  2D4E               	goto	u5231
  8440     1D4D  2D4F               	goto	u5230
  8441     1D4E                     u5231:
  8442     1D4E  2D5E               	goto	l3313
  8443     1D4F                     u5230:
  8444     1D4F                     l3309:
  8445     1D4F  0870               	movf	___lldiv@divisor,w
  8446     1D50  02F4               	subwf	___lldiv@dividend,f
  8447     1D51  0871               	movf	___lldiv@divisor+1,w
  8448     1D52  1C03               	skipc
  8449     1D53  0F71               	incfsz	___lldiv@divisor+1,w
  8450     1D54  02F5               	subwf	___lldiv@dividend+1,f
  8451     1D55  0872               	movf	___lldiv@divisor+2,w
  8452     1D56  1C03               	skipc
  8453     1D57  0F72               	incfsz	___lldiv@divisor+2,w
  8454     1D58  02F6               	subwf	___lldiv@dividend+2,f
  8455     1D59  0873               	movf	___lldiv@divisor+3,w
  8456     1D5A  1C03               	skipc
  8457     1D5B  0F73               	incfsz	___lldiv@divisor+3,w
  8458     1D5C  02F7               	subwf	___lldiv@dividend+3,f
  8459     1D5D                     l3311:
  8460     1D5D  1479               	bsf	___lldiv@quotient,0
  8461     1D5E                     l3313:
  8462     1D5E  3001               	movlw	1
  8463     1D5F                     u5245:
  8464     1D5F  1003               	clrc
  8465     1D60  0CF3               	rrf	___lldiv@divisor+3,f
  8466     1D61  0CF2               	rrf	___lldiv@divisor+2,f
  8467     1D62  0CF1               	rrf	___lldiv@divisor+1,f
  8468     1D63  0CF0               	rrf	___lldiv@divisor,f
  8469     1D64  3EFF               	addlw	-1
  8470     1D65  1D03               	skipz
  8471     1D66  2D5F               	goto	u5245
  8472     1D67                     l3315:
  8473     1D67  3001               	movlw	1
  8474     1D68  02FD               	subwf	___lldiv@counter,f
  8475     1D69  1D03               	btfss	3,2
  8476     1D6A  2D6C               	goto	u5251
  8477     1D6B  2D6D               	goto	u5250
  8478     1D6C                     u5251:
  8479     1D6C  2D34               	goto	l3305
  8480     1D6D                     u5250:
  8481     1D6D                     l3317:
  8482     1D6D  087C               	movf	___lldiv@quotient+3,w
  8483     1D6E  00F3               	movwf	?___lldiv+3
  8484     1D6F  087B               	movf	___lldiv@quotient+2,w
  8485     1D70  00F2               	movwf	?___lldiv+2
  8486     1D71  087A               	movf	___lldiv@quotient+1,w
  8487     1D72  00F1               	movwf	?___lldiv+1
  8488     1D73  0879               	movf	___lldiv@quotient,w
  8489     1D74  00F0               	movwf	?___lldiv
  8490     1D75                     l458:
  8491     1D75  0008               	return
  8492     1D76                     __end_of___lldiv:
  8493                           
  8494                           	psect	text17
  8495     100C                     __ptext17:	
  8496 ;; *************** function ___fltol *****************
  8497 ;; Defined at:
  8498 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  f1              4   47[BANK0 ] unsigned long 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;  exp1            1   56[BANK0 ] unsigned char 
  8503 ;;  sign1           1   55[BANK0 ] unsigned char 
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  4   47[BANK0 ] long 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8513 ;;      Params:         0       4       0       0       0
  8514 ;;      Locals:         0       2       0       0       0
  8515 ;;      Temps:          0       4       0       0       0
  8516 ;;      Totals:         0      10       0       0       0
  8517 ;;Total ram usage:       10 bytes
  8518 ;; Hardware stack levels used: 1
  8519 ;; This function calls:
  8520 ;;		Nothing
  8521 ;; This function is called by:
  8522 ;;		_sprintf
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526     100C                     ___fltol:	
  8527                           ;psect for function ___fltol
  8528                           
  8529     100C                     l3361:	
  8530                           ;incstack = 0
  8531                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8532                           
  8533     100C  1003               	clrc
  8534     100D  1283               	bcf	3,5	;RP0=0, select bank0
  8535     100E  1303               	bcf	3,6	;RP1=0, select bank0
  8536     100F  0D51               	rlf	___fltol@f1+2,w
  8537     1010  0D52               	rlf	___fltol@f1+3,w
  8538     1011  00D8               	movwf	___fltol@exp1
  8539     1012  0858               	movf	___fltol@exp1,w
  8540     1013  1D03               	btfss	3,2
  8541     1014  2816               	goto	u5371
  8542     1015  2817               	goto	u5370
  8543     1016                     u5371:
  8544     1016  2820               	goto	l3367
  8545     1017                     u5370:
  8546     1017                     l3363:
  8547     1017  3000               	movlw	0
  8548     1018  00D2               	movwf	?___fltol+3
  8549     1019  3000               	movlw	0
  8550     101A  00D1               	movwf	?___fltol+2
  8551     101B  3000               	movlw	0
  8552     101C  00D0               	movwf	?___fltol+1
  8553     101D  3000               	movlw	0
  8554     101E  00CF               	movwf	?___fltol
  8555     101F  2883               	goto	l625
  8556     1020                     l3367:
  8557     1020  084F               	movf	___fltol@f1,w
  8558     1021  00D3               	movwf	??___fltol
  8559     1022  0850               	movf	___fltol@f1+1,w
  8560     1023  00D4               	movwf	??___fltol+1
  8561     1024  0851               	movf	___fltol@f1+2,w
  8562     1025  00D5               	movwf	??___fltol+2
  8563     1026  0852               	movf	___fltol@f1+3,w
  8564     1027  00D6               	movwf	??___fltol+3
  8565     1028  301F               	movlw	31
  8566     1029                     u5385:
  8567     1029  1003               	clrc
  8568     102A  0CD6               	rrf	??___fltol+3,f
  8569     102B  0CD5               	rrf	??___fltol+2,f
  8570     102C  0CD4               	rrf	??___fltol+1,f
  8571     102D  0CD3               	rrf	??___fltol,f
  8572     102E                     u5380:
  8573     102E  3EFF               	addlw	-1
  8574     102F  1D03               	skipz
  8575     1030  2829               	goto	u5385
  8576     1031  0853               	movf	??___fltol,w
  8577     1032  00D7               	movwf	___fltol@sign1
  8578     1033                     l3369:
  8579     1033  17D1               	bsf	___fltol@f1+2,7
  8580     1034                     l3371:
  8581     1034  30FF               	movlw	255
  8582     1035  05CF               	andwf	___fltol@f1,f
  8583     1036  30FF               	movlw	255
  8584     1037  05D0               	andwf	___fltol@f1+1,f
  8585     1038  30FF               	movlw	255
  8586     1039  05D1               	andwf	___fltol@f1+2,f
  8587     103A  3000               	movlw	0
  8588     103B  05D2               	andwf	___fltol@f1+3,f
  8589     103C                     l3373:
  8590     103C  3096               	movlw	150
  8591     103D  02D8               	subwf	___fltol@exp1,f
  8592     103E                     l3375:
  8593     103E  1FD8               	btfss	___fltol@exp1,7
  8594     103F  2841               	goto	u5391
  8595     1040  2842               	goto	u5390
  8596     1041                     u5391:
  8597     1041  285C               	goto	l3385
  8598     1042                     u5390:
  8599     1042                     l3377:
  8600     1042  0858               	movf	___fltol@exp1,w
  8601     1043  3A80               	xorlw	128
  8602     1044  3E97               	addlw	151
  8603     1045  1803               	skipnc
  8604     1046  2848               	goto	u5401
  8605     1047  2849               	goto	u5400
  8606     1048                     u5401:
  8607     1048  284A               	goto	l3383
  8608     1049                     u5400:
  8609     1049  2817               	goto	l3363
  8610     104A                     l3383:
  8611     104A  3001               	movlw	1
  8612     104B                     u5415:
  8613     104B  1003               	clrc
  8614     104C  0CD2               	rrf	___fltol@f1+3,f
  8615     104D  0CD1               	rrf	___fltol@f1+2,f
  8616     104E  0CD0               	rrf	___fltol@f1+1,f
  8617     104F  0CCF               	rrf	___fltol@f1,f
  8618     1050  3EFF               	addlw	-1
  8619     1051  1D03               	skipz
  8620     1052  284B               	goto	u5415
  8621     1053  3001               	movlw	1
  8622     1054  00D3               	movwf	??___fltol
  8623     1055  0853               	movf	??___fltol,w
  8624     1056  07D8               	addwf	___fltol@exp1,f
  8625     1057  1D03               	btfss	3,2
  8626     1058  285A               	goto	u5421
  8627     1059  285B               	goto	u5420
  8628     105A                     u5421:
  8629     105A  284A               	goto	l3383
  8630     105B                     u5420:
  8631     105B  2873               	goto	l3393
  8632     105C                     l3385:
  8633     105C  3020               	movlw	32
  8634     105D  0258               	subwf	___fltol@exp1,w
  8635     105E  1C03               	skipc
  8636     105F  2861               	goto	u5431
  8637     1060  2862               	goto	u5430
  8638     1061                     u5431:
  8639     1061  286E               	goto	l632
  8640     1062                     u5430:
  8641     1062  2817               	goto	l3363
  8642     1063                     l3391:
  8643     1063  3001               	movlw	1
  8644     1064  00D3               	movwf	??___fltol
  8645     1065                     u5445:
  8646     1065  1003               	clrc
  8647     1066  0DCF               	rlf	___fltol@f1,f
  8648     1067  0DD0               	rlf	___fltol@f1+1,f
  8649     1068  0DD1               	rlf	___fltol@f1+2,f
  8650     1069  0DD2               	rlf	___fltol@f1+3,f
  8651     106A  0BD3               	decfsz	??___fltol,f
  8652     106B  2865               	goto	u5445
  8653     106C  3001               	movlw	1
  8654     106D  02D8               	subwf	___fltol@exp1,f
  8655     106E                     l632:
  8656     106E  0858               	movf	___fltol@exp1,w
  8657     106F  1D03               	btfss	3,2
  8658     1070  2872               	goto	u5451
  8659     1071  2873               	goto	u5450
  8660     1072                     u5451:
  8661     1072  2863               	goto	l3391
  8662     1073                     u5450:
  8663     1073                     l3393:
  8664     1073  0857               	movf	___fltol@sign1,w
  8665     1074  1903               	btfsc	3,2
  8666     1075  2877               	goto	u5461
  8667     1076  2878               	goto	u5460
  8668     1077                     u5461:
  8669     1077  2883               	goto	l635
  8670     1078                     u5460:
  8671     1078                     l3395:
  8672     1078  09CF               	comf	___fltol@f1,f
  8673     1079  09D0               	comf	___fltol@f1+1,f
  8674     107A  09D1               	comf	___fltol@f1+2,f
  8675     107B  09D2               	comf	___fltol@f1+3,f
  8676     107C  0ACF               	incf	___fltol@f1,f
  8677     107D  1903               	skipnz
  8678     107E  0AD0               	incf	___fltol@f1+1,f
  8679     107F  1903               	skipnz
  8680     1080  0AD1               	incf	___fltol@f1+2,f
  8681     1081  1903               	skipnz
  8682     1082  0AD2               	incf	___fltol@f1+3,f
  8683     1083                     l635:
  8684     1083                     l625:
  8685     1083  0008               	return
  8686     1084                     __end_of___fltol:
  8687                           
  8688                           	psect	text18
  8689     196E                     __ptext18:	
  8690 ;; *************** function ___flsub *****************
  8691 ;; Defined at:
  8692 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  a               4   68[BANK0 ] long 
  8695 ;;  b               4   72[BANK0 ] long 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  4   68[BANK0 ] long 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8707 ;;      Params:         0       8       0       0       0
  8708 ;;      Locals:         0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0
  8710 ;;      Totals:         0       8       0       0       0
  8711 ;;Total ram usage:        8 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; Hardware stack levels required when called: 1
  8714 ;; This function calls:
  8715 ;;		___fladd
  8716 ;; This function is called by:
  8717 ;;		_sprintf
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721     196E                     ___flsub:	
  8722                           ;psect for function ___flsub
  8723                           
  8724     196E                     l3417:	
  8725                           ;incstack = 0
  8726                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8727                           
  8728     196E  3080               	movlw	128
  8729     196F  1283               	bcf	3,5	;RP0=0, select bank0
  8730     1970  1303               	bcf	3,6	;RP1=0, select bank0
  8731     1971  06E7               	xorwf	___flsub@a+3,f
  8732     1972                     l3419:
  8733     1972  086B               	movf	___flsub@b+3,w
  8734     1973  00D3               	movwf	___fladd@b+3
  8735     1974  086A               	movf	___flsub@b+2,w
  8736     1975  00D2               	movwf	___fladd@b+2
  8737     1976  0869               	movf	___flsub@b+1,w
  8738     1977  00D1               	movwf	___fladd@b+1
  8739     1978  0868               	movf	___flsub@b,w
  8740     1979  00D0               	movwf	___fladd@b
  8741     197A  0867               	movf	___flsub@a+3,w
  8742     197B  00D7               	movwf	___fladd@a+3
  8743     197C  0866               	movf	___flsub@a+2,w
  8744     197D  00D6               	movwf	___fladd@a+2
  8745     197E  0865               	movf	___flsub@a+1,w
  8746     197F  00D5               	movwf	___fladd@a+1
  8747     1980  0864               	movf	___flsub@a,w
  8748     1981  00D4               	movwf	___fladd@a
  8749     1982  160A  118A  2347  160A  158A  	fcall	___fladd
  8750     1987  1283               	bcf	3,5	;RP0=0, select bank0
  8751     1988  1303               	bcf	3,6	;RP1=0, select bank0
  8752     1989  0853               	movf	?___fladd+3,w
  8753     198A  00E7               	movwf	?___flsub+3
  8754     198B  0852               	movf	?___fladd+2,w
  8755     198C  00E6               	movwf	?___flsub+2
  8756     198D  0851               	movf	?___fladd+1,w
  8757     198E  00E5               	movwf	?___flsub+1
  8758     198F  0850               	movf	?___fladd,w
  8759     1990  00E4               	movwf	?___flsub
  8760     1991                     l795:
  8761     1991  0008               	return
  8762     1992                     __end_of___flsub:
  8763                           
  8764                           	psect	text19
  8765     1347                     __ptext19:	
  8766 ;; *************** function ___fladd *****************
  8767 ;; Defined at:
  8768 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8769 ;; Parameters:    Size  Location     Type
  8770 ;;  b               4   48[BANK0 ] long 
  8771 ;;  a               4   52[BANK0 ] long 
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;  grs             1   67[BANK0 ] unsigned char 
  8774 ;;  bexp            1   66[BANK0 ] unsigned char 
  8775 ;;  aexp            1   65[BANK0 ] unsigned char 
  8776 ;;  signs           1   64[BANK0 ] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  4   48[BANK0 ] unsigned char 
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0, btemp+1
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8786 ;;      Params:         0       8       0       0       0
  8787 ;;      Locals:         0       4       0       0       0
  8788 ;;      Temps:          0       8       0       0       0
  8789 ;;      Totals:         0      20       0       0       0
  8790 ;;Total ram usage:       20 bytes
  8791 ;; Hardware stack levels used: 1
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_sprintf
  8796 ;;		___flsub
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800     1347                     ___fladd:	
  8801                           ;psect for function ___fladd
  8802                           
  8803     1347                     l2755:	
  8804                           ;incstack = 0
  8805                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8806                           
  8807     1347  1283               	bcf	3,5	;RP0=0, select bank0
  8808     1348  1303               	bcf	3,6	;RP1=0, select bank0
  8809     1349  0853               	movf	___fladd@b+3,w
  8810     134A  3980               	andlw	128
  8811     134B  00E0               	movwf	___fladd@signs
  8812     134C                     l2757:
  8813     134C  0853               	movf	___fladd@b+3,w
  8814     134D  00D8               	movwf	??___fladd
  8815     134E  0758               	addwf	??___fladd,w
  8816     134F  00E2               	movwf	___fladd@bexp
  8817     1350                     l2759:
  8818     1350  1FD2               	btfss	___fladd@b+2,7
  8819     1351  2B53               	goto	u3791
  8820     1352  2B54               	goto	u3790
  8821     1353                     u3791:
  8822     1353  2B55               	goto	l2763
  8823     1354                     u3790:
  8824     1354                     l2761:
  8825     1354  1462               	bsf	___fladd@bexp,0
  8826     1355                     l2763:
  8827     1355  0862               	movf	___fladd@bexp,w
  8828     1356  1903               	btfsc	3,2
  8829     1357  2B59               	goto	u3801
  8830     1358  2B5A               	goto	u3800
  8831     1359                     u3801:
  8832     1359  2B6A               	goto	l2773
  8833     135A                     u3800:
  8834     135A                     l2765:
  8835     135A  0A62               	incf	___fladd@bexp,w
  8836     135B  1D03               	btfss	3,2
  8837     135C  2B5E               	goto	u3811
  8838     135D  2B5F               	goto	u3810
  8839     135E                     u3811:
  8840     135E  2B67               	goto	l2769
  8841     135F                     u3810:
  8842     135F                     l2767:
  8843     135F  3000               	movlw	0
  8844     1360  00D3               	movwf	___fladd@b+3
  8845     1361  3000               	movlw	0
  8846     1362  00D2               	movwf	___fladd@b+2
  8847     1363  3000               	movlw	0
  8848     1364  00D1               	movwf	___fladd@b+1
  8849     1365  3000               	movlw	0
  8850     1366  00D0               	movwf	___fladd@b
  8851     1367                     l2769:
  8852     1367  17D2               	bsf	___fladd@b+2,7
  8853     1368                     l2771:
  8854     1368  01D3               	clrf	___fladd@b+3
  8855     1369  2B72               	goto	l2775
  8856     136A                     l2773:
  8857     136A  3000               	movlw	0
  8858     136B  00D3               	movwf	___fladd@b+3
  8859     136C  3000               	movlw	0
  8860     136D  00D2               	movwf	___fladd@b+2
  8861     136E  3000               	movlw	0
  8862     136F  00D1               	movwf	___fladd@b+1
  8863     1370  3000               	movlw	0
  8864     1371  00D0               	movwf	___fladd@b
  8865     1372                     l2775:
  8866     1372  0857               	movf	___fladd@a+3,w
  8867     1373  3980               	andlw	128
  8868     1374  00E1               	movwf	___fladd@aexp
  8869     1375                     l2777:
  8870     1375  0861               	movf	___fladd@aexp,w
  8871     1376  0660               	xorwf	___fladd@signs,w
  8872     1377  1903               	skipnz
  8873     1378  2B7A               	goto	u3821
  8874     1379  2B7B               	goto	u3820
  8875     137A                     u3821:
  8876     137A  2B7C               	goto	l2781
  8877     137B                     u3820:
  8878     137B                     l2779:
  8879     137B  1760               	bsf	___fladd@signs,6
  8880     137C                     l2781:
  8881     137C  0857               	movf	___fladd@a+3,w
  8882     137D  00D8               	movwf	??___fladd
  8883     137E  0758               	addwf	??___fladd,w
  8884     137F  00E1               	movwf	___fladd@aexp
  8885     1380                     l2783:
  8886     1380  1FD6               	btfss	___fladd@a+2,7
  8887     1381  2B83               	goto	u3831
  8888     1382  2B84               	goto	u3830
  8889     1383                     u3831:
  8890     1383  2B85               	goto	l2787
  8891     1384                     u3830:
  8892     1384                     l2785:
  8893     1384  1461               	bsf	___fladd@aexp,0
  8894     1385                     l2787:
  8895     1385  0861               	movf	___fladd@aexp,w
  8896     1386  1903               	btfsc	3,2
  8897     1387  2B89               	goto	u3841
  8898     1388  2B8A               	goto	u3840
  8899     1389                     u3841:
  8900     1389  2B9A               	goto	l2797
  8901     138A                     u3840:
  8902     138A                     l2789:
  8903     138A  0A61               	incf	___fladd@aexp,w
  8904     138B  1D03               	btfss	3,2
  8905     138C  2B8E               	goto	u3851
  8906     138D  2B8F               	goto	u3850
  8907     138E                     u3851:
  8908     138E  2B97               	goto	l2793
  8909     138F                     u3850:
  8910     138F                     l2791:
  8911     138F  3000               	movlw	0
  8912     1390  00D7               	movwf	___fladd@a+3
  8913     1391  3000               	movlw	0
  8914     1392  00D6               	movwf	___fladd@a+2
  8915     1393  3000               	movlw	0
  8916     1394  00D5               	movwf	___fladd@a+1
  8917     1395  3000               	movlw	0
  8918     1396  00D4               	movwf	___fladd@a
  8919     1397                     l2793:
  8920     1397  17D6               	bsf	___fladd@a+2,7
  8921     1398                     l2795:
  8922     1398  01D7               	clrf	___fladd@a+3
  8923     1399  2BA2               	goto	l749
  8924     139A                     l2797:
  8925     139A  3000               	movlw	0
  8926     139B  00D7               	movwf	___fladd@a+3
  8927     139C  3000               	movlw	0
  8928     139D  00D6               	movwf	___fladd@a+2
  8929     139E  3000               	movlw	0
  8930     139F  00D5               	movwf	___fladd@a+1
  8931     13A0  3000               	movlw	0
  8932     13A1  00D4               	movwf	___fladd@a
  8933     13A2                     l749:
  8934     13A2  0862               	movf	___fladd@bexp,w
  8935     13A3  0261               	subwf	___fladd@aexp,w
  8936     13A4  1803               	skipnc
  8937     13A5  2BA7               	goto	u3861
  8938     13A6  2BA8               	goto	u3860
  8939     13A7                     u3861:
  8940     13A7  2BCE               	goto	l2833
  8941     13A8                     u3860:
  8942     13A8                     l2799:
  8943     13A8  1F60               	btfss	___fladd@signs,6
  8944     13A9  2BAB               	goto	u3871
  8945     13AA  2BAC               	goto	u3870
  8946     13AB                     u3871:
  8947     13AB  2BB0               	goto	l2803
  8948     13AC                     u3870:
  8949     13AC                     l2801:
  8950     13AC  3080               	movlw	128
  8951     13AD  00D8               	movwf	??___fladd
  8952     13AE  0858               	movf	??___fladd,w
  8953     13AF  06E0               	xorwf	___fladd@signs,f
  8954     13B0                     l2803:
  8955     13B0  0862               	movf	___fladd@bexp,w
  8956     13B1  00E3               	movwf	___fladd@grs
  8957     13B2                     l2805:
  8958     13B2  0861               	movf	___fladd@aexp,w
  8959     13B3  00E2               	movwf	___fladd@bexp
  8960     13B4                     l2807:
  8961     13B4  0863               	movf	___fladd@grs,w
  8962     13B5  00E1               	movwf	___fladd@aexp
  8963     13B6                     l2809:
  8964     13B6  0850               	movf	___fladd@b,w
  8965     13B7  00E3               	movwf	___fladd@grs
  8966     13B8                     l2811:
  8967     13B8  0854               	movf	___fladd@a,w
  8968     13B9  00D0               	movwf	___fladd@b
  8969     13BA                     l2813:
  8970     13BA  0863               	movf	___fladd@grs,w
  8971     13BB  00D4               	movwf	___fladd@a
  8972     13BC                     l2815:
  8973     13BC  0851               	movf	___fladd@b+1,w
  8974     13BD  00E3               	movwf	___fladd@grs
  8975     13BE                     l2817:
  8976     13BE  0855               	movf	___fladd@a+1,w
  8977     13BF  00D1               	movwf	___fladd@b+1
  8978     13C0                     l2819:
  8979     13C0  0863               	movf	___fladd@grs,w
  8980     13C1  00D5               	movwf	___fladd@a+1
  8981     13C2                     l2821:
  8982     13C2  0852               	movf	___fladd@b+2,w
  8983     13C3  00E3               	movwf	___fladd@grs
  8984     13C4                     l2823:
  8985     13C4  0856               	movf	___fladd@a+2,w
  8986     13C5  00D2               	movwf	___fladd@b+2
  8987     13C6                     l2825:
  8988     13C6  0863               	movf	___fladd@grs,w
  8989     13C7  00D6               	movwf	___fladd@a+2
  8990     13C8                     l2827:
  8991     13C8  0853               	movf	___fladd@b+3,w
  8992     13C9  00E3               	movwf	___fladd@grs
  8993     13CA                     l2829:
  8994     13CA  0857               	movf	___fladd@a+3,w
  8995     13CB  00D3               	movwf	___fladd@b+3
  8996     13CC                     l2831:
  8997     13CC  0863               	movf	___fladd@grs,w
  8998     13CD  00D7               	movwf	___fladd@a+3
  8999     13CE                     l2833:
  9000     13CE  01E3               	clrf	___fladd@grs
  9001     13CF                     l2835:
  9002     13CF  0861               	movf	___fladd@aexp,w
  9003     13D0  00D8               	movwf	??___fladd
  9004     13D1  01D9               	clrf	??___fladd+1
  9005     13D2  0859               	movf	??___fladd+1,w
  9006     13D3  00DB               	movwf	??___fladd+3
  9007     13D4  0862               	movf	___fladd@bexp,w
  9008     13D5  0258               	subwf	??___fladd,w
  9009     13D6  00DA               	movwf	??___fladd+2
  9010     13D7  1C03               	skipc
  9011     13D8  03DB               	decf	??___fladd+3,f
  9012     13D9  085B               	movf	??___fladd+3,w
  9013     13DA  3A80               	xorlw	128
  9014     13DB  00FF               	movwf	btemp+1
  9015     13DC  3080               	movlw	128
  9016     13DD  027F               	subwf	btemp+1,w
  9017     13DE  1D03               	skipz
  9018     13DF  2BE2               	goto	u3885
  9019     13E0  301A               	movlw	26
  9020     13E1  025A               	subwf	??___fladd+2,w
  9021     13E2                     u3885:
  9022     13E2  1C03               	skipc
  9023     13E3  2BE5               	goto	u3881
  9024     13E4  2BE6               	goto	u3880
  9025     13E5                     u3881:
  9026     13E5  2C1D               	goto	l2851
  9027     13E6                     u3880:
  9028     13E6                     l2837:
  9029     13E6  1283               	bcf	3,5	;RP0=0, select bank0
  9030     13E7  1303               	bcf	3,6	;RP1=0, select bank0
  9031     13E8  0853               	movf	___fladd@b+3,w
  9032     13E9  0452               	iorwf	___fladd@b+2,w
  9033     13EA  0451               	iorwf	___fladd@b+1,w
  9034     13EB  0450               	iorwf	___fladd@b,w
  9035     13EC  1D03               	skipz
  9036     13ED  2BEF               	goto	u3891
  9037     13EE  2BF1               	goto	u3890
  9038     13EF                     u3891:
  9039     13EF  3001               	movlw	1
  9040     13F0  2BF2               	goto	u3900
  9041     13F1                     u3890:
  9042     13F1  3000               	movlw	0
  9043     13F2                     u3900:
  9044     13F2  00E3               	movwf	___fladd@grs
  9045     13F3  3000               	movlw	0
  9046     13F4  00D3               	movwf	___fladd@b+3
  9047     13F5  3000               	movlw	0
  9048     13F6  00D2               	movwf	___fladd@b+2
  9049     13F7  3000               	movlw	0
  9050     13F8  00D1               	movwf	___fladd@b+1
  9051     13F9  3000               	movlw	0
  9052     13FA  00D0               	movwf	___fladd@b
  9053     13FB  0861               	movf	___fladd@aexp,w
  9054     13FC  00E2               	movwf	___fladd@bexp
  9055     13FD  2C25               	goto	l753
  9056     13FE                     l755:
  9057     13FE  1C63               	btfss	___fladd@grs,0
  9058     13FF  2C01               	goto	u3911
  9059     1400  2C02               	goto	u3910
  9060     1401                     u3911:
  9061     1401  2C09               	goto	l2841
  9062     1402                     u3910:
  9063     1402                     l2839:
  9064     1402  0863               	movf	___fladd@grs,w
  9065     1403  00D8               	movwf	??___fladd
  9066     1404  1003               	clrc
  9067     1405  0C58               	rrf	??___fladd,w
  9068     1406  3801               	iorlw	1
  9069     1407  00E3               	movwf	___fladd@grs
  9070     1408  2C0B               	goto	l2843
  9071     1409                     l2841:
  9072     1409  1003               	clrc
  9073     140A  0CE3               	rrf	___fladd@grs,f
  9074     140B                     l2843:
  9075     140B  1C50               	btfss	___fladd@b,0
  9076     140C  2C0E               	goto	u3921
  9077     140D  2C0F               	goto	u3920
  9078     140E                     u3921:
  9079     140E  2C10               	goto	l2847
  9080     140F                     u3920:
  9081     140F                     l2845:
  9082     140F  17E3               	bsf	___fladd@grs,7
  9083     1410                     l2847:
  9084     1410  3001               	movlw	1
  9085     1411  00D8               	movwf	??___fladd
  9086     1412                     u3935:
  9087     1412  0D53               	rlf	___fladd@b+3,w
  9088     1413  0CD3               	rrf	___fladd@b+3,f
  9089     1414  0CD2               	rrf	___fladd@b+2,f
  9090     1415  0CD1               	rrf	___fladd@b+1,f
  9091     1416  0CD0               	rrf	___fladd@b,f
  9092     1417  0BD8               	decfsz	??___fladd& (0+127),f
  9093     1418  2C12               	goto	u3935
  9094     1419                     l2849:
  9095     1419  3001               	movlw	1
  9096     141A  00D8               	movwf	??___fladd
  9097     141B  0858               	movf	??___fladd,w
  9098     141C  07E2               	addwf	___fladd@bexp,f
  9099     141D                     l2851:
  9100     141D  1283               	bcf	3,5	;RP0=0, select bank0
  9101     141E  1303               	bcf	3,6	;RP1=0, select bank0
  9102     141F  0861               	movf	___fladd@aexp,w
  9103     1420  0262               	subwf	___fladd@bexp,w
  9104     1421  1C03               	skipc
  9105     1422  2C24               	goto	u3941
  9106     1423  2C25               	goto	u3940
  9107     1424                     u3941:
  9108     1424  2BFE               	goto	l755
  9109     1425                     u3940:
  9110     1425                     l753:
  9111     1425  1B60               	btfsc	___fladd@signs,6
  9112     1426  2C28               	goto	u3951
  9113     1427  2C29               	goto	u3950
  9114     1428                     u3951:
  9115     1428  2C72               	goto	l2877
  9116     1429                     u3950:
  9117     1429                     l2853:
  9118     1429  0862               	movf	___fladd@bexp,w
  9119     142A  1D03               	btfss	3,2
  9120     142B  2C2D               	goto	u3961
  9121     142C  2C2E               	goto	u3960
  9122     142D                     u3961:
  9123     142D  2C37               	goto	l2859
  9124     142E                     u3960:
  9125     142E                     l2855:
  9126     142E  3000               	movlw	0
  9127     142F  00D3               	movwf	?___fladd+3
  9128     1430  3000               	movlw	0
  9129     1431  00D2               	movwf	?___fladd+2
  9130     1432  3000               	movlw	0
  9131     1433  00D1               	movwf	?___fladd+1
  9132     1434  3000               	movlw	0
  9133     1435  00D0               	movwf	?___fladd
  9134     1436  2D9E               	goto	l762
  9135     1437                     l2859:
  9136     1437  0854               	movf	___fladd@a,w
  9137     1438  07D0               	addwf	___fladd@b,f
  9138     1439  0855               	movf	___fladd@a+1,w
  9139     143A  1103               	clrz
  9140     143B  1803               	skipnc
  9141     143C  3E01               	addlw	1
  9142     143D  1903               	skipnz
  9143     143E  2C40               	goto	u3971
  9144     143F  07D1               	addwf	___fladd@b+1,f
  9145     1440                     u3971:
  9146     1440  0856               	movf	___fladd@a+2,w
  9147     1441  1103               	clrz
  9148     1442  1803               	skipnc
  9149     1443  3E01               	addlw	1
  9150     1444  1903               	skipnz
  9151     1445  2C47               	goto	u3972
  9152     1446  07D2               	addwf	___fladd@b+2,f
  9153     1447                     u3972:
  9154     1447  0857               	movf	___fladd@a+3,w
  9155     1448  1103               	clrz
  9156     1449  1803               	skipnc
  9157     144A  3E01               	addlw	1
  9158     144B  1903               	skipnz
  9159     144C  2C4E               	goto	u3973
  9160     144D  07D3               	addwf	___fladd@b+3,f
  9161     144E                     u3973:
  9162     144E                     l2861:
  9163     144E  1C53               	btfss	___fladd@b+3,0
  9164     144F  2C51               	goto	u3981
  9165     1450  2C52               	goto	u3980
  9166     1451                     u3981:
  9167     1451  2D26               	goto	l2911
  9168     1452                     u3980:
  9169     1452                     l2863:
  9170     1452  1C63               	btfss	___fladd@grs,0
  9171     1453  2C55               	goto	u3991
  9172     1454  2C56               	goto	u3990
  9173     1455                     u3991:
  9174     1455  2C5D               	goto	l2867
  9175     1456                     u3990:
  9176     1456                     l2865:
  9177     1456  0863               	movf	___fladd@grs,w
  9178     1457  00D8               	movwf	??___fladd
  9179     1458  1003               	clrc
  9180     1459  0C58               	rrf	??___fladd,w
  9181     145A  3801               	iorlw	1
  9182     145B  00E3               	movwf	___fladd@grs
  9183     145C  2C5F               	goto	l2869
  9184     145D                     l2867:
  9185     145D  1003               	clrc
  9186     145E  0CE3               	rrf	___fladd@grs,f
  9187     145F                     l2869:
  9188     145F  1C50               	btfss	___fladd@b,0
  9189     1460  2C62               	goto	u4001
  9190     1461  2C63               	goto	u4000
  9191     1462                     u4001:
  9192     1462  2C64               	goto	l2873
  9193     1463                     u4000:
  9194     1463                     l2871:
  9195     1463  17E3               	bsf	___fladd@grs,7
  9196     1464                     l2873:
  9197     1464  3001               	movlw	1
  9198     1465  00D8               	movwf	??___fladd
  9199     1466                     u4015:
  9200     1466  0D53               	rlf	___fladd@b+3,w
  9201     1467  0CD3               	rrf	___fladd@b+3,f
  9202     1468  0CD2               	rrf	___fladd@b+2,f
  9203     1469  0CD1               	rrf	___fladd@b+1,f
  9204     146A  0CD0               	rrf	___fladd@b,f
  9205     146B  0BD8               	decfsz	??___fladd& (0+127),f
  9206     146C  2C66               	goto	u4015
  9207     146D                     l2875:
  9208     146D  3001               	movlw	1
  9209     146E  00D8               	movwf	??___fladd
  9210     146F  0858               	movf	??___fladd,w
  9211     1470  07E2               	addwf	___fladd@bexp,f
  9212     1471  2D26               	goto	l2911
  9213     1472                     l2877:
  9214     1472  0853               	movf	___fladd@b+3,w
  9215     1473  3A80               	xorlw	128
  9216     1474  00FF               	movwf	btemp+1
  9217     1475  0857               	movf	___fladd@a+3,w
  9218     1476  3A80               	xorlw	128
  9219     1477  027F               	subwf	btemp+1,w
  9220     1478  1D03               	skipz
  9221     1479  2C84               	goto	u4023
  9222     147A  0856               	movf	___fladd@a+2,w
  9223     147B  0252               	subwf	___fladd@b+2,w
  9224     147C  1D03               	skipz
  9225     147D  2C84               	goto	u4023
  9226     147E  0855               	movf	___fladd@a+1,w
  9227     147F  0251               	subwf	___fladd@b+1,w
  9228     1480  1D03               	skipz
  9229     1481  2C84               	goto	u4023
  9230     1482  0854               	movf	___fladd@a,w
  9231     1483  0250               	subwf	___fladd@b,w
  9232     1484                     u4023:
  9233     1484  1803               	skipnc
  9234     1485  2C87               	goto	u4021
  9235     1486  2C88               	goto	u4020
  9236     1487                     u4021:
  9237     1487  2CE0               	goto	l2887
  9238     1488                     u4020:
  9239     1488                     l2879:
  9240     1488  30FF               	movlw	255
  9241     1489  00D8               	movwf	??___fladd
  9242     148A  30FF               	movlw	255
  9243     148B  00D9               	movwf	??___fladd+1
  9244     148C  30FF               	movlw	255
  9245     148D  00DA               	movwf	??___fladd+2
  9246     148E  30FF               	movlw	255
  9247     148F  00DB               	movwf	??___fladd+3
  9248     1490  0854               	movf	___fladd@a,w
  9249     1491  00DC               	movwf	??___fladd+4
  9250     1492  0855               	movf	___fladd@a+1,w
  9251     1493  00DD               	movwf	??___fladd+5
  9252     1494  0856               	movf	___fladd@a+2,w
  9253     1495  00DE               	movwf	??___fladd+6
  9254     1496  0857               	movf	___fladd@a+3,w
  9255     1497  00DF               	movwf	??___fladd+7
  9256     1498  0850               	movf	___fladd@b,w
  9257     1499  02DC               	subwf	??___fladd+4,f
  9258     149A  0851               	movf	___fladd@b+1,w
  9259     149B  1C03               	skipc
  9260     149C  0F51               	incfsz	___fladd@b+1,w
  9261     149D  2C9F               	goto	u4031
  9262     149E  2CA0               	goto	u4032
  9263     149F                     u4031:
  9264     149F  02DD               	subwf	??___fladd+5,f
  9265     14A0                     u4032:
  9266     14A0  0852               	movf	___fladd@b+2,w
  9267     14A1  1C03               	skipc
  9268     14A2  0F52               	incfsz	___fladd@b+2,w
  9269     14A3  2CA5               	goto	u4033
  9270     14A4  2CA6               	goto	u4034
  9271     14A5                     u4033:
  9272     14A5  02DE               	subwf	??___fladd+6,f
  9273     14A6                     u4034:
  9274     14A6  0853               	movf	___fladd@b+3,w
  9275     14A7  1C03               	skipc
  9276     14A8  0F53               	incfsz	___fladd@b+3,w
  9277     14A9  2CAB               	goto	u4035
  9278     14AA  2CAC               	goto	u4036
  9279     14AB                     u4035:
  9280     14AB  02DF               	subwf	??___fladd+7,f
  9281     14AC                     u4036:
  9282     14AC  085C               	movf	??___fladd+4,w
  9283     14AD  07D8               	addwf	??___fladd,f
  9284     14AE  085D               	movf	??___fladd+5,w
  9285     14AF  1803               	skipnc
  9286     14B0  0F5D               	incfsz	??___fladd+5,w
  9287     14B1  2CB3               	goto	u4040
  9288     14B2  2CB4               	goto	u4041
  9289     14B3                     u4040:
  9290     14B3  07D9               	addwf	??___fladd+1,f
  9291     14B4                     u4041:
  9292     14B4  085E               	movf	??___fladd+6,w
  9293     14B5  1803               	skipnc
  9294     14B6  0F5E               	incfsz	??___fladd+6,w
  9295     14B7  2CB9               	goto	u4042
  9296     14B8  2CBA               	goto	u4043
  9297     14B9                     u4042:
  9298     14B9  07DA               	addwf	??___fladd+2,f
  9299     14BA                     u4043:
  9300     14BA  085F               	movf	??___fladd+7,w
  9301     14BB  1803               	skipnc
  9302     14BC  0A5F               	incf	??___fladd+7,w
  9303     14BD  07DB               	addwf	??___fladd+3,f
  9304     14BE  085B               	movf	??___fladd+3,w
  9305     14BF  00D3               	movwf	___fladd@b+3
  9306     14C0  085A               	movf	??___fladd+2,w
  9307     14C1  00D2               	movwf	___fladd@b+2
  9308     14C2  0859               	movf	??___fladd+1,w
  9309     14C3  00D1               	movwf	___fladd@b+1
  9310     14C4  0858               	movf	??___fladd,w
  9311     14C5  00D0               	movwf	___fladd@b
  9312     14C6                     l2881:
  9313     14C6  3080               	movlw	128
  9314     14C7  00D8               	movwf	??___fladd
  9315     14C8  0858               	movf	??___fladd,w
  9316     14C9  06E0               	xorwf	___fladd@signs,f
  9317     14CA  09E3               	comf	___fladd@grs,f
  9318     14CB  0AE3               	incf	___fladd@grs,f
  9319     14CC                     l2883:
  9320     14CC  0863               	movf	___fladd@grs,w
  9321     14CD  1D03               	btfss	3,2
  9322     14CE  2CD0               	goto	u4051
  9323     14CF  2CD1               	goto	u4050
  9324     14D0                     u4051:
  9325     14D0  2CEE               	goto	l770
  9326     14D1                     u4050:
  9327     14D1                     l2885:
  9328     14D1  3001               	movlw	1
  9329     14D2  07D0               	addwf	___fladd@b,f
  9330     14D3  3000               	movlw	0
  9331     14D4  1803               	skipnc
  9332     14D5  3001               	movlw	1
  9333     14D6  07D1               	addwf	___fladd@b+1,f
  9334     14D7  3000               	movlw	0
  9335     14D8  1803               	skipnc
  9336     14D9  3001               	movlw	1
  9337     14DA  07D2               	addwf	___fladd@b+2,f
  9338     14DB  3000               	movlw	0
  9339     14DC  1803               	skipnc
  9340     14DD  3001               	movlw	1
  9341     14DE  07D3               	addwf	___fladd@b+3,f
  9342     14DF  2CEE               	goto	l770
  9343     14E0                     l2887:
  9344     14E0  0854               	movf	___fladd@a,w
  9345     14E1  02D0               	subwf	___fladd@b,f
  9346     14E2  0855               	movf	___fladd@a+1,w
  9347     14E3  1C03               	skipc
  9348     14E4  0F55               	incfsz	___fladd@a+1,w
  9349     14E5  02D1               	subwf	___fladd@b+1,f
  9350     14E6  0856               	movf	___fladd@a+2,w
  9351     14E7  1C03               	skipc
  9352     14E8  0F56               	incfsz	___fladd@a+2,w
  9353     14E9  02D2               	subwf	___fladd@b+2,f
  9354     14EA  0857               	movf	___fladd@a+3,w
  9355     14EB  1C03               	skipc
  9356     14EC  0F57               	incfsz	___fladd@a+3,w
  9357     14ED  02D3               	subwf	___fladd@b+3,f
  9358     14EE                     l770:
  9359     14EE  0853               	movf	___fladd@b+3,w
  9360     14EF  0452               	iorwf	___fladd@b+2,w
  9361     14F0  0451               	iorwf	___fladd@b+1,w
  9362     14F1  0450               	iorwf	___fladd@b,w
  9363     14F2  1D03               	skipz
  9364     14F3  2CF5               	goto	u4061
  9365     14F4  2CF6               	goto	u4060
  9366     14F5                     u4061:
  9367     14F5  2D22               	goto	l2909
  9368     14F6                     u4060:
  9369     14F6                     l2889:
  9370     14F6  0863               	movf	___fladd@grs,w
  9371     14F7  1D03               	btfss	3,2
  9372     14F8  2CFA               	goto	u4071
  9373     14F9  2CFB               	goto	u4070
  9374     14FA                     u4071:
  9375     14FA  2D22               	goto	l2909
  9376     14FB                     u4070:
  9377     14FB                     l2891:
  9378     14FB  3000               	movlw	0
  9379     14FC  00D3               	movwf	?___fladd+3
  9380     14FD  3000               	movlw	0
  9381     14FE  00D2               	movwf	?___fladd+2
  9382     14FF  3000               	movlw	0
  9383     1500  00D1               	movwf	?___fladd+1
  9384     1501  3000               	movlw	0
  9385     1502  00D0               	movwf	?___fladd
  9386     1503  2D9E               	goto	l762
  9387     1504                     l2895:
  9388     1504  3001               	movlw	1
  9389     1505  00D8               	movwf	??___fladd
  9390     1506                     u4085:
  9391     1506  1003               	clrc
  9392     1507  0DD0               	rlf	___fladd@b,f
  9393     1508  0DD1               	rlf	___fladd@b+1,f
  9394     1509  0DD2               	rlf	___fladd@b+2,f
  9395     150A  0DD3               	rlf	___fladd@b+3,f
  9396     150B  0BD8               	decfsz	??___fladd,f
  9397     150C  2D06               	goto	u4085
  9398     150D                     l2897:
  9399     150D  1FE3               	btfss	___fladd@grs,7
  9400     150E  2D10               	goto	u4091
  9401     150F  2D11               	goto	u4090
  9402     1510                     u4091:
  9403     1510  2D12               	goto	l774
  9404     1511                     u4090:
  9405     1511                     l2899:
  9406     1511  1450               	bsf	___fladd@b,0
  9407     1512                     l774:
  9408     1512  1C63               	btfss	___fladd@grs,0
  9409     1513  2D15               	goto	u4101
  9410     1514  2D16               	goto	u4100
  9411     1515                     u4101:
  9412     1515  2D19               	goto	l2903
  9413     1516                     u4100:
  9414     1516                     l2901:
  9415     1516  1403               	setc
  9416     1517  0DE3               	rlf	___fladd@grs,f
  9417     1518  2D1B               	goto	l2905
  9418     1519                     l2903:
  9419     1519  1003               	clrc
  9420     151A  0DE3               	rlf	___fladd@grs,f
  9421     151B                     l2905:
  9422     151B  0862               	movf	___fladd@bexp,w
  9423     151C  1903               	btfsc	3,2
  9424     151D  2D1F               	goto	u4111
  9425     151E  2D20               	goto	u4110
  9426     151F                     u4111:
  9427     151F  2D22               	goto	l2909
  9428     1520                     u4110:
  9429     1520                     l2907:
  9430     1520  3001               	movlw	1
  9431     1521  02E2               	subwf	___fladd@bexp,f
  9432     1522                     l2909:
  9433     1522  1FD2               	btfss	___fladd@b+2,7
  9434     1523  2D25               	goto	u4121
  9435     1524  2D26               	goto	u4120
  9436     1525                     u4121:
  9437     1525  2D04               	goto	l2895
  9438     1526                     u4120:
  9439     1526                     l2911:
  9440     1526  01E1               	clrf	___fladd@aexp
  9441     1527                     l2913:
  9442     1527  1FE3               	btfss	___fladd@grs,7
  9443     1528  2D2A               	goto	u4131
  9444     1529  2D2B               	goto	u4130
  9445     152A                     u4131:
  9446     152A  2D39               	goto	l2921
  9447     152B                     u4130:
  9448     152B                     l2915:
  9449     152B  0863               	movf	___fladd@grs,w
  9450     152C  397F               	andlw	127
  9451     152D  1903               	btfsc	3,2
  9452     152E  2D30               	goto	u4141
  9453     152F  2D31               	goto	u4140
  9454     1530                     u4141:
  9455     1530  2D34               	goto	l780
  9456     1531                     u4140:
  9457     1531                     l2917:
  9458     1531  01E1               	clrf	___fladd@aexp
  9459     1532  0AE1               	incf	___fladd@aexp,f
  9460     1533  2D39               	goto	l2921
  9461     1534                     l780:
  9462     1534  1C50               	btfss	___fladd@b,0
  9463     1535  2D37               	goto	u4151
  9464     1536  2D38               	goto	u4150
  9465     1537                     u4151:
  9466     1537  2D39               	goto	l2921
  9467     1538                     u4150:
  9468     1538  2D31               	goto	l2917
  9469     1539                     l2921:
  9470     1539  0861               	movf	___fladd@aexp,w
  9471     153A  1903               	btfsc	3,2
  9472     153B  2D3D               	goto	u4161
  9473     153C  2D3E               	goto	u4160
  9474     153D                     u4161:
  9475     153D  2D72               	goto	l783
  9476     153E                     u4160:
  9477     153E                     l2923:
  9478     153E  3001               	movlw	1
  9479     153F  07D0               	addwf	___fladd@b,f
  9480     1540  3000               	movlw	0
  9481     1541  1803               	skipnc
  9482     1542  3001               	movlw	1
  9483     1543  07D1               	addwf	___fladd@b+1,f
  9484     1544  3000               	movlw	0
  9485     1545  1803               	skipnc
  9486     1546  3001               	movlw	1
  9487     1547  07D2               	addwf	___fladd@b+2,f
  9488     1548  3000               	movlw	0
  9489     1549  1803               	skipnc
  9490     154A  3001               	movlw	1
  9491     154B  07D3               	addwf	___fladd@b+3,f
  9492     154C                     l2925:
  9493     154C  1C53               	btfss	___fladd@b+3,0
  9494     154D  2D4F               	goto	u4171
  9495     154E  2D50               	goto	u4170
  9496     154F                     u4171:
  9497     154F  2D72               	goto	l783
  9498     1550                     u4170:
  9499     1550                     l2927:
  9500     1550  0850               	movf	___fladd@b,w
  9501     1551  00D8               	movwf	??___fladd
  9502     1552  0851               	movf	___fladd@b+1,w
  9503     1553  00D9               	movwf	??___fladd+1
  9504     1554  0852               	movf	___fladd@b+2,w
  9505     1555  00DA               	movwf	??___fladd+2
  9506     1556  0853               	movf	___fladd@b+3,w
  9507     1557  00DB               	movwf	??___fladd+3
  9508     1558  3001               	movlw	1
  9509     1559  00DC               	movwf	??___fladd+4
  9510     155A                     u4185:
  9511     155A  0D5B               	rlf	??___fladd+3,w
  9512     155B  0CDB               	rrf	??___fladd+3,f
  9513     155C  0CDA               	rrf	??___fladd+2,f
  9514     155D  0CD9               	rrf	??___fladd+1,f
  9515     155E  0CD8               	rrf	??___fladd,f
  9516     155F                     u4180:
  9517     155F  0BDC               	decfsz	??___fladd+4,f
  9518     1560  2D5A               	goto	u4185
  9519     1561  085B               	movf	??___fladd+3,w
  9520     1562  00D3               	movwf	___fladd@b+3
  9521     1563  085A               	movf	??___fladd+2,w
  9522     1564  00D2               	movwf	___fladd@b+2
  9523     1565  0859               	movf	??___fladd+1,w
  9524     1566  00D1               	movwf	___fladd@b+1
  9525     1567  0858               	movf	??___fladd,w
  9526     1568  00D0               	movwf	___fladd@b
  9527     1569  0A62               	incf	___fladd@bexp,w
  9528     156A  1903               	btfsc	3,2
  9529     156B  2D6D               	goto	u4191
  9530     156C  2D6E               	goto	u4190
  9531     156D                     u4191:
  9532     156D  2D72               	goto	l783
  9533     156E                     u4190:
  9534     156E                     l2929:
  9535     156E  3001               	movlw	1
  9536     156F  00D8               	movwf	??___fladd
  9537     1570  0858               	movf	??___fladd,w
  9538     1571  07E2               	addwf	___fladd@bexp,f
  9539     1572                     l783:
  9540     1572  0A62               	incf	___fladd@bexp,w
  9541     1573  1903               	btfsc	3,2
  9542     1574  2D76               	goto	u4201
  9543     1575  2D77               	goto	u4200
  9544     1576                     u4201:
  9545     1576  2D7C               	goto	l2933
  9546     1577                     u4200:
  9547     1577                     l2931:
  9548     1577  0862               	movf	___fladd@bexp,w
  9549     1578  1D03               	btfss	3,2
  9550     1579  2D7B               	goto	u4211
  9551     157A  2D7C               	goto	u4210
  9552     157B                     u4211:
  9553     157B  2D8A               	goto	l2939
  9554     157C                     u4210:
  9555     157C                     l2933:
  9556     157C  3000               	movlw	0
  9557     157D  00D3               	movwf	___fladd@b+3
  9558     157E  3000               	movlw	0
  9559     157F  00D2               	movwf	___fladd@b+2
  9560     1580  3000               	movlw	0
  9561     1581  00D1               	movwf	___fladd@b+1
  9562     1582  3000               	movlw	0
  9563     1583  00D0               	movwf	___fladd@b
  9564     1584                     l2935:
  9565     1584  0862               	movf	___fladd@bexp,w
  9566     1585  1D03               	btfss	3,2
  9567     1586  2D88               	goto	u4221
  9568     1587  2D89               	goto	u4220
  9569     1588                     u4221:
  9570     1588  2D8A               	goto	l2939
  9571     1589                     u4220:
  9572     1589                     l2937:
  9573     1589  01E0               	clrf	___fladd@signs
  9574     158A                     l2939:
  9575     158A  1C62               	btfss	___fladd@bexp,0
  9576     158B  2D8D               	goto	u4231
  9577     158C  2D8E               	goto	u4230
  9578     158D                     u4231:
  9579     158D  2D90               	goto	l2943
  9580     158E                     u4230:
  9581     158E                     l2941:
  9582     158E  17D2               	bsf	___fladd@b+2,7
  9583     158F  2D94               	goto	l791
  9584     1590                     l2943:
  9585     1590  307F               	movlw	127
  9586     1591  00D8               	movwf	??___fladd
  9587     1592  0858               	movf	??___fladd,w
  9588     1593  05D2               	andwf	___fladd@b+2,f
  9589     1594                     l791:
  9590     1594  0862               	movf	___fladd@bexp,w
  9591     1595  00D8               	movwf	??___fladd
  9592     1596  1003               	clrc
  9593     1597  0C58               	rrf	??___fladd,w
  9594     1598  00D3               	movwf	___fladd@b+3
  9595     1599                     l2945:
  9596     1599  1FE0               	btfss	___fladd@signs,7
  9597     159A  2D9C               	goto	u4241
  9598     159B  2D9D               	goto	u4240
  9599     159C                     u4241:
  9600     159C  2D9E               	goto	l792
  9601     159D                     u4240:
  9602     159D                     l2947:
  9603     159D  17D3               	bsf	___fladd@b+3,7
  9604     159E                     l792:
  9605     159E                     l762:
  9606     159E  0008               	return
  9607     159F                     __end_of___fladd:
  9608                           
  9609                           	psect	text20
  9610     0005                     __ptext20:	
  9611 ;; *************** function ___flneg *****************
  9612 ;; Defined at:
  9613 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;  f1              4    0[COMMON] unsigned char 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;		None
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  4    0[COMMON] unsigned char 
  9620 ;; Registers used:
  9621 ;;		wreg
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9627 ;;      Params:         4       0       0       0       0
  9628 ;;      Locals:         0       0       0       0       0
  9629 ;;      Temps:          0       0       0       0       0
  9630 ;;      Totals:         4       0       0       0       0
  9631 ;;Total ram usage:        4 bytes
  9632 ;; Hardware stack levels used: 1
  9633 ;; This function calls:
  9634 ;;		Nothing
  9635 ;; This function is called by:
  9636 ;;		_sprintf
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640     0005                     ___flneg:	
  9641                           ;psect for function ___flneg
  9642                           
  9643     0005                     l3353:	
  9644                           ;incstack = 0
  9645                           ; Regs used in ___flneg: [wreg]
  9646                           
  9647     0005  0873               	movf	___flneg@f1+3,w
  9648     0006  0472               	iorwf	___flneg@f1+2,w
  9649     0007  0471               	iorwf	___flneg@f1+1,w
  9650     0008  0470               	iorwf	___flneg@f1,w
  9651     0009  1903               	skipnz
  9652     000A  280C               	goto	u5361
  9653     000B  280D               	goto	u5360
  9654     000C                     u5361:
  9655     000C  280F               	goto	l3357
  9656     000D                     u5360:
  9657     000D                     l3355:
  9658     000D  3080               	movlw	128
  9659     000E  06F3               	xorwf	___flneg@f1+3,f
  9660     000F                     l3357:
  9661     000F                     l621:
  9662     000F  0008               	return
  9663     0010                     __end_of___flneg:
  9664                           
  9665                           	psect	text21
  9666     0802                     __ptext21:	
  9667 ;; *************** function ___flge *****************
  9668 ;; Defined at:
  9669 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  ff1             4    0[COMMON] unsigned char 
  9672 ;;  ff2             4    4[COMMON] unsigned char 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;		None
  9675 ;; Return value:  Size  Location     Type
  9676 ;;		None               void
  9677 ;; Registers used:
  9678 ;;		wreg, status,2, status,0
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9684 ;;      Params:         8       0       0       0       0
  9685 ;;      Locals:         0       0       0       0       0
  9686 ;;      Temps:          4       0       0       0       0
  9687 ;;      Totals:        12       0       0       0       0
  9688 ;;Total ram usage:       12 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_sprintf
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697     0802                     ___flge:	
  9698                           ;psect for function ___flge
  9699                           
  9700     0802                     l3333:	
  9701                           ;incstack = 0
  9702                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9703                           
  9704     0802  3000               	movlw	0
  9705     0803  0570               	andwf	___flge@ff1,w
  9706     0804  00F8               	movwf	??___flge
  9707     0805  3000               	movlw	0
  9708     0806  0571               	andwf	___flge@ff1+1,w
  9709     0807  00F9               	movwf	??___flge+1
  9710     0808  3080               	movlw	128
  9711     0809  0572               	andwf	___flge@ff1+2,w
  9712     080A  00FA               	movwf	??___flge+2
  9713     080B  307F               	movlw	127
  9714     080C  0573               	andwf	___flge@ff1+3,w
  9715     080D  00FB               	movwf	??___flge+3
  9716     080E  087B               	movf	??___flge+3,w
  9717     080F  047A               	iorwf	??___flge+2,w
  9718     0810  0479               	iorwf	??___flge+1,w
  9719     0811  0478               	iorwf	??___flge,w
  9720     0812  1D03               	skipz
  9721     0813  2815               	goto	u5291
  9722     0814  2816               	goto	u5290
  9723     0815                     u5291:
  9724     0815  281E               	goto	l613
  9725     0816                     u5290:
  9726     0816                     l3335:
  9727     0816  3000               	movlw	0
  9728     0817  00F3               	movwf	___flge@ff1+3
  9729     0818  3000               	movlw	0
  9730     0819  00F2               	movwf	___flge@ff1+2
  9731     081A  3000               	movlw	0
  9732     081B  00F1               	movwf	___flge@ff1+1
  9733     081C  3000               	movlw	0
  9734     081D  00F0               	movwf	___flge@ff1
  9735     081E                     l613:
  9736     081E  3000               	movlw	0
  9737     081F  0574               	andwf	___flge@ff2,w
  9738     0820  00F8               	movwf	??___flge
  9739     0821  3000               	movlw	0
  9740     0822  0575               	andwf	___flge@ff2+1,w
  9741     0823  00F9               	movwf	??___flge+1
  9742     0824  3080               	movlw	128
  9743     0825  0576               	andwf	___flge@ff2+2,w
  9744     0826  00FA               	movwf	??___flge+2
  9745     0827  307F               	movlw	127
  9746     0828  0577               	andwf	___flge@ff2+3,w
  9747     0829  00FB               	movwf	??___flge+3
  9748     082A  087B               	movf	??___flge+3,w
  9749     082B  047A               	iorwf	??___flge+2,w
  9750     082C  0479               	iorwf	??___flge+1,w
  9751     082D  0478               	iorwf	??___flge,w
  9752     082E  1D03               	skipz
  9753     082F  2831               	goto	u5301
  9754     0830  2832               	goto	u5300
  9755     0831                     u5301:
  9756     0831  283A               	goto	l3339
  9757     0832                     u5300:
  9758     0832                     l3337:
  9759     0832  3000               	movlw	0
  9760     0833  00F7               	movwf	___flge@ff2+3
  9761     0834  3000               	movlw	0
  9762     0835  00F6               	movwf	___flge@ff2+2
  9763     0836  3000               	movlw	0
  9764     0837  00F5               	movwf	___flge@ff2+1
  9765     0838  3000               	movlw	0
  9766     0839  00F4               	movwf	___flge@ff2
  9767     083A                     l3339:
  9768     083A  1FF3               	btfss	___flge@ff1+3,7
  9769     083B  283D               	goto	u5311
  9770     083C  283E               	goto	u5310
  9771     083D                     u5311:
  9772     083D  2862               	goto	l3343
  9773     083E                     u5310:
  9774     083E                     l3341:
  9775     083E  3000               	movlw	0
  9776     083F  00F8               	movwf	??___flge
  9777     0840  3000               	movlw	0
  9778     0841  00F9               	movwf	??___flge+1
  9779     0842  3000               	movlw	0
  9780     0843  00FA               	movwf	??___flge+2
  9781     0844  3080               	movlw	128
  9782     0845  00FB               	movwf	??___flge+3
  9783     0846  0870               	movf	___flge@ff1,w
  9784     0847  02F8               	subwf	??___flge,f
  9785     0848  0871               	movf	___flge@ff1+1,w
  9786     0849  1C03               	skipc
  9787     084A  0F71               	incfsz	___flge@ff1+1,w
  9788     084B  284D               	goto	u5321
  9789     084C  284E               	goto	u5322
  9790     084D                     u5321:
  9791     084D  02F9               	subwf	??___flge+1,f
  9792     084E                     u5322:
  9793     084E  0872               	movf	___flge@ff1+2,w
  9794     084F  1C03               	skipc
  9795     0850  0F72               	incfsz	___flge@ff1+2,w
  9796     0851  2853               	goto	u5323
  9797     0852  2854               	goto	u5324
  9798     0853                     u5323:
  9799     0853  02FA               	subwf	??___flge+2,f
  9800     0854                     u5324:
  9801     0854  0873               	movf	___flge@ff1+3,w
  9802     0855  1C03               	skipc
  9803     0856  0F73               	incfsz	___flge@ff1+3,w
  9804     0857  2859               	goto	u5325
  9805     0858  285A               	goto	u5326
  9806     0859                     u5325:
  9807     0859  02FB               	subwf	??___flge+3,f
  9808     085A                     u5326:
  9809     085A  087B               	movf	??___flge+3,w
  9810     085B  00F3               	movwf	___flge@ff1+3
  9811     085C  087A               	movf	??___flge+2,w
  9812     085D  00F2               	movwf	___flge@ff1+2
  9813     085E  0879               	movf	??___flge+1,w
  9814     085F  00F1               	movwf	___flge@ff1+1
  9815     0860  0878               	movf	??___flge,w
  9816     0861  00F0               	movwf	___flge@ff1
  9817     0862                     l3343:
  9818     0862  1FF7               	btfss	___flge@ff2+3,7
  9819     0863  2865               	goto	u5331
  9820     0864  2866               	goto	u5330
  9821     0865                     u5331:
  9822     0865  288A               	goto	l616
  9823     0866                     u5330:
  9824     0866                     l3345:
  9825     0866  3000               	movlw	0
  9826     0867  00F8               	movwf	??___flge
  9827     0868  3000               	movlw	0
  9828     0869  00F9               	movwf	??___flge+1
  9829     086A  3000               	movlw	0
  9830     086B  00FA               	movwf	??___flge+2
  9831     086C  3080               	movlw	128
  9832     086D  00FB               	movwf	??___flge+3
  9833     086E  0874               	movf	___flge@ff2,w
  9834     086F  02F8               	subwf	??___flge,f
  9835     0870  0875               	movf	___flge@ff2+1,w
  9836     0871  1C03               	skipc
  9837     0872  0F75               	incfsz	___flge@ff2+1,w
  9838     0873  2875               	goto	u5341
  9839     0874  2876               	goto	u5342
  9840     0875                     u5341:
  9841     0875  02F9               	subwf	??___flge+1,f
  9842     0876                     u5342:
  9843     0876  0876               	movf	___flge@ff2+2,w
  9844     0877  1C03               	skipc
  9845     0878  0F76               	incfsz	___flge@ff2+2,w
  9846     0879  287B               	goto	u5343
  9847     087A  287C               	goto	u5344
  9848     087B                     u5343:
  9849     087B  02FA               	subwf	??___flge+2,f
  9850     087C                     u5344:
  9851     087C  0877               	movf	___flge@ff2+3,w
  9852     087D  1C03               	skipc
  9853     087E  0F77               	incfsz	___flge@ff2+3,w
  9854     087F  2881               	goto	u5345
  9855     0880  2882               	goto	u5346
  9856     0881                     u5345:
  9857     0881  02FB               	subwf	??___flge+3,f
  9858     0882                     u5346:
  9859     0882  087B               	movf	??___flge+3,w
  9860     0883  00F7               	movwf	___flge@ff2+3
  9861     0884  087A               	movf	??___flge+2,w
  9862     0885  00F6               	movwf	___flge@ff2+2
  9863     0886  0879               	movf	??___flge+1,w
  9864     0887  00F5               	movwf	___flge@ff2+1
  9865     0888  0878               	movf	??___flge,w
  9866     0889  00F4               	movwf	___flge@ff2
  9867     088A                     l616:
  9868     088A  3080               	movlw	128
  9869     088B  06F3               	xorwf	___flge@ff1+3,f
  9870     088C  3080               	movlw	128
  9871     088D  06F7               	xorwf	___flge@ff2+3,f
  9872     088E  0877               	movf	___flge@ff2+3,w
  9873     088F  0273               	subwf	___flge@ff1+3,w
  9874     0890  1D03               	skipz
  9875     0891  289C               	goto	u5355
  9876     0892  0876               	movf	___flge@ff2+2,w
  9877     0893  0272               	subwf	___flge@ff1+2,w
  9878     0894  1D03               	skipz
  9879     0895  289C               	goto	u5355
  9880     0896  0875               	movf	___flge@ff2+1,w
  9881     0897  0271               	subwf	___flge@ff1+1,w
  9882     0898  1D03               	skipz
  9883     0899  289C               	goto	u5355
  9884     089A  0874               	movf	___flge@ff2,w
  9885     089B  0270               	subwf	___flge@ff1,w
  9886     089C                     u5355:
  9887     089C  1803               	skipnc
  9888     089D  289F               	goto	u5351
  9889     089E  28A0               	goto	u5350
  9890     089F                     u5351:
  9891     089F  28A2               	goto	l3349
  9892     08A0                     u5350:
  9893     08A0                     l3347:
  9894     08A0  1003               	clrc
  9895     08A1  28A3               	goto	l617
  9896     08A2                     l3349:
  9897     08A2  1403               	setc
  9898     08A3                     l617:
  9899     08A3  0008               	return
  9900     08A4                     __end_of___flge:
  9901                           
  9902                           	psect	text22
  9903     1B4B                     __ptext22:	
  9904 ;; *************** function ___fleq *****************
  9905 ;; Defined at:
  9906 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  ff1             4    0[COMMON] unsigned char 
  9909 ;;  ff2             4    4[COMMON] unsigned char 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;		None               void
  9914 ;; Registers used:
  9915 ;;		wreg, status,2, status,0
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9921 ;;      Params:         8       0       0       0       0
  9922 ;;      Locals:         0       0       0       0       0
  9923 ;;      Temps:          4       0       0       0       0
  9924 ;;      Totals:        12       0       0       0       0
  9925 ;;Total ram usage:       12 bytes
  9926 ;; Hardware stack levels used: 1
  9927 ;; This function calls:
  9928 ;;		Nothing
  9929 ;; This function is called by:
  9930 ;;		_sprintf
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934     1B4B                     ___fleq:	
  9935                           ;psect for function ___fleq
  9936                           
  9937     1B4B                     l3321:	
  9938                           ;incstack = 0
  9939                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9940                           
  9941     1B4B  3000               	movlw	0
  9942     1B4C  0570               	andwf	___fleq@ff1,w
  9943     1B4D  00F8               	movwf	??___fleq
  9944     1B4E  3000               	movlw	0
  9945     1B4F  0571               	andwf	___fleq@ff1+1,w
  9946     1B50  00F9               	movwf	??___fleq+1
  9947     1B51  3080               	movlw	128
  9948     1B52  0572               	andwf	___fleq@ff1+2,w
  9949     1B53  00FA               	movwf	??___fleq+2
  9950     1B54  307F               	movlw	127
  9951     1B55  0573               	andwf	___fleq@ff1+3,w
  9952     1B56  00FB               	movwf	??___fleq+3
  9953     1B57  087B               	movf	??___fleq+3,w
  9954     1B58  047A               	iorwf	??___fleq+2,w
  9955     1B59  0479               	iorwf	??___fleq+1,w
  9956     1B5A  0478               	iorwf	??___fleq,w
  9957     1B5B  1D03               	skipz
  9958     1B5C  2B5E               	goto	u5261
  9959     1B5D  2B5F               	goto	u5260
  9960     1B5E                     u5261:
  9961     1B5E  2B67               	goto	l608
  9962     1B5F                     u5260:
  9963     1B5F                     l3323:
  9964     1B5F  3000               	movlw	0
  9965     1B60  00F3               	movwf	___fleq@ff1+3
  9966     1B61  3000               	movlw	0
  9967     1B62  00F2               	movwf	___fleq@ff1+2
  9968     1B63  3000               	movlw	0
  9969     1B64  00F1               	movwf	___fleq@ff1+1
  9970     1B65  3000               	movlw	0
  9971     1B66  00F0               	movwf	___fleq@ff1
  9972     1B67                     l608:
  9973     1B67  3000               	movlw	0
  9974     1B68  0574               	andwf	___fleq@ff2,w
  9975     1B69  00F8               	movwf	??___fleq
  9976     1B6A  3000               	movlw	0
  9977     1B6B  0575               	andwf	___fleq@ff2+1,w
  9978     1B6C  00F9               	movwf	??___fleq+1
  9979     1B6D  3080               	movlw	128
  9980     1B6E  0576               	andwf	___fleq@ff2+2,w
  9981     1B6F  00FA               	movwf	??___fleq+2
  9982     1B70  307F               	movlw	127
  9983     1B71  0577               	andwf	___fleq@ff2+3,w
  9984     1B72  00FB               	movwf	??___fleq+3
  9985     1B73  087B               	movf	??___fleq+3,w
  9986     1B74  047A               	iorwf	??___fleq+2,w
  9987     1B75  0479               	iorwf	??___fleq+1,w
  9988     1B76  0478               	iorwf	??___fleq,w
  9989     1B77  1D03               	skipz
  9990     1B78  2B7A               	goto	u5271
  9991     1B79  2B7B               	goto	u5270
  9992     1B7A                     u5271:
  9993     1B7A  2B83               	goto	l609
  9994     1B7B                     u5270:
  9995     1B7B                     l3325:
  9996     1B7B  3000               	movlw	0
  9997     1B7C  00F7               	movwf	___fleq@ff2+3
  9998     1B7D  3000               	movlw	0
  9999     1B7E  00F6               	movwf	___fleq@ff2+2
 10000     1B7F  3000               	movlw	0
 10001     1B80  00F5               	movwf	___fleq@ff2+1
 10002     1B81  3000               	movlw	0
 10003     1B82  00F4               	movwf	___fleq@ff2
 10004     1B83                     l609:
 10005     1B83  0877               	movf	___fleq@ff2+3,w
 10006     1B84  0673               	xorwf	___fleq@ff1+3,w
 10007     1B85  1D03               	skipz
 10008     1B86  2B91               	goto	u5285
 10009     1B87  0876               	movf	___fleq@ff2+2,w
 10010     1B88  0672               	xorwf	___fleq@ff1+2,w
 10011     1B89  1D03               	skipz
 10012     1B8A  2B91               	goto	u5285
 10013     1B8B  0875               	movf	___fleq@ff2+1,w
 10014     1B8C  0671               	xorwf	___fleq@ff1+1,w
 10015     1B8D  1D03               	skipz
 10016     1B8E  2B91               	goto	u5285
 10017     1B8F  0874               	movf	___fleq@ff2,w
 10018     1B90  0670               	xorwf	___fleq@ff1,w
 10019     1B91                     u5285:
 10020     1B91  1903               	skipnz
 10021     1B92  2B94               	goto	u5281
 10022     1B93  2B95               	goto	u5280
 10023     1B94                     u5281:
 10024     1B94  2B97               	goto	l3329
 10025     1B95                     u5280:
 10026     1B95                     l3327:
 10027     1B95  1003               	clrc
 10028     1B96  2B98               	goto	l610
 10029     1B97                     l3329:
 10030     1B97  1403               	setc
 10031     1B98                     l610:
 10032     1B98  0008               	return
 10033     1B99                     __end_of___fleq:
 10034                           
 10035                           	psect	text23
 10036     1C4A                     __ptext23:	
 10037 ;; *************** function _setupINTOSC *****************
 10038 ;; Defined at:
 10039 ;;		line 11 in file "configINTOSC.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;  OsciladorInt    2    0[COMMON] int 
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;		None
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  1    wreg      void 
 10046 ;; Registers used:
 10047 ;;		wreg, status,2, status,0
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10053 ;;      Params:         2       0       0       0       0
 10054 ;;      Locals:         0       0       0       0       0
 10055 ;;      Temps:          0       0       0       0       0
 10056 ;;      Totals:         2       0       0       0       0
 10057 ;;Total ram usage:        2 bytes
 10058 ;; Hardware stack levels used: 1
 10059 ;; This function calls:
 10060 ;;		Nothing
 10061 ;; This function is called by:
 10062 ;;		_main
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066     1C4A                     _setupINTOSC:	
 10067                           ;psect for function _setupINTOSC
 10068                           
 10069     1C4A                     l3475:	
 10070                           ;incstack = 0
 10071                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
 10072                           
 10073                           
 10074                           ;configINTOSC.c: 13:     if (OsciladorInterno == 125)
 10075     1C4A  307D               	movlw	125
 10076     1C4B  0670               	xorwf	setupINTOSC@OsciladorInterno,w
 10077     1C4C  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
 10078     1C4D  1D03               	btfss	3,2
 10079     1C4E  2C50               	goto	u5671
 10080     1C4F  2C51               	goto	u5670
 10081     1C50                     u5671:
 10082     1C50  2C58               	goto	l141
 10083     1C51                     u5670:
 10084     1C51                     l3477:
 10085                           
 10086                           ;configINTOSC.c: 14:     {;configINTOSC.c: 15:     OSCCONbits.IRCF = 0b0001 ;
 10087     1C51  1683               	bsf	3,5	;RP0=1, select bank1
 10088     1C52  1303               	bcf	3,6	;RP1=0, select bank1
 10089     1C53  080F               	movf	15,w	;volatile
 10090     1C54  398F               	andlw	-113
 10091     1C55  3810               	iorlw	16
 10092     1C56  008F               	movwf	15	;volatile
 10093     1C57                     l3479:
 10094                           
 10095                           ;configINTOSC.c: 16:     OSCCONbits.SCS = 1;
 10096     1C57  140F               	bsf	15,0	;volatile
 10097     1C58                     l141:	
 10098                           ;configINTOSC.c: 17:     }
 10099                           
 10100                           
 10101                           ;configINTOSC.c: 19:     if (OsciladorInterno == 250)
 10102     1C58  30FA               	movlw	250
 10103     1C59  0670               	xorwf	setupINTOSC@OsciladorInterno,w
 10104     1C5A  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
 10105     1C5B  1D03               	btfss	3,2
 10106     1C5C  2C5E               	goto	u5681
 10107     1C5D  2C5F               	goto	u5680
 10108     1C5E                     u5681:
 10109     1C5E  2C66               	goto	l142
 10110     1C5F                     u5680:
 10111     1C5F                     l3481:
 10112                           
 10113                           ;configINTOSC.c: 20:     {;configINTOSC.c: 21:     OSCCONbits.IRCF = 0b0010 ;
 10114     1C5F  1683               	bsf	3,5	;RP0=1, select bank1
 10115     1C60  1303               	bcf	3,6	;RP1=0, select bank1
 10116     1C61  080F               	movf	15,w	;volatile
 10117     1C62  398F               	andlw	-113
 10118     1C63  3820               	iorlw	32
 10119     1C64  008F               	movwf	15	;volatile
 10120     1C65                     l3483:
 10121                           
 10122                           ;configINTOSC.c: 22:     OSCCONbits.SCS = 1;
 10123     1C65  140F               	bsf	15,0	;volatile
 10124     1C66                     l142:	
 10125                           ;configINTOSC.c: 23:     }
 10126                           
 10127                           
 10128                           ;configINTOSC.c: 25:     if (OsciladorInterno == 500)
 10129     1C66  30F4               	movlw	244
 10130     1C67  0670               	xorwf	setupINTOSC@OsciladorInterno,w
 10131     1C68  1D03               	skipz
 10132     1C69  2C6E               	goto	u5691
 10133     1C6A  0371               	decf	setupINTOSC@OsciladorInterno+1,w
 10134     1C6B  1D03               	btfss	3,2
 10135     1C6C  2C6E               	goto	u5691
 10136     1C6D  2C6F               	goto	u5690
 10137     1C6E                     u5691:
 10138     1C6E  2C76               	goto	l143
 10139     1C6F                     u5690:
 10140     1C6F                     l3485:
 10141                           
 10142                           ;configINTOSC.c: 26:     {;configINTOSC.c: 27:     OSCCONbits.IRCF = 0b0011 ;
 10143     1C6F  1683               	bsf	3,5	;RP0=1, select bank1
 10144     1C70  1303               	bcf	3,6	;RP1=0, select bank1
 10145     1C71  080F               	movf	15,w	;volatile
 10146     1C72  398F               	andlw	-113
 10147     1C73  3830               	iorlw	48
 10148     1C74  008F               	movwf	15	;volatile
 10149     1C75                     l3487:
 10150                           
 10151                           ;configINTOSC.c: 28:     OSCCONbits.SCS = 1;
 10152     1C75  140F               	bsf	15,0	;volatile
 10153     1C76                     l143:	
 10154                           ;configINTOSC.c: 29:     }
 10155                           
 10156                           
 10157                           ;configINTOSC.c: 31:     if (OsciladorInterno == 1)
 10158     1C76  0370               	decf	setupINTOSC@OsciladorInterno,w
 10159     1C77  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
 10160     1C78  1D03               	btfss	3,2
 10161     1C79  2C7B               	goto	u5701
 10162     1C7A  2C7C               	goto	u5700
 10163     1C7B                     u5701:
 10164     1C7B  2C83               	goto	l144
 10165     1C7C                     u5700:
 10166     1C7C                     l3489:
 10167                           
 10168                           ;configINTOSC.c: 32:     {;configINTOSC.c: 33:     OSCCONbits.IRCF = 0b0100 ;
 10169     1C7C  1683               	bsf	3,5	;RP0=1, select bank1
 10170     1C7D  1303               	bcf	3,6	;RP1=0, select bank1
 10171     1C7E  080F               	movf	15,w	;volatile
 10172     1C7F  398F               	andlw	-113
 10173     1C80  3840               	iorlw	64
 10174     1C81  008F               	movwf	15	;volatile
 10175     1C82                     l3491:
 10176                           
 10177                           ;configINTOSC.c: 34:     OSCCONbits.SCS = 1;
 10178     1C82  140F               	bsf	15,0	;volatile
 10179     1C83                     l144:	
 10180                           ;configINTOSC.c: 35:     }
 10181                           
 10182                           
 10183                           ;configINTOSC.c: 37:     if (OsciladorInterno == 2)
 10184     1C83  3002               	movlw	2
 10185     1C84  0670               	xorwf	setupINTOSC@OsciladorInterno,w
 10186     1C85  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
 10187     1C86  1D03               	btfss	3,2
 10188     1C87  2C89               	goto	u5711
 10189     1C88  2C8A               	goto	u5710
 10190     1C89                     u5711:
 10191     1C89  2C91               	goto	l145
 10192     1C8A                     u5710:
 10193     1C8A                     l3493:
 10194                           
 10195                           ;configINTOSC.c: 38:     {;configINTOSC.c: 39:     OSCCONbits.IRCF = 0b0101 ;
 10196     1C8A  1683               	bsf	3,5	;RP0=1, select bank1
 10197     1C8B  1303               	bcf	3,6	;RP1=0, select bank1
 10198     1C8C  080F               	movf	15,w	;volatile
 10199     1C8D  398F               	andlw	-113
 10200     1C8E  3850               	iorlw	80
 10201     1C8F  008F               	movwf	15	;volatile
 10202     1C90                     l3495:
 10203                           
 10204                           ;configINTOSC.c: 40:     OSCCONbits.SCS = 1;
 10205     1C90  140F               	bsf	15,0	;volatile
 10206     1C91                     l145:	
 10207                           ;configINTOSC.c: 41:     }
 10208                           
 10209                           
 10210                           ;configINTOSC.c: 43:     if (OsciladorInterno == 4)
 10211     1C91  3004               	movlw	4
 10212     1C92  0670               	xorwf	setupINTOSC@OsciladorInterno,w
 10213     1C93  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
 10214     1C94  1D03               	btfss	3,2
 10215     1C95  2C97               	goto	u5721
 10216     1C96  2C98               	goto	u5720
 10217     1C97                     u5721:
 10218     1C97  2C9F               	goto	l146
 10219     1C98                     u5720:
 10220     1C98                     l3497:
 10221                           
 10222                           ;configINTOSC.c: 44:     {;configINTOSC.c: 45:     OSCCONbits.IRCF = 0b0110 ;
 10223     1C98  1683               	bsf	3,5	;RP0=1, select bank1
 10224     1C99  1303               	bcf	3,6	;RP1=0, select bank1
 10225     1C9A  080F               	movf	15,w	;volatile
 10226     1C9B  398F               	andlw	-113
 10227     1C9C  3860               	iorlw	96
 10228     1C9D  008F               	movwf	15	;volatile
 10229     1C9E                     l3499:
 10230                           
 10231                           ;configINTOSC.c: 46:     OSCCONbits.SCS = 1;
 10232     1C9E  140F               	bsf	15,0	;volatile
 10233     1C9F                     l146:	
 10234                           ;configINTOSC.c: 47:     }
 10235                           
 10236                           
 10237                           ;configINTOSC.c: 49:     if (OsciladorInterno == 8)
 10238     1C9F  3008               	movlw	8
 10239     1CA0  0670               	xorwf	setupINTOSC@OsciladorInterno,w
 10240     1CA1  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
 10241     1CA2  1D03               	btfss	3,2
 10242     1CA3  2CA5               	goto	u5731
 10243     1CA4  2CA6               	goto	u5730
 10244     1CA5                     u5731:
 10245     1CA5  2CAB               	goto	l148
 10246     1CA6                     u5730:
 10247     1CA6                     l3501:
 10248                           
 10249                           ;configINTOSC.c: 50:     {;configINTOSC.c: 51:     OSCCONbits.IRCF = 0b0111 ;
 10250     1CA6  3070               	movlw	112
 10251     1CA7  1683               	bsf	3,5	;RP0=1, select bank1
 10252     1CA8  1303               	bcf	3,6	;RP1=0, select bank1
 10253     1CA9  048F               	iorwf	15,f	;volatile
 10254     1CAA                     l3503:
 10255                           
 10256                           ;configINTOSC.c: 52:     OSCCONbits.SCS = 1;
 10257     1CAA  140F               	bsf	15,0	;volatile
 10258     1CAB                     l148:
 10259     1CAB  0008               	return
 10260     1CAC                     __end_of_setupINTOSC:
 10261                           
 10262                           	psect	text24
 10263     19DE                     __ptext24:	
 10264 ;; *************** function _setupADC *****************
 10265 ;; Defined at:
 10266 ;;		line 13 in file "configADC.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  canal           1    wreg     unsigned char 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;  canal           1    1[COMMON] unsigned char 
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      void 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10280 ;;      Params:         0       0       0       0       0
 10281 ;;      Locals:         1       0       0       0       0
 10282 ;;      Temps:          1       0       0       0       0
 10283 ;;      Totals:         2       0       0       0       0
 10284 ;;Total ram usage:        2 bytes
 10285 ;; Hardware stack levels used: 1
 10286 ;; This function calls:
 10287 ;;		Nothing
 10288 ;; This function is called by:
 10289 ;;		_main
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293     19DE                     _setupADC:	
 10294                           ;psect for function _setupADC
 10295                           
 10296                           
 10297                           ;incstack = 0
 10298                           ; Regs used in _setupADC: [wreg+status,2+status,0]
 10299                           ;setupADC@canal stored from wreg
 10300     19DE  00F1               	movwf	setupADC@canal
 10301     19DF                     l3505:
 10302                           
 10303                           ;configADC.c: 17:     if(canal == 0)
 10304     19DF  0871               	movf	setupADC@canal,w
 10305     19E0  1D03               	btfss	3,2
 10306     19E1  29E3               	goto	u5741
 10307     19E2  29E4               	goto	u5740
 10308     19E3                     u5741:
 10309     19E3  29EA               	goto	l3509
 10310     19E4                     u5740:
 10311     19E4                     l3507:
 10312                           
 10313                           ;configADC.c: 18:     {;configADC.c: 19:     TRISAbits.TRISA0 = 1;
 10314     19E4  1683               	bsf	3,5	;RP0=1, select bank1
 10315     19E5  1303               	bcf	3,6	;RP1=0, select bank1
 10316     19E6  1405               	bsf	5,0	;volatile
 10317                           
 10318                           ;configADC.c: 20:     ANSELbits.ANS0 = 1;
 10319     19E7  1683               	bsf	3,5	;RP0=1, select bank3
 10320     19E8  1703               	bsf	3,6	;RP1=1, select bank3
 10321     19E9  1408               	bsf	8,0	;volatile
 10322     19EA                     l3509:
 10323                           
 10324                           ;configADC.c: 23:     if(canal == 1)
 10325     19EA  0371               	decf	setupADC@canal,w
 10326     19EB  1D03               	btfss	3,2
 10327     19EC  29EE               	goto	u5751
 10328     19ED  29EF               	goto	u5750
 10329     19EE                     u5751:
 10330     19EE  29F5               	goto	l124
 10331     19EF                     u5750:
 10332     19EF                     l3511:
 10333                           
 10334                           ;configADC.c: 24:     {;configADC.c: 25:     TRISAbits.TRISA1 = 1;
 10335     19EF  1683               	bsf	3,5	;RP0=1, select bank1
 10336     19F0  1303               	bcf	3,6	;RP1=0, select bank1
 10337     19F1  1485               	bsf	5,1	;volatile
 10338                           
 10339                           ;configADC.c: 26:     ANSELbits.ANS1 = 1;
 10340     19F2  1683               	bsf	3,5	;RP0=1, select bank3
 10341     19F3  1703               	bsf	3,6	;RP1=1, select bank3
 10342     19F4  1488               	bsf	8,1	;volatile
 10343     19F5                     l124:	
 10344                           ;configADC.c: 27:     }
 10345                           
 10346                           
 10347                           ;configADC.c: 31:     ADCON0bits.ADCS0 = 1;
 10348     19F5  1283               	bcf	3,5	;RP0=0, select bank0
 10349     19F6  1303               	bcf	3,6	;RP1=0, select bank0
 10350     19F7  171F               	bsf	31,6	;volatile
 10351                           
 10352                           ;configADC.c: 32:     ADCON0bits.ADCS1 = 0;
 10353     19F8  139F               	bcf	31,7	;volatile
 10354                           
 10355                           ;configADC.c: 34:     ADCON1bits.VCFG0 = 0;
 10356     19F9  1683               	bsf	3,5	;RP0=1, select bank1
 10357     19FA  1303               	bcf	3,6	;RP1=0, select bank1
 10358     19FB  121F               	bcf	31,4	;volatile
 10359                           
 10360                           ;configADC.c: 35:     ADCON1bits.VCFG1 = 0;
 10361     19FC  129F               	bcf	31,5	;volatile
 10362                           
 10363                           ;configADC.c: 37:     ADCON1bits.ADFM = 0;
 10364     19FD  139F               	bcf	31,7	;volatile
 10365                           
 10366                           ;configADC.c: 39:     ADCON0bits.CHS0 = 0;
 10367     19FE  1283               	bcf	3,5	;RP0=0, select bank0
 10368     19FF  1303               	bcf	3,6	;RP1=0, select bank0
 10369     1A00  111F               	bcf	31,2	;volatile
 10370                           
 10371                           ;configADC.c: 40:     ADCON0bits.CHS1 = 0;
 10372     1A01  119F               	bcf	31,3	;volatile
 10373                           
 10374                           ;configADC.c: 41:     ADCON0bits.CHS2 = 0;
 10375     1A02  121F               	bcf	31,4	;volatile
 10376                           
 10377                           ;configADC.c: 42:     ADCON0bits.CHS3 = 0;
 10378     1A03  129F               	bcf	31,5	;volatile
 10379                           
 10380                           ;configADC.c: 44:     ADCON0bits.ADON = 1;
 10381     1A04  141F               	bsf	31,0	;volatile
 10382     1A05                     l3513:
 10383                           
 10384                           ;configADC.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10385     1A05  3042               	movlw	66
 10386     1A06  00F0               	movwf	??_setupADC
 10387     1A07                     u6597:
 10388     1A07  0BF0               	decfsz	??_setupADC,f
 10389     1A08  2A07               	goto	u6597
 10390     1A09  0000               	nop
 10391     1A0A                     l125:
 10392     1A0A  0008               	return
 10393     1A0B                     __end_of_setupADC:
 10394                           
 10395                           	psect	text25
 10396     190A                     __ptext25:	
 10397 ;; *************** function _setup *****************
 10398 ;; Defined at:
 10399 ;;		line 159 in file "main.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;		None
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		status,2
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10413 ;;      Params:         0       0       0       0       0
 10414 ;;      Locals:         0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0
 10416 ;;      Totals:         0       0       0       0       0
 10417 ;;Total ram usage:        0 bytes
 10418 ;; Hardware stack levels used: 1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_main
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426     190A                     _setup:	
 10427                           ;psect for function _setup
 10428                           
 10429     190A                     l3467:	
 10430                           ;incstack = 0
 10431                           ; Regs used in _setup: [status,2]
 10432                           
 10433                           
 10434                           ;main.c: 161:     ANSEL = 0;
 10435     190A  1683               	bsf	3,5	;RP0=1, select bank3
 10436     190B  1703               	bsf	3,6	;RP1=1, select bank3
 10437     190C  0188               	clrf	8	;volatile
 10438                           
 10439                           ;main.c: 162:     ANSELH = 0;
 10440     190D  0189               	clrf	9	;volatile
 10441                           
 10442                           ;main.c: 164:     TRISB = 0;
 10443     190E  1683               	bsf	3,5	;RP0=1, select bank1
 10444     190F  1303               	bcf	3,6	;RP1=0, select bank1
 10445     1910  0186               	clrf	6	;volatile
 10446                           
 10447                           ;main.c: 166:     TRISD = 0;
 10448     1911  0188               	clrf	8	;volatile
 10449                           
 10450                           ;main.c: 167:     TRISE = 0;
 10451     1912  0189               	clrf	9	;volatile
 10452                           
 10453                           ;main.c: 169:     PORTB = 0;
 10454     1913  1283               	bcf	3,5	;RP0=0, select bank0
 10455     1914  1303               	bcf	3,6	;RP1=0, select bank0
 10456     1915  0186               	clrf	6	;volatile
 10457                           
 10458                           ;main.c: 171:     PORTD = 0;
 10459     1916  0188               	clrf	8	;volatile
 10460                           
 10461                           ;main.c: 172:     PORTE = 0;
 10462     1917  0189               	clrf	9	;volatile
 10463     1918                     l3469:
 10464                           
 10465                           ;main.c: 175:     INTCONbits.GIE = 1;
 10466     1918  178B               	bsf	11,7	;volatile
 10467     1919                     l3471:
 10468                           
 10469                           ;main.c: 176:     INTCONbits.PEIE = 1;
 10470     1919  170B               	bsf	11,6	;volatile
 10471     191A                     l3473:
 10472                           
 10473                           ;main.c: 177:     PIE1bits.RCIE = 1;
 10474     191A  1683               	bsf	3,5	;RP0=1, select bank1
 10475     191B  1303               	bcf	3,6	;RP1=0, select bank1
 10476     191C  168C               	bsf	12,5	;volatile
 10477     191D                     l63:
 10478     191D  0008               	return
 10479     191E                     __end_of_setup:
 10480                           
 10481                           	psect	text26
 10482     18EF                     __ptext26:	
 10483 ;; *************** function _read_char_UART *****************
 10484 ;; Defined at:
 10485 ;;		line 44 in file "configUART.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;		None
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;		None
 10490 ;; Return value:  Size  Location     Type
 10491 ;;                  1    wreg      unsigned char 
 10492 ;; Registers used:
 10493 ;;		wreg
 10494 ;; Tracked objects:
 10495 ;;		On entry : 0/0
 10496 ;;		On exit  : 0/0
 10497 ;;		Unchanged: 0/0
 10498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10499 ;;      Params:         0       0       0       0       0
 10500 ;;      Locals:         0       0       0       0       0
 10501 ;;      Temps:          0       0       0       0       0
 10502 ;;      Totals:         0       0       0       0       0
 10503 ;;Total ram usage:        0 bytes
 10504 ;; Hardware stack levels used: 1
 10505 ;; This function calls:
 10506 ;;		Nothing
 10507 ;; This function is called by:
 10508 ;;		_main
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512     18EF                     _read_char_UART:	
 10513                           ;psect for function _read_char_UART
 10514                           
 10515     18EF                     l3833:	
 10516                           ;incstack = 0
 10517                           ; Regs used in _read_char_UART: [wreg]
 10518                           
 10519                           
 10520                           ;configUART.c: 45:     if(PIR1bits.RCIF == 1){
 10521     18EF  1283               	bcf	3,5	;RP0=0, select bank0
 10522     18F0  1303               	bcf	3,6	;RP1=0, select bank0
 10523     18F1  1E8C               	btfss	12,5	;volatile
 10524     18F2  28F4               	goto	u6261
 10525     18F3  28F5               	goto	u6260
 10526     18F4                     u6261:
 10527     18F4  28F7               	goto	l234
 10528     18F5                     u6260:
 10529     18F5                     l3835:
 10530                           
 10531                           ;configUART.c: 46:             PIR1bits.RCIF = 0;
 10532     18F5  128C               	bcf	12,5	;volatile
 10533     18F6                     l3837:
 10534                           
 10535                           ;configUART.c: 47:             return RCREG;
 10536     18F6  081A               	movf	26,w	;volatile
 10537     18F7                     l234:
 10538     18F7  0008               	return
 10539     18F8                     __end_of_read_char_UART:
 10540                           
 10541                           	psect	text27
 10542     1AC5                     __ptext27:	
 10543 ;; *************** function _readADC *****************
 10544 ;; Defined at:
 10545 ;;		line 49 in file "configADC.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;  canal           1    wreg     unsigned char 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  canal           1    2[COMMON] unsigned char 
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		wreg, status,2, status,0
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10559 ;;      Params:         0       0       0       0       0
 10560 ;;      Locals:         1       0       0       0       0
 10561 ;;      Temps:          2       0       0       0       0
 10562 ;;      Totals:         3       0       0       0       0
 10563 ;;Total ram usage:        3 bytes
 10564 ;; Hardware stack levels used: 1
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_main
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572     1AC5                     _readADC:	
 10573                           ;psect for function _readADC
 10574                           
 10575                           
 10576                           ;incstack = 0
 10577                           ; Regs used in _readADC: [wreg+status,2+status,0]
 10578                           ;readADC@canal stored from wreg
 10579     1AC5  00F2               	movwf	readADC@canal
 10580     1AC6                     l3575:
 10581                           
 10582                           ;configADC.c: 51:     if(canal == 0)
 10583     1AC6  0872               	movf	readADC@canal,w
 10584     1AC7  1D03               	btfss	3,2
 10585     1AC8  2ACA               	goto	u5811
 10586     1AC9  2ACB               	goto	u5810
 10587     1ACA                     u5811:
 10588     1ACA  2AE5               	goto	l3585
 10589     1ACB                     u5810:
 10590     1ACB                     l3577:
 10591                           
 10592                           ;configADC.c: 52:     {;configADC.c: 53:     ADCON0bits.CHS = 0b0000;
 10593     1ACB  30C3               	movlw	-61
 10594     1ACC  1283               	bcf	3,5	;RP0=0, select bank0
 10595     1ACD  1303               	bcf	3,6	;RP1=0, select bank0
 10596     1ACE  059F               	andwf	31,f	;volatile
 10597     1ACF                     l3579:
 10598                           
 10599                           ;configADC.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10600     1ACF  3042               	movlw	66
 10601     1AD0  00F0               	movwf	??_readADC
 10602     1AD1                     u6607:
 10603     1AD1  0BF0               	decfsz	??_readADC,f
 10604     1AD2  2AD1               	goto	u6607
 10605     1AD3  0000               	nop
 10606     1AD4                     l3581:
 10607                           
 10608                           ;configADC.c: 57:     ADCON0bits.GO = 1;
 10609     1AD4  1283               	bcf	3,5	;RP0=0, select bank0
 10610     1AD5  1303               	bcf	3,6	;RP1=0, select bank0
 10611     1AD6  149F               	bsf	31,1	;volatile
 10612     1AD7                     l129:	
 10613                           ;configADC.c: 58:     while (ADCON0bits.GO == 1){};
 10614                           
 10615     1AD7  189F               	btfsc	31,1	;volatile
 10616     1AD8  2ADA               	goto	u5821
 10617     1AD9  2ADB               	goto	u5820
 10618     1ADA                     u5821:
 10619     1ADA  2AD7               	goto	l129
 10620     1ADB                     u5820:
 10621     1ADB                     l131:
 10622                           
 10623                           ;configADC.c: 59:     ADIF = 0;
 10624     1ADB  130C               	bcf	12,6	;volatile
 10625     1ADC                     l3583:
 10626                           
 10627                           ;configADC.c: 60:     _delay((unsigned long)((10)*(8000000/4000.0)));
 10628     1ADC  301A               	movlw	26
 10629     1ADD  00F1               	movwf	??_readADC+1
 10630     1ADE  30F8               	movlw	248
 10631     1ADF  00F0               	movwf	??_readADC
 10632     1AE0                     u6617:
 10633     1AE0  0BF0               	decfsz	??_readADC,f
 10634     1AE1  2AE0               	goto	u6617
 10635     1AE2  0BF1               	decfsz	??_readADC+1,f
 10636     1AE3  2AE0               	goto	u6617
 10637     1AE4  0000               	nop
 10638     1AE5                     l3585:
 10639                           
 10640                           ;configADC.c: 63:     if(canal == 1)
 10641     1AE5  0372               	decf	readADC@canal,w
 10642     1AE6  1D03               	btfss	3,2
 10643     1AE7  2AE9               	goto	u5831
 10644     1AE8  2AEA               	goto	u5830
 10645     1AE9                     u5831:
 10646     1AE9  2B06               	goto	l136
 10647     1AEA                     u5830:
 10648     1AEA                     l3587:
 10649                           
 10650                           ;configADC.c: 64:     {;configADC.c: 65:     ADCON0bits.CHS = 0b0001;
 10651     1AEA  1283               	bcf	3,5	;RP0=0, select bank0
 10652     1AEB  1303               	bcf	3,6	;RP1=0, select bank0
 10653     1AEC  081F               	movf	31,w	;volatile
 10654     1AED  39C3               	andlw	-61
 10655     1AEE  3804               	iorlw	4
 10656     1AEF  009F               	movwf	31	;volatile
 10657     1AF0                     l3589:
 10658                           
 10659                           ;configADC.c: 67:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10660     1AF0  3042               	movlw	66
 10661     1AF1  00F0               	movwf	??_readADC
 10662     1AF2                     u6627:
 10663     1AF2  0BF0               	decfsz	??_readADC,f
 10664     1AF3  2AF2               	goto	u6627
 10665     1AF4  0000               	nop
 10666     1AF5                     l3591:
 10667                           
 10668                           ;configADC.c: 69:     ADCON0bits.GO = 1;
 10669     1AF5  1283               	bcf	3,5	;RP0=0, select bank0
 10670     1AF6  1303               	bcf	3,6	;RP1=0, select bank0
 10671     1AF7  149F               	bsf	31,1	;volatile
 10672     1AF8                     l133:	
 10673                           ;configADC.c: 70:     while (ADCON0bits.GO == 1){};
 10674                           
 10675     1AF8  189F               	btfsc	31,1	;volatile
 10676     1AF9  2AFB               	goto	u5841
 10677     1AFA  2AFC               	goto	u5840
 10678     1AFB                     u5841:
 10679     1AFB  2AF8               	goto	l133
 10680     1AFC                     u5840:
 10681     1AFC                     l135:
 10682                           
 10683                           ;configADC.c: 71:     ADIF = 0;
 10684     1AFC  130C               	bcf	12,6	;volatile
 10685     1AFD                     l3593:
 10686                           
 10687                           ;configADC.c: 72:     _delay((unsigned long)((10)*(8000000/4000.0)));
 10688     1AFD  301A               	movlw	26
 10689     1AFE  00F1               	movwf	??_readADC+1
 10690     1AFF  30F8               	movlw	248
 10691     1B00  00F0               	movwf	??_readADC
 10692     1B01                     u6637:
 10693     1B01  0BF0               	decfsz	??_readADC,f
 10694     1B02  2B01               	goto	u6637
 10695     1B03  0BF1               	decfsz	??_readADC+1,f
 10696     1B04  2B01               	goto	u6637
 10697     1B05  0000               	nop
 10698     1B06                     l136:
 10699     1B06  0008               	return
 10700     1B07                     __end_of_readADC:
 10701                           
 10702                           	psect	text28
 10703     1002                     __ptext28:	
 10704 ;; *************** function _configUART_TX *****************
 10705 ;; Defined at:
 10706 ;;		line 22 in file "configUART.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;  baudrate        2    0[COMMON] unsigned int 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10720 ;;      Params:         2       0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0
 10723 ;;      Totals:         2       0       0       0       0
 10724 ;;Total ram usage:        2 bytes
 10725 ;; Hardware stack levels used: 1
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_main
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733     1002                     _configUART_TX:	
 10734                           ;psect for function _configUART_TX
 10735                           
 10736     1002                     l3521:	
 10737                           ;incstack = 0
 10738                           ; Regs used in _configUART_TX: [wreg]
 10739                           
 10740                           
 10741                           ;configUART.c: 23:     SPBRG = baudrate;
 10742     1002  0870               	movf	configUART_TX@baudrate,w
 10743     1003  1683               	bsf	3,5	;RP0=1, select bank1
 10744     1004  1303               	bcf	3,6	;RP1=0, select bank1
 10745     1005  0099               	movwf	25	;volatile
 10746     1006                     l3523:
 10747                           
 10748                           ;configUART.c: 25:     TXSTAbits.TXEN = 1;
 10749     1006  1698               	bsf	24,5	;volatile
 10750     1007                     l3525:
 10751                           
 10752                           ;configUART.c: 27:     PIR1bits.TXIF = 0;
 10753     1007  1283               	bcf	3,5	;RP0=0, select bank0
 10754     1008  1303               	bcf	3,6	;RP1=0, select bank0
 10755     1009  120C               	bcf	12,4	;volatile
 10756     100A                     l3527:
 10757                           
 10758                           ;configUART.c: 29:     RCSTAbits.CREN = 1;
 10759     100A  1618               	bsf	24,4	;volatile
 10760     100B                     l223:
 10761     100B  0008               	return
 10762     100C                     __end_of_configUART_TX:
 10763                           
 10764                           	psect	text29
 10765     18E6                     __ptext29:	
 10766 ;; *************** function _configUART_RX *****************
 10767 ;; Defined at:
 10768 ;;		line 14 in file "configUART.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  baudrate        2    0[COMMON] unsigned int 
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10782 ;;      Params:         2       0       0       0       0
 10783 ;;      Locals:         0       0       0       0       0
 10784 ;;      Temps:          0       0       0       0       0
 10785 ;;      Totals:         2       0       0       0       0
 10786 ;;Total ram usage:        2 bytes
 10787 ;; Hardware stack levels used: 1
 10788 ;; This function calls:
 10789 ;;		Nothing
 10790 ;; This function is called by:
 10791 ;;		_main
 10792 ;; This function uses a non-reentrant model
 10793 ;;
 10794                           
 10795     18E6                     _configUART_RX:	
 10796                           ;psect for function _configUART_RX
 10797                           
 10798     18E6                     l3515:	
 10799                           ;incstack = 0
 10800                           ; Regs used in _configUART_RX: [wreg]
 10801                           
 10802                           
 10803                           ;configUART.c: 16:     SPBRG = baudrate;
 10804     18E6  0870               	movf	configUART_RX@baudrate,w
 10805     18E7  1683               	bsf	3,5	;RP0=1, select bank1
 10806     18E8  1303               	bcf	3,6	;RP1=0, select bank1
 10807     18E9  0099               	movwf	25	;volatile
 10808     18EA                     l3517:
 10809                           
 10810                           ;configUART.c: 18:     TXSTAbits.SYNC = 0;
 10811     18EA  1218               	bcf	24,4	;volatile
 10812     18EB                     l3519:
 10813                           
 10814                           ;configUART.c: 19:     RCSTAbits.SPEN = 1;
 10815     18EB  1283               	bcf	3,5	;RP0=0, select bank0
 10816     18EC  1303               	bcf	3,6	;RP1=0, select bank0
 10817     18ED  1798               	bsf	24,7	;volatile
 10818     18EE                     l220:
 10819     18EE  0008               	return
 10820     18EF                     __end_of_configUART_RX:
 10821                           
 10822                           	psect	text30
 10823     1E2D                     __ptext30:	
 10824 ;; *************** function ___fldiv *****************
 10825 ;; Defined at:
 10826 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;  a               4   28[BANK0 ] void 
 10829 ;;  b               4   32[BANK0 ] void 
 10830 ;; Auto vars:     Size  Location     Type
 10831 ;;  grs             4   48[BANK0 ] unsigned long 
 10832 ;;  rem             4   41[BANK0 ] unsigned long 
 10833 ;;  new_exp         2   46[BANK0 ] int 
 10834 ;;  aexp            1   53[BANK0 ] unsigned char 
 10835 ;;  bexp            1   52[BANK0 ] unsigned char 
 10836 ;;  sign            1   45[BANK0 ] unsigned char 
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  4   28[BANK0 ] unsigned char 
 10839 ;; Registers used:
 10840 ;;		wreg, status,2, status,0, btemp+1
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10846 ;;      Params:         0       8       0       0       0
 10847 ;;      Locals:         0      13       0       0       0
 10848 ;;      Temps:          0       5       0       0       0
 10849 ;;      Totals:         0      26       0       0       0
 10850 ;;Total ram usage:       26 bytes
 10851 ;; Hardware stack levels used: 1
 10852 ;; This function calls:
 10853 ;;		Nothing
 10854 ;; This function is called by:
 10855 ;;		_main
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859     1E2D                     ___fldiv:	
 10860                           ;psect for function ___fldiv
 10861                           
 10862     1E2D                     l3841:	
 10863                           ;incstack = 0
 10864                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10865                           
 10866     1E2D  1283               	bcf	3,5	;RP0=0, select bank0
 10867     1E2E  1303               	bcf	3,6	;RP1=0, select bank0
 10868     1E2F  0843               	movf	___fldiv@b+3,w
 10869     1E30  3980               	andlw	128
 10870     1E31  00CD               	movwf	___fldiv@sign
 10871     1E32                     l3843:
 10872     1E32  0843               	movf	___fldiv@b+3,w
 10873     1E33  00C4               	movwf	??___fldiv
 10874     1E34  0744               	addwf	??___fldiv,w
 10875     1E35  00D4               	movwf	___fldiv@bexp
 10876     1E36                     l3845:
 10877     1E36  1FC2               	btfss	___fldiv@b+2,7
 10878     1E37  2E39               	goto	u6271
 10879     1E38  2E3A               	goto	u6270
 10880     1E39                     u6271:
 10881     1E39  2E3B               	goto	l3849
 10882     1E3A                     u6270:
 10883     1E3A                     l3847:
 10884     1E3A  1454               	bsf	___fldiv@bexp,0
 10885     1E3B                     l3849:
 10886     1E3B  0854               	movf	___fldiv@bexp,w
 10887     1E3C  1903               	btfsc	3,2
 10888     1E3D  2E3F               	goto	u6281
 10889     1E3E  2E40               	goto	u6280
 10890     1E3F                     u6281:
 10891     1E3F  2E50               	goto	l3859
 10892     1E40                     u6280:
 10893     1E40                     l3851:
 10894     1E40  0A54               	incf	___fldiv@bexp,w
 10895     1E41  1D03               	btfss	3,2
 10896     1E42  2E44               	goto	u6291
 10897     1E43  2E45               	goto	u6290
 10898     1E44                     u6291:
 10899     1E44  2E4D               	goto	l3855
 10900     1E45                     u6290:
 10901     1E45                     l3853:
 10902     1E45  3000               	movlw	0
 10903     1E46  00C3               	movwf	___fldiv@b+3
 10904     1E47  3000               	movlw	0
 10905     1E48  00C2               	movwf	___fldiv@b+2
 10906     1E49  3000               	movlw	0
 10907     1E4A  00C1               	movwf	___fldiv@b+1
 10908     1E4B  3000               	movlw	0
 10909     1E4C  00C0               	movwf	___fldiv@b
 10910     1E4D                     l3855:
 10911     1E4D  17C2               	bsf	___fldiv@b+2,7
 10912     1E4E                     l3857:
 10913     1E4E  01C3               	clrf	___fldiv@b+3
 10914     1E4F  2E58               	goto	l3861
 10915     1E50                     l3859:
 10916     1E50  3000               	movlw	0
 10917     1E51  00C3               	movwf	___fldiv@b+3
 10918     1E52  3000               	movlw	0
 10919     1E53  00C2               	movwf	___fldiv@b+2
 10920     1E54  3000               	movlw	0
 10921     1E55  00C1               	movwf	___fldiv@b+1
 10922     1E56  3000               	movlw	0
 10923     1E57  00C0               	movwf	___fldiv@b
 10924     1E58                     l3861:
 10925     1E58  083F               	movf	___fldiv@a+3,w
 10926     1E59  3980               	andlw	128
 10927     1E5A  00C4               	movwf	??___fldiv
 10928     1E5B  0844               	movf	??___fldiv,w
 10929     1E5C  06CD               	xorwf	___fldiv@sign,f
 10930     1E5D                     l3863:
 10931     1E5D  083F               	movf	___fldiv@a+3,w
 10932     1E5E  00C4               	movwf	??___fldiv
 10933     1E5F  0744               	addwf	??___fldiv,w
 10934     1E60  00D5               	movwf	___fldiv@aexp
 10935     1E61                     l3865:
 10936     1E61  1FBE               	btfss	___fldiv@a+2,7
 10937     1E62  2E64               	goto	u6301
 10938     1E63  2E65               	goto	u6300
 10939     1E64                     u6301:
 10940     1E64  2E66               	goto	l3869
 10941     1E65                     u6300:
 10942     1E65                     l3867:
 10943     1E65  1455               	bsf	___fldiv@aexp,0
 10944     1E66                     l3869:
 10945     1E66  0855               	movf	___fldiv@aexp,w
 10946     1E67  1903               	btfsc	3,2
 10947     1E68  2E6A               	goto	u6311
 10948     1E69  2E6B               	goto	u6310
 10949     1E6A                     u6311:
 10950     1E6A  2E7B               	goto	l3879
 10951     1E6B                     u6310:
 10952     1E6B                     l3871:
 10953     1E6B  0A55               	incf	___fldiv@aexp,w
 10954     1E6C  1D03               	btfss	3,2
 10955     1E6D  2E6F               	goto	u6321
 10956     1E6E  2E70               	goto	u6320
 10957     1E6F                     u6321:
 10958     1E6F  2E78               	goto	l3875
 10959     1E70                     u6320:
 10960     1E70                     l3873:
 10961     1E70  3000               	movlw	0
 10962     1E71  00BF               	movwf	___fldiv@a+3
 10963     1E72  3000               	movlw	0
 10964     1E73  00BE               	movwf	___fldiv@a+2
 10965     1E74  3000               	movlw	0
 10966     1E75  00BD               	movwf	___fldiv@a+1
 10967     1E76  3000               	movlw	0
 10968     1E77  00BC               	movwf	___fldiv@a
 10969     1E78                     l3875:
 10970     1E78  17BE               	bsf	___fldiv@a+2,7
 10971     1E79                     l3877:
 10972     1E79  01BF               	clrf	___fldiv@a+3
 10973     1E7A  2E83               	goto	l805
 10974     1E7B                     l3879:
 10975     1E7B  3000               	movlw	0
 10976     1E7C  00BF               	movwf	___fldiv@a+3
 10977     1E7D  3000               	movlw	0
 10978     1E7E  00BE               	movwf	___fldiv@a+2
 10979     1E7F  3000               	movlw	0
 10980     1E80  00BD               	movwf	___fldiv@a+1
 10981     1E81  3000               	movlw	0
 10982     1E82  00BC               	movwf	___fldiv@a
 10983     1E83                     l805:
 10984     1E83  083F               	movf	___fldiv@a+3,w
 10985     1E84  043E               	iorwf	___fldiv@a+2,w
 10986     1E85  043D               	iorwf	___fldiv@a+1,w
 10987     1E86  043C               	iorwf	___fldiv@a,w
 10988     1E87  1D03               	skipz
 10989     1E88  2E8A               	goto	u6331
 10990     1E89  2E8B               	goto	u6330
 10991     1E8A                     u6331:
 10992     1E8A  2EA4               	goto	l3889
 10993     1E8B                     u6330:
 10994     1E8B                     l3881:
 10995     1E8B  3000               	movlw	0
 10996     1E8C  00C3               	movwf	___fldiv@b+3
 10997     1E8D  3000               	movlw	0
 10998     1E8E  00C2               	movwf	___fldiv@b+2
 10999     1E8F  3000               	movlw	0
 11000     1E90  00C1               	movwf	___fldiv@b+1
 11001     1E91  3000               	movlw	0
 11002     1E92  00C0               	movwf	___fldiv@b
 11003     1E93  3080               	movlw	128
 11004     1E94  04C2               	iorwf	___fldiv@b+2,f
 11005     1E95  307F               	movlw	127
 11006     1E96  04C3               	iorwf	___fldiv@b+3,f
 11007     1E97                     l3883:
 11008     1E97  084D               	movf	___fldiv@sign,w
 11009     1E98  00C4               	movwf	??___fldiv
 11010     1E99  0844               	movf	??___fldiv,w
 11011     1E9A  04C3               	iorwf	___fldiv@b+3,f
 11012     1E9B                     l3885:
 11013     1E9B  0843               	movf	___fldiv@b+3,w
 11014     1E9C  00BF               	movwf	?___fldiv+3
 11015     1E9D  0842               	movf	___fldiv@b+2,w
 11016     1E9E  00BE               	movwf	?___fldiv+2
 11017     1E9F  0841               	movf	___fldiv@b+1,w
 11018     1EA0  00BD               	movwf	?___fldiv+1
 11019     1EA1  0840               	movf	___fldiv@b,w
 11020     1EA2  00BC               	movwf	?___fldiv
 11021     1EA3  2FFF               	goto	l807
 11022     1EA4                     l3889:
 11023     1EA4  0854               	movf	___fldiv@bexp,w
 11024     1EA5  1D03               	btfss	3,2
 11025     1EA6  2EA8               	goto	u6341
 11026     1EA7  2EA9               	goto	u6340
 11027     1EA8                     u6341:
 11028     1EA8  2EB2               	goto	l3895
 11029     1EA9                     u6340:
 11030     1EA9                     l3891:
 11031     1EA9  3000               	movlw	0
 11032     1EAA  00BF               	movwf	?___fldiv+3
 11033     1EAB  3000               	movlw	0
 11034     1EAC  00BE               	movwf	?___fldiv+2
 11035     1EAD  3000               	movlw	0
 11036     1EAE  00BD               	movwf	?___fldiv+1
 11037     1EAF  3000               	movlw	0
 11038     1EB0  00BC               	movwf	?___fldiv
 11039     1EB1  2FFF               	goto	l807
 11040     1EB2                     l3895:
 11041     1EB2  0854               	movf	___fldiv@bexp,w
 11042     1EB3  00C4               	movwf	??___fldiv
 11043     1EB4  01C5               	clrf	??___fldiv+1
 11044     1EB5  0845               	movf	??___fldiv+1,w
 11045     1EB6  00C7               	movwf	??___fldiv+3
 11046     1EB7  0855               	movf	___fldiv@aexp,w
 11047     1EB8  0244               	subwf	??___fldiv,w
 11048     1EB9  00C6               	movwf	??___fldiv+2
 11049     1EBA  1C03               	skipc
 11050     1EBB  03C7               	decf	??___fldiv+3,f
 11051     1EBC  0846               	movf	??___fldiv+2,w
 11052     1EBD  3E7F               	addlw	127
 11053     1EBE  00CE               	movwf	___fldiv@new_exp
 11054     1EBF  0847               	movf	??___fldiv+3,w
 11055     1EC0  1803               	skipnc
 11056     1EC1  3E01               	addlw	1
 11057     1EC2  3E00               	addlw	0
 11058     1EC3  00CF               	movwf	___fldiv@new_exp+1
 11059     1EC4                     l3897:
 11060     1EC4  0843               	movf	___fldiv@b+3,w
 11061     1EC5  00CC               	movwf	___fldiv@rem+3
 11062     1EC6  0842               	movf	___fldiv@b+2,w
 11063     1EC7  00CB               	movwf	___fldiv@rem+2
 11064     1EC8  0841               	movf	___fldiv@b+1,w
 11065     1EC9  00CA               	movwf	___fldiv@rem+1
 11066     1ECA  0840               	movf	___fldiv@b,w
 11067     1ECB  00C9               	movwf	___fldiv@rem
 11068     1ECC                     l3899:
 11069     1ECC  3000               	movlw	0
 11070     1ECD  00C3               	movwf	___fldiv@b+3
 11071     1ECE  3000               	movlw	0
 11072     1ECF  00C2               	movwf	___fldiv@b+2
 11073     1ED0  3000               	movlw	0
 11074     1ED1  00C1               	movwf	___fldiv@b+1
 11075     1ED2  3000               	movlw	0
 11076     1ED3  00C0               	movwf	___fldiv@b
 11077     1ED4                     l3901:
 11078     1ED4  3000               	movlw	0
 11079     1ED5  00D3               	movwf	___fldiv@grs+3
 11080     1ED6  3000               	movlw	0
 11081     1ED7  00D2               	movwf	___fldiv@grs+2
 11082     1ED8  3000               	movlw	0
 11083     1ED9  00D1               	movwf	___fldiv@grs+1
 11084     1EDA  3000               	movlw	0
 11085     1EDB  00D0               	movwf	___fldiv@grs
 11086     1EDC                     l3903:
 11087     1EDC  01D5               	clrf	___fldiv@aexp
 11088     1EDD  2F28               	goto	l3923
 11089     1EDE                     l3905:
 11090     1EDE  0855               	movf	___fldiv@aexp,w
 11091     1EDF  1903               	btfsc	3,2
 11092     1EE0  2EE2               	goto	u6351
 11093     1EE1  2EE3               	goto	u6350
 11094     1EE2                     u6351:
 11095     1EE2  2F03               	goto	l3915
 11096     1EE3                     u6350:
 11097     1EE3                     l3907:
 11098     1EE3  3001               	movlw	1
 11099     1EE4  00C4               	movwf	??___fldiv
 11100     1EE5                     u6365:
 11101     1EE5  1003               	clrc
 11102     1EE6  0DC9               	rlf	___fldiv@rem,f
 11103     1EE7  0DCA               	rlf	___fldiv@rem+1,f
 11104     1EE8  0DCB               	rlf	___fldiv@rem+2,f
 11105     1EE9  0DCC               	rlf	___fldiv@rem+3,f
 11106     1EEA  0BC4               	decfsz	??___fldiv,f
 11107     1EEB  2EE5               	goto	u6365
 11108     1EEC  3001               	movlw	1
 11109     1EED  00C4               	movwf	??___fldiv
 11110     1EEE                     u6375:
 11111     1EEE  1003               	clrc
 11112     1EEF  0DC0               	rlf	___fldiv@b,f
 11113     1EF0  0DC1               	rlf	___fldiv@b+1,f
 11114     1EF1  0DC2               	rlf	___fldiv@b+2,f
 11115     1EF2  0DC3               	rlf	___fldiv@b+3,f
 11116     1EF3  0BC4               	decfsz	??___fldiv,f
 11117     1EF4  2EEE               	goto	u6375
 11118     1EF5                     l3909:
 11119     1EF5  1FD3               	btfss	___fldiv@grs+3,7
 11120     1EF6  2EF8               	goto	u6381
 11121     1EF7  2EF9               	goto	u6380
 11122     1EF8                     u6381:
 11123     1EF8  2EFA               	goto	l3913
 11124     1EF9                     u6380:
 11125     1EF9                     l3911:
 11126     1EF9  1440               	bsf	___fldiv@b,0
 11127     1EFA                     l3913:
 11128     1EFA  3001               	movlw	1
 11129     1EFB  00C4               	movwf	??___fldiv
 11130     1EFC                     u6395:
 11131     1EFC  1003               	clrc
 11132     1EFD  0DD0               	rlf	___fldiv@grs,f
 11133     1EFE  0DD1               	rlf	___fldiv@grs+1,f
 11134     1EFF  0DD2               	rlf	___fldiv@grs+2,f
 11135     1F00  0DD3               	rlf	___fldiv@grs+3,f
 11136     1F01  0BC4               	decfsz	??___fldiv,f
 11137     1F02  2EFC               	goto	u6395
 11138     1F03                     l3915:
 11139     1F03  083F               	movf	___fldiv@a+3,w
 11140     1F04  024C               	subwf	___fldiv@rem+3,w
 11141     1F05  1D03               	skipz
 11142     1F06  2F11               	goto	u6405
 11143     1F07  083E               	movf	___fldiv@a+2,w
 11144     1F08  024B               	subwf	___fldiv@rem+2,w
 11145     1F09  1D03               	skipz
 11146     1F0A  2F11               	goto	u6405
 11147     1F0B  083D               	movf	___fldiv@a+1,w
 11148     1F0C  024A               	subwf	___fldiv@rem+1,w
 11149     1F0D  1D03               	skipz
 11150     1F0E  2F11               	goto	u6405
 11151     1F0F  083C               	movf	___fldiv@a,w
 11152     1F10  0249               	subwf	___fldiv@rem,w
 11153     1F11                     u6405:
 11154     1F11  1C03               	skipc
 11155     1F12  2F14               	goto	u6401
 11156     1F13  2F15               	goto	u6400
 11157     1F14                     u6401:
 11158     1F14  2F24               	goto	l3921
 11159     1F15                     u6400:
 11160     1F15                     l3917:
 11161     1F15  1753               	bsf	___fldiv@grs+3,6
 11162     1F16                     l3919:
 11163     1F16  083C               	movf	___fldiv@a,w
 11164     1F17  02C9               	subwf	___fldiv@rem,f
 11165     1F18  083D               	movf	___fldiv@a+1,w
 11166     1F19  1C03               	skipc
 11167     1F1A  0F3D               	incfsz	___fldiv@a+1,w
 11168     1F1B  02CA               	subwf	___fldiv@rem+1,f
 11169     1F1C  083E               	movf	___fldiv@a+2,w
 11170     1F1D  1C03               	skipc
 11171     1F1E  0F3E               	incfsz	___fldiv@a+2,w
 11172     1F1F  02CB               	subwf	___fldiv@rem+2,f
 11173     1F20  083F               	movf	___fldiv@a+3,w
 11174     1F21  1C03               	skipc
 11175     1F22  0F3F               	incfsz	___fldiv@a+3,w
 11176     1F23  02CC               	subwf	___fldiv@rem+3,f
 11177     1F24                     l3921:
 11178     1F24  3001               	movlw	1
 11179     1F25  00C4               	movwf	??___fldiv
 11180     1F26  0844               	movf	??___fldiv,w
 11181     1F27  07D5               	addwf	___fldiv@aexp,f
 11182     1F28                     l3923:
 11183     1F28  301A               	movlw	26
 11184     1F29  0255               	subwf	___fldiv@aexp,w
 11185     1F2A  1C03               	skipc
 11186     1F2B  2F2D               	goto	u6411
 11187     1F2C  2F2E               	goto	u6410
 11188     1F2D                     u6411:
 11189     1F2D  2EDE               	goto	l3905
 11190     1F2E                     u6410:
 11191     1F2E                     l3925:
 11192     1F2E  084C               	movf	___fldiv@rem+3,w
 11193     1F2F  044B               	iorwf	___fldiv@rem+2,w
 11194     1F30  044A               	iorwf	___fldiv@rem+1,w
 11195     1F31  0449               	iorwf	___fldiv@rem,w
 11196     1F32  1903               	skipnz
 11197     1F33  2F35               	goto	u6421
 11198     1F34  2F36               	goto	u6420
 11199     1F35                     u6421:
 11200     1F35  2F55               	goto	l3939
 11201     1F36                     u6420:
 11202     1F36                     l3927:
 11203     1F36  1450               	bsf	___fldiv@grs,0
 11204     1F37  2F55               	goto	l3939
 11205     1F38                     l3929:
 11206     1F38  3001               	movlw	1
 11207     1F39  00C4               	movwf	??___fldiv
 11208     1F3A                     u6435:
 11209     1F3A  1003               	clrc
 11210     1F3B  0DC0               	rlf	___fldiv@b,f
 11211     1F3C  0DC1               	rlf	___fldiv@b+1,f
 11212     1F3D  0DC2               	rlf	___fldiv@b+2,f
 11213     1F3E  0DC3               	rlf	___fldiv@b+3,f
 11214     1F3F  0BC4               	decfsz	??___fldiv,f
 11215     1F40  2F3A               	goto	u6435
 11216     1F41                     l3931:
 11217     1F41  1FD3               	btfss	___fldiv@grs+3,7
 11218     1F42  2F44               	goto	u6441
 11219     1F43  2F45               	goto	u6440
 11220     1F44                     u6441:
 11221     1F44  2F46               	goto	l3935
 11222     1F45                     u6440:
 11223     1F45                     l3933:
 11224     1F45  1440               	bsf	___fldiv@b,0
 11225     1F46                     l3935:
 11226     1F46  3001               	movlw	1
 11227     1F47  00C4               	movwf	??___fldiv
 11228     1F48                     u6455:
 11229     1F48  1003               	clrc
 11230     1F49  0DD0               	rlf	___fldiv@grs,f
 11231     1F4A  0DD1               	rlf	___fldiv@grs+1,f
 11232     1F4B  0DD2               	rlf	___fldiv@grs+2,f
 11233     1F4C  0DD3               	rlf	___fldiv@grs+3,f
 11234     1F4D  0BC4               	decfsz	??___fldiv,f
 11235     1F4E  2F48               	goto	u6455
 11236     1F4F                     l3937:
 11237     1F4F  30FF               	movlw	255
 11238     1F50  07CE               	addwf	___fldiv@new_exp,f
 11239     1F51  1803               	skipnc
 11240     1F52  0ACF               	incf	___fldiv@new_exp+1,f
 11241     1F53  30FF               	movlw	255
 11242     1F54  07CF               	addwf	___fldiv@new_exp+1,f
 11243     1F55                     l3939:
 11244     1F55  1FC2               	btfss	___fldiv@b+2,7
 11245     1F56  2F58               	goto	u6461
 11246     1F57  2F59               	goto	u6460
 11247     1F58                     u6461:
 11248     1F58  2F38               	goto	l3929
 11249     1F59                     u6460:
 11250     1F59                     l3941:
 11251     1F59  01D5               	clrf	___fldiv@aexp
 11252     1F5A                     l3943:
 11253     1F5A  1FD3               	btfss	___fldiv@grs+3,7
 11254     1F5B  2F5D               	goto	u6471
 11255     1F5C  2F5E               	goto	u6470
 11256     1F5D                     u6471:
 11257     1F5D  2F7A               	goto	l3951
 11258     1F5E                     u6470:
 11259     1F5E                     l3945:
 11260     1F5E  30FF               	movlw	255
 11261     1F5F  0550               	andwf	___fldiv@grs,w
 11262     1F60  00C4               	movwf	??___fldiv
 11263     1F61  30FF               	movlw	255
 11264     1F62  0551               	andwf	___fldiv@grs+1,w
 11265     1F63  00C5               	movwf	??___fldiv+1
 11266     1F64  30FF               	movlw	255
 11267     1F65  0552               	andwf	___fldiv@grs+2,w
 11268     1F66  00C6               	movwf	??___fldiv+2
 11269     1F67  307F               	movlw	127
 11270     1F68  0553               	andwf	___fldiv@grs+3,w
 11271     1F69  00C7               	movwf	??___fldiv+3
 11272     1F6A  0847               	movf	??___fldiv+3,w
 11273     1F6B  0446               	iorwf	??___fldiv+2,w
 11274     1F6C  0445               	iorwf	??___fldiv+1,w
 11275     1F6D  0444               	iorwf	??___fldiv,w
 11276     1F6E  1903               	skipnz
 11277     1F6F  2F71               	goto	u6481
 11278     1F70  2F72               	goto	u6480
 11279     1F71                     u6481:
 11280     1F71  2F75               	goto	l821
 11281     1F72                     u6480:
 11282     1F72                     l3947:
 11283     1F72  01D5               	clrf	___fldiv@aexp
 11284     1F73  0AD5               	incf	___fldiv@aexp,f
 11285     1F74  2F7A               	goto	l3951
 11286     1F75                     l821:
 11287     1F75  1C40               	btfss	___fldiv@b,0
 11288     1F76  2F78               	goto	u6491
 11289     1F77  2F79               	goto	u6490
 11290     1F78                     u6491:
 11291     1F78  2F7A               	goto	l3951
 11292     1F79                     u6490:
 11293     1F79  2F72               	goto	l3947
 11294     1F7A                     l3951:
 11295     1F7A  0855               	movf	___fldiv@aexp,w
 11296     1F7B  1903               	btfsc	3,2
 11297     1F7C  2F7E               	goto	u6501
 11298     1F7D  2F7F               	goto	u6500
 11299     1F7E                     u6501:
 11300     1F7E  2FB0               	goto	l3961
 11301     1F7F                     u6500:
 11302     1F7F                     l3953:
 11303     1F7F  3001               	movlw	1
 11304     1F80  07C0               	addwf	___fldiv@b,f
 11305     1F81  3000               	movlw	0
 11306     1F82  1803               	skipnc
 11307     1F83  3001               	movlw	1
 11308     1F84  07C1               	addwf	___fldiv@b+1,f
 11309     1F85  3000               	movlw	0
 11310     1F86  1803               	skipnc
 11311     1F87  3001               	movlw	1
 11312     1F88  07C2               	addwf	___fldiv@b+2,f
 11313     1F89  3000               	movlw	0
 11314     1F8A  1803               	skipnc
 11315     1F8B  3001               	movlw	1
 11316     1F8C  07C3               	addwf	___fldiv@b+3,f
 11317     1F8D                     l3955:
 11318     1F8D  1C43               	btfss	___fldiv@b+3,0
 11319     1F8E  2F90               	goto	u6511
 11320     1F8F  2F91               	goto	u6510
 11321     1F90                     u6511:
 11322     1F90  2FB0               	goto	l3961
 11323     1F91                     u6510:
 11324     1F91                     l3957:
 11325     1F91  0840               	movf	___fldiv@b,w
 11326     1F92  00C4               	movwf	??___fldiv
 11327     1F93  0841               	movf	___fldiv@b+1,w
 11328     1F94  00C5               	movwf	??___fldiv+1
 11329     1F95  0842               	movf	___fldiv@b+2,w
 11330     1F96  00C6               	movwf	??___fldiv+2
 11331     1F97  0843               	movf	___fldiv@b+3,w
 11332     1F98  00C7               	movwf	??___fldiv+3
 11333     1F99  3001               	movlw	1
 11334     1F9A  00C8               	movwf	??___fldiv+4
 11335     1F9B                     u6525:
 11336     1F9B  0D47               	rlf	??___fldiv+3,w
 11337     1F9C  0CC7               	rrf	??___fldiv+3,f
 11338     1F9D  0CC6               	rrf	??___fldiv+2,f
 11339     1F9E  0CC5               	rrf	??___fldiv+1,f
 11340     1F9F  0CC4               	rrf	??___fldiv,f
 11341     1FA0                     u6520:
 11342     1FA0  0BC8               	decfsz	??___fldiv+4,f
 11343     1FA1  2F9B               	goto	u6525
 11344     1FA2  0847               	movf	??___fldiv+3,w
 11345     1FA3  00C3               	movwf	___fldiv@b+3
 11346     1FA4  0846               	movf	??___fldiv+2,w
 11347     1FA5  00C2               	movwf	___fldiv@b+2
 11348     1FA6  0845               	movf	??___fldiv+1,w
 11349     1FA7  00C1               	movwf	___fldiv@b+1
 11350     1FA8  0844               	movf	??___fldiv,w
 11351     1FA9  00C0               	movwf	___fldiv@b
 11352     1FAA                     l3959:
 11353     1FAA  3001               	movlw	1
 11354     1FAB  07CE               	addwf	___fldiv@new_exp,f
 11355     1FAC  1803               	skipnc
 11356     1FAD  0ACF               	incf	___fldiv@new_exp+1,f
 11357     1FAE  3000               	movlw	0
 11358     1FAF  07CF               	addwf	___fldiv@new_exp+1,f
 11359     1FB0                     l3961:
 11360     1FB0  084F               	movf	___fldiv@new_exp+1,w
 11361     1FB1  3A80               	xorlw	128
 11362     1FB2  00FF               	movwf	btemp+1
 11363     1FB3  3080               	movlw	128
 11364     1FB4  027F               	subwf	btemp+1,w
 11365     1FB5  1D03               	skipz
 11366     1FB6  2FB9               	goto	u6535
 11367     1FB7  30FF               	movlw	255
 11368     1FB8  024E               	subwf	___fldiv@new_exp,w
 11369     1FB9                     u6535:
 11370     1FB9  1C03               	skipc
 11371     1FBA  2FBC               	goto	u6531
 11372     1FBB  2FBD               	goto	u6530
 11373     1FBC                     u6531:
 11374     1FBC  2FCB               	goto	l3965
 11375     1FBD                     u6530:
 11376     1FBD                     l3963:
 11377     1FBD  30FF               	movlw	255
 11378     1FBE  1283               	bcf	3,5	;RP0=0, select bank0
 11379     1FBF  1303               	bcf	3,6	;RP1=0, select bank0
 11380     1FC0  00CE               	movwf	___fldiv@new_exp
 11381     1FC1  3000               	movlw	0
 11382     1FC2  00CF               	movwf	___fldiv@new_exp+1
 11383     1FC3  3000               	movlw	0
 11384     1FC4  00C3               	movwf	___fldiv@b+3
 11385     1FC5  3000               	movlw	0
 11386     1FC6  00C2               	movwf	___fldiv@b+2
 11387     1FC7  3000               	movlw	0
 11388     1FC8  00C1               	movwf	___fldiv@b+1
 11389     1FC9  3000               	movlw	0
 11390     1FCA  00C0               	movwf	___fldiv@b
 11391     1FCB                     l3965:
 11392     1FCB  1283               	bcf	3,5	;RP0=0, select bank0
 11393     1FCC  1303               	bcf	3,6	;RP1=0, select bank0
 11394     1FCD  084F               	movf	___fldiv@new_exp+1,w
 11395     1FCE  3A80               	xorlw	128
 11396     1FCF  00FF               	movwf	btemp+1
 11397     1FD0  3080               	movlw	128
 11398     1FD1  027F               	subwf	btemp+1,w
 11399     1FD2  1D03               	skipz
 11400     1FD3  2FD6               	goto	u6545
 11401     1FD4  3001               	movlw	1
 11402     1FD5  024E               	subwf	___fldiv@new_exp,w
 11403     1FD6                     u6545:
 11404     1FD6  1803               	skipnc
 11405     1FD7  2FD9               	goto	u6541
 11406     1FD8  2FDA               	goto	u6540
 11407     1FD9                     u6541:
 11408     1FD9  2FE7               	goto	l827
 11409     1FDA                     u6540:
 11410     1FDA                     l3967:
 11411     1FDA  1283               	bcf	3,5	;RP0=0, select bank0
 11412     1FDB  1303               	bcf	3,6	;RP1=0, select bank0
 11413     1FDC  01CE               	clrf	___fldiv@new_exp
 11414     1FDD  01CF               	clrf	___fldiv@new_exp+1
 11415     1FDE                     l3969:
 11416     1FDE  3000               	movlw	0
 11417     1FDF  00C3               	movwf	___fldiv@b+3
 11418     1FE0  3000               	movlw	0
 11419     1FE1  00C2               	movwf	___fldiv@b+2
 11420     1FE2  3000               	movlw	0
 11421     1FE3  00C1               	movwf	___fldiv@b+1
 11422     1FE4  3000               	movlw	0
 11423     1FE5  00C0               	movwf	___fldiv@b
 11424     1FE6                     l3971:
 11425     1FE6  01CD               	clrf	___fldiv@sign
 11426     1FE7                     l827:
 11427     1FE7  1283               	bcf	3,5	;RP0=0, select bank0
 11428     1FE8  1303               	bcf	3,6	;RP1=0, select bank0
 11429     1FE9  084E               	movf	___fldiv@new_exp,w
 11430     1FEA  00D4               	movwf	___fldiv@bexp
 11431     1FEB                     l3973:
 11432     1FEB  1C54               	btfss	___fldiv@bexp,0
 11433     1FEC  2FEE               	goto	u6551
 11434     1FED  2FEF               	goto	u6550
 11435     1FEE                     u6551:
 11436     1FEE  2FF1               	goto	l3977
 11437     1FEF                     u6550:
 11438     1FEF                     l3975:
 11439     1FEF  17C2               	bsf	___fldiv@b+2,7
 11440     1FF0  2FF5               	goto	l829
 11441     1FF1                     l3977:
 11442     1FF1  307F               	movlw	127
 11443     1FF2  00C4               	movwf	??___fldiv
 11444     1FF3  0844               	movf	??___fldiv,w
 11445     1FF4  05C2               	andwf	___fldiv@b+2,f
 11446     1FF5                     l829:
 11447     1FF5  0854               	movf	___fldiv@bexp,w
 11448     1FF6  00C4               	movwf	??___fldiv
 11449     1FF7  1003               	clrc
 11450     1FF8  0C44               	rrf	??___fldiv,w
 11451     1FF9  00C3               	movwf	___fldiv@b+3
 11452     1FFA  084D               	movf	___fldiv@sign,w
 11453     1FFB  00C4               	movwf	??___fldiv
 11454     1FFC  0844               	movf	??___fldiv,w
 11455     1FFD  04C3               	iorwf	___fldiv@b+3,f
 11456     1FFE  2E9B               	goto	l3885
 11457     1FFF                     l807:
 11458     1FFF  0008               	return
 11459     2000                     __end_of___fldiv:
 11460                           
 11461                           	psect	text31
 11462     1A83                     __ptext31:	
 11463 ;; *************** function _Lcd_Write_String_8bits *****************
 11464 ;; Defined at:
 11465 ;;		line 115 in file "configLCD_8bits.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  a               2    3[COMMON] PTR unsigned char 
 11468 ;;		 -> main@CONT(3), main@ADC2(3), main@ADC1(3), STR_3(4), 
 11469 ;;		 -> STR_2(4), STR_1(4), 
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;  i               2    8[COMMON] int 
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11481 ;;      Params:         2       0       0       0       0
 11482 ;;      Locals:         2       0       0       0       0
 11483 ;;      Temps:          3       0       0       0       0
 11484 ;;      Totals:         7       0       0       0       0
 11485 ;;Total ram usage:        7 bytes
 11486 ;; Hardware stack levels used: 1
 11487 ;; Hardware stack levels required when called: 2
 11488 ;; This function calls:
 11489 ;;		_Lcd_Write_Char_8bits
 11490 ;; This function is called by:
 11491 ;;		_main
 11492 ;; This function uses a non-reentrant model
 11493 ;;
 11494                           
 11495     1A83                     _Lcd_Write_String_8bits:	
 11496                           ;psect for function _Lcd_Write_String_8bits
 11497                           
 11498     1A83                     l3567:	
 11499                           ;incstack = 0
 11500                           ; Regs used in _Lcd_Write_String_8bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
 11501                           
 11502                           
 11503                           ;configLCD_8bits.c: 116:     int i;;configLCD_8bits.c: 117:     for (i = 0; a[i] != '\0'
      +                          ; i++)
 11504     1A83  01F8               	clrf	Lcd_Write_String_8bits@i
 11505     1A84  01F9               	clrf	Lcd_Write_String_8bits@i+1
 11506     1A85  2AA8               	goto	l3573
 11507     1A86                     l3569:
 11508                           
 11509                           ;configLCD_8bits.c: 118:         Lcd_Write_Char_8bits(a[i]);
 11510     1A86  0878               	movf	Lcd_Write_String_8bits@i,w
 11511     1A87  0773               	addwf	Lcd_Write_String_8bits@a,w
 11512     1A88  00F6               	movwf	??_Lcd_Write_String_8bits+1
 11513     1A89  0874               	movf	Lcd_Write_String_8bits@a+1,w
 11514     1A8A  00F5               	movwf	??_Lcd_Write_String_8bits
 11515     1A8B  1803               	skipnc
 11516     1A8C  0AF5               	incf	??_Lcd_Write_String_8bits,f
 11517     1A8D  1FF8               	btfss	Lcd_Write_String_8bits@i,7
 11518     1A8E  2A90               	goto	u5780
 11519     1A8F  03F5               	decf	??_Lcd_Write_String_8bits,f
 11520     1A90                     u5780:
 11521     1A90  0875               	movf	??_Lcd_Write_String_8bits,w
 11522     1A91  00F7               	movwf	??_Lcd_Write_String_8bits+2
 11523     1A92  0877               	movf	??_Lcd_Write_String_8bits+2,w
 11524     1A93  1283               	bcf	3,5	;RP0=0, select bank0
 11525     1A94  1303               	bcf	3,6	;RP1=0, select bank0
 11526     1A95  00FF               	movwf	btemp+1
 11527     1A96  0876               	movf	??_Lcd_Write_String_8bits+1,w
 11528     1A97  0084               	movwf	4
 11529     1A98  160A  158A  2000  160A  158A  	fcall	stringtab
 11530     1A9D  160A  158A  211E  160A  158A  	fcall	_Lcd_Write_Char_8bits
 11531     1AA2                     l3571:
 11532     1AA2  3001               	movlw	1
 11533     1AA3  07F8               	addwf	Lcd_Write_String_8bits@i,f
 11534     1AA4  1803               	skipnc
 11535     1AA5  0AF9               	incf	Lcd_Write_String_8bits@i+1,f
 11536     1AA6  3000               	movlw	0
 11537     1AA7  07F9               	addwf	Lcd_Write_String_8bits@i+1,f
 11538     1AA8                     l3573:
 11539     1AA8  0878               	movf	Lcd_Write_String_8bits@i,w
 11540     1AA9  0773               	addwf	Lcd_Write_String_8bits@a,w
 11541     1AAA  00F6               	movwf	??_Lcd_Write_String_8bits+1
 11542     1AAB  0874               	movf	Lcd_Write_String_8bits@a+1,w
 11543     1AAC  00F5               	movwf	??_Lcd_Write_String_8bits
 11544     1AAD  1803               	skipnc
 11545     1AAE  0AF5               	incf	??_Lcd_Write_String_8bits,f
 11546     1AAF  1FF8               	btfss	Lcd_Write_String_8bits@i,7
 11547     1AB0  2AB2               	goto	u5790
 11548     1AB1  03F5               	decf	??_Lcd_Write_String_8bits,f
 11549     1AB2                     u5790:
 11550     1AB2  0875               	movf	??_Lcd_Write_String_8bits,w
 11551     1AB3  00F7               	movwf	??_Lcd_Write_String_8bits+2
 11552     1AB4  0877               	movf	??_Lcd_Write_String_8bits+2,w
 11553     1AB5  1283               	bcf	3,5	;RP0=0, select bank0
 11554     1AB6  1303               	bcf	3,6	;RP1=0, select bank0
 11555     1AB7  00FF               	movwf	btemp+1
 11556     1AB8  0876               	movf	??_Lcd_Write_String_8bits+1,w
 11557     1AB9  0084               	movwf	4
 11558     1ABA  160A  158A  2000  160A  158A  	fcall	stringtab
 11559     1ABF  3A00               	xorlw	0
 11560     1AC0  1D03               	skipz
 11561     1AC1  2AC3               	goto	u5801
 11562     1AC2  2AC4               	goto	u5800
 11563     1AC3                     u5801:
 11564     1AC3  2A86               	goto	l3569
 11565     1AC4                     u5800:
 11566     1AC4                     l197:
 11567     1AC4  0008               	return
 11568     1AC5                     __end_of_Lcd_Write_String_8bits:
 11569                           
 11570                           	psect	text32
 11571     191E                     __ptext32:	
 11572 ;; *************** function _Lcd_Write_Char_8bits *****************
 11573 ;; Defined at:
 11574 ;;		line 104 in file "configLCD_8bits.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;  a               1    wreg     unsigned char 
 11577 ;; Auto vars:     Size  Location     Type
 11578 ;;  a               1    2[COMMON] unsigned char 
 11579 ;; Return value:  Size  Location     Type
 11580 ;;                  1    wreg      void 
 11581 ;; Registers used:
 11582 ;;		wreg, status,2, status,0, pclath, cstack
 11583 ;; Tracked objects:
 11584 ;;		On entry : 0/0
 11585 ;;		On exit  : 0/0
 11586 ;;		Unchanged: 0/0
 11587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11588 ;;      Params:         0       0       0       0       0
 11589 ;;      Locals:         1       0       0       0       0
 11590 ;;      Temps:          1       0       0       0       0
 11591 ;;      Totals:         2       0       0       0       0
 11592 ;;Total ram usage:        2 bytes
 11593 ;; Hardware stack levels used: 1
 11594 ;; Hardware stack levels required when called: 1
 11595 ;; This function calls:
 11596 ;;		_Lcd_Port_8bits
 11597 ;; This function is called by:
 11598 ;;		_main
 11599 ;;		_Lcd_Write_String_8bits
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603     191E                     _Lcd_Write_Char_8bits:	
 11604                           ;psect for function _Lcd_Write_Char_8bits
 11605                           
 11606                           
 11607                           ;incstack = 0
 11608                           ; Regs used in _Lcd_Write_Char_8bits: [wreg+status,2+status,0+pclath+cstack]
 11609                           ;Lcd_Write_Char_8bits@a stored from wreg
 11610     191E  00F2               	movwf	Lcd_Write_Char_8bits@a
 11611     191F                     l3089:
 11612                           
 11613                           ;configLCD_8bits.c: 108:     PORTEbits.RE0 = 1;
 11614     191F  1283               	bcf	3,5	;RP0=0, select bank0
 11615     1920  1303               	bcf	3,6	;RP1=0, select bank0
 11616     1921  1409               	bsf	9,0	;volatile
 11617     1922                     l3091:
 11618                           
 11619                           ;configLCD_8bits.c: 109:     Lcd_Port_8bits(a);
 11620     1922  0872               	movf	Lcd_Write_Char_8bits@a,w
 11621     1923  160A  158A  2245  160A  158A  	fcall	_Lcd_Port_8bits
 11622     1928                     l3093:
 11623                           
 11624                           ;configLCD_8bits.c: 110:     PORTEbits.RE1 = 1;
 11625     1928  1283               	bcf	3,5	;RP0=0, select bank0
 11626     1929  1303               	bcf	3,6	;RP1=0, select bank0
 11627     192A  1489               	bsf	9,1	;volatile
 11628     192B                     l3095:
 11629                           
 11630                           ;configLCD_8bits.c: 111:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 11631     192B  301A               	movlw	26
 11632     192C  00F1               	movwf	??_Lcd_Write_Char_8bits
 11633     192D                     u6647:
 11634     192D  0BF1               	decfsz	??_Lcd_Write_Char_8bits,f
 11635     192E  292D               	goto	u6647
 11636     192F  0000               	nop
 11637     1930                     l3097:
 11638                           
 11639                           ;configLCD_8bits.c: 112:     PORTEbits.RE1 = 0;
 11640     1930  1283               	bcf	3,5	;RP0=0, select bank0
 11641     1931  1303               	bcf	3,6	;RP1=0, select bank0
 11642     1932  1089               	bcf	9,1	;volatile
 11643     1933                     l191:
 11644     1933  0008               	return
 11645     1934                     __end_of_Lcd_Write_Char_8bits:
 11646                           
 11647                           	psect	text33
 11648     194E                     __ptext33:	
 11649 ;; *************** function _Lcd_Set_Cursor_8bits *****************
 11650 ;; Defined at:
 11651 ;;		line 65 in file "configLCD_8bits.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;  a               1    wreg     unsigned char 
 11654 ;;  b               1    4[COMMON] unsigned char 
 11655 ;; Auto vars:     Size  Location     Type
 11656 ;;  a               1    5[COMMON] unsigned char 
 11657 ;;  temp            1    6[COMMON] unsigned char 
 11658 ;; Return value:  Size  Location     Type
 11659 ;;                  1    wreg      void 
 11660 ;; Registers used:
 11661 ;;		wreg, status,2, status,0, pclath, cstack
 11662 ;; Tracked objects:
 11663 ;;		On entry : 0/0
 11664 ;;		On exit  : 0/0
 11665 ;;		Unchanged: 0/0
 11666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11667 ;;      Params:         1       0       0       0       0
 11668 ;;      Locals:         2       0       0       0       0
 11669 ;;      Temps:          0       0       0       0       0
 11670 ;;      Totals:         3       0       0       0       0
 11671 ;;Total ram usage:        3 bytes
 11672 ;; Hardware stack levels used: 1
 11673 ;; Hardware stack levels required when called: 2
 11674 ;; This function calls:
 11675 ;;		_Lcd_Cmd_8bits
 11676 ;; This function is called by:
 11677 ;;		_main
 11678 ;; This function uses a non-reentrant model
 11679 ;;
 11680                           
 11681     194E                     _Lcd_Set_Cursor_8bits:	
 11682                           ;psect for function _Lcd_Set_Cursor_8bits
 11683                           
 11684                           
 11685                           ;incstack = 0
 11686                           ; Regs used in _Lcd_Set_Cursor_8bits: [wreg+status,2+status,0+pclath+cstack]
 11687                           ;Lcd_Set_Cursor_8bits@a stored from wreg
 11688     194E  00F5               	movwf	Lcd_Set_Cursor_8bits@a
 11689     194F                     l3555:
 11690                           
 11691                           ;configLCD_8bits.c: 66:     char temp;;configLCD_8bits.c: 67:     if (a == 1) {
 11692     194F  0375               	decf	Lcd_Set_Cursor_8bits@a,w
 11693     1950  1D03               	btfss	3,2
 11694     1951  2953               	goto	u5761
 11695     1952  2954               	goto	u5760
 11696     1953                     u5761:
 11697     1953  295E               	goto	l3561
 11698     1954                     u5760:
 11699     1954                     l3557:
 11700                           
 11701                           ;configLCD_8bits.c: 68:         temp = 0x80 + b - 1;
 11702     1954  0874               	movf	Lcd_Set_Cursor_8bits@b,w
 11703     1955  3E7F               	addlw	127
 11704     1956  00F6               	movwf	Lcd_Set_Cursor_8bits@temp
 11705     1957                     l3559:
 11706                           
 11707                           ;configLCD_8bits.c: 73:         Lcd_Cmd_8bits(temp);
 11708     1957  0876               	movf	Lcd_Set_Cursor_8bits@temp,w
 11709     1958  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11710                           
 11711                           ;configLCD_8bits.c: 74:     } else if (a == 2) {
 11712     195D  296D               	goto	l185
 11713     195E                     l3561:
 11714     195E  3002               	movlw	2
 11715     195F  0675               	xorwf	Lcd_Set_Cursor_8bits@a,w
 11716     1960  1D03               	btfss	3,2
 11717     1961  2963               	goto	u5771
 11718     1962  2964               	goto	u5770
 11719     1963                     u5771:
 11720     1963  296D               	goto	l185
 11721     1964                     u5770:
 11722     1964                     l3563:
 11723                           
 11724                           ;configLCD_8bits.c: 75:         temp = 0xC0 + b - 1;
 11725     1964  0874               	movf	Lcd_Set_Cursor_8bits@b,w
 11726     1965  3EBF               	addlw	191
 11727     1966  00F6               	movwf	Lcd_Set_Cursor_8bits@temp
 11728     1967                     l3565:
 11729                           
 11730                           ;configLCD_8bits.c: 80:         Lcd_Cmd_8bits(temp);
 11731     1967  0876               	movf	Lcd_Set_Cursor_8bits@temp,w
 11732     1968  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11733     196D                     l185:
 11734     196D  0008               	return
 11735     196E                     __end_of_Lcd_Set_Cursor_8bits:
 11736                           
 11737                           	psect	text34
 11738     1CAC                     __ptext34:	
 11739 ;; *************** function _Lcd_Init_8bits *****************
 11740 ;; Defined at:
 11741 ;;		line 84 in file "configLCD_8bits.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;		None
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;		None
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg, status,2, status,0, pclath, cstack
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11755 ;;      Params:         0       0       0       0       0
 11756 ;;      Locals:         0       0       0       0       0
 11757 ;;      Temps:          3       0       0       0       0
 11758 ;;      Totals:         3       0       0       0       0
 11759 ;;Total ram usage:        3 bytes
 11760 ;; Hardware stack levels used: 1
 11761 ;; Hardware stack levels required when called: 2
 11762 ;; This function calls:
 11763 ;;		_Lcd_Cmd_8bits
 11764 ;;		_Lcd_Port_8bits
 11765 ;; This function is called by:
 11766 ;;		_main
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770     1CAC                     _Lcd_Init_8bits:	
 11771                           ;psect for function _Lcd_Init_8bits
 11772                           
 11773     1CAC                     l3529:	
 11774                           ;incstack = 0
 11775                           ; Regs used in _Lcd_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
 11776                           
 11777                           
 11778                           ;configLCD_8bits.c: 85:     Lcd_Port_8bits(0x00);
 11779     1CAC  3000               	movlw	0
 11780     1CAD  160A  158A  2245  160A  158A  	fcall	_Lcd_Port_8bits
 11781     1CB2                     l3531:
 11782                           
 11783                           ;configLCD_8bits.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
 11784     1CB2  3002               	movlw	2
 11785     1CB3  00F6               	movwf	??_Lcd_Init_8bits+2
 11786     1CB4  301E               	movlw	30
 11787     1CB5  00F5               	movwf	??_Lcd_Init_8bits+1
 11788     1CB6  30B3               	movlw	179
 11789     1CB7  00F4               	movwf	??_Lcd_Init_8bits
 11790     1CB8                     u6657:
 11791     1CB8  0BF4               	decfsz	??_Lcd_Init_8bits,f
 11792     1CB9  2CB8               	goto	u6657
 11793     1CBA  0BF5               	decfsz	??_Lcd_Init_8bits+1,f
 11794     1CBB  2CB8               	goto	u6657
 11795     1CBC  0BF6               	decfsz	??_Lcd_Init_8bits+2,f
 11796     1CBD  2CB8               	goto	u6657
 11797     1CBE  2CBF               	nop2
 11798     1CBF                     l3533:
 11799                           
 11800                           ;configLCD_8bits.c: 87:     Lcd_Cmd_8bits(0x30);
 11801     1CBF  3030               	movlw	48
 11802     1CC0  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11803                           
 11804                           ;configLCD_8bits.c: 88:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11805     1CC5  300D               	movlw	13
 11806     1CC6  00F5               	movwf	??_Lcd_Init_8bits+1
 11807     1CC7  30FB               	movlw	251
 11808     1CC8  00F4               	movwf	??_Lcd_Init_8bits
 11809     1CC9                     u6667:
 11810     1CC9  0BF4               	decfsz	??_Lcd_Init_8bits,f
 11811     1CCA  2CC9               	goto	u6667
 11812     1CCB  0BF5               	decfsz	??_Lcd_Init_8bits+1,f
 11813     1CCC  2CC9               	goto	u6667
 11814     1CCD  2CCE               	nop2
 11815     1CCE                     l3535:
 11816                           
 11817                           ;configLCD_8bits.c: 89:     Lcd_Cmd_8bits(0x30);
 11818     1CCE  3030               	movlw	48
 11819     1CCF  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11820     1CD4                     l3537:
 11821                           
 11822                           ;configLCD_8bits.c: 90:     _delay((unsigned long)((20)*(8000000/4000000.0)));
 11823     1CD4  300D               	movlw	13
 11824     1CD5  00F4               	movwf	??_Lcd_Init_8bits
 11825     1CD6                     u6677:
 11826     1CD6  0BF4               	decfsz	??_Lcd_Init_8bits,f
 11827     1CD7  2CD6               	goto	u6677
 11828                           
 11829                           ;configLCD_8bits.c: 91:     Lcd_Cmd_8bits(0x30);
 11830     1CD8  3030               	movlw	48
 11831     1CD9  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11832     1CDE                     l3539:
 11833                           
 11834                           ;configLCD_8bits.c: 92:     _delay((unsigned long)((20)*(8000000/4000000.0)));
 11835     1CDE  300D               	movlw	13
 11836     1CDF  00F4               	movwf	??_Lcd_Init_8bits
 11837     1CE0                     u6687:
 11838     1CE0  0BF4               	decfsz	??_Lcd_Init_8bits,f
 11839     1CE1  2CE0               	goto	u6687
 11840     1CE2                     l3541:
 11841                           
 11842                           ;configLCD_8bits.c: 94:     Lcd_Cmd_8bits(0x38);
 11843     1CE2  3038               	movlw	56
 11844     1CE3  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11845                           
 11846                           ;configLCD_8bits.c: 95:     _delay((unsigned long)((55)*(8000000/4000000.0)));
 11847     1CE8  3024               	movlw	36
 11848     1CE9  00F4               	movwf	??_Lcd_Init_8bits
 11849     1CEA                     u6697:
 11850     1CEA  0BF4               	decfsz	??_Lcd_Init_8bits,f
 11851     1CEB  2CEA               	goto	u6697
 11852     1CEC  0000               	nop
 11853     1CED                     l3543:
 11854                           
 11855                           ;configLCD_8bits.c: 96:     Lcd_Cmd_8bits(0x08);
 11856     1CED  3008               	movlw	8
 11857     1CEE  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11858     1CF3                     l3545:
 11859                           
 11860                           ;configLCD_8bits.c: 97:     _delay((unsigned long)((55)*(8000000/4000000.0)));
 11861     1CF3  3024               	movlw	36
 11862     1CF4  00F4               	movwf	??_Lcd_Init_8bits
 11863     1CF5                     u6707:
 11864     1CF5  0BF4               	decfsz	??_Lcd_Init_8bits,f
 11865     1CF6  2CF5               	goto	u6707
 11866     1CF7  0000               	nop
 11867                           
 11868                           ;configLCD_8bits.c: 98:     Lcd_Cmd_8bits(0x01);
 11869     1CF8  3001               	movlw	1
 11870     1CF9  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11871     1CFE                     l3547:
 11872                           
 11873                           ;configLCD_8bits.c: 99:     _delay((unsigned long)((55)*(8000000/4000000.0)));
 11874     1CFE  3024               	movlw	36
 11875     1CFF  00F4               	movwf	??_Lcd_Init_8bits
 11876     1D00                     u6717:
 11877     1D00  0BF4               	decfsz	??_Lcd_Init_8bits,f
 11878     1D01  2D00               	goto	u6717
 11879     1D02  0000               	nop
 11880     1D03                     l3549:
 11881                           
 11882                           ;configLCD_8bits.c: 100:     Lcd_Cmd_8bits(0x06);
 11883     1D03  3006               	movlw	6
 11884     1D04  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11885     1D09                     l3551:
 11886                           
 11887                           ;configLCD_8bits.c: 101:     Lcd_Cmd_8bits(0x0C);
 11888     1D09  300C               	movlw	12
 11889     1D0A  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11890     1D0F                     l188:
 11891     1D0F  0008               	return
 11892     1D10                     __end_of_Lcd_Init_8bits:
 11893                           
 11894                           	psect	text35
 11895     18DF                     __ptext35:	
 11896 ;; *************** function _Lcd_Clear_8bits *****************
 11897 ;; Defined at:
 11898 ;;		line 61 in file "configLCD_8bits.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;		None
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;		None
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  1    wreg      void 
 11905 ;; Registers used:
 11906 ;;		wreg, status,2, status,0, pclath, cstack
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11912 ;;      Params:         0       0       0       0       0
 11913 ;;      Locals:         0       0       0       0       0
 11914 ;;      Temps:          0       0       0       0       0
 11915 ;;      Totals:         0       0       0       0       0
 11916 ;;Total ram usage:        0 bytes
 11917 ;; Hardware stack levels used: 1
 11918 ;; Hardware stack levels required when called: 2
 11919 ;; This function calls:
 11920 ;;		_Lcd_Cmd_8bits
 11921 ;; This function is called by:
 11922 ;;		_main
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926     18DF                     _Lcd_Clear_8bits:	
 11927                           ;psect for function _Lcd_Clear_8bits
 11928                           
 11929     18DF                     l3553:	
 11930                           ;incstack = 0
 11931                           ; Regs used in _Lcd_Clear_8bits: [wreg+status,2+status,0+pclath+cstack]
 11932                           
 11933                           
 11934                           ;configLCD_8bits.c: 62:     Lcd_Cmd_8bits(0x01);
 11935     18DF  3001               	movlw	1
 11936     18E0  160A  158A  2134  160A  158A  	fcall	_Lcd_Cmd_8bits
 11937     18E5                     l179:
 11938     18E5  0008               	return
 11939     18E6                     __end_of_Lcd_Clear_8bits:
 11940                           
 11941                           	psect	text36
 11942     1934                     __ptext36:	
 11943 ;; *************** function _Lcd_Cmd_8bits *****************
 11944 ;; Defined at:
 11945 ;;		line 53 in file "configLCD_8bits.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;  a               1    wreg     unsigned char 
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;  a               1    3[COMMON] unsigned char 
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      void 
 11952 ;; Registers used:
 11953 ;;		wreg, status,2, status,0, pclath, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11959 ;;      Params:         0       0       0       0       0
 11960 ;;      Locals:         1       0       0       0       0
 11961 ;;      Temps:          2       0       0       0       0
 11962 ;;      Totals:         3       0       0       0       0
 11963 ;;Total ram usage:        3 bytes
 11964 ;; Hardware stack levels used: 1
 11965 ;; Hardware stack levels required when called: 1
 11966 ;; This function calls:
 11967 ;;		_Lcd_Port_8bits
 11968 ;; This function is called by:
 11969 ;;		_Lcd_Clear_8bits
 11970 ;;		_Lcd_Set_Cursor_8bits
 11971 ;;		_Lcd_Init_8bits
 11972 ;;		_Lcd_Shift_Right_8bits
 11973 ;;		_Lcd_Shift_Left_8bits
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977     1934                     _Lcd_Cmd_8bits:	
 11978                           ;psect for function _Lcd_Cmd_8bits
 11979                           
 11980                           
 11981                           ;incstack = 0
 11982                           ; Regs used in _Lcd_Cmd_8bits: [wreg+status,2+status,0+pclath+cstack]
 11983                           ;Lcd_Cmd_8bits@a stored from wreg
 11984     1934  00F3               	movwf	Lcd_Cmd_8bits@a
 11985     1935                     l3099:
 11986                           
 11987                           ;configLCD_8bits.c: 54:     PORTEbits.RE0 = 0;
 11988     1935  1283               	bcf	3,5	;RP0=0, select bank0
 11989     1936  1303               	bcf	3,6	;RP1=0, select bank0
 11990     1937  1009               	bcf	9,0	;volatile
 11991     1938                     l3101:
 11992                           
 11993                           ;configLCD_8bits.c: 55:     Lcd_Port_8bits(a);
 11994     1938  0873               	movf	Lcd_Cmd_8bits@a,w
 11995     1939  160A  158A  2245  160A  158A  	fcall	_Lcd_Port_8bits
 11996     193E                     l3103:
 11997                           
 11998                           ;configLCD_8bits.c: 56:     PORTEbits.RE1 = 1;
 11999     193E  1283               	bcf	3,5	;RP0=0, select bank0
 12000     193F  1303               	bcf	3,6	;RP1=0, select bank0
 12001     1940  1489               	bsf	9,1	;volatile
 12002     1941                     l3105:
 12003                           
 12004                           ;configLCD_8bits.c: 57:     _delay((unsigned long)((4)*(8000000/4000.0)));
 12005     1941  300B               	movlw	11
 12006     1942  00F2               	movwf	??_Lcd_Cmd_8bits+1
 12007     1943  3062               	movlw	98
 12008     1944  00F1               	movwf	??_Lcd_Cmd_8bits
 12009     1945                     u6727:
 12010     1945  0BF1               	decfsz	??_Lcd_Cmd_8bits,f
 12011     1946  2945               	goto	u6727
 12012     1947  0BF2               	decfsz	??_Lcd_Cmd_8bits+1,f
 12013     1948  2945               	goto	u6727
 12014     1949  0000               	nop
 12015     194A                     l3107:
 12016                           
 12017                           ;configLCD_8bits.c: 58:     PORTEbits.RE1 = 0;
 12018     194A  1283               	bcf	3,5	;RP0=0, select bank0
 12019     194B  1303               	bcf	3,6	;RP1=0, select bank0
 12020     194C  1089               	bcf	9,1	;volatile
 12021     194D                     l176:
 12022     194D  0008               	return
 12023     194E                     __end_of_Lcd_Cmd_8bits:
 12024                           
 12025                           	psect	text37
 12026     1A45                     __ptext37:	
 12027 ;; *************** function _Lcd_Port_8bits *****************
 12028 ;; Defined at:
 12029 ;;		line 11 in file "configLCD_8bits.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;  a               1    wreg     unsigned char 
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;  a               1    0[COMMON] unsigned char 
 12034 ;; Return value:  Size  Location     Type
 12035 ;;                  1    wreg      void 
 12036 ;; Registers used:
 12037 ;;		wreg
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12043 ;;      Params:         0       0       0       0       0
 12044 ;;      Locals:         1       0       0       0       0
 12045 ;;      Temps:          0       0       0       0       0
 12046 ;;      Totals:         1       0       0       0       0
 12047 ;;Total ram usage:        1 bytes
 12048 ;; Hardware stack levels used: 1
 12049 ;; This function calls:
 12050 ;;		Nothing
 12051 ;; This function is called by:
 12052 ;;		_Lcd_Cmd_8bits
 12053 ;;		_Lcd_Init_8bits
 12054 ;;		_Lcd_Write_Char_8bits
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058     1A45                     _Lcd_Port_8bits:	
 12059                           ;psect for function _Lcd_Port_8bits
 12060                           
 12061                           
 12062                           ;incstack = 0
 12063                           ; Regs used in _Lcd_Port_8bits: [wreg]
 12064                           ;Lcd_Port_8bits@a stored from wreg
 12065     1A45  00F0               	movwf	Lcd_Port_8bits@a
 12066     1A46                     l2607:
 12067                           
 12068                           ;configLCD_8bits.c: 12:     if (a & 1)
 12069     1A46  1C70               	btfss	Lcd_Port_8bits@a,0
 12070     1A47  2A49               	goto	u3391
 12071     1A48  2A4A               	goto	u3390
 12072     1A49                     u3391:
 12073     1A49  2A4E               	goto	l157
 12074     1A4A                     u3390:
 12075     1A4A                     l2609:
 12076                           
 12077                           ;configLCD_8bits.c: 13:         PORTDbits.RD0 = 1;
 12078     1A4A  1283               	bcf	3,5	;RP0=0, select bank0
 12079     1A4B  1303               	bcf	3,6	;RP1=0, select bank0
 12080     1A4C  1408               	bsf	8,0	;volatile
 12081     1A4D  2A51               	goto	l158
 12082     1A4E                     l157:	
 12083                           ;configLCD_8bits.c: 14:     else
 12084                           
 12085                           
 12086                           ;configLCD_8bits.c: 15:         PORTDbits.RD0 = 0;
 12087     1A4E  1283               	bcf	3,5	;RP0=0, select bank0
 12088     1A4F  1303               	bcf	3,6	;RP1=0, select bank0
 12089     1A50  1008               	bcf	8,0	;volatile
 12090     1A51                     l158:
 12091                           
 12092                           ;configLCD_8bits.c: 17:     if (a & 2)
 12093     1A51  1CF0               	btfss	Lcd_Port_8bits@a,1
 12094     1A52  2A54               	goto	u3401
 12095     1A53  2A55               	goto	u3400
 12096     1A54                     u3401:
 12097     1A54  2A57               	goto	l159
 12098     1A55                     u3400:
 12099     1A55                     l2611:
 12100                           
 12101                           ;configLCD_8bits.c: 18:         PORTDbits.RD1 = 1;
 12102     1A55  1488               	bsf	8,1	;volatile
 12103     1A56  2A58               	goto	l160
 12104     1A57                     l159:	
 12105                           ;configLCD_8bits.c: 19:     else
 12106                           
 12107                           
 12108                           ;configLCD_8bits.c: 20:         PORTDbits.RD1 = 0;
 12109     1A57  1088               	bcf	8,1	;volatile
 12110     1A58                     l160:
 12111                           
 12112                           ;configLCD_8bits.c: 22:     if (a & 4)
 12113     1A58  1D70               	btfss	Lcd_Port_8bits@a,2
 12114     1A59  2A5B               	goto	u3411
 12115     1A5A  2A5C               	goto	u3410
 12116     1A5B                     u3411:
 12117     1A5B  2A5E               	goto	l161
 12118     1A5C                     u3410:
 12119     1A5C                     l2613:
 12120                           
 12121                           ;configLCD_8bits.c: 23:         PORTDbits.RD2 = 1;
 12122     1A5C  1508               	bsf	8,2	;volatile
 12123     1A5D  2A5F               	goto	l162
 12124     1A5E                     l161:	
 12125                           ;configLCD_8bits.c: 24:     else
 12126                           
 12127                           
 12128                           ;configLCD_8bits.c: 25:         PORTDbits.RD2 = 0;
 12129     1A5E  1108               	bcf	8,2	;volatile
 12130     1A5F                     l162:
 12131                           
 12132                           ;configLCD_8bits.c: 27:     if (a & 8)
 12133     1A5F  1DF0               	btfss	Lcd_Port_8bits@a,3
 12134     1A60  2A62               	goto	u3421
 12135     1A61  2A63               	goto	u3420
 12136     1A62                     u3421:
 12137     1A62  2A65               	goto	l163
 12138     1A63                     u3420:
 12139     1A63                     l2615:
 12140                           
 12141                           ;configLCD_8bits.c: 28:         PORTDbits.RD3 = 1;
 12142     1A63  1588               	bsf	8,3	;volatile
 12143     1A64  2A66               	goto	l164
 12144     1A65                     l163:	
 12145                           ;configLCD_8bits.c: 29:     else
 12146                           
 12147                           
 12148                           ;configLCD_8bits.c: 30:         PORTDbits.RD3 = 0;
 12149     1A65  1188               	bcf	8,3	;volatile
 12150     1A66                     l164:
 12151                           
 12152                           ;configLCD_8bits.c: 32:     if (a & 16)
 12153     1A66  1E70               	btfss	Lcd_Port_8bits@a,4
 12154     1A67  2A69               	goto	u3431
 12155     1A68  2A6A               	goto	u3430
 12156     1A69                     u3431:
 12157     1A69  2A6C               	goto	l165
 12158     1A6A                     u3430:
 12159     1A6A                     l2617:
 12160                           
 12161                           ;configLCD_8bits.c: 33:         PORTDbits.RD4 = 1;
 12162     1A6A  1608               	bsf	8,4	;volatile
 12163     1A6B  2A6D               	goto	l166
 12164     1A6C                     l165:	
 12165                           ;configLCD_8bits.c: 34:     else
 12166                           
 12167                           
 12168                           ;configLCD_8bits.c: 35:         PORTDbits.RD4 = 0;
 12169     1A6C  1208               	bcf	8,4	;volatile
 12170     1A6D                     l166:
 12171                           
 12172                           ;configLCD_8bits.c: 37:     if (a & 32)
 12173     1A6D  1EF0               	btfss	Lcd_Port_8bits@a,5
 12174     1A6E  2A70               	goto	u3441
 12175     1A6F  2A71               	goto	u3440
 12176     1A70                     u3441:
 12177     1A70  2A73               	goto	l167
 12178     1A71                     u3440:
 12179     1A71                     l2619:
 12180                           
 12181                           ;configLCD_8bits.c: 38:         PORTDbits.RD5 = 1;
 12182     1A71  1688               	bsf	8,5	;volatile
 12183     1A72  2A74               	goto	l168
 12184     1A73                     l167:	
 12185                           ;configLCD_8bits.c: 39:     else
 12186                           
 12187                           
 12188                           ;configLCD_8bits.c: 40:         PORTDbits.RD5 = 0;
 12189     1A73  1288               	bcf	8,5	;volatile
 12190     1A74                     l168:
 12191                           
 12192                           ;configLCD_8bits.c: 42:     if (a & 64)
 12193     1A74  1F70               	btfss	Lcd_Port_8bits@a,6
 12194     1A75  2A77               	goto	u3451
 12195     1A76  2A78               	goto	u3450
 12196     1A77                     u3451:
 12197     1A77  2A7A               	goto	l169
 12198     1A78                     u3450:
 12199     1A78                     l2621:
 12200                           
 12201                           ;configLCD_8bits.c: 43:         PORTDbits.RD6 = 1;
 12202     1A78  1708               	bsf	8,6	;volatile
 12203     1A79  2A7B               	goto	l170
 12204     1A7A                     l169:	
 12205                           ;configLCD_8bits.c: 44:     else
 12206                           
 12207                           
 12208                           ;configLCD_8bits.c: 45:         PORTDbits.RD6 = 0;
 12209     1A7A  1308               	bcf	8,6	;volatile
 12210     1A7B                     l170:
 12211                           
 12212                           ;configLCD_8bits.c: 47:     if (a & 128)
 12213     1A7B  1FF0               	btfss	Lcd_Port_8bits@a,7
 12214     1A7C  2A7E               	goto	u3461
 12215     1A7D  2A7F               	goto	u3460
 12216     1A7E                     u3461:
 12217     1A7E  2A81               	goto	l171
 12218     1A7F                     u3460:
 12219     1A7F                     l2623:
 12220                           
 12221                           ;configLCD_8bits.c: 48:         PORTDbits.RD7 = 1;
 12222     1A7F  1788               	bsf	8,7	;volatile
 12223     1A80  2A82               	goto	l173
 12224     1A81                     l171:	
 12225                           ;configLCD_8bits.c: 49:     else
 12226                           
 12227                           
 12228                           ;configLCD_8bits.c: 50:         PORTDbits.RD7 = 0;
 12229     1A81  1388               	bcf	8,7	;volatile
 12230     1A82                     l173:
 12231     1A82  0008               	return
 12232     1A83                     __end_of_Lcd_Port_8bits:
 12233     007E                     btemp	set	126	;btemp
 12234     007E                     wtemp0	set	126
 12235                           
 12236                           	psect	idloc
 12237                           
 12238                           ;Config register IDLOC0 @ 0x2000
 12239                           ;	unspecified, using default values
 12240     2000                     	org	8192
 12241     2000  3FFF               	dw	16383
 12242                           
 12243                           ;Config register IDLOC1 @ 0x2001
 12244                           ;	unspecified, using default values
 12245     2001                     	org	8193
 12246     2001  3FFF               	dw	16383
 12247                           
 12248                           ;Config register IDLOC2 @ 0x2002
 12249                           ;	unspecified, using default values
 12250     2002                     	org	8194
 12251     2002  3FFF               	dw	16383
 12252                           
 12253                           ;Config register IDLOC3 @ 0x2003
 12254                           ;	unspecified, using default values
 12255     2003                     	org	8195
 12256     2003  3FFF               	dw	16383
 12257                           
 12258                           	psect	config
 12259                           
 12260                           ;Config register CONFIG1 @ 0x2007
 12261                           ;	Oscillator Selection bits
 12262                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 12263                           ;	Watchdog Timer Enable bit
 12264                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12265                           ;	Power-up Timer Enable bit
 12266                           ;	PWRTE = OFF, PWRT disabled
 12267                           ;	RE3/MCLR pin function select bit
 12268                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12269                           ;	Code Protection bit
 12270                           ;	CP = OFF, Program memory code protection is disabled
 12271                           ;	Data Code Protection bit
 12272                           ;	CPD = OFF, Data memory code protection is disabled
 12273                           ;	Brown Out Reset Selection bits
 12274                           ;	BOREN = OFF, BOR disabled
 12275                           ;	Internal External Switchover bit
 12276                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12277                           ;	Fail-Safe Clock Monitor Enabled bit
 12278                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12279                           ;	Low Voltage Programming Enable bit
 12280                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12281                           ;	In-Circuit Debugger Mode bit
 12282                           ;	DEBUG = 0x1, unprogramme 12283     2007                     	org	8199
 12284     2007  20D4               	dw	8404
 12285                           
 12286                           ;Config register CONFIG2 @ 0x2008
 12287                           ;	Brown-out Reset Selection bit
 12288                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12289                           ;	Flash Program Memory Self Write Enable bits
 12290                           ;	WRT = OFF, Write protection off
 12291     2008                     	org	8200
 12292     2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     61      61
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> main@CONT(BANK1[3]), main@ADC2(BANK1[3]), main@ADC1(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String_8bits@a	PTR unsigned char  size(2) Largest target is 4
		 -> main@CONT(BANK1[3]), main@ADC2(BANK1[3]), main@ADC1(BANK1[3]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _scale->___awmod
    ___awmod->___awdiv
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Write_String_8bits->_Lcd_Write_Char_8bits
    _Lcd_Write_Char_8bits->_Lcd_Port_8bits
    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits
    _Lcd_Init_8bits->_Lcd_Cmd_8bits
    _Lcd_Clear_8bits->_Lcd_Cmd_8bits
    _Lcd_Cmd_8bits->_Lcd_Port_8bits

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   47096
                                             76 BANK0      4     4      0
                                             35 BANK1     26    26      0
                    _Lcd_Clear_8bits
                     _Lcd_Init_8bits
               _Lcd_Set_Cursor_8bits
               _Lcd_Write_Char_8bits
             _Lcd_Write_String_8bits
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                           ___xxtofl
                      _configUART_RX
                      _configUART_TX
                            _readADC
                     _read_char_UART
                              _setup
                           _setupADC
                        _setupINTOSC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33410
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8320
                                             28 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1512
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1668
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             28 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              2 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             47 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             68 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             48 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_char_UART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configUART_TX                                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _configUART_RX                                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             28 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_8bits                               7     5      2     896
                                              3 COMMON     7     5      2
               _Lcd_Write_Char_8bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_8bits                                 2     2      0     198
                                              1 COMMON     2     2      0
                     _Lcd_Port_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_8bits                                 3     2      1    1092
                                              4 COMMON     3     2      1
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init_8bits                                       3     3      0     374
                                              4 COMMON     3     3      0
                      _Lcd_Cmd_8bits
                     _Lcd_Port_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_8bits                                      0     0      0     198
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd_8bits                                        3     3      0     198
                                              1 COMMON     3     3      0
                     _Lcd_Port_8bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_8bits                                       1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear_8bits
     _Lcd_Cmd_8bits
       _Lcd_Port_8bits
   _Lcd_Init_8bits
     _Lcd_Cmd_8bits
     _Lcd_Port_8bits
   _Lcd_Set_Cursor_8bits
     _Lcd_Cmd_8bits
   _Lcd_Write_Char_8bits
     _Lcd_Port_8bits
   _Lcd_Write_String_8bits
     _Lcd_Write_Char_8bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _configUART_RX
   _configUART_TX
   _readADC
   _read_char_UART
   _setup
   _setupADC
   _setupINTOSC
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3D      3D       7       76.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 02 01:16:25 2023

                  ___fldiv@aexp 0055                    ___fldiv@bexp 0054                               pc 0002  
                  ___fldiv@sign 004D                              l53 160E                              l63 191D  
                            l55 174F                    ___awdiv@sign 0076                ??_read_char_UART 0070  
                            fsr 0004             ___wmul@multiplicand 0072             __Umul8_16@word_mpld 0076  
                           l131 1ADB                             l220 18EE                             l124 19F5  
                           l133 1AF8                             l125 1A0A                             l141 1C58  
                           l142 1C66                             l223 100B                             l135 1AFC  
                           l143 1C76                             l160 1A58                             l136 1B06  
                           l144 1C83                             l161 1A5E                             l129 1AD7  
                           l145 1C91                             l170 1A7B                             l162 1A5F  
                           l234 18F7                             l146 1C9F                             l171 1A81  
                           l163 1A65                             l164 1A66                             l148 1CAB  
                           l173 1A82                             l165 1A6C                             l157 1A4E  
                           l166 1A6D                             l158 1A51                             l422 199E  
                           l167 1A73                             l159 1A57                             l191 1933  
                           l343 0FFF                             l168 1A74                             l176 194D  
                           l424 19B6                             l336 1346                             l169 1A7A  
                           l185 196D                             l610 1B98                             l418 07FB  
                           l362 00E4                             l179 18E5                             l603 094E  
                           l188 1D0F                             l197 1AC4                             l613 081E  
                           l621 000F                             l390 04FA                             l608 1B67  
                           l616 088A                             l632 106E                             l640 1DA0  
                           l609 1B83                             l617 08A3                             l625 1083  
                           l458 1D75                             l650 1E1F                             l635 1083  
                           l643 1DEF                             l821 1F75                             l805 1E83  
                           l397 0538                             l902 1105                             l807 1FFF  
                           l903 1111                             l639 1E2C                             l575 0076  
                           l592 095B                             l728 1B4A                             l753 1425  
                           l593 08C2                             l770 14EE                             l762 159E  
                           l738 1A44                             l827 1FE7                             l755 13FE  
                           l851 0C10                             l780 1534                             l596 091E  
                           l588 1C49                             l829 1FF5                             l749 13A2  
                           l845 0CA0                             l909 1909                             l774 1512  
                           l678 1BEE                             l791 1594                             l783 1572  
                           l792 159E                             l864 19CB                             l857 0C94  
                           l866 19DD                             l795 1991                             l891 113B  
                           l895 10E9                             l889 10A6                             fsr0 0004  
                           indf 0000                    ___awmod@sign 0021                    ___flmul@aexp 0034  
                  ___flmul@bexp 0035                    ___flmul@sign 002F                    ___flmul@temp 003A  
                  ___flmul@prod 0036                    ___fltol@exp1 0058                            l3001 0A15  
                          l3011 0A8E                            l3003 0A3F                            l3101 1938  
                          l3021 0B0A                            l3013 0AAB                            l3005 0A5B  
                          l3103 193E                            l3031 0BBC                            l3023 0B35  
                          l3015 0AB9                            l3007 0A77                            l3111 1145  
                          l3105 1941                            l3201 1DC8                            l3041 0BE1  
                          l3033 0BC5                            l3025 0B43                            l3017 0AD6  
                          l3009 0A80                            l4001 1687                            l3107 194A  
                          l3211 1DF3                            l3203 1DD6                            l3051 0BF9  
                          l3043 0BEA                            l3035 0BD3                            l3027 0B6E  
                          l3019 0AED                            l3123 1303                            l3131 0CAA  
                          l4011 16FF                            l4003 1690                            l3301 1D23  
                          l3205 1DE0                            l3061 0C28                            l3053 0C0D  
                          l3037 0BDC                            l3045 0BF0                            l3029 0B94  
                          l3117 1252                            l3109 113F                            l3141 0DA0  
                          l3133 0CB1                            l4021 1736                            l4013 170F  
                          l4005 1698                            l3311 1D5D                            l3303 1D30  
                          l3231 08A4                            l3207 1DE1                            l3071 0C63  
                          l3063 0C2C                            l3047 0BF4                            l3039 0BE0  
                          l3119 1258                            l3151 0E5C                            l3127 0CA4  
                          l4031 1759                            l4023 173C                            l4015 1720  
                          l4007 169E                            l3321 1B4B                            l3313 1D5E  
                          l3305 1D34                            l3401 1BA6                            l3233 08AF  
                          l3225 1E14                            l3217 1DFB                            l3209 1DE9  
                          l2601 19D4                            l3081 0C8E                            l3073 0C72  
                          l3065 0C45                            l3057 0C15                            l3049 0BF5  
                          l3145 0E28                            l3129 0CA8                            l4041 17AD  
                          l4033 175B                            l4025 1743                            l4017 1728  
                          l4009 16A4                            l2611 1A55                            l3091 1922  
                          l3323 1B5F                            l3315 1D67                            l3307 1D3D  
                          l3411 1BE0                            l3403 1BB3                            l3251 08E5  
                          l3243 08C3                            l3227 1E24                            l3219 1E0D  
                          l2603 19D9                            l3083 0C8F                            l3075 0C7C  
                          l3059 0C1A                            l3067 0C4B                            l3171 1900  
                          l3163 0FD3                            l3139 0D99                            l4051 17DD  
                          l4043 17B5                            l4035 176E                            l4027 1749  
                          l4019 172E                            l2621 1A78                            l2613 1A5C  
                          l3093 1928                            l3501 1CA6                            l3325 1B7B  
                          l3341 083E                            l3333 0802                            l3309 1D4F  
                          l3317 1D6D                            l3405 1BB7                            l3413 1BE6  
                          l3261 0918                            l3253 08EE                            l3245 08CB  
                          l3237 08B8                            l3181 1D87                            l3085 0C98  
                          l3077 0C7E                            l3069 0C58                            l3173 1906  
                          l2701 1C40                            l3157 0F44                            l3149 0E55  
                          l4053 17EB                            l4045 17BE                            l4037 178E  
                          l4029 1753                            l2623 1A7F                            l2615 1A63  
                          l2607 1A46                            l3095 192B                            l3511 19EF  
                          l3503 1CAA                            l3327 1B95                            l3343 0862  
                          l3335 0816                            l3407 1BC9                            l3431 10AE  
                          l3423 1085                            l3263 0922                            l3271 093C  
                          l3255 0900                            l3247 08DC                            l3191 1DA1  
                          l3079 0C8A                            l2711 1B0F                            l3175 1908  
                          l3167 18F9                            l2631 001A                            l2703 1C45  
                          l3159 0F4B                            l4055 17F3                            l4047 17CC  
                          l4039 17A1                            l2617 1A6A                            l2609 1A4A  
                          l3097 1930                            l3089 191F                            l3521 1002  
                          l3513 1A05                            l3505 19DF                            l3329 1B97  
                          l3345 0866                            l3337 0832                            l3353 0005  
                          l2801 13AC                            l3417 196E                            l3361 100C  
                          l3409 1BD7                            l3441 10CE                            l3425 108A  
                          l3257 090E                            l3249 08DE                            l3193 1DA7  
                          l3185 1D90                            l2721 1B32                            l2713 1B12  
                          l3169 18FA                            l2641 002B                            l2633 001C  
                          l2625 0010                            l3601 0088                            l4049 17D4  
                          l2619 1A71                            l3099 1935                            l3531 1CB2  
                          l3515 18E6                            l3523 1006                            l3507 19E4  
                          l3347 08A0                            l3339 083A                            l3355 000D  
                          l2811 13B8                            l2803 13B0                            l3419 1972  
                          l3371 1034                            l3363 1017                            l3291 19AC  
                          l3283 1992                            l3451 10FF                            l3443 10D2  
                          l3435 10B7                            l3427 108E                            l3259 090F  
                          l3195 1DB6                            l3179 1D76                            l2723 1B38  
                          l2715 1B19                            l2707 1B07                            l2651 0043  
                          l2643 0031                            l2635 0020                            l2627 0011  
                          l4091 00FA                            l3611 00A0                            l3603 008D  
                          l3541 1CE2                            l3533 1CBF                            l3517 18EA  
                          l3525 1007                            l3509 19EA                            l3349 08A2  
                          l3357 000F                            l2901 1516                            l2821 13C2  
                          l2813 13BA                            l2805 13B2                            l3373 103C  
                          l3293 19B2                            l3285 1994                            l3461 1132  
                          l3453 1109                            l3445 10E0                            l3437 10BA  
                          l3429 109E                            l3277 0943                            l3269 092A  
                          l3197 1DB8                            l2725 1B39                            l2717 1B1D  
                          l2709 1B09                            l2741 1A1F                            l2733 1A0B  
                          l2653 0054                            l2645 0034                            l2661 0068  
                          l2637 0025                            l2629 0015                            l3701 03CE  
                          l3613 00A3                            l3621 00E0                            l3605 008F  
                          l3551 1D09                            l3543 1CED                            l3535 1CCE  
                          l3519 18EB                            l3527 100A                            l3471 1919  
                          l2903 1519                            l2911 1526                            l2831 13CC  
                          l2823 13C4                            l2815 13BC                            l2807 13B4  
                          l3391 1063                            l3383 104A                            l3375 103E  
                          l3367 1020                            l3287 1998                            l3463 1133  
                          l3455 1113                            l3447 10F0                            l3439 10C7  
                          l3279 0953                            l3199 1DBF                            l2727 1B40  
                          l2719 1B21                            l2743 1A23                            l2735 1A11  
                          l2751 1A40                            l2663 006D                            l2655 005A  
                          l2647 003B                            l2639 0029                            l2671 1BF2  
                          l3711 041F                            l3703 041B                            l3631 0114  
                          l3623 00E2                            l3615 00B8                            l3607 009B  
                          l3553 18DF                            l3545 1CF3                            l3537 1CD4  
                          l3529 1CAC                            l3561 195E                            l3473 191A  
                          l3481 1C5F                            l2921 1539                            l2913 1527  
                          l2905 151B                            l2841 1409                            l2825 13C6  
                          l2817 13BE                            l2809 13B6                            l2833 13CE  
                          l2761 1354                            l3393 1073                            l3377 1042  
                          l3385 105C                            l3369 1033                            l3297 1D10  
                          l3289 19A5                            l3457 1129                            l3449 10FB  
                          l2593 19B8                            l2729 1B46                            l2745 1A2D  
                          l2737 1A14                            l2665 0072                            l2657 005B  
                          l2649 003F                            l2681 1C06                            l2673 1BF6  
                          l3801 074F                            l3721 0471                            l3705 041D  
                          l3641 0147                            l3633 0118                            l3617 00CB  
                          l3609 009C                            l3547 1CFE                            l3539 1CDE  
                          l3563 1964                            l3555 194F                            l3571 1AA2  
                          l3467 190A                            l3491 1C82                            l3483 1C65  
                          l3475 1C4A                            l2931 1577                            l2923 153E  
                          l2915 152B                            l2907 1520                            l2843 140B  
                          l2851 141D                            l2835 13CF                            l2827 13C8  
                          l2819 13C0                            l2771 1368                            l2763 1355  
                          l2755 1347                            l3395 1078                            l3299 1D20  
                          l3459 112E                            l2595 19BA                            l2747 1A33  
                          l2739 1A1B                            l2659 0062                            l2691 1C1E  
                          l2683 1C0C                            l2675 1BFB                            l3811 077B  
                          l3803 0750                            l3731 0509                            l3723 0476  
                          l3715 0456                            l3651 018C                            l3643 0160  
                          l3635 011C                            l3627 00E6                            l3619 00CF  
                          l3549 1D03                            l3565 1967                            l3557 1954  
                          l3573 1AA8                            l3901 1ED4                            l3581 1AD4  
                          l3469 1918                            l3493 1C8A                            l3485 1C6F  
                          l3477 1C51                            l2941 158E                            l2933 157C  
                          l2925 154C                            l2917 1531                            l2909 1522  
                          l2861 144E                            l2853 1429                            l2845 140F  
                          l2837 13E6                            l2829 13CA                            l2781 137C  
                          l2765 135A                            l2773 136A                            l2757 134C  
                          l3397 1B99                            l2597 19C1                            l2749 1A3A  
                          l2693 1C28                            l2685 1C0F                            l2677 1BFD  
                          l2669 1BEF                            l3813 0780                            l3805 075F  
                          l3741 0534                            l3733 050D                            l3725 04B1  
                          l3717 0460                            l3661 01C2                            l3653 0192  
                          l3645 0164                            l3637 012A                            l3629 0108  
                          l3821 07E7                            l3559 1957                            l3567 1A83  
                          l3911 1EF9                            l3903 1EDC                            l3591 1AF5  
                          l3583 1ADC                            l3575 1AC6                            l3495 1C90  
                          l3487 1C75                            l3479 1C57                            l2943 1590  
                          l2935 1584                            l2927 1550                            l2871 1463  
                          l2863 1452                            l2855 142E                            l2847 1410  
                          l2839 1402                            l2791 138F                            l2783 1380  
                          l2775 1372                            l2767 135F                            l2759 1350  
                          l3399 1BA3                            l2599 19C5                            l2951 0961  
                          l2695 1C2E                            l2687 1C16                            l2679 1C01  
                          l3815 07D3                            l3807 0768                            l3751 056D  
                          l3743 0541                            l3735 0513                            l3727 04F0  
                          l3719 046C                            l3671 0269                            l3663 01E1  
                          l3655 01A5                            l3647 0168                            l3639 012E  
                          l3823 07F7                            l3569 1A86                            l3921 1F24  
                          l3913 1EFA                            l3905 1EDE                            l3841 1E2D  
                          l3593 1AFD                            l3577 1ACB                            l3585 1AE5  
                          l3833 18EF                            l3497 1C98                            l3489 1C7C  
                          l2945 1599                            l2937 1589                            l2929 156E  
                          l2881 14C6                            l2873 1464                            l2865 1456  
                          l2849 1419                            l2793 1397                            l2785 1384  
                          l2777 1375                            l2769 1367                            l2961 0974  
                          l2953 0965                            l2697 1C35                            l2689 1C1A  
                          l3809 0776                            l3753 05C8                            l3761 06A7  
                          l3745 0546                            l3737 0520                            l3729 0502  
                          l3681 02F1                            l3665 022C                            l3657 01B8  
                          l3649 0181                            l3673 0271                            l3931 1F41  
                          l3907 1EE3                            l3915 1F03                            l3923 1F28  
                          l3851 1E40                            l3843 1E32                            l3587 1AEA  
                          l3579 1ACF                            l3835 18F5                            l3499 1C9E  
                          l2947 159D                            l2939 158A                            l2891 14FB  
                          l2883 14CC                            l2875 146D                            l2867 145D  
                          l2859 1437                            l2795 1398                            l2787 1385  
                          l2779 137B                            l2971 098F                            l2963 097C  
                          l2955 0969                            l2699 1C3B                            l3819 07D9  
                          l3763 06AF                            l3755 0603                            l3747 054B  
                          l3739 052F                            l3691 0353                            l3683 0318  
                          l3675 0280                            l3667 0245                            l3659 01BC  
                          l3771 06C5                            l3595 007A                            l3941 1F59  
                          l3933 1F45                            l3925 1F2E                            l3917 1F15  
                          l3909 1EF5                            l3861 1E58                            l3853 1E45  
                          l3845 1E36                            l3589 1AF0                            l3837 18F6  
                          l2885 14D1                            l2869 145F                            l2877 1472  
                          l2789 138A                            l2797 139A                            l2981 09A6  
                          l2973 0993                            l2965 097E                            l2957 096A  
                          l2949 095C                            l3781 06ED                            l3773 06D6  
                          l3765 06B4                            l3757 0642                            l3749 054F  
                          l3693 0371                            l3685 0327                            l3677 02C7  
                          l3669 024E                            l3597 007D                            l3951 1F7A  
                          l3943 1F5A                            l3935 1F46                            l3927 1F36  
                          l3919 1F16                            l3871 1E6B                            l3863 1E5D  
                          l3855 1E4D                            l3847 1E3A                            l2895 1504  
                          l2879 1488                            l2887 14E0                            l2799 13A8  
                          l2983 09A8                            l2975 0994                            l2967 0986  
                          l2959 096F                            l3783 06F3                            l3775 06DA  
                          l3767 06B8                            l3759 064C                            l3687 0342  
                          l3679 02D6                            l3599 0083                            l3953 1F7F  
                          l3961 1FB0                            l3945 1F5E                            l3937 1F4F  
                          l3929 1F38                            l3881 1E8B                            l3873 1E70  
                          l3865 1E61                            l3857 1E4E                            l3849 1E3B  
                          l2897 150D                            l2889 14F6                            l2993 09C3  
                          l2985 09B0                            l2977 0999                            l2969 098B  
                          l3793 0703                            l3785 06FB                            l3777 06DE  
                          l3769 06BE                            l3697 0390                            l3689 034B  
                          l3971 1FE6                            l3963 1FBD                            l3955 1F8D  
                          l3947 1F72                            l3939 1F55                            l3891 1EA9  
                          l3883 1E97                            l3875 1E78                            l3867 1E65  
                          l3859 1E50                            l2899 1511                            l2995 09D1  
                          l2987 09B5                            l2979 099E                            l3787 0701  
                          l3779 06E2                            l3699 0399                            l3973 1FEB  
                          l3965 1FCB                            l3957 1F91                            l3885 1E9B  
                          l3877 1E79                            l3869 1E66                            l2997 09DE  
                          l2989 09BA                            l3797 073A                            l3975 1FEF  
                          l3967 1FDA                            l3959 1FAA                            l3895 1EB2  
                          l3879 1E7B                            l2999 09F9                            l3799 0744  
                          l3991 15FD                            l3983 159F                            _ADIF 0066  
                          l3977 1FF1                            l3969 1FDE                            l3897 1EC4  
                          l3889 1EA4                            l3993 1605                            l3985 15A5  
                          l3899 1ECC                            l3995 1614                            l3987 15E3  
                          l3997 166F                            l3989 15EC                            l3999 167F  
                          STR_1 18A5                            STR_2 18A9                            STR_3 18AD  
                          STR_4 18A0                            STR_5 18A0                            STR_6 18B1  
                          STR_7 18B1                            STR_8 18B1                            u4000 1463  
                          u4001 1462                            u4100 1516                            u4020 1488  
                          u4101 1515                            u4021 1487                            u4110 1520  
                          u4111 151F                            u4031 149F                            u4023 1484  
                          u4015 1466                            u3400 1A55                            u4200 1577  
                          u4120 1526                            u4040 14B3                            u4032 14A0  
                          u3401 1A54                            u4201 1576                            u4121 1525  
                          u4041 14B4                            u4033 14A5                            u3410 1A5C  
                          u4210 157C                            u4130 152B                            u4050 14D1  
                          u4042 14B9                            u4034 14A6                            u5010 1E24  
                          u3411 1A5B                            u4211 157B                            u4131 152A  
                          u4051 14D0                            u4043 14BA                            u4035 14AB  
                          u5011 1E23                            u3420 1A63                            u4220 1589  
                          u4140 1531                            u4060 14F6                            u4036 14AC  
                          u5020 08AF                            u4300 099E                            u3421 1A62  
                          u4221 1588                            u4141 1530                            u4061 14F5  
                          u5021 08AE                            u5005 1E16                            u4301 099D  
                          u3430 1A6A                            u4230 158E                            u4150 1538  
                          u4070 14FB                            u5110 093B                            u5030 08C1  
                          u4310 09B5                            u3510 0043                            u3431 1A69  
                          u4231 158D                            u4151 1537                            u4071 14FA  
                          u5111 093A                            u5031 08C0                            u4311 09B4  
                          u3511 0042                            u3440 1A71                            u4240 159D  
                          u4160 153E                            u5120 0942                            u3360 19C5  
                          u4320 09BA                            u6000 0342                            u3441 1A70  
                          u4241 159C                            u4161 153D                            u5121 0941  
                          u5105 092B                            u3361 19C4                            u4321 09B9  
                          u3505 0035                            u6001 0341                            u3450 1A78  
                          u4170 1550                            u4090 1511                            u5210 1D34  
                          u5050 0900                            u4250 0969                            u3530 0054  
                          u3610 1C1E                            u3451 1A77                            u4171 154F  
                          u4091 1510                            u5211 1D33                            u5051 08FF  
                          u4411 0AFC                            u4331 0A07                            u4251 0968  
                          u3531 0053                            u3611 1C1D                            u3460 1A7F  
                          u5300 0832                            u4180 155F                            u5140 0953  
                          u3380 19D9                            u4500 0BE0                            u4412 0B03  
                          u4332 0A0E                            u4260 096F                            u3700 1B32  
                          u3620 1C28                            u6020 0455                            u3461 1A7E  
                          u5301 0831                            u4085 1506                            u5205 1D25  
                          u5141 0952                            u5045 08E7                            u3381 19D8  
                          u4501 0BDF                            u4421 0B27                            u4413 0B0A  
                          u4405 0AD8                            u4341 0A23                            u4333 0A15  
                          u4261 096E                            u3701 1B31                            u3525 0044  
                          u3621 1C27                            u3605 1C10                            u6021 0454  
                          u3390 1A4A                            u5310 083E                            u4190 156E  
                          u5230 1D4F                            u5150 1998                            u5070 091E  
                          u4422 0B2E                            u4342 0A2A                            u4270 0974  
                          u3550 0068                            u3470 0015                            u6030 0460  
                          u3391 1A49                            u5311 083D                            u4191 156D  
                          u5231 1D4E                            u5151 1997                            u5135 0945  
                          u5071 091D                            u5055 08FC                            u3375 19CC  
                          u4431 0B52                            u4423 0B35                            u4351 0A4D  
                          u4343 0A31                            u4271 0973                            u3551 0067  
                          u3535 0050                            u3471 0014                            u6031 045F  
                          u6015 0422                            u3800 135A                            u5400 1049  
                          u5080 0922                            u4600 0C72                            u4520 0BF4  
                          u4440 0B7A                            u4432 0B59                            u4352 0A54  
                          u4280 0993                            u3720 1B46                            u3560 006D  
                          u3480 0020                            u3640 1C3B                            u6200 074F  
                          u6120 06AE                            u6040 046C                            u5321 084D  
                          u4185 155A                            u3801 1359                            u5401 1048  
                          u5225 1D36                            u5081 0921                            u5065 0911  
                          u4601 0C71                            u4521 0BF3                            u4433 0B60  
                          u4361 0A69                            u4353 0A5B                            u4281 0992  
                          u3721 1B45                            u3705 1B2E                            u3561 006C  
                          u3545 005C                            u3481 001F                            u3641 1C3A  
                          u3625 1C24                            u6201 074E                            u6121 06AD  
                          u6105 05CB                            u6041 046B                            u6025 0451  
                          u5330 0866                            u5322 084E                            u3810 135F  
                          u5250 1D6D                            u5090 0929                            u4610 0C8E  
                          u4530 0BF9                            u4362 0A70                            u4290 0999  
                          u3730 1A11                            u3490 0031                            u3650 1C40  
                          u3570 1BF6                            u6210 075F                            u6130 06C4  
                          u5331 0865                            u5323 0853                            u3811 135E  
                          u5251 1D6C                            u5235 1D4B                            u5091 0928  
                          u4611 0C8D                            u4531 0BF8                            u4515 0BE3  
                          u4451 0B86                            u4363 0A77                            u4291 0998  
                          u3715 1B3A                            u3731 1A10                            u3491 0030  
                          u3651 1C3F                            u3635 1C2F                            u3571 1BF5  
                          u6211 075E                            u6131 06C3                            u6115 064F  
                          u6300 1E65                            u5260 1B5F                            u5324 0854  
                          u3900 13F2                            u3820 137B                            u5420 105B  
                          u5500 1BC9                            u5180 19B2                            u4540 0C0D  
                          u4460 0BA2                            u4452 0B8D                            u3660 1B0F  
                          u4620 1145                            u3580 1C01                            u4700 0CA8  
                          u6220 0776                            u6140 06DE                            u6060 0501  
                          u6301 1E64                            u5261 1B5E                            u5341 0875  
                          u5325 0859                            u3821 137A                            u5421 105A  
                          u5245 1D5F                            u5501 1BC8                            u5181 19B1  
                          u5165 199F                            u4605 0C6E                            u4541 0C0C  
                          u4453 0B94                            u4445 0B75                            u4381 0A9D  
                          u3661 1B0E                            u4621 1144                            u3581 1C00  
                          u4701 0CA7                            u6221 0775                            u6205 074B  
                          u6141 06DD                            u6061 0500                            u6310 1E6B  
                          u5270 1B7B                            u5350 08A0                            u5342 0876  
                          u5326 085A                            u3910 1402                            u3830 1384  
                          u5430 1062                            u5190 1D20                            u4550 0C14  
                          u4382 0AA4                            u3750 1A23                            u3590 1C0C  
                          u4710 0CB1                            u6150 06F3                            u6070 0520  
                          u6311 1E6A                            u5271 1B7A                            u5351 089F  
                          u5343 087B                            u3911 1401                            u3831 1383  
                          u5431 1061                            u5415 104B                            u5191 1D1F  
                          u5175 19A6                            u4551 0C13                            u4471 0BAE  
                          u4391 0AC8                            u4383 0AAB                            u4375 0A79  
                          u3751 1A22                            u3591 1C0B                            u4711 0CB0  
                          u6215 075B                            u6151 06F2                            u6071 051F  
                          u6055 0479                            u6400 1F15                            u6320 1E70  
                          u5280 1B95                            u5344 087C                            u5360 000D  
                          u3920 140F                            u3840 138A                            u5520 1BE6  
                          u4560 0C1A                            u4472 0BB5                            u4392 0ACF  
                          u3680 1B21                            u3760 1A2D                            u6240 07E7  
                          u6160 06FB                            u6080 052F                            u6401 1F14  
                          u6321 1E6F                            u5281 1B94                            u5345 0881  
                          u5361 000C                            u3921 140E                            u3841 1389  
                          u5521 1BE5                            u5505 1BC5                            u4561 0C19  
                          u4473 0BBC                            u4465 0B9D                            u4393 0AD6  
                          u3681 1B20                            u3761 1A2C                            u3745 1A15  
                          u6241 07E6                            u6161 06FA                            u6081 052E  
                          u6410 1F2E                            u6330 1E8B                            u5346 0882  
                          u5290 0816                            u3850 138F                            u5450 1073  
                          u5370 1017                            u5610 10FF                            u5530 108A  
                          u4570 0C2C                            u6250 07F7                            u6090 0546  
                          u6411 1F2D                            u6331 1E8A                            u5355 089C  
                          u5291 0815                            u3851 138E                            u5451 1072  
                          u5371 1016                            u5515 1BD8                            u5611 10FE  
                          u5531 1089                            u4571 0C2B                            u3675 1B13  
                          u4635 1162                            u6251 07F6                            u6235 078F  
                          u6091 0545                            u6075 051C                            u6500 1F7F  
                          u6420 1F36                            u6340 1EA9                            u6260 18F5  
                          u5700 1C7C                            u3940 1425                            u3860 13A8  
                          u5460 1078                            u5380 102E                            u5620 1105  
                          u5540 108E                            u4900 1D9F                            u4580 0C3B  
                          u3780 1A40                            u4660 1258                            u6180 0739  
                          u6501 1F7E                            u6421 1F35                            u6405 1F11  
                          u6341 1EA8                            u6261 18F4                            u5701 1C7B  
                          u5285 1B91                            u3941 1424                            u3861 13A7  
                          u5461 1077                            u5445 1065                            u5621 1104  
                          u5605 10F4                            u5541 108D                            u4901 1D9E  
                          u4485 0BBE                            u3781 1A3F                            u3765 1A29  
                          u4661 1257                            u4645 11BC                            u4805 0E7C  
                          u4725 0CD1                            u6181 0738                            u6085 052B  
                          u6510 1F91                            u6350 1EE3                            u6270 1E3A  
                          u5710 1C8A                            u3950 1429                            u3870 13AC  
                          u3790 1354                            u5390 1042                            u5470 1BA3  
                          u5630 1109                            u5550 10AE                            u4590 0C58  
                          u4830 0F4B                            u4750 0DA0                            u6190 0744  
                          u6511 1F90                            u6351 1EE2                            u6271 1E39  
                          u5711 1C89                            u3951 1428                            u3935 1412  
                          u3871 13AB                            u3791 1353                            u5391 1041  
                          u5471 1BA2                            u5631 1108                            u5551 10AD  
                          u4591 0C57                            u4495 0BD5                            u3695 1B22  
                          u3775 1A34                            u4655 1211                            u4831 0F4A  
                          u4815 0EB8                            u4751 0D9F                            u4735 0D0D  
                          u6191 0743                            u6175 0706                            u5800 1AC4  
                          u6520 1FA0                            u6440 1F45                            u6280 1E40  
                          u5720 1C98                            u3960 142E                            u3880 13E6  
                          u5640 111E                            u4920 1DD6                            u5801 1AC3  
                          u6441 1F44                            u6281 1E3F                            u5721 1C97  
                          u3961 142D                            u3881 13E5                            u5385 1029  
                          u4921 1DD5                            u4585 0C36                            u4825 0F03  
                          u4745 0D58                            u6185 0735                            u6530 1FBD  
                          u6290 1E45                            u5810 1ACB                            u5730 1CA6  
                          u3890 13F1                            u5490 1BB7                            u5650 112E  
                          u5570 10CD                            u6531 1FBC                            u6435 1F3A  
                          u6291 1E44                            u5811 1ACA                            u5731 1CA5  
                          u3971 1440                            u3891 13EF                            u5491 1BB6  
                          u5651 112D                            u5571 10CC                            u4915 1DC1  
                          u4595 0C54                            u4675 1275                            u6540 1FDA  
                          u6460 1F59                            u6380 1EF9                            u5820 1ADB  
                          u5740 19E4                            u3980 1452                            u3972 1447  
                          u5660 1132                            u4940 1DEF                            u5900 0147  
                          u6541 1FD9                            u6525 1F9B                            u6461 1F58  
                          u6381 1EF8                            u6365 1EE5                            u5821 1ADA  
                          u5741 19E3                            u3981 1451                            u3973 144E  
                          u3885 13E2                            u5485 1BA8                            u5661 1131  
                          u5645 1119                            u5565 10BF                            u4941 1DEE  
                          u4925 1DD2                            u4685 12C2                            u4845 0F5E  
                          u4765 0DB3                            u5901 0146                            u6550 1FEF  
                          u6470 1F5E                            u5830 1AEA                            u5750 19EF  
                          u5670 1C51                            u3990 1456                            u5590 10EF  
                          u4950 1DF3                            u4870 1900                            u4790 0E5C  
                          u5910 0181                            u6551 1FEE                            u6535 1FB9  
                          u6471 1F5D                            u6455 1F48                            u6375 1EEE  
                          u5831 1AE9                            u6607 1AD1                            u5751 19EE  
                          u5671 1C50                            u3991 1455                            u5591 10EE  
                          u4951 1DF2                            u4935 1DE2                            u4695 130E  
                          u4871 18FF                            u4855 0F9A                            u4791 0E5B  
                          u4775 0DEF                            u5911 0180                            u5760 1954  
                          u6480 1F72                            u5840 1AFC                            u5680 1C5F  
                          u4960 1DFA                            u4880 1906                            u5920 01BC  
                          u6560 173C                            u5761 1953                            u6545 1FD6  
                          u6481 1F71                            u5841 1AFB                            u6617 1AE0  
                          u5681 1C5E                            u5585 10E1                            u4961 1DF9  
                          u4881 1905                            u4865 0FD6                            u4785 0E2B  
                          u5921 01BB                            u6561 173B                            u5770 1964  
                          u6490 1F79                            u5690 1C6F                            u4890 1D87  
                          u5930 0245                            u5850 0083                            u6570 1749  
                          u6707 1CF5                            u5771 1963                            u6491 1F78  
                          u6395 1EFC                            u6627 1AF2                            u5691 1C6E  
                          u4891 1D86                            u5931 0244                            u5851 0082  
                          u6571 1748                            u5780 1A90                            u4980 1E0C  
                          u5940 0269                            u5860 009B                            u6580 1759  
                          u6717 1D00                            u6637 1B01                            u4981 1E0B  
                          u5941 0268                            u5861 009A                            u6581 1758  
                          u5790 1AB2                            u4990 1E13                            u5950 0280  
                          u5870 00DF                            u6727 1945                            u6647 192D  
                          u4991 1E12                            u4975 1DFC                            u5951 027F  
                          u5871 00DE                            u5960 02D6                            u5880 0114  
                          u6657 1CB8                            u5961 02D5                            u5881 0113  
                          u5970 02F1                            u5890 0118                            u6667 1CC9  
                          u5971 02F0                            u5955 027C                            u5891 0117  
                          u5980 0318                            u6677 1CD6                            u6597 1A07  
                          u5981 0317                            u5965 02D2                            u5990 0327  
                          u6687 1CE0                            u5991 0326                            u6697 1CEA  
                          u5995 0323                            _main 159F          _Lcd_Write_String_8bits 1A83  
                          btemp 007E                            start 0000                 ___fldiv@new_exp 004E  
                  _sprintf$1301 00AA                 ??_configUART_RX 0072                 ??_configUART_TX 0072  
                 ___fltol@sign1 0057                 __end_of___fladd 159F                           ?_main 0070  
               __end_of___fldiv 2000                 __end_of___awdiv 0077                 __end_of___flneg 0010  
               __end_of___awmod 1C4A               ??_Lcd_Clear_8bits 0074                 __end_of___flmul 0CA1  
               __end_of___flsub 1992                 __end_of___fltol 1084                           _ANSEL 0188  
               __end_of___lldiv 1D76                 ___awdiv@divisor 0070                 __end_of___llmod 1BEF  
               __end_of___lwdiv 1B4B                 __end_of___lwmod 1A45                 ___awdiv@counter 0075  
                         _RCREG 001A                           _SPBRG 0099                           _PORTB 0006  
                         _PORTD 0008                           _PORTE 0009                           _TRISB 0086  
                         _TRISD 0088                           _TRISE 0089                           _TXREG 0019  
         __end_of_Lcd_Cmd_8bits 194E                 __end_of_readADC 1B07                 __end_of_dpowers 18A0  
                         _scale 0CA1                 __end_of_isdigit 190A                           _setup 190A  
         configUART_RX@baudrate 0070                           pclath 000A                           status 0003  
                         wtemp0 007E                 __end_of_sprintf 07FC                 __initialization 07FC  
                  __end_of_main 1800           configUART_TX@baudrate 0070                          ??_main 006C  
              ___llmod@dividend 0024                          ?_scale 003C                          _ADRESH 001E  
              ___awdiv@dividend 0072                          ?_setup 0070                          _ANSELH 0189  
              __end_of___xxtofl 113C                __end_of__powers_ 1844                          ___flge 0802  
                  readADC@canal 0072                          ___fleq 1B4B                       ??___fladd 0058  
                        ___wmul 1992                       ??___fldiv 0044                       ??___awdiv 0074  
                     ??___flneg 0074                       ??___awmod 007D                       ??___flmul 002A  
                     ??___flsub 007E                       ??___fltol 0053                       ??___lldiv 0078  
                     ??___llmod 0028                       ??___lwdiv 007A                       ??___lwmod 0074  
                        _fround 113C                ___awdiv@quotient 0077                 ___awmod@divisor 0079  
               ___awmod@counter 0020                          main@V1 00C3                          main@V2 00C7  
                  ?_setupINTOSC 0070                       ??_readADC 0070                       ??_isdigit 0070  
              __end_of_setupADC 1A0B                  _Lcd_Init_8bits 1CAC                       ??_sprintf 00A5  
                    ___flge@ff1 0070                      ___flge@ff2 0074                    ___xxtofl@arg 007A  
                  ___xxtofl@exp 0079                    ___xxtofl@val 0070                      ___fleq@ff1 0070  
                    ___fleq@ff2 0074         __end_of__initialization 07FC                      ___flneg@f1 0070  
                    ___fltol@f1 004F                  __pcstackCOMMON 0070                   __end_of_scale 1000  
         Lcd_Write_Char_8bits@a 0072                   __end_of_setup 191E                      __div_to_l_ 08A4  
        __end_of_Lcd_Init_8bits 1D10                 __div_to_l_@exp1 0025                 __div_to_l_@cntr 0024  
                       ??_scale 0040                 __div_to_l_@quot 0020                         ??_setup 0070  
       ?_Lcd_Write_String_8bits 0073                  _Lcd_Port_8bits 1A45                   __div_to_l_@f1 0070  
                 __div_to_l_@f2 0074               __end_of__Umul8_16 19DE                 _Lcd_Clear_8bits 18DF  
                    __pmaintext 159F                         ?___flge 0070                         ?___fleq 0070  
                       ?___wmul 0070                         ?_fround 003C                       ?___xxtofl 0070  
  __end_of_Lcd_Write_Char_8bits 1934                 ?_Lcd_Init_8bits 0070                 Lcd_Port_8bits@a 0070  
__end_of_Lcd_Write_String_8bits 1AC5                      __stringtab 1800          __end_of_Lcd_Port_8bits 1A83  
             __end_of__npowers_ 1878                      _scale$1300 004A                       ?_setupADC 0070  
                       ___fladd 1347                         ___fldiv 1E2D                         ___awdiv 0010  
                       ___flneg 0005                         ___awmod 1BEF                         ___flmul 095C  
                       ___flsub 196E                         ___fltol 100C                         ___lldiv 1D10  
                       ___llmod 1B99                         ___lwdiv 1B07                         ___lwmod 1A0B  
         __end_of_configUART_RX 18EF           __end_of_configUART_TX 100C                       _ANSELbits 0188  
                       __ptext1 0077                         __ptext2 0CA1                         __ptext3 1BEF  
                       __ptext4 0010                         __ptext5 18F8                         __ptext6 113C  
                       __ptext7 1A0B                         __ptext8 1B07                         __ptext9 095C  
                       _readADC 1AC5                     ?__div_to_l_ 0070                         _dpowers 1878  
                       _isdigit 18F8                      ??___xxtofl 0074                ___awmod@dividend 007B  
                       main@NUM 00DB    __end_of_Lcd_Set_Cursor_8bits 196E                         _sprintf 0077  
          end_of_initialization 07FC                 ?_Lcd_Port_8bits 0070         __end_of_Lcd_Clear_8bits 18E6  
               ___lldiv@divisor 0070                 ___lldiv@counter 007D                      ??_setupADC 0070  
                     _RCSTAbits 0018                  __tdiv_to_l_@f1 0070                  __tdiv_to_l_@f2 0074  
                 ??__tdiv_to_l_ 0078                       _PORTDbits 0008                       _PORTEbits 0009  
                   ___fladd@grs 0063                   ___xxtofl@sign 0078                       _TRISAbits 0085  
                   ___fldiv@grs 0050                     ___fldiv@rem 0049                     ___flmul@grs 0030  
                     _TXSTAbits 0098            _Lcd_Write_Char_8bits 191E                  __end_of___flge 08A4  
                __end_of___fleq 1B99                  __end_of___wmul 19B7                  __end_of_fround 1347  
           start_initialization 07FC             __end_of__tdiv_to_l_ 1E2D                   _Lcd_Cmd_8bits 1934  
         Lcd_Set_Cursor_8bits@a 0075           Lcd_Set_Cursor_8bits@b 0074                ?_Lcd_Clear_8bits 0070  
               ___llmod@divisor 0020                 ___llmod@counter 0029           ?_Lcd_Write_Char_8bits 0070  
                      ??___flge 0078                        ??___fleq 0078                        ??___wmul 0074  
                     __Umul8_16 19B7            _Lcd_Set_Cursor_8bits 194E                        ??_fround 0040  
              ??_Lcd_Init_8bits 0074                   sprintf@tmpval 00B3                       ___fladd@a 0054  
                     ___fladd@b 0050                      fround@prec 004F                       ___fldiv@a 003C  
                     ___fldiv@b 0040                       ___flmul@a 0026                       ___flmul@b 0022  
                     ___flsub@a 0064                       ___flsub@b 0068                       ___latbits 0002  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0                  ?_Lcd_Cmd_8bits 0070  
                _read_char_UART 18EF                    _isdigit$1095 0070        Lcd_Set_Cursor_8bits@temp 0076  
                   sprintf@flag 00AF                     sprintf@eexp 00B1                     sprintf@fval 00BB  
                   sprintf@prec 00BF                ___lwdiv@dividend 0078                        ?___fladd 0050  
                      ?___fldiv 003C                        ?___awdiv 0070                        ?___flneg 0070  
         ?_Lcd_Set_Cursor_8bits 0074                        ?___awmod 0079                        ?___flmul 0022  
                      ?___flsub 0064                        ?___fltol 004F                        ?___lldiv 0070  
                      ?___llmod 0020                       __npowers_ 1844                      ?__Umul8_16 0070  
                      ?___lwdiv 0076                        ?___lwmod 0070                       __pstrings 1800  
                   __tdiv_to_l_ 1D76                    ??__div_to_l_ 0078                        ?_readADC 0070  
                      ?_isdigit 0070          __end_of_read_char_UART 18F8                ??_Lcd_Port_8bits 0070  
              ___lwdiv@quotient 007B                        ?_sprintf 00A0                  ___wmul@product 0074  
                      _PIE1bits 008C          ??_Lcd_Write_Char_8bits 0071                        _PIR1bits 000C  
            __end_of__div_to_l_ 095C                       main@NUM_C 00CF                       main@NUM_D 00CD  
                     main@NUM_U 00CB                      _ADCON0bits 001F                     __stringbase 180F  
                    _ADCON1bits 009F                   ??_setupINTOSC 0072               ___wmul@multiplier 0070  
               ??_Lcd_Cmd_8bits 0071                 ?_read_char_UART 0070                       main@signo 00D7  
       Lcd_Write_String_8bits@a 0073         Lcd_Write_String_8bits@i 0078          ??_Lcd_Set_Cursor_8bits 0075  
                   ??__Umul8_16 0072                     _fround$1298 004B                     _fround$1299 0047  
            __end_of__stringtab 1810        ??_Lcd_Write_String_8bits 0075                  Lcd_Cmd_8bits@a 0073  
                    sprintf@val 00B7                        ___xxtofl 1084                 ___lwdiv@divisor 0076  
               ___lwdiv@counter 007D                        __ptext10 19B7                        __ptext11 1D76  
                      __ptext20 0005                        __ptext12 08A4                        __ptext21 0802  
                      __ptext13 1084                        __ptext30 1E2D                        __ptext22 1B4B  
                      __ptext14 1992                        __ptext31 1A83                        __ptext23 1C4A  
                      __ptext15 1B99                        __ptext32 191E                        __ptext24 19DE  
                      __ptext16 1D10                        __ptext33 194E                        __ptext25 190A  
                      __ptext17 100C                        __ptext34 1CAC                        __ptext26 18EF  
                      __ptext18 196E                        __ptext35 18DF                        __ptext27 1AC5  
                      __ptext19 1347                        __ptext36 1934                        __ptext28 1002  
                      __ptext37 1A45                        __ptext29 18E6             __end_of_setupINTOSC 1CAC  
                      __powers_ 1810                   setupADC@canal 0071                        _setupADC 19DE  
                      main@ADC1 00D1                        main@ADC2 00D4                        main@CONT 00D8  
   setupINTOSC@OsciladorInterno 0070                   _configUART_RX 18E6                   _configUART_TX 1002  
                    _INTCONbits 000B                        isdigit@c 0071                        scale@scl 004E  
                     sprintf@ap 00AE                __tdiv_to_l_@exp1 0025                __tdiv_to_l_@cntr 0024  
                     sprintf@sp 00C1                __tdiv_to_l_@quot 0020                ___lwmod@dividend 0072  
              ___lldiv@dividend 0074                       stringcode 180A                      _OSCCONbits 008F  
                ?_configUART_RX 0070                  ?_configUART_TX 0070                    ?__tdiv_to_l_ 0070  
        __Umul8_16@multiplicand 0070                     _setupINTOSC 1C4A                        sprintf@c 00C2  
                      sprintf@f 00A0                ___lldiv@quotient 0079                 ___lwmod@divisor 0070  
               ___lwmod@counter 0075                        stringdir 180A                        stringtab 1800  
                 ___fladd@signs 0060                    ___fladd@aexp 0061                    ___fladd@bexp 0062  
          __Umul8_16@multiplier 0078               __Umul8_16@product 0074  
