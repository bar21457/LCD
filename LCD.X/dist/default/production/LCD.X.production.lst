

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 27 00:49:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     008F                     	;# 
   106     0090                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0095                     	;# 
   114     0096                     	;# 
   115     0097                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009C                     	;# 
   121     009D                     	;# 
   122     009E                     	;# 
   123     009F                     	;# 
   124     0105                     	;# 
   125     0107                     	;# 
   126     0108                     	;# 
   127     0109                     	;# 
   128     010C                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     0185                     	;# 
   134     0187                     	;# 
   135     0188                     	;# 
   136     0189                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     0007                     	;# 
   147     0008                     	;# 
   148     0009                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000D                     	;# 
   153     000E                     	;# 
   154     000E                     	;# 
   155     000F                     	;# 
   156     0010                     	;# 
   157     0011                     	;# 
   158     0012                     	;# 
   159     0013                     	;# 
   160     0014                     	;# 
   161     0015                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0017                     	;# 
   165     0018                     	;# 
   166     0019                     	;# 
   167     001A                     	;# 
   168     001B                     	;# 
   169     001B                     	;# 
   170     001C                     	;# 
   171     001D                     	;# 
   172     001E                     	;# 
   173     001F                     	;# 
   174     0081                     	;# 
   175     0085                     	;# 
   176     0086                     	;# 
   177     0087                     	;# 
   178     0088                     	;# 
   179     0089                     	;# 
   180     008C                     	;# 
   181     008D                     	;# 
   182     008E                     	;# 
   183     008F                     	;# 
   184     0090                     	;# 
   185     0091                     	;# 
   186     0092                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0095                     	;# 
   192     0096                     	;# 
   193     0097                     	;# 
   194     0098                     	;# 
   195     0099                     	;# 
   196     009A                     	;# 
   197     009B                     	;# 
   198     009C                     	;# 
   199     009D                     	;# 
   200     009E                     	;# 
   201     009F                     	;# 
   202     0105                     	;# 
   203     0107                     	;# 
   204     0108                     	;# 
   205     0109                     	;# 
   206     010C                     	;# 
   207     010C                     	;# 
   208     010D                     	;# 
   209     010E                     	;# 
   210     010F                     	;# 
   211     0185                     	;# 
   212     0187                     	;# 
   213     0188                     	;# 
   214     0189                     	;# 
   215     018C                     	;# 
   216     018D                     	;# 
   217     0000                     	;# 
   218     0001                     	;# 
   219     0002                     	;# 
   220     0003                     	;# 
   221     0004                     	;# 
   222     0005                     	;# 
   223     0006                     	;# 
   224     0007                     	;# 
   225     0008                     	;# 
   226     0009                     	;# 
   227     000A                     	;# 
   228     000B                     	;# 
   229     000C                     	;# 
   230     000D                     	;# 
   231     000E                     	;# 
   232     000E                     	;# 
   233     000F                     	;# 
   234     0010                     	;# 
   235     0011                     	;# 
   236     0012                     	;# 
   237     0013                     	;# 
   238     0014                     	;# 
   239     0015                     	;# 
   240     0015                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001B                     	;# 
   248     001C                     	;# 
   249     001D                     	;# 
   250     001E                     	;# 
   251     001F                     	;# 
   252     0081                     	;# 
   253     0085                     	;# 
   254     0086                     	;# 
   255     0087                     	;# 
   256     0088                     	;# 
   257     0089                     	;# 
   258     008C                     	;# 
   259     008D                     	;# 
   260     008E                     	;# 
   261     008F                     	;# 
   262     0090                     	;# 
   263     0091                     	;# 
   264     0092                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0093                     	;# 
   268     0094                     	;# 
   269     0095                     	;# 
   270     0096                     	;# 
   271     0097                     	;# 
   272     0098                     	;# 
   273     0099                     	;# 
   274     009A                     	;# 
   275     009B                     	;# 
   276     009C                     	;# 
   277     009D                     	;# 
   278     009E                     	;# 
   279     009F                     	;# 
   280     0105                     	;# 
   281     0107                     	;# 
   282     0108                     	;# 
   283     0109                     	;# 
   284     010C                     	;# 
   285     010C                     	;# 
   286     010D                     	;# 
   287     010E                     	;# 
   288     010F                     	;# 
   289     0185                     	;# 
   290     0187                     	;# 
   291     0188                     	;# 
   292     0189                     	;# 
   293     018C                     	;# 
   294     018D                     	;# 
   295     0000                     	;# 
   296     0001                     	;# 
   297     0002                     	;# 
   298     0003                     	;# 
   299     0004                     	;# 
   300     0005                     	;# 
   301     0006                     	;# 
   302     0007                     	;# 
   303     0008                     	;# 
   304     0009                     	;# 
   305     000A                     	;# 
   306     000B                     	;# 
   307     000C                     	;# 
   308     000D                     	;# 
   309     000E                     	;# 
   310     000E                     	;# 
   311     000F                     	;# 
   312     0010                     	;# 
   313     0011                     	;# 
   314     0012                     	;# 
   315     0013                     	;# 
   316     0014                     	;# 
   317     0015                     	;# 
   318     0015                     	;# 
   319     0016                     	;# 
   320     0017                     	;# 
   321     0018                     	;# 
   322     0019                     	;# 
   323     001A                     	;# 
   324     001B                     	;# 
   325     001B                     	;# 
   326     001C                     	;# 
   327     001D                     	;# 
   328     001E                     	;# 
   329     001F                     	;# 
   330     0081                     	;# 
   331     0085                     	;# 
   332     0086                     	;# 
   333     0087                     	;# 
   334     0088                     	;# 
   335     0089                     	;# 
   336     008C                     	;# 
   337     008D                     	;# 
   338     008E                     	;# 
   339     008F                     	;# 
   340     0090                     	;# 
   341     0091                     	;# 
   342     0092                     	;# 
   343     0093                     	;# 
   344     0093                     	;# 
   345     0093                     	;# 
   346     0094                     	;# 
   347     0095                     	;# 
   348     0096                     	;# 
   349     0097                     	;# 
   350     0098                     	;# 
   351     0099                     	;# 
   352     009A                     	;# 
   353     009B                     	;# 
   354     009C                     	;# 
   355     009D                     	;# 
   356     009E                     	;# 
   357     009F                     	;# 
   358     0105                     	;# 
   359     0107                     	;# 
   360     0108                     	;# 
   361     0109                     	;# 
   362     010C                     	;# 
   363     010C                     	;# 
   364     010D                     	;# 
   365     010E                     	;# 
   366     010F                     	;# 
   367     0185                     	;# 
   368     0187                     	;# 
   369     0188                     	;# 
   370     0189                     	;# 
   371     018C                     	;# 
   372     018D                     	;# 
   373     0000                     	;# 
   374     0001                     	;# 
   375     0002                     	;# 
   376     0003                     	;# 
   377     0004                     	;# 
   378     0005                     	;# 
   379     0006                     	;# 
   380     0007                     	;# 
   381     0008                     	;# 
   382     0009                     	;# 
   383     000A                     	;# 
   384     000B                     	;# 
   385     000C                     	;# 
   386     000D                     	;# 
   387     000E                     	;# 
   388     000E                     	;# 
   389     000F                     	;# 
   390     0010                     	;# 
   391     0011                     	;# 
   392     0012                     	;# 
   393     0013                     	;# 
   394     0014                     	;# 
   395     0015                     	;# 
   396     0015                     	;# 
   397     0016                     	;# 
   398     0017                     	;# 
   399     0018                     	;# 
   400     0019                     	;# 
   401     001A                     	;# 
   402     001B                     	;# 
   403     001B                     	;# 
   404     001C                     	;# 
   405     001D                     	;# 
   406     001E                     	;# 
   407     001F                     	;# 
   408     0081                     	;# 
   409     0085                     	;# 
   410     0086                     	;# 
   411     0087                     	;# 
   412     0088                     	;# 
   413     0089                     	;# 
   414     008C                     	;# 
   415     008D                     	;# 
   416     008E                     	;# 
   417     008F                     	;# 
   418     0090                     	;# 
   419     0091                     	;# 
   420     0092                     	;# 
   421     0093                     	;# 
   422     0093                     	;# 
   423     0093                     	;# 
   424     0094                     	;# 
   425     0095                     	;# 
   426     0096                     	;# 
   427     0097                     	;# 
   428     0098                     	;# 
   429     0099                     	;# 
   430     009A                     	;# 
   431     009B                     	;# 
   432     009C                     	;# 
   433     009D                     	;# 
   434     009E                     	;# 
   435     009F                     	;# 
   436     0105                     	;# 
   437     0107                     	;# 
   438     0108                     	;# 
   439     0109                     	;# 
   440     010C                     	;# 
   441     010C                     	;# 
   442     010D                     	;# 
   443     010E                     	;# 
   444     010F                     	;# 
   445     0185                     	;# 
   446     0187                     	;# 
   447     0188                     	;# 
   448     0189                     	;# 
   449     018C                     	;# 
   450     018D                     	;# 
   451                           
   452                           	psect	strings
   453     0003                     __pstrings:
   454     0003                     stringtab:
   455     0003                     __stringtab:
   456     0003                     stringcode:	
   457                           ;	String table - string pointers are 1 byte each
   458                           
   459     0003                     stringdir:
   460     0003  3000               	movlw	high stringdir
   461     0004  008A               	movwf	10
   462     0005  0804               	movf	4,w
   463     0006  0A84               	incf	4,f
   464     0007  0782               	addwf	2,f
   465     0008                     __stringbase:
   466     0008  3400               	retlw	0
   467     0009                     __end_of__stringtab:
   468     0009                     _dpowers:
   469     0009  3401               	retlw	1
   470     000A  3400               	retlw	0
   471     000B  340A               	retlw	10
   472     000C  3400               	retlw	0
   473     000D  3464               	retlw	100
   474     000E  3400               	retlw	0
   475     000F  34E8               	retlw	232
   476     0010  3403               	retlw	3
   477     0011  3410               	retlw	16
   478     0012  3427               	retlw	39
   479     0013                     __end_of_dpowers:
   480     0008                     _PORTDbits	set	8
   481     0009                     _PORTE	set	9
   482     0008                     _PORTD	set	8
   483     0007                     _PORTC	set	7
   484     0006                     _PORTB	set	6
   485     001E                     _ADRESH	set	30
   486     001F                     _ADCON0bits	set	31
   487     0066                     _ADIF	set	102
   488     008F                     _OSCCONbits	set	143
   489     009F                     _ADCON1bits	set	159
   490     0085                     _TRISAbits	set	133
   491     0089                     _TRISE	set	137
   492     0088                     _TRISD	set	136
   493     0087                     _TRISC	set	135
   494     0086                     _TRISB	set	134
   495     0188                     _ANSELbits	set	392
   496     0189                     _ANSELH	set	393
   497     0188                     _ANSEL	set	392
   498     0013                     STR_1:
   499     0013  3425               	retlw	37	;'%'
   500     0014  3464               	retlw	100	;'d'
   501     0015  3400               	retlw	0
   502                           
   503                           	psect	cinit
   504     07FC                     start_initialization:	
   505                           ; #config settings
   506                           
   507     07FC                     __initialization:
   508     07FC                     end_of_initialization:	
   509                           ;End of C runtime variable initialization code
   510                           
   511     07FC                     __end_of__initialization:
   512     07FC  0183               	clrf	3
   513     07FD  120A  118A  2E10   	ljmp	_main	;jump to C main() function
   514                           
   515                           	psect	cstackCOMMON
   516     0070                     __pcstackCOMMON:
   517     0070                     ?_setup:
   518     0070                     ??_setup:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_setupINTOSC:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_setupADC:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ??_setupADC:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ?_Lcd_Init:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_Lcd_Clear:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?_Lcd_Write_String:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_main:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?_Lcd_Port:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ??_Lcd_Port:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_Lcd_Cmd:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_Lcd_Write_Char:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?___lwdiv:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     Lcd_Port@a:	
   558                           ; 2 bytes @ 0x0
   559                           
   560     0070                     setupINTOSC@OsciladorInterno:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ___lwdiv@divisor:	
   564                           ; 2 bytes @ 0x0
   565                           
   566                           
   567                           ; 2 bytes @ 0x0
   568     0070                     	ds	1
   569     0071                     ??_Lcd_Cmd:
   570     0071                     ??_Lcd_Write_Char:	
   571                           ; 1 bytes @ 0x1
   572                           
   573                           
   574                           ; 1 bytes @ 0x1
   575     0071                     	ds	1
   576     0072                     ??_setupINTOSC:
   577     0072                     Lcd_Write_Char@temp:	
   578                           ; 1 bytes @ 0x2
   579                           
   580     0072                     ___lwdiv@dividend:	
   581                           ; 1 bytes @ 0x2
   582                           
   583                           
   584                           ; 2 bytes @ 0x2
   585     0072                     	ds	1
   586     0073                     Lcd_Cmd@a:
   587     0073                     Lcd_Write_Char@y:	
   588                           ; 1 bytes @ 0x3
   589                           
   590                           
   591                           ; 1 bytes @ 0x3
   592     0073                     	ds	1
   593     0074                     ??_Lcd_Init:
   594     0074                     ??_Lcd_Clear:	
   595                           ; 1 bytes @ 0x4
   596                           
   597     0074                     ?_Lcd_Set_Cursor:	
   598                           ; 1 bytes @ 0x4
   599                           
   600     0074                     ??___lwdiv:	
   601                           ; 1 bytes @ 0x4
   602                           
   603     0074                     Lcd_Set_Cursor@b:	
   604                           ; 1 bytes @ 0x4
   605                           
   606     0074                     Lcd_Write_Char@a:	
   607                           ; 1 bytes @ 0x4
   608                           
   609                           
   610                           ; 1 bytes @ 0x4
   611     0074                     	ds	1
   612     0075                     ??_Lcd_Set_Cursor:
   613     0075                     ??_Lcd_Write_String:	
   614                           ; 1 bytes @ 0x5
   615                           
   616     0075                     ___lwdiv@quotient:	
   617                           ; 1 bytes @ 0x5
   618                           
   619                           
   620                           ; 2 bytes @ 0x5
   621     0075                     	ds	1
   622     0076                     Lcd_Set_Cursor@a:
   623     0076                     Lcd_Write_String@i:	
   624                           ; 1 bytes @ 0x6
   625                           
   626                           
   627                           ; 2 bytes @ 0x6
   628     0076                     	ds	1
   629     0077                     Lcd_Set_Cursor@z:
   630     0077                     ___lwdiv@counter:	
   631                           ; 1 bytes @ 0x7
   632                           
   633                           
   634                           ; 1 bytes @ 0x7
   635     0077                     	ds	1
   636     0078                     ?___lwmod:
   637     0078                     Lcd_Set_Cursor@y:	
   638                           ; 2 bytes @ 0x8
   639                           
   640     0078                     Lcd_Write_String@a:	
   641                           ; 1 bytes @ 0x8
   642                           
   643     0078                     ___lwmod@divisor:	
   644                           ; 1 bytes @ 0x8
   645                           
   646                           
   647                           ; 2 bytes @ 0x8
   648     0078                     	ds	1
   649     0079                     Lcd_Set_Cursor@temp:
   650                           
   651                           ; 1 bytes @ 0x9
   652     0079                     	ds	1
   653     007A                     ___lwmod@dividend:
   654                           
   655                           ; 2 bytes @ 0xA
   656     007A                     	ds	2
   657     007C                     ??___lwmod:
   658                           
   659                           ; 1 bytes @ 0xC
   660     007C                     	ds	1
   661     007D                     ___lwmod@counter:
   662                           
   663                           ; 1 bytes @ 0xD
   664     007D                     	ds	1
   665                           
   666                           	psect	cstackBANK0
   667     0020                     __pcstackBANK0:
   668     0020                     ?_sprintf:
   669     0020                     sprintf@f:	
   670                           ; 2 bytes @ 0x0
   671                           
   672                           
   673                           ; 1 bytes @ 0x0
   674     0020                     	ds	3
   675     0023                     ??_sprintf:
   676                           
   677                           ; 1 bytes @ 0x3
   678     0023                     	ds	3
   679     0026                     sprintf@ap:
   680                           
   681                           ; 1 bytes @ 0x6
   682     0026                     	ds	1
   683     0027                     sprintf@flag:
   684                           
   685                           ; 1 bytes @ 0x7
   686     0027                     	ds	1
   687     0028                     sprintf@prec:
   688                           
   689                           ; 1 bytes @ 0x8
   690     0028                     	ds	1
   691     0029                     sprintf@val:
   692                           
   693                           ; 2 bytes @ 0x9
   694     0029                     	ds	2
   695     002B                     sprintf@sp:
   696                           
   697                           ; 1 bytes @ 0xB
   698     002B                     	ds	1
   699     002C                     sprintf@c:
   700                           
   701                           ; 1 bytes @ 0xC
   702     002C                     	ds	1
   703     002D                     ??_main:
   704                           
   705                           ; 1 bytes @ 0xD
   706     002D                     	ds	2
   707     002F                     main@string:
   708                           
   709                           ; 3 bytes @ 0xF
   710     002F                     	ds	3
   711                           
   712                           	psect	maintext
   713     0610                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 60 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  string          3   15[BANK0 ] unsigned char [3]
   724 ;;  OsciladorInt    2    0        int 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       3       0       0       0
   736 ;;      Temps:          0       2       0       0       0
   737 ;;      Totals:         0       5       0       0       0
   738 ;;Total ram usage:        5 bytes
   739 ;; Hardware stack levels required when called: 3
   740 ;; This function calls:
   741 ;;		_Lcd_Clear
   742 ;;		_Lcd_Init
   743 ;;		_Lcd_Set_Cursor
   744 ;;		_Lcd_Write_String
   745 ;;		_setup
   746 ;;		_setupADC
   747 ;;		_setupINTOSC
   748 ;;		_sprintf
   749 ;; This function is called by:
   750 ;;		Startup code after reset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754     0610                     _main:	
   755                           ;psect for function _main
   756                           
   757     0610                     l1244:	
   758                           ;incstack = 0
   759                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   760                           
   761                           
   762                           ;main.c: 62:   int OsciladorInterno;;main.c: 63:   char string[3];;main.c: 65:   setup()
      +                          ;
   763     0610  120A  118A  248D  120A  118A  	fcall	_setup
   764     0615                     l1246:
   765                           
   766                           ;main.c: 66:   setupINTOSC(8);
   767     0615  3008               	movlw	8
   768     0616  00F0               	movwf	setupINTOSC@OsciladorInterno
   769     0617  3000               	movlw	0
   770     0618  00F1               	movwf	setupINTOSC@OsciladorInterno+1
   771     0619  120A  118A  26C0  120A  118A  	fcall	_setupINTOSC
   772     061E                     l1248:
   773                           
   774                           ;main.c: 67:   setupADC();
   775     061E  120A  118A  24B8  120A  118A  	fcall	_setupADC
   776     0623                     l1250:
   777                           
   778                           ;main.c: 68:   Lcd_Init();
   779     0623  120A  118A  2663  120A  118A  	fcall	_Lcd_Init
   780     0628                     l1252:
   781                           
   782                           ;main.c: 71:   {;main.c: 72:       ADCON0bits.GO = 1;
   783     0628  1283               	bcf	3,5	;RP0=0, select bank0
   784     0629  1303               	bcf	3,6	;RP1=0, select bank0
   785     062A  149F               	bsf	31,1	;volatile
   786     062B                     l50:	
   787                           ;main.c: 73:       while (ADCON0bits.GO == 1){};
   788                           
   789     062B  189F               	btfsc	31,1	;volatile
   790     062C  2E2E               	goto	u761
   791     062D  2E2F               	goto	u760
   792     062E                     u761:
   793     062E  2E2B               	goto	l50
   794     062F                     u760:
   795     062F                     l52:
   796                           
   797                           ;main.c: 74:       ADIF = 0;
   798     062F  130C               	bcf	12,6	;volatile
   799     0630                     l1254:
   800                           
   801                           ;main.c: 75:       _delay((unsigned long)((10)*(8000000/4000.0)));
   802     0630  301A               	movlw	26
   803     0631  1283               	bcf	3,5	;RP0=0, select bank0
   804     0632  1303               	bcf	3,6	;RP1=0, select bank0
   805     0633  00AE               	movwf	??_main+1
   806     0634  30F7               	movlw	247
   807     0635  00AD               	movwf	??_main
   808     0636                     u777:
   809     0636  0BAD               	decfsz	??_main,f
   810     0637  2E36               	goto	u777
   811     0638  0BAE               	decfsz	??_main+1,f
   812     0639  2E36               	goto	u777
   813     063A  2E3B               	nop2
   814     063B                     l1256:
   815                           
   816                           ;main.c: 77:       sprintf(string, "%d", ADRESH);
   817     063B  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   818     063C  1283               	bcf	3,5	;RP0=0, select bank0
   819     063D  1303               	bcf	3,6	;RP1=0, select bank0
   820     063E  00A0               	movwf	sprintf@f
   821     063F  081E               	movf	30,w	;volatile
   822     0640  00AD               	movwf	??_main
   823     0641  01AE               	clrf	??_main+1
   824     0642  082D               	movf	??_main,w
   825     0643  00A1               	movwf	?_sprintf+1
   826     0644  082E               	movf	??_main+1,w
   827     0645  00A2               	movwf	?_sprintf+2
   828     0646  302F               	movlw	(low (main@string| 0))& (0+255)
   829     0647  120A  118A  2722  120A  118A  	fcall	_sprintf
   830     064C                     l1258:
   831                           
   832                           ;main.c: 78:       Lcd_Clear();
   833     064C  120A  118A  2480  120A  118A  	fcall	_Lcd_Clear
   834     0651                     l1260:
   835                           
   836                           ;main.c: 79:       Lcd_Set_Cursor(1,1);
   837     0651  01F4               	clrf	Lcd_Set_Cursor@b
   838     0652  0AF4               	incf	Lcd_Set_Cursor@b,f
   839     0653  3001               	movlw	1
   840     0654  120A  118A  25CA  120A  118A  	fcall	_Lcd_Set_Cursor
   841     0659                     l1262:
   842                           
   843                           ;main.c: 80:       Lcd_Write_String(string);
   844     0659  302F               	movlw	(low (main@string| 0))& (0+255)
   845     065A  120A  118A  24D4  120A  118A  	fcall	_Lcd_Write_String
   846     065F  2E28               	goto	l1252
   847     0660  120A  118A  2800   	ljmp	start
   848     0663                     __end_of_main:
   849                           
   850                           	psect	text1
   851     0722                     __ptext1:	
   852 ;; *************** function _sprintf *****************
   853 ;; Defined at:
   854 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  sp              1    wreg     PTR unsigned char 
   857 ;;		 -> main@string(3), 
   858 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   859 ;;		 -> STR_1(3), 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   862 ;;		 -> main@string(3), 
   863 ;;  tmpval          4    0        struct .
   864 ;;  val             2    9[BANK0 ] unsigned int 
   865 ;;  cp              2    0        PTR const unsigned char 
   866 ;;  len             2    0        unsigned int 
   867 ;;  c               1   12[BANK0 ] unsigned char 
   868 ;;  prec            1    8[BANK0 ] char 
   869 ;;  flag            1    7[BANK0 ] unsigned char 
   870 ;;  ap              1    6[BANK0 ] PTR void [1]
   871 ;;		 -> ?_sprintf(2), 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  2    0[BANK0 ] int 
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       3       0       0       0
   882 ;;      Locals:         0       7       0       0       0
   883 ;;      Temps:          0       3       0       0       0
   884 ;;      Totals:         0      13       0       0       0
   885 ;;Total ram usage:       13 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 1
   888 ;; This function calls:
   889 ;;		___lwdiv
   890 ;;		___lwmod
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896     0722                     _sprintf:	
   897                           ;psect for function _sprintf
   898                           
   899                           
   900                           ;incstack = 0
   901                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   902                           ;sprintf@sp stored from wreg
   903     0722  1283               	bcf	3,5	;RP0=0, select bank0
   904     0723  1303               	bcf	3,6	;RP1=0, select bank0
   905     0724  00AB               	movwf	sprintf@sp
   906     0725                     l1152:
   907                           
   908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   909     0725  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   910     0726  00A6               	movwf	sprintf@ap
   911                           
   912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   913     0727  2FE7               	goto	l1204
   914     0728                     l1154:
   915                           
   916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   917     0728  3025               	movlw	37
   918     0729  062C               	xorwf	sprintf@c,w
   919     072A  1903               	btfsc	3,2
   920     072B  2F2D               	goto	u641
   921     072C  2F2E               	goto	u640
   922     072D                     u641:
   923     072D  2F38               	goto	l1160
   924     072E                     u640:
   925     072E                     l1156:
   926                           
   927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   928     072E  082B               	movf	sprintf@sp,w
   929     072F  0084               	movwf	4
   930     0730  082C               	movf	sprintf@c,w
   931     0731  1383               	bcf	3,7	;select IRP bank0
   932     0732  0080               	movwf	0
   933     0733                     l1158:
   934     0733  3001               	movlw	1
   935     0734  00A3               	movwf	??_sprintf
   936     0735  0823               	movf	??_sprintf,w
   937     0736  07AB               	addwf	sprintf@sp,f
   938                           
   939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
   940     0737  2FE7               	goto	l1204
   941     0738                     l1160:
   942                           
   943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   944     0738  01A7               	clrf	sprintf@flag
   945     0739                     l1164:	
   946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   947                           
   948     0739  3001               	movlw	1
   949     073A  07A0               	addwf	sprintf@f,f
   950     073B  30FF               	movlw	-1
   951     073C  0720               	addwf	sprintf@f,w
   952     073D  0084               	movwf	4
   953     073E  120A  118A  2003  120A  118A  	fcall	stringdir
   954     0743  00AC               	movwf	sprintf@c
   955     0744  00A3               	movwf	??_sprintf
   956     0745  01A4               	clrf	??_sprintf+1
   957                           
   958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   959                           ; Switch size 1, requested type "simple"
   960                           ; Number of cases is 1, Range of values is 0 to 0
   961                           ; switch strategies available:
   962                           ; Name         Instructions Cycles
   963                           ; simple_byte            4     3 (average)
   964                           ; direct_byte           11     8 (fixed)
   965                           ; jumptable            260     6 (fixed)
   966                           ;	Chosen strategy is simple_byte
   967     0746  0824               	movf	??_sprintf+1,w
   968     0747  3A00               	xorlw	0	; case 0
   969     0748  1903               	skipnz
   970     0749  2F4B               	goto	l1288
   971     074A  2FE7               	goto	l1204
   972     074B                     l1288:
   973                           
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 3, Range of values is 0 to 105
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte           10     6 (average)
   979                           ; jumptable            260     6 (fixed)
   980                           ;	Chosen strategy is simple_byte
   981     074B  0823               	movf	??_sprintf,w
   982     074C  3A00               	xorlw	0	; case 0
   983     074D  1903               	skipnz
   984     074E  2FF7               	goto	l1206
   985     074F  3A64               	xorlw	100	; case 100
   986     0750  1903               	skipnz
   987     0751  2F56               	goto	l1166
   988     0752  3A0D               	xorlw	13	; case 105
   989     0753  1903               	skipnz
   990     0754  2F56               	goto	l1166
   991     0755  2FE7               	goto	l1204
   992     0756                     l1166:
   993                           
   994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   995     0756  0826               	movf	sprintf@ap,w
   996     0757  0084               	movwf	4
   997     0758  1383               	bcf	3,7	;select IRP bank0
   998     0759  0800               	movf	0,w
   999     075A  00A9               	movwf	sprintf@val
  1000     075B  0A84               	incf	4,f
  1001     075C  0800               	movf	0,w
  1002     075D  00AA               	movwf	sprintf@val+1
  1003     075E                     l1168:
  1004     075E  3002               	movlw	2
  1005     075F  00A3               	movwf	??_sprintf
  1006     0760  0823               	movf	??_sprintf,w
  1007     0761  07A6               	addwf	sprintf@ap,f
  1008     0762                     l1170:
  1009                           
  1010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1011     0762  1FAA               	btfss	sprintf@val+1,7
  1012     0763  2F65               	goto	u651
  1013     0764  2F66               	goto	u650
  1014     0765                     u651:
  1015     0765  2F6F               	goto	l1176
  1016     0766                     u650:
  1017     0766                     l1172:
  1018                           
  1019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1020     0766  3003               	movlw	3
  1021     0767  00A3               	movwf	??_sprintf
  1022     0768  0823               	movf	??_sprintf,w
  1023     0769  04A7               	iorwf	sprintf@flag,f
  1024     076A                     l1174:
  1025                           
  1026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1027     076A  09A9               	comf	sprintf@val,f
  1028     076B  09AA               	comf	sprintf@val+1,f
  1029     076C  0AA9               	incf	sprintf@val,f
  1030     076D  1903               	skipnz
  1031     076E  0AAA               	incf	sprintf@val+1,f
  1032     076F                     l1176:
  1033                           
  1034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1035     076F  01AC               	clrf	sprintf@c
  1036     0770  0AAC               	incf	sprintf@c,f
  1037     0771                     l1182:
  1038                           
  1039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1040     0771  082C               	movf	sprintf@c,w
  1041     0772  00A3               	movwf	??_sprintf
  1042     0773  0723               	addwf	??_sprintf,w
  1043     0774  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1044     0775  0084               	movwf	4
  1045     0776  120A  118A  2003  120A  118A  	fcall	stringdir
  1046     077B  00A4               	movwf	??_sprintf+1
  1047     077C  120A  118A  2003  120A  118A  	fcall	stringdir
  1048     0781  00A5               	movwf	??_sprintf+2
  1049     0782  0825               	movf	??_sprintf+2,w
  1050     0783  022A               	subwf	sprintf@val+1,w
  1051     0784  1D03               	skipz
  1052     0785  2F88               	goto	u665
  1053     0786  0824               	movf	??_sprintf+1,w
  1054     0787  0229               	subwf	sprintf@val,w
  1055     0788                     u665:
  1056     0788  1803               	skipnc
  1057     0789  2F8B               	goto	u661
  1058     078A  2F8C               	goto	u660
  1059     078B                     u661:
  1060     078B  2F8D               	goto	l1186
  1061     078C                     u660:
  1062     078C  2F97               	goto	l1188
  1063     078D                     l1186:
  1064     078D  3001               	movlw	1
  1065     078E  00A3               	movwf	??_sprintf
  1066     078F  0823               	movf	??_sprintf,w
  1067     0790  07AC               	addwf	sprintf@c,f
  1068     0791  3005               	movlw	5
  1069     0792  062C               	xorwf	sprintf@c,w
  1070     0793  1D03               	btfss	3,2
  1071     0794  2F96               	goto	u671
  1072     0795  2F97               	goto	u670
  1073     0796                     u671:
  1074     0796  2F71               	goto	l1182
  1075     0797                     u670:
  1076     0797                     l1188:
  1077                           
  1078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1079     0797  0827               	movf	sprintf@flag,w
  1080     0798  3903               	andlw	3
  1081     0799  1903               	btfsc	3,2
  1082     079A  2F9C               	goto	u681
  1083     079B  2F9D               	goto	u680
  1084     079C                     u681:
  1085     079C  2FA6               	goto	l1194
  1086     079D                     u680:
  1087     079D                     l1190:
  1088                           
  1089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1090     079D  082B               	movf	sprintf@sp,w
  1091     079E  0084               	movwf	4
  1092     079F  302D               	movlw	45
  1093     07A0  1383               	bcf	3,7	;select IRP bank0
  1094     07A1  0080               	movwf	0
  1095     07A2                     l1192:
  1096     07A2  3001               	movlw	1
  1097     07A3  00A3               	movwf	??_sprintf
  1098     07A4  0823               	movf	??_sprintf,w
  1099     07A5  07AB               	addwf	sprintf@sp,f
  1100     07A6                     l1194:
  1101                           
  1102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1103     07A6  082C               	movf	sprintf@c,w
  1104     07A7  00A8               	movwf	sprintf@prec
  1105                           
  1106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1107     07A8  2FDE               	goto	l1202
  1108     07A9                     l1196:
  1109                           
  1110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1111     07A9  300A               	movlw	10
  1112     07AA  00F8               	movwf	___lwmod@divisor
  1113     07AB  3000               	movlw	0
  1114     07AC  00F9               	movwf	___lwmod@divisor+1
  1115     07AD  0828               	movf	sprintf@prec,w
  1116     07AE  00A3               	movwf	??_sprintf
  1117     07AF  0723               	addwf	??_sprintf,w
  1118     07B0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1119     07B1  0084               	movwf	4
  1120     07B2  120A  118A  2003  120A  118A  	fcall	stringdir
  1121     07B7  00F0               	movwf	___lwdiv@divisor
  1122     07B8  120A  118A  2003  120A  118A  	fcall	stringdir
  1123     07BD  00F1               	movwf	___lwdiv@divisor+1
  1124     07BE  082A               	movf	sprintf@val+1,w
  1125     07BF  00F3               	movwf	___lwdiv@dividend+1
  1126     07C0  0829               	movf	sprintf@val,w
  1127     07C1  00F2               	movwf	___lwdiv@dividend
  1128     07C2  120A  118A  2586  120A  118A  	fcall	___lwdiv
  1129     07C7  0871               	movf	?___lwdiv+1,w
  1130     07C8  00FB               	movwf	___lwmod@dividend+1
  1131     07C9  0870               	movf	?___lwdiv,w
  1132     07CA  00FA               	movwf	___lwmod@dividend
  1133     07CB  120A  118A  254C  120A  118A  	fcall	___lwmod
  1134     07D0  0878               	movf	?___lwmod,w
  1135     07D1  3E30               	addlw	48
  1136     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1137     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1138     07D4  00AC               	movwf	sprintf@c
  1139     07D5                     l1198:
  1140                           
  1141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1142     07D5  082B               	movf	sprintf@sp,w
  1143     07D6  0084               	movwf	4
  1144     07D7  082C               	movf	sprintf@c,w
  1145     07D8  1383               	bcf	3,7	;select IRP bank0
  1146     07D9  0080               	movwf	0
  1147     07DA                     l1200:
  1148     07DA  3001               	movlw	1
  1149     07DB  00A3               	movwf	??_sprintf
  1150     07DC  0823               	movf	??_sprintf,w
  1151     07DD  07AB               	addwf	sprintf@sp,f
  1152     07DE                     l1202:
  1153                           
  1154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1155     07DE  30FF               	movlw	255
  1156     07DF  00A3               	movwf	??_sprintf
  1157     07E0  0823               	movf	??_sprintf,w
  1158     07E1  07A8               	addwf	sprintf@prec,f
  1159     07E2  0A28               	incf	sprintf@prec,w
  1160     07E3  1D03               	btfss	3,2
  1161     07E4  2FE6               	goto	u691
  1162     07E5  2FE7               	goto	u690
  1163     07E6                     u691:
  1164     07E6  2FA9               	goto	l1196
  1165     07E7                     u690:
  1166     07E7                     l1204:
  1167                           
  1168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1169     07E7  3001               	movlw	1
  1170     07E8  07A0               	addwf	sprintf@f,f
  1171     07E9  30FF               	movlw	-1
  1172     07EA  0720               	addwf	sprintf@f,w
  1173     07EB  0084               	movwf	4
  1174     07EC  120A  118A  2003  120A  118A  	fcall	stringdir
  1175     07F1  00AC               	movwf	sprintf@c
  1176     07F2  082C               	movf	sprintf@c,w
  1177     07F3  1D03               	btfss	3,2
  1178     07F4  2FF6               	goto	u701
  1179     07F5  2FF7               	goto	u700
  1180     07F6                     u701:
  1181     07F6  2F28               	goto	l1154
  1182     07F7                     u700:
  1183     07F7                     l1206:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1186     07F7  082B               	movf	sprintf@sp,w
  1187     07F8  0084               	movwf	4
  1188     07F9  1383               	bcf	3,7	;select IRP bank0
  1189     07FA  0180               	clrf	0
  1190     07FB                     l238:
  1191     07FB  0008               	return
  1192     07FC                     __end_of_sprintf:
  1193                           
  1194                           	psect	text2
  1195     054C                     __ptext2:	
  1196 ;; *************** function ___lwmod *****************
  1197 ;; Defined at:
  1198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  divisor         2    8[COMMON] unsigned int 
  1201 ;;  dividend        2   10[COMMON] unsigned int 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  counter         1   13[COMMON] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  2    8[COMMON] unsigned int 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         4       0       0       0       0
  1214 ;;      Locals:         1       0       0       0       0
  1215 ;;      Temps:          1       0       0       0       0
  1216 ;;      Totals:         6       0       0       0       0
  1217 ;;Total ram usage:        6 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_sprintf
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     054C                     ___lwmod:	
  1227                           ;psect for function ___lwmod
  1228                           
  1229     054C                     l1084:	
  1230                           ;incstack = 0
  1231                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1232                           
  1233     054C  0878               	movf	___lwmod@divisor,w
  1234     054D  0479               	iorwf	___lwmod@divisor+1,w
  1235     054E  1903               	btfsc	3,2
  1236     054F  2D51               	goto	u511
  1237     0550  2D52               	goto	u510
  1238     0551                     u511:
  1239     0551  2D81               	goto	l1102
  1240     0552                     u510:
  1241     0552                     l1086:
  1242     0552  01FD               	clrf	___lwmod@counter
  1243     0553  0AFD               	incf	___lwmod@counter,f
  1244     0554  2D60               	goto	l1092
  1245     0555                     l1088:
  1246     0555  3001               	movlw	1
  1247     0556                     u525:
  1248     0556  1003               	clrc
  1249     0557  0DF8               	rlf	___lwmod@divisor,f
  1250     0558  0DF9               	rlf	___lwmod@divisor+1,f
  1251     0559  3EFF               	addlw	-1
  1252     055A  1D03               	skipz
  1253     055B  2D56               	goto	u525
  1254     055C                     l1090:
  1255     055C  3001               	movlw	1
  1256     055D  00FC               	movwf	??___lwmod
  1257     055E  087C               	movf	??___lwmod,w
  1258     055F  07FD               	addwf	___lwmod@counter,f
  1259     0560                     l1092:
  1260     0560  1FF9               	btfss	___lwmod@divisor+1,7
  1261     0561  2D63               	goto	u531
  1262     0562  2D64               	goto	u530
  1263     0563                     u531:
  1264     0563  2D55               	goto	l1088
  1265     0564                     u530:
  1266     0564                     l1094:
  1267     0564  0879               	movf	___lwmod@divisor+1,w
  1268     0565  027B               	subwf	___lwmod@dividend+1,w
  1269     0566  1D03               	skipz
  1270     0567  2D6A               	goto	u545
  1271     0568  0878               	movf	___lwmod@divisor,w
  1272     0569  027A               	subwf	___lwmod@dividend,w
  1273     056A                     u545:
  1274     056A  1C03               	skipc
  1275     056B  2D6D               	goto	u541
  1276     056C  2D6E               	goto	u540
  1277     056D                     u541:
  1278     056D  2D74               	goto	l1098
  1279     056E                     u540:
  1280     056E                     l1096:
  1281     056E  0878               	movf	___lwmod@divisor,w
  1282     056F  02FA               	subwf	___lwmod@dividend,f
  1283     0570  0879               	movf	___lwmod@divisor+1,w
  1284     0571  1C03               	skipc
  1285     0572  03FB               	decf	___lwmod@dividend+1,f
  1286     0573  02FB               	subwf	___lwmod@dividend+1,f
  1287     0574                     l1098:
  1288     0574  3001               	movlw	1
  1289     0575                     u555:
  1290     0575  1003               	clrc
  1291     0576  0CF9               	rrf	___lwmod@divisor+1,f
  1292     0577  0CF8               	rrf	___lwmod@divisor,f
  1293     0578  3EFF               	addlw	-1
  1294     0579  1D03               	skipz
  1295     057A  2D75               	goto	u555
  1296     057B                     l1100:
  1297     057B  3001               	movlw	1
  1298     057C  02FD               	subwf	___lwmod@counter,f
  1299     057D  1D03               	btfss	3,2
  1300     057E  2D80               	goto	u561
  1301     057F  2D81               	goto	u560
  1302     0580                     u561:
  1303     0580  2D64               	goto	l1094
  1304     0581                     u560:
  1305     0581                     l1102:
  1306     0581  087B               	movf	___lwmod@dividend+1,w
  1307     0582  00F9               	movwf	?___lwmod+1
  1308     0583  087A               	movf	___lwmod@dividend,w
  1309     0584  00F8               	movwf	?___lwmod
  1310     0585                     l524:
  1311     0585  0008               	return
  1312     0586                     __end_of___lwmod:
  1313                           
  1314                           	psect	text3
  1315     0586                     __ptext3:	
  1316 ;; *************** function ___lwdiv *****************
  1317 ;; Defined at:
  1318 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  divisor         2    0[COMMON] unsigned int 
  1321 ;;  dividend        2    2[COMMON] unsigned int 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  quotient        2    5[COMMON] unsigned int 
  1324 ;;  counter         1    7[COMMON] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  2    0[COMMON] unsigned int 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         4       0       0       0       0
  1335 ;;      Locals:         3       0       0       0       0
  1336 ;;      Temps:          1       0       0       0       0
  1337 ;;      Totals:         8       0       0       0       0
  1338 ;;Total ram usage:        8 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_sprintf
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347     0586                     ___lwdiv:	
  1348                           ;psect for function ___lwdiv
  1349                           
  1350     0586                     l1058:	
  1351                           ;incstack = 0
  1352                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1353                           
  1354     0586  01F5               	clrf	___lwdiv@quotient
  1355     0587  01F6               	clrf	___lwdiv@quotient+1
  1356     0588                     l1060:
  1357     0588  0870               	movf	___lwdiv@divisor,w
  1358     0589  0471               	iorwf	___lwdiv@divisor+1,w
  1359     058A  1903               	btfsc	3,2
  1360     058B  2D8D               	goto	u441
  1361     058C  2D8E               	goto	u440
  1362     058D                     u441:
  1363     058D  2DC5               	goto	l1080
  1364     058E                     u440:
  1365     058E                     l1062:
  1366     058E  01F7               	clrf	___lwdiv@counter
  1367     058F  0AF7               	incf	___lwdiv@counter,f
  1368     0590  2D9C               	goto	l1068
  1369     0591                     l1064:
  1370     0591  3001               	movlw	1
  1371     0592                     u455:
  1372     0592  1003               	clrc
  1373     0593  0DF0               	rlf	___lwdiv@divisor,f
  1374     0594  0DF1               	rlf	___lwdiv@divisor+1,f
  1375     0595  3EFF               	addlw	-1
  1376     0596  1D03               	skipz
  1377     0597  2D92               	goto	u455
  1378     0598                     l1066:
  1379     0598  3001               	movlw	1
  1380     0599  00F4               	movwf	??___lwdiv
  1381     059A  0874               	movf	??___lwdiv,w
  1382     059B  07F7               	addwf	___lwdiv@counter,f
  1383     059C                     l1068:
  1384     059C  1FF1               	btfss	___lwdiv@divisor+1,7
  1385     059D  2D9F               	goto	u461
  1386     059E  2DA0               	goto	u460
  1387     059F                     u461:
  1388     059F  2D91               	goto	l1064
  1389     05A0                     u460:
  1390     05A0                     l1070:
  1391     05A0  3001               	movlw	1
  1392     05A1                     u475:
  1393     05A1  1003               	clrc
  1394     05A2  0DF5               	rlf	___lwdiv@quotient,f
  1395     05A3  0DF6               	rlf	___lwdiv@quotient+1,f
  1396     05A4  3EFF               	addlw	-1
  1397     05A5  1D03               	skipz
  1398     05A6  2DA1               	goto	u475
  1399     05A7  0871               	movf	___lwdiv@divisor+1,w
  1400     05A8  0273               	subwf	___lwdiv@dividend+1,w
  1401     05A9  1D03               	skipz
  1402     05AA  2DAD               	goto	u485
  1403     05AB  0870               	movf	___lwdiv@divisor,w
  1404     05AC  0272               	subwf	___lwdiv@dividend,w
  1405     05AD                     u485:
  1406     05AD  1C03               	skipc
  1407     05AE  2DB0               	goto	u481
  1408     05AF  2DB1               	goto	u480
  1409     05B0                     u481:
  1410     05B0  2DB8               	goto	l1076
  1411     05B1                     u480:
  1412     05B1                     l1072:
  1413     05B1  0870               	movf	___lwdiv@divisor,w
  1414     05B2  02F2               	subwf	___lwdiv@dividend,f
  1415     05B3  0871               	movf	___lwdiv@divisor+1,w
  1416     05B4  1C03               	skipc
  1417     05B5  03F3               	decf	___lwdiv@dividend+1,f
  1418     05B6  02F3               	subwf	___lwdiv@dividend+1,f
  1419     05B7                     l1074:
  1420     05B7  1475               	bsf	___lwdiv@quotient,0
  1421     05B8                     l1076:
  1422     05B8  3001               	movlw	1
  1423     05B9                     u495:
  1424     05B9  1003               	clrc
  1425     05BA  0CF1               	rrf	___lwdiv@divisor+1,f
  1426     05BB  0CF0               	rrf	___lwdiv@divisor,f
  1427     05BC  3EFF               	addlw	-1
  1428     05BD  1D03               	skipz
  1429     05BE  2DB9               	goto	u495
  1430     05BF                     l1078:
  1431     05BF  3001               	movlw	1
  1432     05C0  02F7               	subwf	___lwdiv@counter,f
  1433     05C1  1D03               	btfss	3,2
  1434     05C2  2DC4               	goto	u501
  1435     05C3  2DC5               	goto	u500
  1436     05C4                     u501:
  1437     05C4  2DA0               	goto	l1070
  1438     05C5                     u500:
  1439     05C5                     l1080:
  1440     05C5  0876               	movf	___lwdiv@quotient+1,w
  1441     05C6  00F1               	movwf	?___lwdiv+1
  1442     05C7  0875               	movf	___lwdiv@quotient,w
  1443     05C8  00F0               	movwf	?___lwdiv
  1444     05C9                     l514:
  1445     05C9  0008               	return
  1446     05CA                     __end_of___lwdiv:
  1447                           
  1448                           	psect	text4
  1449     06C0                     __ptext4:	
  1450 ;; *************** function _setupINTOSC *****************
  1451 ;; Defined at:
  1452 ;;		line 11 in file "configINTOSC.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  OsciladorInt    2    0[COMMON] int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         2       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0
  1469 ;;      Totals:         2       0       0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479     06C0                     _setupINTOSC:	
  1480                           ;psect for function _setupINTOSC
  1481                           
  1482     06C0                     l1108:	
  1483                           ;incstack = 0
  1484                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1485                           
  1486                           
  1487                           ;configINTOSC.c: 13:     if (OsciladorInterno == 125)
  1488     06C0  307D               	movlw	125
  1489     06C1  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1490     06C2  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1491     06C3  1D03               	btfss	3,2
  1492     06C4  2EC6               	goto	u571
  1493     06C5  2EC7               	goto	u570
  1494     06C6                     u571:
  1495     06C6  2ECE               	goto	l121
  1496     06C7                     u570:
  1497     06C7                     l1110:
  1498                           
  1499                           ;configINTOSC.c: 14:     {;configINTOSC.c: 15:     OSCCONbits.IRCF = 0b0001 ;
  1500     06C7  1683               	bsf	3,5	;RP0=1, select bank1
  1501     06C8  1303               	bcf	3,6	;RP1=0, select bank1
  1502     06C9  080F               	movf	15,w	;volatile
  1503     06CA  398F               	andlw	-113
  1504     06CB  3810               	iorlw	16
  1505     06CC  008F               	movwf	15	;volatile
  1506     06CD                     l1112:
  1507                           
  1508                           ;configINTOSC.c: 16:     OSCCONbits.SCS = 1;
  1509     06CD  140F               	bsf	15,0	;volatile
  1510     06CE                     l121:	
  1511                           ;configINTOSC.c: 17:     }
  1512                           
  1513                           
  1514                           ;configINTOSC.c: 19:     if (OsciladorInterno == 250)
  1515     06CE  30FA               	movlw	250
  1516     06CF  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1517     06D0  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1518     06D1  1D03               	btfss	3,2
  1519     06D2  2ED4               	goto	u581
  1520     06D3  2ED5               	goto	u580
  1521     06D4                     u581:
  1522     06D4  2EDC               	goto	l122
  1523     06D5                     u580:
  1524     06D5                     l1114:
  1525                           
  1526                           ;configINTOSC.c: 20:     {;configINTOSC.c: 21:     OSCCONbits.IRCF = 0b0010 ;
  1527     06D5  1683               	bsf	3,5	;RP0=1, select bank1
  1528     06D6  1303               	bcf	3,6	;RP1=0, select bank1
  1529     06D7  080F               	movf	15,w	;volatile
  1530     06D8  398F               	andlw	-113
  1531     06D9  3820               	iorlw	32
  1532     06DA  008F               	movwf	15	;volatile
  1533     06DB                     l1116:
  1534                           
  1535                           ;configINTOSC.c: 22:     OSCCONbits.SCS = 1;
  1536     06DB  140F               	bsf	15,0	;volatile
  1537     06DC                     l122:	
  1538                           ;configINTOSC.c: 23:     }
  1539                           
  1540                           
  1541                           ;configINTOSC.c: 25:     if (OsciladorInterno == 500)
  1542     06DC  30F4               	movlw	244
  1543     06DD  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1544     06DE  1D03               	skipz
  1545     06DF  2EE4               	goto	u591
  1546     06E0  0371               	decf	setupINTOSC@OsciladorInterno+1,w
  1547     06E1  1D03               	btfss	3,2
  1548     06E2  2EE4               	goto	u591
  1549     06E3  2EE5               	goto	u590
  1550     06E4                     u591:
  1551     06E4  2EEC               	goto	l123
  1552     06E5                     u590:
  1553     06E5                     l1118:
  1554                           
  1555                           ;configINTOSC.c: 26:     {;configINTOSC.c: 27:     OSCCONbits.IRCF = 0b0011 ;
  1556     06E5  1683               	bsf	3,5	;RP0=1, select bank1
  1557     06E6  1303               	bcf	3,6	;RP1=0, select bank1
  1558     06E7  080F               	movf	15,w	;volatile
  1559     06E8  398F               	andlw	-113
  1560     06E9  3830               	iorlw	48
  1561     06EA  008F               	movwf	15	;volatile
  1562     06EB                     l1120:
  1563                           
  1564                           ;configINTOSC.c: 28:     OSCCONbits.SCS = 1;
  1565     06EB  140F               	bsf	15,0	;volatile
  1566     06EC                     l123:	
  1567                           ;configINTOSC.c: 29:     }
  1568                           
  1569                           
  1570                           ;configINTOSC.c: 31:     if (OsciladorInterno == 1)
  1571     06EC  0370               	decf	setupINTOSC@OsciladorInterno,w
  1572     06ED  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1573     06EE  1D03               	btfss	3,2
  1574     06EF  2EF1               	goto	u601
  1575     06F0  2EF2               	goto	u600
  1576     06F1                     u601:
  1577     06F1  2EF9               	goto	l124
  1578     06F2                     u600:
  1579     06F2                     l1122:
  1580                           
  1581                           ;configINTOSC.c: 32:     {;configINTOSC.c: 33:     OSCCONbits.IRCF = 0b0100 ;
  1582     06F2  1683               	bsf	3,5	;RP0=1, select bank1
  1583     06F3  1303               	bcf	3,6	;RP1=0, select bank1
  1584     06F4  080F               	movf	15,w	;volatile
  1585     06F5  398F               	andlw	-113
  1586     06F6  3840               	iorlw	64
  1587     06F7  008F               	movwf	15	;volatile
  1588     06F8                     l1124:
  1589                           
  1590                           ;configINTOSC.c: 34:     OSCCONbits.SCS = 1;
  1591     06F8  140F               	bsf	15,0	;volatile
  1592     06F9                     l124:	
  1593                           ;configINTOSC.c: 35:     }
  1594                           
  1595                           
  1596                           ;configINTOSC.c: 37:     if (OsciladorInterno == 2)
  1597     06F9  3002               	movlw	2
  1598     06FA  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1599     06FB  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1600     06FC  1D03               	btfss	3,2
  1601     06FD  2EFF               	goto	u611
  1602     06FE  2F00               	goto	u610
  1603     06FF                     u611:
  1604     06FF  2F07               	goto	l125
  1605     0700                     u610:
  1606     0700                     l1126:
  1607                           
  1608                           ;configINTOSC.c: 38:     {;configINTOSC.c: 39:     OSCCONbits.IRCF = 0b0101 ;
  1609     0700  1683               	bsf	3,5	;RP0=1, select bank1
  1610     0701  1303               	bcf	3,6	;RP1=0, select bank1
  1611     0702  080F               	movf	15,w	;volatile
  1612     0703  398F               	andlw	-113
  1613     0704  3850               	iorlw	80
  1614     0705  008F               	movwf	15	;volatile
  1615     0706                     l1128:
  1616                           
  1617                           ;configINTOSC.c: 40:     OSCCONbits.SCS = 1;
  1618     0706  140F               	bsf	15,0	;volatile
  1619     0707                     l125:	
  1620                           ;configINTOSC.c: 41:     }
  1621                           
  1622                           
  1623                           ;configINTOSC.c: 43:     if (OsciladorInterno == 4)
  1624     0707  3004               	movlw	4
  1625     0708  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1626     0709  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1627     070A  1D03               	btfss	3,2
  1628     070B  2F0D               	goto	u621
  1629     070C  2F0E               	goto	u620
  1630     070D                     u621:
  1631     070D  2F15               	goto	l126
  1632     070E                     u620:
  1633     070E                     l1130:
  1634                           
  1635                           ;configINTOSC.c: 44:     {;configINTOSC.c: 45:     OSCCONbits.IRCF = 0b0110 ;
  1636     070E  1683               	bsf	3,5	;RP0=1, select bank1
  1637     070F  1303               	bcf	3,6	;RP1=0, select bank1
  1638     0710  080F               	movf	15,w	;volatile
  1639     0711  398F               	andlw	-113
  1640     0712  3860               	iorlw	96
  1641     0713  008F               	movwf	15	;volatile
  1642     0714                     l1132:
  1643                           
  1644                           ;configINTOSC.c: 46:     OSCCONbits.SCS = 1;
  1645     0714  140F               	bsf	15,0	;volatile
  1646     0715                     l126:	
  1647                           ;configINTOSC.c: 47:     }
  1648                           
  1649                           
  1650                           ;configINTOSC.c: 49:     if (OsciladorInterno == 8)
  1651     0715  3008               	movlw	8
  1652     0716  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1653     0717  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1654     0718  1D03               	btfss	3,2
  1655     0719  2F1B               	goto	u631
  1656     071A  2F1C               	goto	u630
  1657     071B                     u631:
  1658     071B  2F21               	goto	l128
  1659     071C                     u630:
  1660     071C                     l1134:
  1661                           
  1662                           ;configINTOSC.c: 50:     {;configINTOSC.c: 51:     OSCCONbits.IRCF = 0b0111 ;
  1663     071C  3070               	movlw	112
  1664     071D  1683               	bsf	3,5	;RP0=1, select bank1
  1665     071E  1303               	bcf	3,6	;RP1=0, select bank1
  1666     071F  048F               	iorwf	15,f	;volatile
  1667     0720                     l1136:
  1668                           
  1669                           ;configINTOSC.c: 52:     OSCCONbits.SCS = 1;
  1670     0720  140F               	bsf	15,0	;volatile
  1671     0721                     l128:
  1672     0721  0008               	return
  1673     0722                     __end_of_setupINTOSC:
  1674                           
  1675                           	psect	text5
  1676     04B8                     __ptext5:	
  1677 ;; *************** function _setupADC *****************
  1678 ;; Defined at:
  1679 ;;		line 13 in file "configADC.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0
  1695 ;;      Temps:          1       0       0       0       0
  1696 ;;      Totals:         1       0       0       0       0
  1697 ;;Total ram usage:        1 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706     04B8                     _setupADC:	
  1707                           ;psect for function _setupADC
  1708                           
  1709     04B8                     l1138:	
  1710                           ;incstack = 0
  1711                           ; Regs used in _setupADC: [wreg]
  1712                           
  1713                           
  1714                           ;configADC.c: 17:     TRISAbits.TRISA0 = 1;
  1715     04B8  1683               	bsf	3,5	;RP0=1, select bank1
  1716     04B9  1303               	bcf	3,6	;RP1=0, select bank1
  1717     04BA  1405               	bsf	5,0	;volatile
  1718                           
  1719                           ;configADC.c: 18:     ANSELbits.ANS0 = 1;
  1720     04BB  1683               	bsf	3,5	;RP0=1, select bank3
  1721     04BC  1703               	bsf	3,6	;RP1=1, select bank3
  1722     04BD  1408               	bsf	8,0	;volatile
  1723                           
  1724                           ;configADC.c: 22:     ADCON0bits.ADCS0 = 1;
  1725     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1726     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1727     04C0  171F               	bsf	31,6	;volatile
  1728                           
  1729                           ;configADC.c: 23:     ADCON0bits.ADCS1 = 0;
  1730     04C1  139F               	bcf	31,7	;volatile
  1731                           
  1732                           ;configADC.c: 25:     ADCON1bits.VCFG0 = 0;
  1733     04C2  1683               	bsf	3,5	;RP0=1, select bank1
  1734     04C3  1303               	bcf	3,6	;RP1=0, select bank1
  1735     04C4  121F               	bcf	31,4	;volatile
  1736                           
  1737                           ;configADC.c: 26:     ADCON1bits.VCFG1 = 0;
  1738     04C5  129F               	bcf	31,5	;volatile
  1739                           
  1740                           ;configADC.c: 28:     ADCON1bits.ADFM = 0;
  1741     04C6  139F               	bcf	31,7	;volatile
  1742                           
  1743                           ;configADC.c: 30:     ADCON0bits.CHS0 = 0;
  1744     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1745     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1746     04C9  111F               	bcf	31,2	;volatile
  1747                           
  1748                           ;configADC.c: 31:     ADCON0bits.CHS1 = 0;
  1749     04CA  119F               	bcf	31,3	;volatile
  1750                           
  1751                           ;configADC.c: 32:     ADCON0bits.CHS2 = 0;
  1752     04CB  121F               	bcf	31,4	;volatile
  1753                           
  1754                           ;configADC.c: 33:     ADCON0bits.CHS3 = 0;
  1755     04CC  129F               	bcf	31,5	;volatile
  1756                           
  1757                           ;configADC.c: 35:     ADCON0bits.ADON = 1;
  1758     04CD  141F               	bsf	31,0	;volatile
  1759     04CE                     l1140:
  1760                           
  1761                           ;configADC.c: 37:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1762     04CE  3042               	movlw	66
  1763     04CF  00F0               	movwf	??_setupADC
  1764     04D0                     u787:
  1765     04D0  0BF0               	decfsz	??_setupADC,f
  1766     04D1  2CD0               	goto	u787
  1767     04D2  0000               	nop
  1768     04D3                     l116:
  1769     04D3  0008               	return
  1770     04D4                     __end_of_setupADC:
  1771                           
  1772                           	psect	text6
  1773     048D                     __ptext6:	
  1774 ;; *************** function _setup *****************
  1775 ;; Defined at:
  1776 ;;		line 88 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		status,2
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0
  1793 ;;      Totals:         0       0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803     048D                     _setup:	
  1804                           ;psect for function _setup
  1805                           
  1806     048D                     l1106:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _setup: [status,2]
  1809                           
  1810                           
  1811                           ;main.c: 90:     ANSEL = 0;
  1812     048D  1683               	bsf	3,5	;RP0=1, select bank3
  1813     048E  1703               	bsf	3,6	;RP1=1, select bank3
  1814     048F  0188               	clrf	8	;volatile
  1815                           
  1816                           ;main.c: 91:     ANSELH = 0;
  1817     0490  0189               	clrf	9	;volatile
  1818                           
  1819                           ;main.c: 93:     TRISB = 0;
  1820     0491  1683               	bsf	3,5	;RP0=1, select bank1
  1821     0492  1303               	bcf	3,6	;RP1=0, select bank1
  1822     0493  0186               	clrf	6	;volatile
  1823                           
  1824                           ;main.c: 94:     TRISC = 0;
  1825     0494  0187               	clrf	7	;volatile
  1826                           
  1827                           ;main.c: 95:     TRISD = 0;
  1828     0495  0188               	clrf	8	;volatile
  1829                           
  1830                           ;main.c: 96:     TRISE = 0;
  1831     0496  0189               	clrf	9	;volatile
  1832                           
  1833                           ;main.c: 98:     PORTB = 0;
  1834     0497  1283               	bcf	3,5	;RP0=0, select bank0
  1835     0498  1303               	bcf	3,6	;RP1=0, select bank0
  1836     0499  0186               	clrf	6	;volatile
  1837                           
  1838                           ;main.c: 99:     PORTC = 0;
  1839     049A  0187               	clrf	7	;volatile
  1840                           
  1841                           ;main.c: 100:     PORTD = 0;
  1842     049B  0188               	clrf	8	;volatile
  1843                           
  1844                           ;main.c: 101:     PORTE = 0;
  1845     049C  0189               	clrf	9	;volatile
  1846     049D                     l58:
  1847     049D  0008               	return
  1848     049E                     __end_of_setup:
  1849                           
  1850                           	psect	text7
  1851     04D4                     __ptext7:	
  1852 ;; *************** function _Lcd_Write_String *****************
  1853 ;; Defined at:
  1854 ;;		line 99 in file "configLCD_4bits.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  a               1    wreg     PTR unsigned char 
  1857 ;;		 -> main@string(3), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  a               1    8[COMMON] PTR unsigned char 
  1860 ;;		 -> main@string(3), 
  1861 ;;  i               2    6[COMMON] int 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1871 ;;      Params:         0       0       0       0       0
  1872 ;;      Locals:         3       0       0       0       0
  1873 ;;      Temps:          1       0       0       0       0
  1874 ;;      Totals:         4       0       0       0       0
  1875 ;;Total ram usage:        4 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 2
  1878 ;; This function calls:
  1879 ;;		_Lcd_Write_Char
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885     04D4                     _Lcd_Write_String:	
  1886                           ;psect for function _Lcd_Write_String
  1887                           
  1888                           
  1889                           ;incstack = 0
  1890                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1891                           ;Lcd_Write_String@a stored from wreg
  1892     04D4  00F8               	movwf	Lcd_Write_String@a
  1893     04D5                     l1236:
  1894                           
  1895                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  1896     04D5  01F6               	clrf	Lcd_Write_String@i
  1897     04D6  01F7               	clrf	Lcd_Write_String@i+1
  1898     04D7  2CE9               	goto	l1242
  1899     04D8                     l1238:
  1900                           
  1901                           ;configLCD_4bits.c: 102:         Lcd_Write_Char(a[i]);
  1902     04D8  0876               	movf	Lcd_Write_String@i,w
  1903     04D9  0778               	addwf	Lcd_Write_String@a,w
  1904     04DA  00F5               	movwf	??_Lcd_Write_String
  1905     04DB  0875               	movf	??_Lcd_Write_String,w
  1906     04DC  0084               	movwf	4
  1907     04DD  0800               	movf	0,w
  1908     04DE  120A  118A  2517  120A  118A  	fcall	_Lcd_Write_Char
  1909     04E3                     l1240:
  1910     04E3  3001               	movlw	1
  1911     04E4  07F6               	addwf	Lcd_Write_String@i,f
  1912     04E5  1803               	skipnc
  1913     04E6  0AF7               	incf	Lcd_Write_String@i+1,f
  1914     04E7  3000               	movlw	0
  1915     04E8  07F7               	addwf	Lcd_Write_String@i+1,f
  1916     04E9                     l1242:
  1917     04E9  0876               	movf	Lcd_Write_String@i,w
  1918     04EA  0778               	addwf	Lcd_Write_String@a,w
  1919     04EB  00F5               	movwf	??_Lcd_Write_String
  1920     04EC  0875               	movf	??_Lcd_Write_String,w
  1921     04ED  0084               	movwf	4
  1922     04EE  1383               	bcf	3,7	;select IRP bank0
  1923     04EF  0800               	movf	0,w
  1924     04F0  1D03               	btfss	3,2
  1925     04F1  2CF3               	goto	u751
  1926     04F2  2CF4               	goto	u750
  1927     04F3                     u751:
  1928     04F3  2CD8               	goto	l1238
  1929     04F4                     u750:
  1930     04F4                     l97:
  1931     04F4  0008               	return
  1932     04F5                     __end_of_Lcd_Write_String:
  1933                           
  1934                           	psect	text8
  1935     0517                     __ptext8:	
  1936 ;; *************** function _Lcd_Write_Char *****************
  1937 ;; Defined at:
  1938 ;;		line 84 in file "configLCD_4bits.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  a               1    wreg     unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  a               1    4[COMMON] unsigned char 
  1943 ;;  y               1    3[COMMON] unsigned char 
  1944 ;;  temp            1    2[COMMON] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         3       0       0       0       0
  1956 ;;      Temps:          1       0       0       0       0
  1957 ;;      Totals:         4       0       0       0       0
  1958 ;;Total ram usage:        4 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 1
  1961 ;; This function calls:
  1962 ;;		_Lcd_Port
  1963 ;; This function is called by:
  1964 ;;		_Lcd_Write_String
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968     0517                     _Lcd_Write_Char:	
  1969                           ;psect for function _Lcd_Write_Char
  1970                           
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1974                           ;Lcd_Write_Char@a stored from wreg
  1975     0517  00F4               	movwf	Lcd_Write_Char@a
  1976     0518                     l1038:
  1977                           
  1978                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  1979     0518  0874               	movf	Lcd_Write_Char@a,w
  1980     0519  390F               	andlw	15
  1981     051A  00F2               	movwf	Lcd_Write_Char@temp
  1982                           
  1983                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  1984     051B  0874               	movf	Lcd_Write_Char@a,w
  1985     051C  39F0               	andlw	240
  1986     051D  00F3               	movwf	Lcd_Write_Char@y
  1987     051E                     l1040:
  1988                           
  1989                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  1990     051E  1283               	bcf	3,5	;RP0=0, select bank0
  1991     051F  1303               	bcf	3,6	;RP1=0, select bank0
  1992     0520  1508               	bsf	8,2	;volatile
  1993     0521                     l1042:
  1994                           
  1995                           ;configLCD_4bits.c: 89:     Lcd_Port(y >> 4);
  1996     0521  0873               	movf	Lcd_Write_Char@y,w
  1997     0522  00F1               	movwf	??_Lcd_Write_Char
  1998     0523  3004               	movlw	4
  1999     0524                     u435:
  2000     0524  1003               	clrc
  2001     0525  0CF1               	rrf	??_Lcd_Write_Char,f
  2002     0526  3EFF               	addlw	-1
  2003     0527  1D03               	skipz
  2004     0528  2D24               	goto	u435
  2005     0529  0871               	movf	??_Lcd_Write_Char,w
  2006     052A  120A  118A  24F5  120A  118A  	fcall	_Lcd_Port
  2007     052F                     l1044:
  2008                           
  2009                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  2010     052F  1283               	bcf	3,5	;RP0=0, select bank0
  2011     0530  1303               	bcf	3,6	;RP1=0, select bank0
  2012     0531  1588               	bsf	8,3	;volatile
  2013     0532                     l1046:
  2014                           
  2015                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2016     0532  301A               	movlw	26
  2017     0533  00F1               	movwf	??_Lcd_Write_Char
  2018     0534                     u797:
  2019     0534  0BF1               	decfsz	??_Lcd_Write_Char,f
  2020     0535  2D34               	goto	u797
  2021     0536  0000               	nop
  2022     0537                     l1048:
  2023                           
  2024                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  2025     0537  1283               	bcf	3,5	;RP0=0, select bank0
  2026     0538  1303               	bcf	3,6	;RP1=0, select bank0
  2027     0539  1188               	bcf	8,3	;volatile
  2028     053A                     l1050:
  2029                           
  2030                           ;configLCD_4bits.c: 93:     Lcd_Port(temp);
  2031     053A  0872               	movf	Lcd_Write_Char@temp,w
  2032     053B  120A  118A  24F5  120A  118A  	fcall	_Lcd_Port
  2033     0540                     l1052:
  2034                           
  2035                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  2036     0540  1283               	bcf	3,5	;RP0=0, select bank0
  2037     0541  1303               	bcf	3,6	;RP1=0, select bank0
  2038     0542  1588               	bsf	8,3	;volatile
  2039     0543                     l1054:
  2040                           
  2041                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2042     0543  301A               	movlw	26
  2043     0544  00F1               	movwf	??_Lcd_Write_Char
  2044     0545                     u807:
  2045     0545  0BF1               	decfsz	??_Lcd_Write_Char,f
  2046     0546  2D45               	goto	u807
  2047     0547  0000               	nop
  2048     0548                     l1056:
  2049                           
  2050                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  2051     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2052     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2053     054A  1188               	bcf	8,3	;volatile
  2054     054B                     l91:
  2055     054B  0008               	return
  2056     054C                     __end_of_Lcd_Write_Char:
  2057                           
  2058                           	psect	text9
  2059     05CA                     __ptext9:	
  2060 ;; *************** function _Lcd_Set_Cursor *****************
  2061 ;; Defined at:
  2062 ;;		line 49 in file "configLCD_4bits.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  a               1    wreg     unsigned char 
  2065 ;;  b               1    4[COMMON] unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  a               1    6[COMMON] unsigned char 
  2068 ;;  temp            1    9[COMMON] unsigned char 
  2069 ;;  y               1    8[COMMON] unsigned char 
  2070 ;;  z               1    7[COMMON] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         1       0       0       0       0
  2081 ;;      Locals:         4       0       0       0       0
  2082 ;;      Temps:          1       0       0       0       0
  2083 ;;      Totals:         6       0       0       0       0
  2084 ;;Total ram usage:        6 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 2
  2087 ;; This function calls:
  2088 ;;		_Lcd_Cmd
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094     05CA                     _Lcd_Set_Cursor:	
  2095                           ;psect for function _Lcd_Set_Cursor
  2096                           
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2100                           ;Lcd_Set_Cursor@a stored from wreg
  2101     05CA  00F6               	movwf	Lcd_Set_Cursor@a
  2102     05CB                     l1216:
  2103                           
  2104                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  2105     05CB  0376               	decf	Lcd_Set_Cursor@a,w
  2106     05CC  1D03               	btfss	3,2
  2107     05CD  2DCF               	goto	u711
  2108     05CE  2DD0               	goto	u710
  2109     05CF                     u711:
  2110     05CF  2DED               	goto	l1226
  2111     05D0                     u710:
  2112     05D0                     l1218:
  2113                           
  2114                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  2115     05D0  0874               	movf	Lcd_Set_Cursor@b,w
  2116     05D1  3E7F               	addlw	127
  2117     05D2  00F9               	movwf	Lcd_Set_Cursor@temp
  2118                           
  2119                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  2120     05D3  0879               	movf	Lcd_Set_Cursor@temp,w
  2121     05D4  00F5               	movwf	??_Lcd_Set_Cursor
  2122     05D5  3004               	movlw	4
  2123     05D6                     u725:
  2124     05D6  1003               	clrc
  2125     05D7  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2126     05D8  3EFF               	addlw	-1
  2127     05D9  1D03               	skipz
  2128     05DA  2DD6               	goto	u725
  2129     05DB  0875               	movf	??_Lcd_Set_Cursor,w
  2130     05DC  00F7               	movwf	Lcd_Set_Cursor@z
  2131     05DD                     l1220:
  2132                           
  2133                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  2134     05DD  0879               	movf	Lcd_Set_Cursor@temp,w
  2135     05DE  390F               	andlw	15
  2136     05DF  00F8               	movwf	Lcd_Set_Cursor@y
  2137     05E0                     l1222:
  2138                           
  2139                           ;configLCD_4bits.c: 55:         Lcd_Cmd(z);
  2140     05E0  0877               	movf	Lcd_Set_Cursor@z,w
  2141     05E1  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2142     05E6                     l1224:
  2143                           
  2144                           ;configLCD_4bits.c: 56:         Lcd_Cmd(y);
  2145     05E6  0878               	movf	Lcd_Set_Cursor@y,w
  2146     05E7  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2147                           
  2148                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  2149     05EC  2E0F               	goto	l85
  2150     05ED                     l1226:
  2151     05ED  3002               	movlw	2
  2152     05EE  0676               	xorwf	Lcd_Set_Cursor@a,w
  2153     05EF  1D03               	btfss	3,2
  2154     05F0  2DF2               	goto	u731
  2155     05F1  2DF3               	goto	u730
  2156     05F2                     u731:
  2157     05F2  2E0F               	goto	l85
  2158     05F3                     u730:
  2159     05F3                     l1228:
  2160                           
  2161                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  2162     05F3  0874               	movf	Lcd_Set_Cursor@b,w
  2163     05F4  3EBF               	addlw	191
  2164     05F5  00F9               	movwf	Lcd_Set_Cursor@temp
  2165                           
  2166                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  2167     05F6  0879               	movf	Lcd_Set_Cursor@temp,w
  2168     05F7  00F5               	movwf	??_Lcd_Set_Cursor
  2169     05F8  3004               	movlw	4
  2170     05F9                     u745:
  2171     05F9  1003               	clrc
  2172     05FA  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2173     05FB  3EFF               	addlw	-1
  2174     05FC  1D03               	skipz
  2175     05FD  2DF9               	goto	u745
  2176     05FE  0875               	movf	??_Lcd_Set_Cursor,w
  2177     05FF  00F7               	movwf	Lcd_Set_Cursor@z
  2178     0600                     l1230:
  2179                           
  2180                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  2181     0600  0879               	movf	Lcd_Set_Cursor@temp,w
  2182     0601  390F               	andlw	15
  2183     0602  00F8               	movwf	Lcd_Set_Cursor@y
  2184     0603                     l1232:
  2185                           
  2186                           ;configLCD_4bits.c: 61:         Lcd_Cmd(z);
  2187     0603  0877               	movf	Lcd_Set_Cursor@z,w
  2188     0604  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2189     0609                     l1234:
  2190                           
  2191                           ;configLCD_4bits.c: 62:         Lcd_Cmd(y);
  2192     0609  0878               	movf	Lcd_Set_Cursor@y,w
  2193     060A  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2194     060F                     l85:
  2195     060F  0008               	return
  2196     0610                     __end_of_Lcd_Set_Cursor:
  2197                           
  2198                           	psect	text10
  2199     0663                     __ptext10:	
  2200 ;; *************** function _Lcd_Init *****************
  2201 ;; Defined at:
  2202 ;;		line 66 in file "configLCD_4bits.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0
  2218 ;;      Temps:          2       0       0       0       0
  2219 ;;      Totals:         2       0       0       0       0
  2220 ;;Total ram usage:        2 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 2
  2223 ;; This function calls:
  2224 ;;		_Lcd_Cmd
  2225 ;;		_Lcd_Port
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231     0663                     _Lcd_Init:	
  2232                           ;psect for function _Lcd_Init
  2233                           
  2234     0663                     l1142:	
  2235                           ;incstack = 0
  2236                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2237                           
  2238                           
  2239                           ;configLCD_4bits.c: 67:     Lcd_Port(0x00);
  2240     0663  3000               	movlw	0
  2241     0664  120A  118A  24F5  120A  118A  	fcall	_Lcd_Port
  2242     0669                     l1144:
  2243                           
  2244                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2245     0669  3034               	movlw	52
  2246     066A  00F5               	movwf	??_Lcd_Init+1
  2247     066B  30F1               	movlw	241
  2248     066C  00F4               	movwf	??_Lcd_Init
  2249     066D                     u817:
  2250     066D  0BF4               	decfsz	??_Lcd_Init,f
  2251     066E  2E6D               	goto	u817
  2252     066F  0BF5               	decfsz	??_Lcd_Init+1,f
  2253     0670  2E6D               	goto	u817
  2254     0671  2E72               	nop2
  2255     0672                     l1146:
  2256                           
  2257                           ;configLCD_4bits.c: 69:     Lcd_Cmd(0x03);
  2258     0672  3003               	movlw	3
  2259     0673  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2260                           
  2261                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2262     0678  300D               	movlw	13
  2263     0679  00F5               	movwf	??_Lcd_Init+1
  2264     067A  30FB               	movlw	251
  2265     067B  00F4               	movwf	??_Lcd_Init
  2266     067C                     u827:
  2267     067C  0BF4               	decfsz	??_Lcd_Init,f
  2268     067D  2E7C               	goto	u827
  2269     067E  0BF5               	decfsz	??_Lcd_Init+1,f
  2270     067F  2E7C               	goto	u827
  2271     0680  2E81               	nop2
  2272     0681                     l1148:
  2273                           
  2274                           ;configLCD_4bits.c: 71:     Lcd_Cmd(0x03);
  2275     0681  3003               	movlw	3
  2276     0682  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2277     0687                     l1150:
  2278                           
  2279                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2280     0687  301D               	movlw	29
  2281     0688  00F5               	movwf	??_Lcd_Init+1
  2282     0689  3091               	movlw	145
  2283     068A  00F4               	movwf	??_Lcd_Init
  2284     068B                     u837:
  2285     068B  0BF4               	decfsz	??_Lcd_Init,f
  2286     068C  2E8B               	goto	u837
  2287     068D  0BF5               	decfsz	??_Lcd_Init+1,f
  2288     068E  2E8B               	goto	u837
  2289                           
  2290                           ;configLCD_4bits.c: 73:     Lcd_Cmd(0x03);
  2291     068F  3003               	movlw	3
  2292     0690  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2293                           
  2294                           ;configLCD_4bits.c: 75:     Lcd_Cmd(0x02);
  2295     0695  3002               	movlw	2
  2296     0696  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2297                           
  2298                           ;configLCD_4bits.c: 76:     Lcd_Cmd(0x02);
  2299     069B  3002               	movlw	2
  2300     069C  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2301                           
  2302                           ;configLCD_4bits.c: 77:     Lcd_Cmd(0x08);
  2303     06A1  3008               	movlw	8
  2304     06A2  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2305                           
  2306                           ;configLCD_4bits.c: 78:     Lcd_Cmd(0x00);
  2307     06A7  3000               	movlw	0
  2308     06A8  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2309                           
  2310                           ;configLCD_4bits.c: 79:     Lcd_Cmd(0x0C);
  2311     06AD  300C               	movlw	12
  2312     06AE  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2313                           
  2314                           ;configLCD_4bits.c: 80:     Lcd_Cmd(0x00);
  2315     06B3  3000               	movlw	0
  2316     06B4  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2317                           
  2318                           ;configLCD_4bits.c: 81:     Lcd_Cmd(0x06);
  2319     06B9  3006               	movlw	6
  2320     06BA  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2321     06BF                     l88:
  2322     06BF  0008               	return
  2323     06C0                     __end_of_Lcd_Init:
  2324                           
  2325                           	psect	text11
  2326     0480                     __ptext11:	
  2327 ;; *************** function _Lcd_Clear *****************
  2328 ;; Defined at:
  2329 ;;		line 44 in file "configLCD_4bits.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0
  2346 ;;      Totals:         0       0       0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 2
  2350 ;; This function calls:
  2351 ;;		_Lcd_Cmd
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357     0480                     _Lcd_Clear:	
  2358                           ;psect for function _Lcd_Clear
  2359                           
  2360     0480                     l1214:	
  2361                           ;incstack = 0
  2362                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2363                           
  2364                           
  2365                           ;configLCD_4bits.c: 45:     Lcd_Cmd(0);
  2366     0480  3000               	movlw	0
  2367     0481  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2368                           
  2369                           ;configLCD_4bits.c: 46:     Lcd_Cmd(1);
  2370     0486  3001               	movlw	1
  2371     0487  120A  118A  249E  120A  118A  	fcall	_Lcd_Cmd
  2372     048C                     l79:
  2373     048C  0008               	return
  2374     048D                     __end_of_Lcd_Clear:
  2375                           
  2376                           	psect	text12
  2377     049E                     __ptext12:	
  2378 ;; *************** function _Lcd_Cmd *****************
  2379 ;; Defined at:
  2380 ;;		line 36 in file "configLCD_4bits.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  a               1    wreg     unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  a               1    3[COMMON] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       0       0       0       0
  2395 ;;      Locals:         1       0       0       0       0
  2396 ;;      Temps:          2       0       0       0       0
  2397 ;;      Totals:         3       0       0       0       0
  2398 ;;Total ram usage:        3 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 1
  2401 ;; This function calls:
  2402 ;;		_Lcd_Port
  2403 ;; This function is called by:
  2404 ;;		_Lcd_Clear
  2405 ;;		_Lcd_Set_Cursor
  2406 ;;		_Lcd_Init
  2407 ;;		_Lcd_Shift_Right
  2408 ;;		_Lcd_Shift_Left
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412     049E                     _Lcd_Cmd:	
  2413                           ;psect for function _Lcd_Cmd
  2414                           
  2415                           
  2416                           ;incstack = 0
  2417                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2418                           ;Lcd_Cmd@a stored from wreg
  2419     049E  00F3               	movwf	Lcd_Cmd@a
  2420     049F                     l1028:
  2421                           
  2422                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  2423     049F  1283               	bcf	3,5	;RP0=0, select bank0
  2424     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2425     04A1  1108               	bcf	8,2	;volatile
  2426     04A2                     l1030:
  2427                           
  2428                           ;configLCD_4bits.c: 38:     Lcd_Port(a);
  2429     04A2  0873               	movf	Lcd_Cmd@a,w
  2430     04A3  120A  118A  24F5  120A  118A  	fcall	_Lcd_Port
  2431     04A8                     l1032:
  2432                           
  2433                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  2434     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2435     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2436     04AA  1588               	bsf	8,3	;volatile
  2437     04AB                     l1034:
  2438                           
  2439                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2440     04AB  300B               	movlw	11
  2441     04AC  00F2               	movwf	??_Lcd_Cmd+1
  2442     04AD  3062               	movlw	98
  2443     04AE  00F1               	movwf	??_Lcd_Cmd
  2444     04AF                     u847:
  2445     04AF  0BF1               	decfsz	??_Lcd_Cmd,f
  2446     04B0  2CAF               	goto	u847
  2447     04B1  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2448     04B2  2CAF               	goto	u847
  2449     04B3  0000               	nop
  2450     04B4                     l1036:
  2451                           
  2452                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  2453     04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2454     04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2455     04B6  1188               	bcf	8,3	;volatile
  2456     04B7                     l76:
  2457     04B7  0008               	return
  2458     04B8                     __end_of_Lcd_Cmd:
  2459                           
  2460                           	psect	text13
  2461     04F5                     __ptext13:	
  2462 ;; *************** function _Lcd_Port *****************
  2463 ;; Defined at:
  2464 ;;		line 14 in file "configLCD_4bits.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  a               1    wreg     unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  a               1    0[COMMON] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2478 ;;      Params:         0       0       0       0       0
  2479 ;;      Locals:         1       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0
  2481 ;;      Totals:         1       0       0       0       0
  2482 ;;Total ram usage:        1 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_Lcd_Cmd
  2488 ;;		_Lcd_Init
  2489 ;;		_Lcd_Write_Char
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493     04F5                     _Lcd_Port:	
  2494                           ;psect for function _Lcd_Port
  2495                           
  2496                           
  2497                           ;incstack = 0
  2498                           ; Regs used in _Lcd_Port: [wreg]
  2499                           ;Lcd_Port@a stored from wreg
  2500     04F5  00F0               	movwf	Lcd_Port@a
  2501     04F6                     l1018:
  2502                           
  2503                           ;configLCD_4bits.c: 15:     if (a & 1)
  2504     04F6  1C70               	btfss	Lcd_Port@a,0
  2505     04F7  2CF9               	goto	u391
  2506     04F8  2CFA               	goto	u390
  2507     04F9                     u391:
  2508     04F9  2CFE               	goto	l65
  2509     04FA                     u390:
  2510     04FA                     l1020:
  2511                           
  2512                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  2513     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2514     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2515     04FC  1608               	bsf	8,4	;volatile
  2516     04FD  2D01               	goto	l66
  2517     04FE                     l65:	
  2518                           ;configLCD_4bits.c: 17:     else
  2519                           
  2520                           
  2521                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  2522     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2523     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2524     0500  1208               	bcf	8,4	;volatile
  2525     0501                     l66:
  2526                           
  2527                           ;configLCD_4bits.c: 20:     if (a & 2)
  2528     0501  1CF0               	btfss	Lcd_Port@a,1
  2529     0502  2D04               	goto	u401
  2530     0503  2D05               	goto	u400
  2531     0504                     u401:
  2532     0504  2D07               	goto	l67
  2533     0505                     u400:
  2534     0505                     l1022:
  2535                           
  2536                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  2537     0505  1688               	bsf	8,5	;volatile
  2538     0506  2D08               	goto	l68
  2539     0507                     l67:	
  2540                           ;configLCD_4bits.c: 22:     else
  2541                           
  2542                           
  2543                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  2544     0507  1288               	bcf	8,5	;volatile
  2545     0508                     l68:
  2546                           
  2547                           ;configLCD_4bits.c: 25:     if (a & 4)
  2548     0508  1D70               	btfss	Lcd_Port@a,2
  2549     0509  2D0B               	goto	u411
  2550     050A  2D0C               	goto	u410
  2551     050B                     u411:
  2552     050B  2D0E               	goto	l69
  2553     050C                     u410:
  2554     050C                     l1024:
  2555                           
  2556                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  2557     050C  1708               	bsf	8,6	;volatile
  2558     050D  2D0F               	goto	l70
  2559     050E                     l69:	
  2560                           ;configLCD_4bits.c: 27:     else
  2561                           
  2562                           
  2563                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  2564     050E  1308               	bcf	8,6	;volatile
  2565     050F                     l70:
  2566                           
  2567                           ;configLCD_4bits.c: 30:     if (a & 8)
  2568     050F  1DF0               	btfss	Lcd_Port@a,3
  2569     0510  2D12               	goto	u421
  2570     0511  2D13               	goto	u420
  2571     0512                     u421:
  2572     0512  2D15               	goto	l71
  2573     0513                     u420:
  2574     0513                     l1026:
  2575                           
  2576                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  2577     0513  1788               	bsf	8,7	;volatile
  2578     0514  2D16               	goto	l73
  2579     0515                     l71:	
  2580                           ;configLCD_4bits.c: 32:     else
  2581                           
  2582                           
  2583                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  2584     0515  1388               	bcf	8,7	;volatile
  2585     0516                     l73:
  2586     0516  0008               	return
  2587     0517                     __end_of_Lcd_Port:
  2588     007E                     btemp	set	126	;btemp
  2589     007E                     wtemp0	set	126
  2590                           
  2591                           	psect	idloc
  2592                           
  2593                           ;Config register IDLOC0 @ 0x2000
  2594                           ;	unspecified, using default values
  2595     2000                     	org	8192
  2596     2000  3FFF               	dw	16383
  2597                           
  2598                           ;Config register IDLOC1 @ 0x2001
  2599                           ;	unspecified, using default values
  2600     2001                     	org	8193
  2601     2001  3FFF               	dw	16383
  2602                           
  2603                           ;Config register IDLOC2 @ 0x2002
  2604                           ;	unspecified, using default values
  2605     2002                     	org	8194
  2606     2002  3FFF               	dw	16383
  2607                           
  2608                           ;Config register IDLOC3 @ 0x2003
  2609                           ;	unspecified, using default values
  2610     2003                     	org	8195
  2611     2003  3FFF               	dw	16383
  2612                           
  2613                           	psect	config
  2614                           
  2615                           ;Config register CONFIG1 @ 0x2007
  2616                           ;	Oscillator Selection bits
  2617                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2618                           ;	Watchdog Timer Enable bit
  2619                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2620                           ;	Power-up Timer Enable bit
  2621                           ;	PWRTE = OFF, PWRT disabled
  2622                           ;	RE3/MCLR pin function select bit
  2623                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2624                           ;	Code Protection bit
  2625                           ;	CP = OFF, Program memory code protection is disabled
  2626                           ;	Data Code Protection bit
  2627                           ;	CPD = OFF, Data memory code protection is disabled
  2628                           ;	Brown Out Reset Selection bits
  2629                           ;	BOREN = OFF, BOR disabled
  2630                           ;	Internal External Switchover bit
  2631                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2632                           ;	Fail-Safe Clock Monitor Enabled bit
  2633                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2634                           ;	Low Voltage Programming Enable bit
  2635                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2636                           ;	In-Circuit Debugger Mode bit
  2637                           ;	DEBUG = 0x1, unprogramme  2638     2007                     	org	8199
  2639     2007  20D4               	dw	8404
  2640                           
  2641                           ;Config register CONFIG2 @ 0x2008
  2642                           ;	Brown-out Reset Selection bit
  2643                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2644                           ;	Flash Program Memory Self Write Enable bits
  2645                           ;	WRT = OFF, Write protection off
  2646     2008                     	org	8200
  2647     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> main@string(BANK0[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 3
		 -> main@string(BANK0[3]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2560
                                             13 BANK0      5     5      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                           _setupADC
                        _setupINTOSC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     301
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     456
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
   _setupADC
   _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 27 00:49:16 2023

                          pc 0002                           l50 062B                           l52 062F  
                         l70 050F                           l71 0515                           l73 0516  
                         l65 04FE                           l66 0501                           l58 049D  
                         l67 0507                           l91 054B                           l68 0508  
                         l76 04B7                           l69 050E                           l85 060F  
                         l79 048C                           l88 06BF                           l97 04F4  
                         fsr 0004                          l121 06CE                          l122 06DC  
                        l123 06EC                          l116 04D3                          l124 06F9  
                        l125 0707                          l126 0715                          l128 0721  
                        l238 07FB                          l514 05C9                          l524 0585  
                        u400 0505                          u401 0504                          u410 050C  
                        u411 050B                          u420 0513                          u500 05C5  
                        u421 0512                          u501 05C4                          u510 0552  
                        u511 0551                          u600 06F2                          u440 058E  
                        u601 06F1                          u441 058D                          u610 0700  
                        u530 0564                          u435 0524                          u611 06FF  
                        u531 0563                          u620 070E                          u460 05A0  
                        u540 056E                          u700 07F7                          u621 070D  
                        u461 059F                          u541 056D                          u525 0556  
                        u701 07F6                          u390 04FA                          u710 05D0  
                        u630 071C                          u391 04F9                          u711 05CF  
                        u631 071B                          u455 0592                          u480 05B1  
                        u560 0581                          u640 072E                          u481 05B0  
                        u561 0580                          u545 056A                          u641 072D  
                        u730 05F3                          u570 06C7                          u650 0766  
                        u731 05F2                          u571 06C6                          u475 05A1  
                        u555 0575                          u651 0765                          u580 06D5  
                        u660 078C                          u725 05D6                          u581 06D4  
                        u485 05AD                          u661 078B                          u750 04F4  
                        u590 06E5                          u670 0797                          u807 0545  
                        u751 04F3                          u591 06E4                          u495 05B9  
                        u671 0796                          u680 079D                          u760 062F  
                        u817 066D                          u745 05F9                          u681 079C  
                        u665 0788                          u761 062E                          u690 07E7  
                        u827 067C                          u691 07E6                          u837 068B  
                        u847 04AF                          u777 0636                          u787 04D0  
                        u797 0534                          fsr0 0004                          indf 0000  
                       l1020 04FA                         l1100 057B                         l1022 0505  
                       l1030 04A2                         l1110 06C7                         l1102 0581  
                       l1024 050C                         l1032 04A8                         l1040 051E  
                       l1120 06EB                         l1112 06CD                         l1200 07DA  
                       l1026 0513                         l1018 04F6                         l1034 04AB  
                       l1050 053A                         l1042 0521                         l1106 048D  
                       l1130 070E                         l1122 06F2                         l1114 06D5  
                       l1202 07DE                         l1036 04B4                         l1028 049F  
                       l1220 05DD                         l1052 0540                         l1044 052F  
                       l1140 04CE                         l1132 0714                         l1124 06F8  
                       l1116 06DB                         l1108 06C0                         l1060 0588  
                       l1204 07E7                         l1214 0480                         l1150 0687  
                       l1142 0663                         l1230 0600                         l1222 05E0  
                       l1054 0543                         l1046 0532                         l1038 0518  
                       l1134 071C                         l1126 0700                         l1118 06E5  
                       l1070 05A0                         l1062 058E                         l1206 07F7  
                       l1144 0669                         l1232 0603                         l1224 05E6  
                       l1216 05CB                         l1056 0548                         l1048 0537  
                       l1240 04E3                         l1136 0720                         l1128 0706  
                       l1072 05B1                         l1064 0591                         l1080 05C5  
                       l1160 0738                         l1152 0725                         l1146 0672  
                       l1234 0609                         l1218 05D0                         l1226 05ED  
                       l1242 04E9                         l1138 04B8                         l1074 05B7  
                       l1066 0598                         l1058 0586                         l1090 055C  
                       l1170 0762                         l1154 0728                         l1250 0623  
                       l1148 0681                         l1228 05F3                         l1236 04D5  
                       l1076 05B8                         l1068 059C                         l1092 0560  
                       l1084 054C                         l1172 0766                         l1164 0739  
                       l1156 072E                         l1260 0651                         l1252 0628  
                       l1244 0610                         l1238 04D8                         l1078 05BF  
                       l1094 0564                         l1086 0552                         l1190 079D  
                       l1182 0771                         l1174 076A                         l1166 0756  
                       l1158 0733                         l1262 0659                         l1254 0630  
                       l1246 0615                         l1096 056E                         l1088 0555  
                       l1192 07A2                         l1176 076F                         l1168 075E  
                       l1256 063B                         l1248 061E                         l1098 0574  
                       l1194 07A6                         l1186 078D                         l1258 064C  
                       l1196 07A9                         l1188 0797                         l1198 07D5  
                       l1288 074B                         _ADIF 0066                         STR_1 0013  
          ?_Lcd_Write_String 0070                         _main 0610                         btemp 007E  
                       start 0000           ??_Lcd_Write_String 0075              __end_of_Lcd_Cmd 04B8  
                      ?_main 0070                        _ANSEL 0188              __end_of___lwdiv 05CA  
            __end_of___lwmod 0586                        _PORTB 0006                        _PORTC 0007  
                      _PORTD 0008                        _PORTE 0009                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        _TRISE 0089  
            __end_of_dpowers 0013                        _setup 048D                        pclath 000A  
                      status 0003                        wtemp0 007E              __end_of_sprintf 07FC  
           __end_of_Lcd_Init 06C0             __end_of_Lcd_Port 0517              __initialization 07FC  
               __end_of_main 0663                       ??_main 002D                       _ADRESH 001E  
                     ?_setup 0070                       _ANSELH 0189                    ??_Lcd_Cmd 0071  
                  ??___lwdiv 0074                    ??___lwmod 007C                 ?_setupINTOSC 0070  
           __end_of_setupADC 04D4                    ??_sprintf 0023              Lcd_Set_Cursor@a 0076  
            Lcd_Set_Cursor@b 0074              Lcd_Set_Cursor@y 0078              Lcd_Set_Cursor@z 0077  
    __end_of__initialization 07FC            __end_of_Lcd_Clear 048D               __pcstackCOMMON 0070  
              __end_of_setup 049E               _Lcd_Set_Cursor 05CA                    ?_Lcd_Init 0070  
                  ?_Lcd_Port 0070                      ??_setup 0070                   __pmaintext 0610  
     __end_of_Lcd_Set_Cursor 0610                   ??_Lcd_Init 0074                   ??_Lcd_Port 0070  
                 __stringtab 0003               _Lcd_Write_Char 0517                      _Lcd_Cmd 049E  
                  ?_setupADC 0070                      ___lwdiv 0586                      ___lwmod 054C  
                  _ANSELbits 0188              ?_Lcd_Set_Cursor 0074                      __ptext1 0722  
                    __ptext2 054C                      __ptext3 0586                      __ptext4 06C0  
                    __ptext5 04B8                      __ptext6 048D                      __ptext7 04D4  
                    __ptext8 0517                      __ptext9 05CA                      _dpowers 0009  
                    _sprintf 0722       __end_of_Lcd_Write_Char 054C         end_of_initialization 07FC  
                 ??_setupADC 0070                    Lcd_Port@a 0070                    _PORTDbits 0008  
                  _TRISAbits 0085              ?_Lcd_Write_Char 0070            Lcd_Write_String@a 0078  
          Lcd_Write_String@i 0076                   main@string 002F                    _Lcd_Clear 0480  
           _Lcd_Write_String 04D4          start_initialization 07FC                   ?_Lcd_Clear 0070  
            Lcd_Write_Char@a 0074              Lcd_Write_Char@y 0073                    ___latbits 0002  
              __pcstackBANK0 0020                     ?_Lcd_Cmd 0070                  sprintf@flag 0027  
                sprintf@prec 0028             ___lwdiv@dividend 0072             ??_Lcd_Set_Cursor 0075  
                   ?___lwdiv 0070                     ?___lwmod 0078                    __pstrings 0003  
           ___lwdiv@quotient 0075                     ?_sprintf 0020                     Lcd_Cmd@a 0073  
                ??_Lcd_Clear 0074                   _ADCON0bits 001F                  __stringbase 0008  
                 _ADCON1bits 009F                ??_setupINTOSC 0072             ??_Lcd_Write_Char 0071  
                   _Lcd_Init 0663                     _Lcd_Port 04F5     __end_of_Lcd_Write_String 04F5  
         __end_of__stringtab 0009                   sprintf@val 0029              ___lwdiv@divisor 0070  
            ___lwdiv@counter 0077                     __ptext10 0663                     __ptext11 0480  
                   __ptext12 049E                     __ptext13 04F5          __end_of_setupINTOSC 0722  
                   _setupADC 04B8  setupINTOSC@OsciladorInterno 0070           Lcd_Write_Char@temp 0072  
                  sprintf@ap 0026                    sprintf@sp 002B             ___lwmod@dividend 007A  
                  stringcode 0003                   _OSCCONbits 008F           Lcd_Set_Cursor@temp 0079  
                _setupINTOSC 06C0                     sprintf@c 002C                     sprintf@f 0020  
            ___lwmod@divisor 0078              ___lwmod@counter 007D                     stringdir 0003  
                   stringtab 0003  
