

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 27 01:14:51 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     008F                     	;# 
   107     0090                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0095                     	;# 
   115     0096                     	;# 
   116     0097                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     0105                     	;# 
   126     0107                     	;# 
   127     0108                     	;# 
   128     0109                     	;# 
   129     010C                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     0185                     	;# 
   135     0187                     	;# 
   136     0188                     	;# 
   137     0189                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     008F                     	;# 
   185     0090                     	;# 
   186     0091                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0094                     	;# 
   192     0095                     	;# 
   193     0096                     	;# 
   194     0097                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009A                     	;# 
   198     009B                     	;# 
   199     009C                     	;# 
   200     009D                     	;# 
   201     009E                     	;# 
   202     009F                     	;# 
   203     0105                     	;# 
   204     0107                     	;# 
   205     0108                     	;# 
   206     0109                     	;# 
   207     010C                     	;# 
   208     010C                     	;# 
   209     010D                     	;# 
   210     010E                     	;# 
   211     010F                     	;# 
   212     0185                     	;# 
   213     0187                     	;# 
   214     0188                     	;# 
   215     0189                     	;# 
   216     018C                     	;# 
   217     018D                     	;# 
   218     0000                     	;# 
   219     0001                     	;# 
   220     0002                     	;# 
   221     0003                     	;# 
   222     0004                     	;# 
   223     0005                     	;# 
   224     0006                     	;# 
   225     0007                     	;# 
   226     0008                     	;# 
   227     0009                     	;# 
   228     000A                     	;# 
   229     000B                     	;# 
   230     000C                     	;# 
   231     000D                     	;# 
   232     000E                     	;# 
   233     000E                     	;# 
   234     000F                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0014                     	;# 
   240     0015                     	;# 
   241     0015                     	;# 
   242     0016                     	;# 
   243     0017                     	;# 
   244     0018                     	;# 
   245     0019                     	;# 
   246     001A                     	;# 
   247     001B                     	;# 
   248     001B                     	;# 
   249     001C                     	;# 
   250     001D                     	;# 
   251     001E                     	;# 
   252     001F                     	;# 
   253     0081                     	;# 
   254     0085                     	;# 
   255     0086                     	;# 
   256     0087                     	;# 
   257     0088                     	;# 
   258     0089                     	;# 
   259     008C                     	;# 
   260     008D                     	;# 
   261     008E                     	;# 
   262     008F                     	;# 
   263     0090                     	;# 
   264     0091                     	;# 
   265     0092                     	;# 
   266     0093                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0094                     	;# 
   270     0095                     	;# 
   271     0096                     	;# 
   272     0097                     	;# 
   273     0098                     	;# 
   274     0099                     	;# 
   275     009A                     	;# 
   276     009B                     	;# 
   277     009C                     	;# 
   278     009D                     	;# 
   279     009E                     	;# 
   280     009F                     	;# 
   281     0105                     	;# 
   282     0107                     	;# 
   283     0108                     	;# 
   284     0109                     	;# 
   285     010C                     	;# 
   286     010C                     	;# 
   287     010D                     	;# 
   288     010E                     	;# 
   289     010F                     	;# 
   290     0185                     	;# 
   291     0187                     	;# 
   292     0188                     	;# 
   293     0189                     	;# 
   294     018C                     	;# 
   295     018D                     	;# 
   296     0000                     	;# 
   297     0001                     	;# 
   298     0002                     	;# 
   299     0003                     	;# 
   300     0004                     	;# 
   301     0005                     	;# 
   302     0006                     	;# 
   303     0007                     	;# 
   304     0008                     	;# 
   305     0009                     	;# 
   306     000A                     	;# 
   307     000B                     	;# 
   308     000C                     	;# 
   309     000D                     	;# 
   310     000E                     	;# 
   311     000E                     	;# 
   312     000F                     	;# 
   313     0010                     	;# 
   314     0011                     	;# 
   315     0012                     	;# 
   316     0013                     	;# 
   317     0014                     	;# 
   318     0015                     	;# 
   319     0015                     	;# 
   320     0016                     	;# 
   321     0017                     	;# 
   322     0018                     	;# 
   323     0019                     	;# 
   324     001A                     	;# 
   325     001B                     	;# 
   326     001B                     	;# 
   327     001C                     	;# 
   328     001D                     	;# 
   329     001E                     	;# 
   330     001F                     	;# 
   331     0081                     	;# 
   332     0085                     	;# 
   333     0086                     	;# 
   334     0087                     	;# 
   335     0088                     	;# 
   336     0089                     	;# 
   337     008C                     	;# 
   338     008D                     	;# 
   339     008E                     	;# 
   340     008F                     	;# 
   341     0090                     	;# 
   342     0091                     	;# 
   343     0092                     	;# 
   344     0093                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0094                     	;# 
   348     0095                     	;# 
   349     0096                     	;# 
   350     0097                     	;# 
   351     0098                     	;# 
   352     0099                     	;# 
   353     009A                     	;# 
   354     009B                     	;# 
   355     009C                     	;# 
   356     009D                     	;# 
   357     009E                     	;# 
   358     009F                     	;# 
   359     0105                     	;# 
   360     0107                     	;# 
   361     0108                     	;# 
   362     0109                     	;# 
   363     010C                     	;# 
   364     010C                     	;# 
   365     010D                     	;# 
   366     010E                     	;# 
   367     010F                     	;# 
   368     0185                     	;# 
   369     0187                     	;# 
   370     0188                     	;# 
   371     0189                     	;# 
   372     018C                     	;# 
   373     018D                     	;# 
   374     0000                     	;# 
   375     0001                     	;# 
   376     0002                     	;# 
   377     0003                     	;# 
   378     0004                     	;# 
   379     0005                     	;# 
   380     0006                     	;# 
   381     0007                     	;# 
   382     0008                     	;# 
   383     0009                     	;# 
   384     000A                     	;# 
   385     000B                     	;# 
   386     000C                     	;# 
   387     000D                     	;# 
   388     000E                     	;# 
   389     000E                     	;# 
   390     000F                     	;# 
   391     0010                     	;# 
   392     0011                     	;# 
   393     0012                     	;# 
   394     0013                     	;# 
   395     0014                     	;# 
   396     0015                     	;# 
   397     0015                     	;# 
   398     0016                     	;# 
   399     0017                     	;# 
   400     0018                     	;# 
   401     0019                     	;# 
   402     001A                     	;# 
   403     001B                     	;# 
   404     001B                     	;# 
   405     001C                     	;# 
   406     001D                     	;# 
   407     001E                     	;# 
   408     001F                     	;# 
   409     0081                     	;# 
   410     0085                     	;# 
   411     0086                     	;# 
   412     0087                     	;# 
   413     0088                     	;# 
   414     0089                     	;# 
   415     008C                     	;# 
   416     008D                     	;# 
   417     008E                     	;# 
   418     008F                     	;# 
   419     0090                     	;# 
   420     0091                     	;# 
   421     0092                     	;# 
   422     0093                     	;# 
   423     0093                     	;# 
   424     0093                     	;# 
   425     0094                     	;# 
   426     0095                     	;# 
   427     0096                     	;# 
   428     0097                     	;# 
   429     0098                     	;# 
   430     0099                     	;# 
   431     009A                     	;# 
   432     009B                     	;# 
   433     009C                     	;# 
   434     009D                     	;# 
   435     009E                     	;# 
   436     009F                     	;# 
   437     0105                     	;# 
   438     0107                     	;# 
   439     0108                     	;# 
   440     0109                     	;# 
   441     010C                     	;# 
   442     010C                     	;# 
   443     010D                     	;# 
   444     010E                     	;# 
   445     010F                     	;# 
   446     0185                     	;# 
   447     0187                     	;# 
   448     0188                     	;# 
   449     0189                     	;# 
   450     018C                     	;# 
   451     018D                     	;# 
   452                           
   453                           	psect	strings
   454     0003                     __pstrings:
   455     0003                     stringtab:
   456     0003                     __stringtab:
   457                           
   458                           ;	String table - string pointers are 1 byte each
   459     0003  1BFF               	btfsc	btemp+1,7
   460     0004  280D               	ljmp	stringcode
   461     0005  1383               	bcf	3,7
   462     0006  187F               	btfsc	btemp+1,0
   463     0007  1783               	bsf	3,7
   464     0008  0800               	movf	0,w
   465     0009  0A84               	incf	4,f
   466     000A  1903               	skipnz
   467     000B  0AFF               	incf	btemp+1,f
   468     000C  0008               	return
   469     000D                     stringcode:
   470     000D                     stringdir:
   471     000D  3000               	movlw	high stringdir
   472     000E  008A               	movwf	10
   473     000F  0804               	movf	4,w
   474     0010  0A84               	incf	4,f
   475     0011  0782               	addwf	2,f
   476     0012                     __stringbase:
   477     0012  3400               	retlw	0
   478     0013                     __end_of__stringtab:
   479     0013                     _dpowers:
   480     0013  3401               	retlw	1
   481     0014  3400               	retlw	0
   482     0015  340A               	retlw	10
   483     0016  3400               	retlw	0
   484     0017  3464               	retlw	100
   485     0018  3400               	retlw	0
   486     0019  34E8               	retlw	232
   487     001A  3403               	retlw	3
   488     001B  3410               	retlw	16
   489     001C  3427               	retlw	39
   490     001D                     __end_of_dpowers:
   491     001F                     _ADCON0bits	set	31
   492     0008                     _PORTDbits	set	8
   493     0009                     _PORTE	set	9
   494     0008                     _PORTD	set	8
   495     0007                     _PORTC	set	7
   496     0006                     _PORTB	set	6
   497     001E                     _ADRESH	set	30
   498     0066                     _ADIF	set	102
   499     008F                     _OSCCONbits	set	143
   500     009F                     _ADCON1bits	set	159
   501     0085                     _TRISAbits	set	133
   502     0089                     _TRISE	set	137
   503     0088                     _TRISD	set	136
   504     0087                     _TRISC	set	135
   505     0086                     _TRISB	set	134
   506     0188                     _ANSELbits	set	392
   507     0189                     _ANSELH	set	393
   508     0188                     _ANSEL	set	392
   509     001D                     STR_1:
   510     001D  3453               	retlw	83	;'S'
   511     001E  3431               	retlw	49	;'1'
   512     001F  343A               	retlw	58	;':'
   513     0020  3400               	retlw	0
   514     0021                     STR_2:
   515     0021  3453               	retlw	83	;'S'
   516     0022  3432               	retlw	50	;'2'
   517     0023  343A               	retlw	58	;':'
   518     0024  3400               	retlw	0
   519     0025                     STR_3:
   520     0025  3425               	retlw	37	;'%'
   521     0026  3464               	retlw	100	;'d'
   522     0027  3400               	retlw	0
   523     0025                     
   524                           	psect	cinit
   525     07FC                     start_initialization:	
   526                           ; #config settings
   527                           
   528     07FC                     __initialization:
   529     07FC                     end_of_initialization:	
   530                           ;End of C runtime variable initialization code
   531                           
   532     07FC                     __end_of__initialization:
   533     07FC  0183               	clrf	3
   534     07FD  120A  118A  2E88   	ljmp	_main	;jump to C main() function
   535                           
   536                           	psect	cstackCOMMON
   537     0070                     __pcstackCOMMON:
   538     0070                     ?_setup:
   539     0070                     ??_setup:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?_setupINTOSC:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_setupADC:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ??_setupADC:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_Lcd_Init:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_Lcd_Clear:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_readADC:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ??_readADC:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?_main:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_Lcd_Port:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ??_Lcd_Port:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_Lcd_Cmd:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_Lcd_Write_Char:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?___lwdiv:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     Lcd_Port@a:	
   582                           ; 2 bytes @ 0x0
   583                           
   584     0070                     setupINTOSC@OsciladorInterno:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ___lwdiv@divisor:	
   588                           ; 2 bytes @ 0x0
   589                           
   590                           
   591                           ; 2 bytes @ 0x0
   592     0070                     	ds	1
   593     0071                     ??_Lcd_Cmd:
   594     0071                     ??_Lcd_Write_Char:	
   595                           ; 1 bytes @ 0x1
   596                           
   597     0071                     setupADC@canal:	
   598                           ; 1 bytes @ 0x1
   599                           
   600                           
   601                           ; 1 bytes @ 0x1
   602     0071                     	ds	1
   603     0072                     ??_setupINTOSC:
   604     0072                     Lcd_Write_Char@temp:	
   605                           ; 1 bytes @ 0x2
   606                           
   607     0072                     readADC@canal:	
   608                           ; 1 bytes @ 0x2
   609                           
   610     0072                     ___lwdiv@dividend:	
   611                           ; 1 bytes @ 0x2
   612                           
   613                           
   614                           ; 2 bytes @ 0x2
   615     0072                     	ds	1
   616     0073                     Lcd_Cmd@a:
   617     0073                     Lcd_Write_Char@y:	
   618                           ; 1 bytes @ 0x3
   619                           
   620                           
   621                           ; 1 bytes @ 0x3
   622     0073                     	ds	1
   623     0074                     ??_Lcd_Init:
   624     0074                     ??_Lcd_Clear:	
   625                           ; 1 bytes @ 0x4
   626                           
   627     0074                     ?_Lcd_Set_Cursor:	
   628                           ; 1 bytes @ 0x4
   629                           
   630     0074                     ??___lwdiv:	
   631                           ; 1 bytes @ 0x4
   632                           
   633     0074                     Lcd_Set_Cursor@b:	
   634                           ; 1 bytes @ 0x4
   635                           
   636     0074                     Lcd_Write_Char@a:	
   637                           ; 1 bytes @ 0x4
   638                           
   639                           
   640                           ; 1 bytes @ 0x4
   641     0074                     	ds	1
   642     0075                     ??_Lcd_Set_Cursor:
   643     0075                     ?_Lcd_Write_String:	
   644                           ; 1 bytes @ 0x5
   645                           
   646     0075                     Lcd_Write_String@a:	
   647                           ; 1 bytes @ 0x5
   648                           
   649     0075                     ___lwdiv@quotient:	
   650                           ; 2 bytes @ 0x5
   651                           
   652                           
   653                           ; 2 bytes @ 0x5
   654     0075                     	ds	1
   655     0076                     Lcd_Set_Cursor@a:
   656                           
   657                           ; 1 bytes @ 0x6
   658     0076                     	ds	1
   659     0077                     ??_Lcd_Write_String:
   660     0077                     Lcd_Set_Cursor@z:	
   661                           ; 1 bytes @ 0x7
   662                           
   663     0077                     ___lwdiv@counter:	
   664                           ; 1 bytes @ 0x7
   665                           
   666                           
   667                           ; 1 bytes @ 0x7
   668     0077                     	ds	1
   669     0078                     ?___lwmod:
   670     0078                     Lcd_Set_Cursor@y:	
   671                           ; 2 bytes @ 0x8
   672                           
   673     0078                     ___lwmod@divisor:	
   674                           ; 1 bytes @ 0x8
   675                           
   676                           
   677                           ; 2 bytes @ 0x8
   678     0078                     	ds	1
   679     0079                     Lcd_Set_Cursor@temp:
   680                           
   681                           ; 1 bytes @ 0x9
   682     0079                     	ds	1
   683     007A                     Lcd_Write_String@i:
   684     007A                     ___lwmod@dividend:	
   685                           ; 2 bytes @ 0xA
   686                           
   687                           
   688                           ; 2 bytes @ 0xA
   689     007A                     	ds	2
   690     007C                     ??___lwmod:
   691                           
   692                           ; 1 bytes @ 0xC
   693     007C                     	ds	1
   694     007D                     ___lwmod@counter:
   695                           
   696                           ; 1 bytes @ 0xD
   697     007D                     	ds	1
   698                           
   699                           	psect	cstackBANK0
   700     0020                     __pcstackBANK0:
   701     0020                     ?_sprintf:
   702     0020                     sprintf@f:	
   703                           ; 2 bytes @ 0x0
   704                           
   705                           
   706                           ; 1 bytes @ 0x0
   707     0020                     	ds	3
   708     0023                     ??_sprintf:
   709                           
   710                           ; 1 bytes @ 0x3
   711     0023                     	ds	3
   712     0026                     sprintf@ap:
   713                           
   714                           ; 1 bytes @ 0x6
   715     0026                     	ds	1
   716     0027                     sprintf@flag:
   717                           
   718                           ; 1 bytes @ 0x7
   719     0027                     	ds	1
   720     0028                     sprintf@prec:
   721                           
   722                           ; 1 bytes @ 0x8
   723     0028                     	ds	1
   724     0029                     sprintf@val:
   725                           
   726                           ; 2 bytes @ 0x9
   727     0029                     	ds	2
   728     002B                     sprintf@sp:
   729                           
   730                           ; 1 bytes @ 0xB
   731     002B                     	ds	1
   732     002C                     sprintf@c:
   733                           
   734                           ; 1 bytes @ 0xC
   735     002C                     	ds	1
   736     002D                     ??_main:
   737                           
   738                           ; 1 bytes @ 0xD
   739     002D                     	ds	2
   740     002F                     main@ADC1:
   741                           
   742                           ; 3 bytes @ 0xF
   743     002F                     	ds	3
   744     0032                     main@ADC2:
   745                           
   746                           ; 3 bytes @ 0x12
   747     0032                     	ds	3
   748                           
   749                           	psect	maintext
   750     0688                     __pmaintext:	
   751 ;;
   752 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   753 ;;
   754 ;; *************** function _main *****************
   755 ;; Defined at:
   756 ;;		line 60 in file "main.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  ADC2            3   18[BANK0 ] unsigned char [3]
   761 ;;  ADC1            3   15[BANK0 ] unsigned char [3]
   762 ;;  OsciladorInt    2    0        int 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : B00/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       6       0       0       0
   774 ;;      Temps:          0       2       0       0       0
   775 ;;      Totals:         0       8       0       0       0
   776 ;;Total ram usage:        8 bytes
   777 ;; Hardware stack levels required when called: 3
   778 ;; This function calls:
   779 ;;		_Lcd_Clear
   780 ;;		_Lcd_Init
   781 ;;		_Lcd_Set_Cursor
   782 ;;		_Lcd_Write_String
   783 ;;		_readADC
   784 ;;		_setup
   785 ;;		_setupADC
   786 ;;		_setupINTOSC
   787 ;;		_sprintf
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793     0688                     _main:	
   794                           ;psect for function _main
   795                           
   796     0688                     l1320:	
   797                           ;incstack = 0
   798                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   799                           
   800                           
   801                           ;main.c: 62:   int OsciladorInterno;;main.c: 63:   char ADC1[3];;main.c: 64:   char ADC2
      +                          [3];;main.c: 66:   setup();
   802     0688  120A  118A  23D2  120A  118A  	fcall	_setup
   803     068D                     l1322:
   804                           
   805                           ;main.c: 67:   setupINTOSC(8);
   806     068D  3008               	movlw	8
   807     068E  00F0               	movwf	setupINTOSC@OsciladorInterno
   808     068F  3000               	movlw	0
   809     0690  00F1               	movwf	setupINTOSC@OsciladorInterno+1
   810     0691  120A  118A  2626  120A  118A  	fcall	_setupINTOSC
   811     0696                     l1324:
   812                           
   813                           ;main.c: 68:   setupADC(0);
   814     0696  3000               	movlw	0
   815     0697  120A  118A  241F  120A  118A  	fcall	_setupADC
   816     069C                     l1326:
   817                           
   818                           ;main.c: 69:   setupADC(1);
   819     069C  3001               	movlw	1
   820     069D  120A  118A  241F  120A  118A  	fcall	_setupADC
   821     06A2                     l1328:
   822                           
   823                           ;main.c: 70:   Lcd_Init();
   824     06A2  120A  118A  25C9  120A  118A  	fcall	_Lcd_Init
   825     06A7                     l1330:
   826                           
   827                           ;main.c: 73:   {;main.c: 74:       Lcd_Clear();
   828     06A7  120A  118A  23C5  120A  118A  	fcall	_Lcd_Clear
   829     06AC                     l1332:
   830                           
   831                           ;main.c: 75:       Lcd_Set_Cursor(1,3);
   832     06AC  3003               	movlw	3
   833     06AD  00F4               	movwf	Lcd_Set_Cursor@b
   834     06AE  3001               	movlw	1
   835     06AF  120A  118A  2583  120A  118A  	fcall	_Lcd_Set_Cursor
   836     06B4                     l1334:
   837                           
   838                           ;main.c: 76:       Lcd_Write_String("S1:");
   839     06B4  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   840     06B5  00F5               	movwf	Lcd_Write_String@a
   841     06B6  3080               	movlw	128
   842     06B7  00F6               	movwf	Lcd_Write_String@a+1
   843     06B8  120A  118A  24BB  120A  118A  	fcall	_Lcd_Write_String
   844     06BD                     l1336:
   845                           
   846                           ;main.c: 77:       Lcd_Set_Cursor(1,7);
   847     06BD  3007               	movlw	7
   848     06BE  00F4               	movwf	Lcd_Set_Cursor@b
   849     06BF  3001               	movlw	1
   850     06C0  120A  118A  2583  120A  118A  	fcall	_Lcd_Set_Cursor
   851     06C5                     l1338:
   852                           
   853                           ;main.c: 78:       Lcd_Write_String("S2:");
   854     06C5  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   855     06C6  00F5               	movwf	Lcd_Write_String@a
   856     06C7  3080               	movlw	128
   857     06C8  00F6               	movwf	Lcd_Write_String@a+1
   858     06C9  120A  118A  24BB  120A  118A  	fcall	_Lcd_Write_String
   859     06CE                     l1340:
   860                           
   861                           ;main.c: 80:       readADC(0);
   862     06CE  3000               	movlw	0
   863     06CF  120A  118A  24FD  120A  118A  	fcall	_readADC
   864     06D4                     l1342:
   865                           
   866                           ;main.c: 82:       sprintf(ADC1, "%d", ADRESH);
   867     06D4  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   868     06D5  1283               	bcf	3,5	;RP0=0, select bank0
   869     06D6  1303               	bcf	3,6	;RP1=0, select bank0
   870     06D7  00A0               	movwf	sprintf@f
   871     06D8  081E               	movf	30,w	;volatile
   872     06D9  00AD               	movwf	??_main
   873     06DA  01AE               	clrf	??_main+1
   874     06DB  082D               	movf	??_main,w
   875     06DC  00A1               	movwf	?_sprintf+1
   876     06DD  082E               	movf	??_main+1,w
   877     06DE  00A2               	movwf	?_sprintf+2
   878     06DF  302F               	movlw	(low (main@ADC1| 0))& (0+255)
   879     06E0  120A  118A  2722  120A  118A  	fcall	_sprintf
   880     06E5                     l1344:
   881                           
   882                           ;main.c: 83:       Lcd_Set_Cursor(2,3);
   883     06E5  3003               	movlw	3
   884     06E6  00F4               	movwf	Lcd_Set_Cursor@b
   885     06E7  3002               	movlw	2
   886     06E8  120A  118A  2583  120A  118A  	fcall	_Lcd_Set_Cursor
   887     06ED                     l1346:
   888                           
   889                           ;main.c: 84:       Lcd_Write_String(ADC1);
   890     06ED  302F               	movlw	(low (main@ADC1| 0))& (0+255)
   891     06EE  00F5               	movwf	Lcd_Write_String@a
   892     06EF  3000               	movlw	0
   893     06F0  00F6               	movwf	Lcd_Write_String@a+1
   894     06F1  120A  118A  24BB  120A  118A  	fcall	_Lcd_Write_String
   895     06F6                     l1348:
   896                           
   897                           ;main.c: 86:       readADC(1);
   898     06F6  3001               	movlw	1
   899     06F7  120A  118A  24FD  120A  118A  	fcall	_readADC
   900     06FC                     l1350:
   901                           
   902                           ;main.c: 88:       sprintf(ADC2, "%d", ADRESH);
   903     06FC  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   904     06FD  1283               	bcf	3,5	;RP0=0, select bank0
   905     06FE  1303               	bcf	3,6	;RP1=0, select bank0
   906     06FF  00A0               	movwf	sprintf@f
   907     0700  081E               	movf	30,w	;volatile
   908     0701  00AD               	movwf	??_main
   909     0702  01AE               	clrf	??_main+1
   910     0703  082D               	movf	??_main,w
   911     0704  00A1               	movwf	?_sprintf+1
   912     0705  082E               	movf	??_main+1,w
   913     0706  00A2               	movwf	?_sprintf+2
   914     0707  3032               	movlw	(low (main@ADC2| 0))& (0+255)
   915     0708  120A  118A  2722  120A  118A  	fcall	_sprintf
   916     070D                     l1352:
   917                           
   918                           ;main.c: 89:       Lcd_Set_Cursor(2,7);
   919     070D  3007               	movlw	7
   920     070E  00F4               	movwf	Lcd_Set_Cursor@b
   921     070F  3002               	movlw	2
   922     0710  120A  118A  2583  120A  118A  	fcall	_Lcd_Set_Cursor
   923     0715                     l1354:
   924                           
   925                           ;main.c: 90:       Lcd_Write_String(ADC2);
   926     0715  3032               	movlw	(low (main@ADC2| 0))& (0+255)
   927     0716  00F5               	movwf	Lcd_Write_String@a
   928     0717  3000               	movlw	0
   929     0718  00F6               	movwf	Lcd_Write_String@a+1
   930     0719  120A  118A  24BB  120A  118A  	fcall	_Lcd_Write_String
   931     071E  2EA7               	goto	l1330
   932     071F  120A  118A  2800   	ljmp	start
   933     0722                     __end_of_main:
   934                           
   935                           	psect	text1
   936     0722                     __ptext1:	
   937 ;; *************** function _sprintf *****************
   938 ;; Defined at:
   939 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  sp              1    wreg     PTR unsigned char 
   942 ;;		 -> main@ADC2(3), main@ADC1(3), 
   943 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   944 ;;		 -> STR_4(3), STR_3(3), 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   947 ;;		 -> main@ADC2(3), main@ADC1(3), 
   948 ;;  tmpval          4    0        struct .
   949 ;;  val             2    9[BANK0 ] unsigned int 
   950 ;;  cp              2    0        PTR const unsigned char 
   951 ;;  len             2    0        unsigned int 
   952 ;;  c               1   12[BANK0 ] unsigned char 
   953 ;;  prec            1    8[BANK0 ] char 
   954 ;;  flag            1    7[BANK0 ] unsigned char 
   955 ;;  ap              1    6[BANK0 ] PTR void [1]
   956 ;;		 -> ?_sprintf(2), 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2    0[BANK0 ] int 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       3       0       0       0
   967 ;;      Locals:         0       7       0       0       0
   968 ;;      Temps:          0       3       0       0       0
   969 ;;      Totals:         0      13       0       0       0
   970 ;;Total ram usage:       13 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 1
   973 ;; This function calls:
   974 ;;		___lwdiv
   975 ;;		___lwmod
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981     0722                     _sprintf:	
   982                           ;psect for function _sprintf
   983                           
   984                           
   985                           ;incstack = 0
   986                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   987                           ;sprintf@sp stored from wreg
   988     0722  1283               	bcf	3,5	;RP0=0, select bank0
   989     0723  1303               	bcf	3,6	;RP1=0, select bank0
   990     0724  00AB               	movwf	sprintf@sp
   991     0725                     l1258:
   992                           
   993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   994     0725  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   995     0726  00A6               	movwf	sprintf@ap
   996                           
   997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   998     0727  2FE7               	goto	l1310
   999     0728                     l1260:
  1000                           
  1001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1002     0728  3025               	movlw	37
  1003     0729  062C               	xorwf	sprintf@c,w
  1004     072A  1903               	btfsc	3,2
  1005     072B  2F2D               	goto	u841
  1006     072C  2F2E               	goto	u840
  1007     072D                     u841:
  1008     072D  2F38               	goto	l1266
  1009     072E                     u840:
  1010     072E                     l1262:
  1011                           
  1012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1013     072E  082B               	movf	sprintf@sp,w
  1014     072F  0084               	movwf	4
  1015     0730  082C               	movf	sprintf@c,w
  1016     0731  1383               	bcf	3,7	;select IRP bank0
  1017     0732  0080               	movwf	0
  1018     0733                     l1264:
  1019     0733  3001               	movlw	1
  1020     0734  00A3               	movwf	??_sprintf
  1021     0735  0823               	movf	??_sprintf,w
  1022     0736  07AB               	addwf	sprintf@sp,f
  1023                           
  1024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1025     0737  2FE7               	goto	l1310
  1026     0738                     l1266:
  1027                           
  1028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1029     0738  01A7               	clrf	sprintf@flag
  1030     0739                     l1270:	
  1031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1032                           
  1033     0739  3001               	movlw	1
  1034     073A  07A0               	addwf	sprintf@f,f
  1035     073B  30FF               	movlw	-1
  1036     073C  0720               	addwf	sprintf@f,w
  1037     073D  0084               	movwf	4
  1038     073E  120A  118A  200D  120A  118A  	fcall	stringdir
  1039     0743  00AC               	movwf	sprintf@c
  1040     0744  00A3               	movwf	??_sprintf
  1041     0745  01A4               	clrf	??_sprintf+1
  1042                           
  1043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1044                           ; Switch size 1, requested type "simple"
  1045                           ; Number of cases is 1, Range of values is 0 to 0
  1046                           ; switch strategies available:
  1047                           ; Name         Instructions Cycles
  1048                           ; simple_byte            4     3 (average)
  1049                           ; direct_byte           11     8 (fixed)
  1050                           ; jumptable            260     6 (fixed)
  1051                           ;	Chosen strategy is simple_byte
  1052     0746  0824               	movf	??_sprintf+1,w
  1053     0747  3A00               	xorlw	0	; case 0
  1054     0748  1903               	skipnz
  1055     0749  2F4B               	goto	l1380
  1056     074A  2FE7               	goto	l1310
  1057     074B                     l1380:
  1058                           
  1059                           ; Switch size 1, requested type "simple"
  1060                           ; Number of cases is 3, Range of values is 0 to 105
  1061                           ; switch strategies available:
  1062                           ; Name         Instructions Cycles
  1063                           ; simple_byte           10     6 (average)
  1064                           ; jumptable            260     6 (fixed)
  1065                           ;	Chosen strategy is simple_byte
  1066     074B  0823               	movf	??_sprintf,w
  1067     074C  3A00               	xorlw	0	; case 0
  1068     074D  1903               	skipnz
  1069     074E  2FF7               	goto	l1312
  1070     074F  3A64               	xorlw	100	; case 100
  1071     0750  1903               	skipnz
  1072     0751  2F56               	goto	l1272
  1073     0752  3A0D               	xorlw	13	; case 105
  1074     0753  1903               	skipnz
  1075     0754  2F56               	goto	l1272
  1076     0755  2FE7               	goto	l1310
  1077     0756                     l1272:
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1080     0756  0826               	movf	sprintf@ap,w
  1081     0757  0084               	movwf	4
  1082     0758  1383               	bcf	3,7	;select IRP bank0
  1083     0759  0800               	movf	0,w
  1084     075A  00A9               	movwf	sprintf@val
  1085     075B  0A84               	incf	4,f
  1086     075C  0800               	movf	0,w
  1087     075D  00AA               	movwf	sprintf@val+1
  1088     075E                     l1274:
  1089     075E  3002               	movlw	2
  1090     075F  00A3               	movwf	??_sprintf
  1091     0760  0823               	movf	??_sprintf,w
  1092     0761  07A6               	addwf	sprintf@ap,f
  1093     0762                     l1276:
  1094                           
  1095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1096     0762  1FAA               	btfss	sprintf@val+1,7
  1097     0763  2F65               	goto	u851
  1098     0764  2F66               	goto	u850
  1099     0765                     u851:
  1100     0765  2F6F               	goto	l1282
  1101     0766                     u850:
  1102     0766                     l1278:
  1103                           
  1104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1105     0766  3003               	movlw	3
  1106     0767  00A3               	movwf	??_sprintf
  1107     0768  0823               	movf	??_sprintf,w
  1108     0769  04A7               	iorwf	sprintf@flag,f
  1109     076A                     l1280:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1112     076A  09A9               	comf	sprintf@val,f
  1113     076B  09AA               	comf	sprintf@val+1,f
  1114     076C  0AA9               	incf	sprintf@val,f
  1115     076D  1903               	skipnz
  1116     076E  0AAA               	incf	sprintf@val+1,f
  1117     076F                     l1282:
  1118                           
  1119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1120     076F  01AC               	clrf	sprintf@c
  1121     0770  0AAC               	incf	sprintf@c,f
  1122     0771                     l1288:
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1125     0771  082C               	movf	sprintf@c,w
  1126     0772  00A3               	movwf	??_sprintf
  1127     0773  0723               	addwf	??_sprintf,w
  1128     0774  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1129     0775  0084               	movwf	4
  1130     0776  120A  118A  200D  120A  118A  	fcall	stringdir
  1131     077B  00A4               	movwf	??_sprintf+1
  1132     077C  120A  118A  200D  120A  118A  	fcall	stringdir
  1133     0781  00A5               	movwf	??_sprintf+2
  1134     0782  0825               	movf	??_sprintf+2,w
  1135     0783  022A               	subwf	sprintf@val+1,w
  1136     0784  1D03               	skipz
  1137     0785  2F88               	goto	u865
  1138     0786  0824               	movf	??_sprintf+1,w
  1139     0787  0229               	subwf	sprintf@val,w
  1140     0788                     u865:
  1141     0788  1803               	skipnc
  1142     0789  2F8B               	goto	u861
  1143     078A  2F8C               	goto	u860
  1144     078B                     u861:
  1145     078B  2F8D               	goto	l1292
  1146     078C                     u860:
  1147     078C  2F97               	goto	l1294
  1148     078D                     l1292:
  1149     078D  3001               	movlw	1
  1150     078E  00A3               	movwf	??_sprintf
  1151     078F  0823               	movf	??_sprintf,w
  1152     0790  07AC               	addwf	sprintf@c,f
  1153     0791  3005               	movlw	5
  1154     0792  062C               	xorwf	sprintf@c,w
  1155     0793  1D03               	btfss	3,2
  1156     0794  2F96               	goto	u871
  1157     0795  2F97               	goto	u870
  1158     0796                     u871:
  1159     0796  2F71               	goto	l1288
  1160     0797                     u870:
  1161     0797                     l1294:
  1162                           
  1163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1164     0797  0827               	movf	sprintf@flag,w
  1165     0798  3903               	andlw	3
  1166     0799  1903               	btfsc	3,2
  1167     079A  2F9C               	goto	u881
  1168     079B  2F9D               	goto	u880
  1169     079C                     u881:
  1170     079C  2FA6               	goto	l1300
  1171     079D                     u880:
  1172     079D                     l1296:
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1175     079D  082B               	movf	sprintf@sp,w
  1176     079E  0084               	movwf	4
  1177     079F  302D               	movlw	45
  1178     07A0  1383               	bcf	3,7	;select IRP bank0
  1179     07A1  0080               	movwf	0
  1180     07A2                     l1298:
  1181     07A2  3001               	movlw	1
  1182     07A3  00A3               	movwf	??_sprintf
  1183     07A4  0823               	movf	??_sprintf,w
  1184     07A5  07AB               	addwf	sprintf@sp,f
  1185     07A6                     l1300:
  1186                           
  1187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1188     07A6  082C               	movf	sprintf@c,w
  1189     07A7  00A8               	movwf	sprintf@prec
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1192     07A8  2FDE               	goto	l1308
  1193     07A9                     l1302:
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1196     07A9  300A               	movlw	10
  1197     07AA  00F8               	movwf	___lwmod@divisor
  1198     07AB  3000               	movlw	0
  1199     07AC  00F9               	movwf	___lwmod@divisor+1
  1200     07AD  0828               	movf	sprintf@prec,w
  1201     07AE  00A3               	movwf	??_sprintf
  1202     07AF  0723               	addwf	??_sprintf,w
  1203     07B0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1204     07B1  0084               	movwf	4
  1205     07B2  120A  118A  200D  120A  118A  	fcall	stringdir
  1206     07B7  00F0               	movwf	___lwdiv@divisor
  1207     07B8  120A  118A  200D  120A  118A  	fcall	stringdir
  1208     07BD  00F1               	movwf	___lwdiv@divisor+1
  1209     07BE  082A               	movf	sprintf@val+1,w
  1210     07BF  00F3               	movwf	___lwdiv@dividend+1
  1211     07C0  0829               	movf	sprintf@val,w
  1212     07C1  00F2               	movwf	___lwdiv@dividend
  1213     07C2  120A  118A  253F  120A  118A  	fcall	___lwdiv
  1214     07C7  0871               	movf	?___lwdiv+1,w
  1215     07C8  00FB               	movwf	___lwmod@dividend+1
  1216     07C9  0870               	movf	?___lwdiv,w
  1217     07CA  00FA               	movwf	___lwmod@dividend
  1218     07CB  120A  118A  2481  120A  118A  	fcall	___lwmod
  1219     07D0  0878               	movf	?___lwmod,w
  1220     07D1  3E30               	addlw	48
  1221     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1222     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1223     07D4  00AC               	movwf	sprintf@c
  1224     07D5                     l1304:
  1225                           
  1226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1227     07D5  082B               	movf	sprintf@sp,w
  1228     07D6  0084               	movwf	4
  1229     07D7  082C               	movf	sprintf@c,w
  1230     07D8  1383               	bcf	3,7	;select IRP bank0
  1231     07D9  0080               	movwf	0
  1232     07DA                     l1306:
  1233     07DA  3001               	movlw	1
  1234     07DB  00A3               	movwf	??_sprintf
  1235     07DC  0823               	movf	??_sprintf,w
  1236     07DD  07AB               	addwf	sprintf@sp,f
  1237     07DE                     l1308:
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1240     07DE  30FF               	movlw	255
  1241     07DF  00A3               	movwf	??_sprintf
  1242     07E0  0823               	movf	??_sprintf,w
  1243     07E1  07A8               	addwf	sprintf@prec,f
  1244     07E2  0A28               	incf	sprintf@prec,w
  1245     07E3  1D03               	btfss	3,2
  1246     07E4  2FE6               	goto	u891
  1247     07E5  2FE7               	goto	u890
  1248     07E6                     u891:
  1249     07E6  2FA9               	goto	l1302
  1250     07E7                     u890:
  1251     07E7                     l1310:
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1254     07E7  3001               	movlw	1
  1255     07E8  07A0               	addwf	sprintf@f,f
  1256     07E9  30FF               	movlw	-1
  1257     07EA  0720               	addwf	sprintf@f,w
  1258     07EB  0084               	movwf	4
  1259     07EC  120A  118A  200D  120A  118A  	fcall	stringdir
  1260     07F1  00AC               	movwf	sprintf@c
  1261     07F2  082C               	movf	sprintf@c,w
  1262     07F3  1D03               	btfss	3,2
  1263     07F4  2FF6               	goto	u901
  1264     07F5  2FF7               	goto	u900
  1265     07F6                     u901:
  1266     07F6  2F28               	goto	l1260
  1267     07F7                     u900:
  1268     07F7                     l1312:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1271     07F7  082B               	movf	sprintf@sp,w
  1272     07F8  0084               	movwf	4
  1273     07F9  1383               	bcf	3,7	;select IRP bank0
  1274     07FA  0180               	clrf	0
  1275     07FB                     l246:
  1276     07FB  0008               	return
  1277     07FC                     __end_of_sprintf:
  1278                           
  1279                           	psect	text2
  1280     0481                     __ptext2:	
  1281 ;; *************** function ___lwmod *****************
  1282 ;; Defined at:
  1283 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  divisor         2    8[COMMON] unsigned int 
  1286 ;;  dividend        2   10[COMMON] unsigned int 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  counter         1   13[COMMON] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  2    8[COMMON] unsigned int 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         4       0       0       0       0
  1299 ;;      Locals:         1       0       0       0       0
  1300 ;;      Temps:          1       0       0       0       0
  1301 ;;      Totals:         6       0       0       0       0
  1302 ;;Total ram usage:        6 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_sprintf
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311     0481                     ___lwmod:	
  1312                           ;psect for function ___lwmod
  1313                           
  1314     0481                     l1134:	
  1315                           ;incstack = 0
  1316                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1317                           
  1318     0481  0878               	movf	___lwmod@divisor,w
  1319     0482  0479               	iorwf	___lwmod@divisor+1,w
  1320     0483  1903               	btfsc	3,2
  1321     0484  2C86               	goto	u581
  1322     0485  2C87               	goto	u580
  1323     0486                     u581:
  1324     0486  2CB6               	goto	l1152
  1325     0487                     u580:
  1326     0487                     l1136:
  1327     0487  01FD               	clrf	___lwmod@counter
  1328     0488  0AFD               	incf	___lwmod@counter,f
  1329     0489  2C95               	goto	l1142
  1330     048A                     l1138:
  1331     048A  3001               	movlw	1
  1332     048B                     u595:
  1333     048B  1003               	clrc
  1334     048C  0DF8               	rlf	___lwmod@divisor,f
  1335     048D  0DF9               	rlf	___lwmod@divisor+1,f
  1336     048E  3EFF               	addlw	-1
  1337     048F  1D03               	skipz
  1338     0490  2C8B               	goto	u595
  1339     0491                     l1140:
  1340     0491  3001               	movlw	1
  1341     0492  00FC               	movwf	??___lwmod
  1342     0493  087C               	movf	??___lwmod,w
  1343     0494  07FD               	addwf	___lwmod@counter,f
  1344     0495                     l1142:
  1345     0495  1FF9               	btfss	___lwmod@divisor+1,7
  1346     0496  2C98               	goto	u601
  1347     0497  2C99               	goto	u600
  1348     0498                     u601:
  1349     0498  2C8A               	goto	l1138
  1350     0499                     u600:
  1351     0499                     l1144:
  1352     0499  0879               	movf	___lwmod@divisor+1,w
  1353     049A  027B               	subwf	___lwmod@dividend+1,w
  1354     049B  1D03               	skipz
  1355     049C  2C9F               	goto	u615
  1356     049D  0878               	movf	___lwmod@divisor,w
  1357     049E  027A               	subwf	___lwmod@dividend,w
  1358     049F                     u615:
  1359     049F  1C03               	skipc
  1360     04A0  2CA2               	goto	u611
  1361     04A1  2CA3               	goto	u610
  1362     04A2                     u611:
  1363     04A2  2CA9               	goto	l1148
  1364     04A3                     u610:
  1365     04A3                     l1146:
  1366     04A3  0878               	movf	___lwmod@divisor,w
  1367     04A4  02FA               	subwf	___lwmod@dividend,f
  1368     04A5  0879               	movf	___lwmod@divisor+1,w
  1369     04A6  1C03               	skipc
  1370     04A7  03FB               	decf	___lwmod@dividend+1,f
  1371     04A8  02FB               	subwf	___lwmod@dividend+1,f
  1372     04A9                     l1148:
  1373     04A9  3001               	movlw	1
  1374     04AA                     u625:
  1375     04AA  1003               	clrc
  1376     04AB  0CF9               	rrf	___lwmod@divisor+1,f
  1377     04AC  0CF8               	rrf	___lwmod@divisor,f
  1378     04AD  3EFF               	addlw	-1
  1379     04AE  1D03               	skipz
  1380     04AF  2CAA               	goto	u625
  1381     04B0                     l1150:
  1382     04B0  3001               	movlw	1
  1383     04B1  02FD               	subwf	___lwmod@counter,f
  1384     04B2  1D03               	btfss	3,2
  1385     04B3  2CB5               	goto	u631
  1386     04B4  2CB6               	goto	u630
  1387     04B5                     u631:
  1388     04B5  2C99               	goto	l1144
  1389     04B6                     u630:
  1390     04B6                     l1152:
  1391     04B6  087B               	movf	___lwmod@dividend+1,w
  1392     04B7  00F9               	movwf	?___lwmod+1
  1393     04B8  087A               	movf	___lwmod@dividend,w
  1394     04B9  00F8               	movwf	?___lwmod
  1395     04BA                     l532:
  1396     04BA  0008               	return
  1397     04BB                     __end_of___lwmod:
  1398                           
  1399                           	psect	text3
  1400     053F                     __ptext3:	
  1401 ;; *************** function ___lwdiv *****************
  1402 ;; Defined at:
  1403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  divisor         2    0[COMMON] unsigned int 
  1406 ;;  dividend        2    2[COMMON] unsigned int 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  quotient        2    5[COMMON] unsigned int 
  1409 ;;  counter         1    7[COMMON] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  2    0[COMMON] unsigned int 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         4       0       0       0       0
  1420 ;;      Locals:         3       0       0       0       0
  1421 ;;      Temps:          1       0       0       0       0
  1422 ;;      Totals:         8       0       0       0       0
  1423 ;;Total ram usage:        8 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_sprintf
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432     053F                     ___lwdiv:	
  1433                           ;psect for function ___lwdiv
  1434                           
  1435     053F                     l1108:	
  1436                           ;incstack = 0
  1437                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1438                           
  1439     053F  01F5               	clrf	___lwdiv@quotient
  1440     0540  01F6               	clrf	___lwdiv@quotient+1
  1441     0541                     l1110:
  1442     0541  0870               	movf	___lwdiv@divisor,w
  1443     0542  0471               	iorwf	___lwdiv@divisor+1,w
  1444     0543  1903               	btfsc	3,2
  1445     0544  2D46               	goto	u511
  1446     0545  2D47               	goto	u510
  1447     0546                     u511:
  1448     0546  2D7E               	goto	l1130
  1449     0547                     u510:
  1450     0547                     l1112:
  1451     0547  01F7               	clrf	___lwdiv@counter
  1452     0548  0AF7               	incf	___lwdiv@counter,f
  1453     0549  2D55               	goto	l1118
  1454     054A                     l1114:
  1455     054A  3001               	movlw	1
  1456     054B                     u525:
  1457     054B  1003               	clrc
  1458     054C  0DF0               	rlf	___lwdiv@divisor,f
  1459     054D  0DF1               	rlf	___lwdiv@divisor+1,f
  1460     054E  3EFF               	addlw	-1
  1461     054F  1D03               	skipz
  1462     0550  2D4B               	goto	u525
  1463     0551                     l1116:
  1464     0551  3001               	movlw	1
  1465     0552  00F4               	movwf	??___lwdiv
  1466     0553  0874               	movf	??___lwdiv,w
  1467     0554  07F7               	addwf	___lwdiv@counter,f
  1468     0555                     l1118:
  1469     0555  1FF1               	btfss	___lwdiv@divisor+1,7
  1470     0556  2D58               	goto	u531
  1471     0557  2D59               	goto	u530
  1472     0558                     u531:
  1473     0558  2D4A               	goto	l1114
  1474     0559                     u530:
  1475     0559                     l1120:
  1476     0559  3001               	movlw	1
  1477     055A                     u545:
  1478     055A  1003               	clrc
  1479     055B  0DF5               	rlf	___lwdiv@quotient,f
  1480     055C  0DF6               	rlf	___lwdiv@quotient+1,f
  1481     055D  3EFF               	addlw	-1
  1482     055E  1D03               	skipz
  1483     055F  2D5A               	goto	u545
  1484     0560  0871               	movf	___lwdiv@divisor+1,w
  1485     0561  0273               	subwf	___lwdiv@dividend+1,w
  1486     0562  1D03               	skipz
  1487     0563  2D66               	goto	u555
  1488     0564  0870               	movf	___lwdiv@divisor,w
  1489     0565  0272               	subwf	___lwdiv@dividend,w
  1490     0566                     u555:
  1491     0566  1C03               	skipc
  1492     0567  2D69               	goto	u551
  1493     0568  2D6A               	goto	u550
  1494     0569                     u551:
  1495     0569  2D71               	goto	l1126
  1496     056A                     u550:
  1497     056A                     l1122:
  1498     056A  0870               	movf	___lwdiv@divisor,w
  1499     056B  02F2               	subwf	___lwdiv@dividend,f
  1500     056C  0871               	movf	___lwdiv@divisor+1,w
  1501     056D  1C03               	skipc
  1502     056E  03F3               	decf	___lwdiv@dividend+1,f
  1503     056F  02F3               	subwf	___lwdiv@dividend+1,f
  1504     0570                     l1124:
  1505     0570  1475               	bsf	___lwdiv@quotient,0
  1506     0571                     l1126:
  1507     0571  3001               	movlw	1
  1508     0572                     u565:
  1509     0572  1003               	clrc
  1510     0573  0CF1               	rrf	___lwdiv@divisor+1,f
  1511     0574  0CF0               	rrf	___lwdiv@divisor,f
  1512     0575  3EFF               	addlw	-1
  1513     0576  1D03               	skipz
  1514     0577  2D72               	goto	u565
  1515     0578                     l1128:
  1516     0578  3001               	movlw	1
  1517     0579  02F7               	subwf	___lwdiv@counter,f
  1518     057A  1D03               	btfss	3,2
  1519     057B  2D7D               	goto	u571
  1520     057C  2D7E               	goto	u570
  1521     057D                     u571:
  1522     057D  2D59               	goto	l1120
  1523     057E                     u570:
  1524     057E                     l1130:
  1525     057E  0876               	movf	___lwdiv@quotient+1,w
  1526     057F  00F1               	movwf	?___lwdiv+1
  1527     0580  0875               	movf	___lwdiv@quotient,w
  1528     0581  00F0               	movwf	?___lwdiv
  1529     0582                     l522:
  1530     0582  0008               	return
  1531     0583                     __end_of___lwdiv:
  1532                           
  1533                           	psect	text4
  1534     0626                     __ptext4:	
  1535 ;; *************** function _setupINTOSC *****************
  1536 ;; Defined at:
  1537 ;;		line 11 in file "configINTOSC.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  OsciladorInt    2    0[COMMON] int 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         2       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0
  1554 ;;      Totals:         2       0       0       0       0
  1555 ;;Total ram usage:        2 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564     0626                     _setupINTOSC:	
  1565                           ;psect for function _setupINTOSC
  1566                           
  1567     0626                     l1158:	
  1568                           ;incstack = 0
  1569                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1570                           
  1571                           
  1572                           ;configINTOSC.c: 13:     if (OsciladorInterno == 125)
  1573     0626  307D               	movlw	125
  1574     0627  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1575     0628  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1576     0629  1D03               	btfss	3,2
  1577     062A  2E2C               	goto	u641
  1578     062B  2E2D               	goto	u640
  1579     062C                     u641:
  1580     062C  2E34               	goto	l129
  1581     062D                     u640:
  1582     062D                     l1160:
  1583                           
  1584                           ;configINTOSC.c: 14:     {;configINTOSC.c: 15:     OSCCONbits.IRCF = 0b0001 ;
  1585     062D  1683               	bsf	3,5	;RP0=1, select bank1
  1586     062E  1303               	bcf	3,6	;RP1=0, select bank1
  1587     062F  080F               	movf	15,w	;volatile
  1588     0630  398F               	andlw	-113
  1589     0631  3810               	iorlw	16
  1590     0632  008F               	movwf	15	;volatile
  1591     0633                     l1162:
  1592                           
  1593                           ;configINTOSC.c: 16:     OSCCONbits.SCS = 1;
  1594     0633  140F               	bsf	15,0	;volatile
  1595     0634                     l129:	
  1596                           ;configINTOSC.c: 17:     }
  1597                           
  1598                           
  1599                           ;configINTOSC.c: 19:     if (OsciladorInterno == 250)
  1600     0634  30FA               	movlw	250
  1601     0635  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1602     0636  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1603     0637  1D03               	btfss	3,2
  1604     0638  2E3A               	goto	u651
  1605     0639  2E3B               	goto	u650
  1606     063A                     u651:
  1607     063A  2E42               	goto	l130
  1608     063B                     u650:
  1609     063B                     l1164:
  1610                           
  1611                           ;configINTOSC.c: 20:     {;configINTOSC.c: 21:     OSCCONbits.IRCF = 0b0010 ;
  1612     063B  1683               	bsf	3,5	;RP0=1, select bank1
  1613     063C  1303               	bcf	3,6	;RP1=0, select bank1
  1614     063D  080F               	movf	15,w	;volatile
  1615     063E  398F               	andlw	-113
  1616     063F  3820               	iorlw	32
  1617     0640  008F               	movwf	15	;volatile
  1618     0641                     l1166:
  1619                           
  1620                           ;configINTOSC.c: 22:     OSCCONbits.SCS = 1;
  1621     0641  140F               	bsf	15,0	;volatile
  1622     0642                     l130:	
  1623                           ;configINTOSC.c: 23:     }
  1624                           
  1625                           
  1626                           ;configINTOSC.c: 25:     if (OsciladorInterno == 500)
  1627     0642  30F4               	movlw	244
  1628     0643  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1629     0644  1D03               	skipz
  1630     0645  2E4A               	goto	u661
  1631     0646  0371               	decf	setupINTOSC@OsciladorInterno+1,w
  1632     0647  1D03               	btfss	3,2
  1633     0648  2E4A               	goto	u661
  1634     0649  2E4B               	goto	u660
  1635     064A                     u661:
  1636     064A  2E52               	goto	l131
  1637     064B                     u660:
  1638     064B                     l1168:
  1639                           
  1640                           ;configINTOSC.c: 26:     {;configINTOSC.c: 27:     OSCCONbits.IRCF = 0b0011 ;
  1641     064B  1683               	bsf	3,5	;RP0=1, select bank1
  1642     064C  1303               	bcf	3,6	;RP1=0, select bank1
  1643     064D  080F               	movf	15,w	;volatile
  1644     064E  398F               	andlw	-113
  1645     064F  3830               	iorlw	48
  1646     0650  008F               	movwf	15	;volatile
  1647     0651                     l1170:
  1648                           
  1649                           ;configINTOSC.c: 28:     OSCCONbits.SCS = 1;
  1650     0651  140F               	bsf	15,0	;volatile
  1651     0652                     l131:	
  1652                           ;configINTOSC.c: 29:     }
  1653                           
  1654                           
  1655                           ;configINTOSC.c: 31:     if (OsciladorInterno == 1)
  1656     0652  0370               	decf	setupINTOSC@OsciladorInterno,w
  1657     0653  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1658     0654  1D03               	btfss	3,2
  1659     0655  2E57               	goto	u671
  1660     0656  2E58               	goto	u670
  1661     0657                     u671:
  1662     0657  2E5F               	goto	l132
  1663     0658                     u670:
  1664     0658                     l1172:
  1665                           
  1666                           ;configINTOSC.c: 32:     {;configINTOSC.c: 33:     OSCCONbits.IRCF = 0b0100 ;
  1667     0658  1683               	bsf	3,5	;RP0=1, select bank1
  1668     0659  1303               	bcf	3,6	;RP1=0, select bank1
  1669     065A  080F               	movf	15,w	;volatile
  1670     065B  398F               	andlw	-113
  1671     065C  3840               	iorlw	64
  1672     065D  008F               	movwf	15	;volatile
  1673     065E                     l1174:
  1674                           
  1675                           ;configINTOSC.c: 34:     OSCCONbits.SCS = 1;
  1676     065E  140F               	bsf	15,0	;volatile
  1677     065F                     l132:	
  1678                           ;configINTOSC.c: 35:     }
  1679                           
  1680                           
  1681                           ;configINTOSC.c: 37:     if (OsciladorInterno == 2)
  1682     065F  3002               	movlw	2
  1683     0660  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1684     0661  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1685     0662  1D03               	btfss	3,2
  1686     0663  2E65               	goto	u681
  1687     0664  2E66               	goto	u680
  1688     0665                     u681:
  1689     0665  2E6D               	goto	l133
  1690     0666                     u680:
  1691     0666                     l1176:
  1692                           
  1693                           ;configINTOSC.c: 38:     {;configINTOSC.c: 39:     OSCCONbits.IRCF = 0b0101 ;
  1694     0666  1683               	bsf	3,5	;RP0=1, select bank1
  1695     0667  1303               	bcf	3,6	;RP1=0, select bank1
  1696     0668  080F               	movf	15,w	;volatile
  1697     0669  398F               	andlw	-113
  1698     066A  3850               	iorlw	80
  1699     066B  008F               	movwf	15	;volatile
  1700     066C                     l1178:
  1701                           
  1702                           ;configINTOSC.c: 40:     OSCCONbits.SCS = 1;
  1703     066C  140F               	bsf	15,0	;volatile
  1704     066D                     l133:	
  1705                           ;configINTOSC.c: 41:     }
  1706                           
  1707                           
  1708                           ;configINTOSC.c: 43:     if (OsciladorInterno == 4)
  1709     066D  3004               	movlw	4
  1710     066E  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1711     066F  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1712     0670  1D03               	btfss	3,2
  1713     0671  2E73               	goto	u691
  1714     0672  2E74               	goto	u690
  1715     0673                     u691:
  1716     0673  2E7B               	goto	l134
  1717     0674                     u690:
  1718     0674                     l1180:
  1719                           
  1720                           ;configINTOSC.c: 44:     {;configINTOSC.c: 45:     OSCCONbits.IRCF = 0b0110 ;
  1721     0674  1683               	bsf	3,5	;RP0=1, select bank1
  1722     0675  1303               	bcf	3,6	;RP1=0, select bank1
  1723     0676  080F               	movf	15,w	;volatile
  1724     0677  398F               	andlw	-113
  1725     0678  3860               	iorlw	96
  1726     0679  008F               	movwf	15	;volatile
  1727     067A                     l1182:
  1728                           
  1729                           ;configINTOSC.c: 46:     OSCCONbits.SCS = 1;
  1730     067A  140F               	bsf	15,0	;volatile
  1731     067B                     l134:	
  1732                           ;configINTOSC.c: 47:     }
  1733                           
  1734                           
  1735                           ;configINTOSC.c: 49:     if (OsciladorInterno == 8)
  1736     067B  3008               	movlw	8
  1737     067C  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  1738     067D  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  1739     067E  1D03               	btfss	3,2
  1740     067F  2E81               	goto	u701
  1741     0680  2E82               	goto	u700
  1742     0681                     u701:
  1743     0681  2E87               	goto	l136
  1744     0682                     u700:
  1745     0682                     l1184:
  1746                           
  1747                           ;configINTOSC.c: 50:     {;configINTOSC.c: 51:     OSCCONbits.IRCF = 0b0111 ;
  1748     0682  3070               	movlw	112
  1749     0683  1683               	bsf	3,5	;RP0=1, select bank1
  1750     0684  1303               	bcf	3,6	;RP1=0, select bank1
  1751     0685  048F               	iorwf	15,f	;volatile
  1752     0686                     l1186:
  1753                           
  1754                           ;configINTOSC.c: 52:     OSCCONbits.SCS = 1;
  1755     0686  140F               	bsf	15,0	;volatile
  1756     0687                     l136:
  1757     0687  0008               	return
  1758     0688                     __end_of_setupINTOSC:
  1759                           
  1760                           	psect	text5
  1761     041F                     __ptext5:	
  1762 ;; *************** function _setupADC *****************
  1763 ;; Defined at:
  1764 ;;		line 13 in file "configADC.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  canal           1    wreg     unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  canal           1    1[COMMON] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         1       0       0       0       0
  1780 ;;      Temps:          1       0       0       0       0
  1781 ;;      Totals:         2       0       0       0       0
  1782 ;;Total ram usage:        2 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791     041F                     _setupADC:	
  1792                           ;psect for function _setupADC
  1793                           
  1794                           
  1795                           ;incstack = 0
  1796                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  1797                           ;setupADC@canal stored from wreg
  1798     041F  00F1               	movwf	setupADC@canal
  1799     0420                     l1188:
  1800                           
  1801                           ;configADC.c: 17:     if(canal == 0)
  1802     0420  0871               	movf	setupADC@canal,w
  1803     0421  1D03               	btfss	3,2
  1804     0422  2C24               	goto	u711
  1805     0423  2C25               	goto	u710
  1806     0424                     u711:
  1807     0424  2C2B               	goto	l1192
  1808     0425                     u710:
  1809     0425                     l1190:
  1810                           
  1811                           ;configADC.c: 18:     {;configADC.c: 19:     TRISAbits.TRISA0 = 1;
  1812     0425  1683               	bsf	3,5	;RP0=1, select bank1
  1813     0426  1303               	bcf	3,6	;RP1=0, select bank1
  1814     0427  1405               	bsf	5,0	;volatile
  1815                           
  1816                           ;configADC.c: 20:     ANSELbits.ANS0 = 1;
  1817     0428  1683               	bsf	3,5	;RP0=1, select bank3
  1818     0429  1703               	bsf	3,6	;RP1=1, select bank3
  1819     042A  1408               	bsf	8,0	;volatile
  1820     042B                     l1192:
  1821                           
  1822                           ;configADC.c: 23:     if(canal == 1)
  1823     042B  0371               	decf	setupADC@canal,w
  1824     042C  1D03               	btfss	3,2
  1825     042D  2C2F               	goto	u721
  1826     042E  2C30               	goto	u720
  1827     042F                     u721:
  1828     042F  2C36               	goto	l112
  1829     0430                     u720:
  1830     0430                     l1194:
  1831                           
  1832                           ;configADC.c: 24:     {;configADC.c: 25:     TRISAbits.TRISA1 = 1;
  1833     0430  1683               	bsf	3,5	;RP0=1, select bank1
  1834     0431  1303               	bcf	3,6	;RP1=0, select bank1
  1835     0432  1485               	bsf	5,1	;volatile
  1836                           
  1837                           ;configADC.c: 26:     ANSELbits.ANS1 = 1;
  1838     0433  1683               	bsf	3,5	;RP0=1, select bank3
  1839     0434  1703               	bsf	3,6	;RP1=1, select bank3
  1840     0435  1488               	bsf	8,1	;volatile
  1841     0436                     l112:	
  1842                           ;configADC.c: 27:     }
  1843                           
  1844                           
  1845                           ;configADC.c: 31:     ADCON0bits.ADCS0 = 1;
  1846     0436  1283               	bcf	3,5	;RP0=0, select bank0
  1847     0437  1303               	bcf	3,6	;RP1=0, select bank0
  1848     0438  171F               	bsf	31,6	;volatile
  1849                           
  1850                           ;configADC.c: 32:     ADCON0bits.ADCS1 = 0;
  1851     0439  139F               	bcf	31,7	;volatile
  1852                           
  1853                           ;configADC.c: 34:     ADCON1bits.VCFG0 = 0;
  1854     043A  1683               	bsf	3,5	;RP0=1, select bank1
  1855     043B  1303               	bcf	3,6	;RP1=0, select bank1
  1856     043C  121F               	bcf	31,4	;volatile
  1857                           
  1858                           ;configADC.c: 35:     ADCON1bits.VCFG1 = 0;
  1859     043D  129F               	bcf	31,5	;volatile
  1860                           
  1861                           ;configADC.c: 37:     ADCON1bits.ADFM = 0;
  1862     043E  139F               	bcf	31,7	;volatile
  1863                           
  1864                           ;configADC.c: 39:     ADCON0bits.CHS0 = 0;
  1865     043F  1283               	bcf	3,5	;RP0=0, select bank0
  1866     0440  1303               	bcf	3,6	;RP1=0, select bank0
  1867     0441  111F               	bcf	31,2	;volatile
  1868                           
  1869                           ;configADC.c: 40:     ADCON0bits.CHS1 = 0;
  1870     0442  119F               	bcf	31,3	;volatile
  1871                           
  1872                           ;configADC.c: 41:     ADCON0bits.CHS2 = 0;
  1873     0443  121F               	bcf	31,4	;volatile
  1874                           
  1875                           ;configADC.c: 42:     ADCON0bits.CHS3 = 0;
  1876     0444  129F               	bcf	31,5	;volatile
  1877                           
  1878                           ;configADC.c: 44:     ADCON0bits.ADON = 1;
  1879     0445  141F               	bsf	31,0	;volatile
  1880     0446                     l1196:
  1881                           
  1882                           ;configADC.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1883     0446  3042               	movlw	66
  1884     0447  00F0               	movwf	??_setupADC
  1885     0448                     u917:
  1886     0448  0BF0               	decfsz	??_setupADC,f
  1887     0449  2C48               	goto	u917
  1888     044A  0000               	nop
  1889     044B                     l113:
  1890     044B  0008               	return
  1891     044C                     __end_of_setupADC:
  1892                           
  1893                           	psect	text6
  1894     03D2                     __ptext6:	
  1895 ;; *************** function _setup *****************
  1896 ;; Defined at:
  1897 ;;		line 98 in file "main.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		status,2
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0
  1914 ;;      Totals:         0       0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924     03D2                     _setup:	
  1925                           ;psect for function _setup
  1926                           
  1927     03D2                     l1156:	
  1928                           ;incstack = 0
  1929                           ; Regs used in _setup: [status,2]
  1930                           
  1931                           
  1932                           ;main.c: 100:     ANSEL = 0;
  1933     03D2  1683               	bsf	3,5	;RP0=1, select bank3
  1934     03D3  1703               	bsf	3,6	;RP1=1, select bank3
  1935     03D4  0188               	clrf	8	;volatile
  1936                           
  1937                           ;main.c: 101:     ANSELH = 0;
  1938     03D5  0189               	clrf	9	;volatile
  1939                           
  1940                           ;main.c: 103:     TRISB = 0;
  1941     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1942     03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1943     03D8  0186               	clrf	6	;volatile
  1944                           
  1945                           ;main.c: 104:     TRISC = 0;
  1946     03D9  0187               	clrf	7	;volatile
  1947                           
  1948                           ;main.c: 105:     TRISD = 0;
  1949     03DA  0188               	clrf	8	;volatile
  1950                           
  1951                           ;main.c: 106:     TRISE = 0;
  1952     03DB  0189               	clrf	9	;volatile
  1953                           
  1954                           ;main.c: 108:     PORTB = 0;
  1955     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1956     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1957     03DE  0186               	clrf	6	;volatile
  1958                           
  1959                           ;main.c: 109:     PORTC = 0;
  1960     03DF  0187               	clrf	7	;volatile
  1961                           
  1962                           ;main.c: 110:     PORTD = 0;
  1963     03E0  0188               	clrf	8	;volatile
  1964                           
  1965                           ;main.c: 111:     PORTE = 0;
  1966     03E1  0189               	clrf	9	;volatile
  1967     03E2                     l51:
  1968     03E2  0008               	return
  1969     03E3                     __end_of_setup:
  1970                           
  1971                           	psect	text7
  1972     04FD                     __ptext7:	
  1973 ;; *************** function _readADC *****************
  1974 ;; Defined at:
  1975 ;;		line 49 in file "configADC.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  canal           1    wreg     unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  canal           1    2[COMMON] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       0       0       0       0
  1990 ;;      Locals:         1       0       0       0       0
  1991 ;;      Temps:          2       0       0       0       0
  1992 ;;      Totals:         3       0       0       0       0
  1993 ;;Total ram usage:        3 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002     04FD                     _readADC:	
  2003                           ;psect for function _readADC
  2004                           
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _readADC: [wreg+status,2+status,0]
  2008                           ;readADC@canal stored from wreg
  2009     04FD  00F2               	movwf	readADC@canal
  2010     04FE                     l1238:
  2011                           
  2012                           ;configADC.c: 51:     if(canal == 0)
  2013     04FE  0872               	movf	readADC@canal,w
  2014     04FF  1D03               	btfss	3,2
  2015     0500  2D02               	goto	u801
  2016     0501  2D03               	goto	u800
  2017     0502                     u801:
  2018     0502  2D1D               	goto	l1248
  2019     0503                     u800:
  2020     0503                     l1240:
  2021                           
  2022                           ;configADC.c: 52:     {;configADC.c: 53:     ADCON0bits.CHS = 0b0000;
  2023     0503  30C3               	movlw	-61
  2024     0504  1283               	bcf	3,5	;RP0=0, select bank0
  2025     0505  1303               	bcf	3,6	;RP1=0, select bank0
  2026     0506  059F               	andwf	31,f	;volatile
  2027     0507                     l1242:
  2028                           
  2029                           ;configADC.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2030     0507  3042               	movlw	66
  2031     0508  00F0               	movwf	??_readADC
  2032     0509                     u927:
  2033     0509  0BF0               	decfsz	??_readADC,f
  2034     050A  2D09               	goto	u927
  2035     050B  0000               	nop
  2036     050C                     l1244:
  2037                           
  2038                           ;configADC.c: 57:     ADCON0bits.GO = 1;
  2039     050C  1283               	bcf	3,5	;RP0=0, select bank0
  2040     050D  1303               	bcf	3,6	;RP1=0, select bank0
  2041     050E  149F               	bsf	31,1	;volatile
  2042     050F                     l117:	
  2043                           ;configADC.c: 58:     while (ADCON0bits.GO == 1){};
  2044                           
  2045     050F  189F               	btfsc	31,1	;volatile
  2046     0510  2D12               	goto	u811
  2047     0511  2D13               	goto	u810
  2048     0512                     u811:
  2049     0512  2D0F               	goto	l117
  2050     0513                     u810:
  2051     0513                     l119:
  2052                           
  2053                           ;configADC.c: 59:     ADIF = 0;
  2054     0513  130C               	bcf	12,6	;volatile
  2055     0514                     l1246:
  2056                           
  2057                           ;configADC.c: 60:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2058     0514  301A               	movlw	26
  2059     0515  00F1               	movwf	??_readADC+1
  2060     0516  30F8               	movlw	248
  2061     0517  00F0               	movwf	??_readADC
  2062     0518                     u937:
  2063     0518  0BF0               	decfsz	??_readADC,f
  2064     0519  2D18               	goto	u937
  2065     051A  0BF1               	decfsz	??_readADC+1,f
  2066     051B  2D18               	goto	u937
  2067     051C  0000               	nop
  2068     051D                     l1248:
  2069                           
  2070                           ;configADC.c: 63:     if(canal == 1)
  2071     051D  0372               	decf	readADC@canal,w
  2072     051E  1D03               	btfss	3,2
  2073     051F  2D21               	goto	u821
  2074     0520  2D22               	goto	u820
  2075     0521                     u821:
  2076     0521  2D3E               	goto	l124
  2077     0522                     u820:
  2078     0522                     l1250:
  2079                           
  2080                           ;configADC.c: 64:     {;configADC.c: 65:     ADCON0bits.CHS = 0b0001;
  2081     0522  1283               	bcf	3,5	;RP0=0, select bank0
  2082     0523  1303               	bcf	3,6	;RP1=0, select bank0
  2083     0524  081F               	movf	31,w	;volatile
  2084     0525  39C3               	andlw	-61
  2085     0526  3804               	iorlw	4
  2086     0527  009F               	movwf	31	;volatile
  2087     0528                     l1252:
  2088                           
  2089                           ;configADC.c: 67:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2090     0528  3042               	movlw	66
  2091     0529  00F0               	movwf	??_readADC
  2092     052A                     u947:
  2093     052A  0BF0               	decfsz	??_readADC,f
  2094     052B  2D2A               	goto	u947
  2095     052C  0000               	nop
  2096     052D                     l1254:
  2097                           
  2098                           ;configADC.c: 69:     ADCON0bits.GO = 1;
  2099     052D  1283               	bcf	3,5	;RP0=0, select bank0
  2100     052E  1303               	bcf	3,6	;RP1=0, select bank0
  2101     052F  149F               	bsf	31,1	;volatile
  2102     0530                     l121:	
  2103                           ;configADC.c: 70:     while (ADCON0bits.GO == 1){};
  2104                           
  2105     0530  189F               	btfsc	31,1	;volatile
  2106     0531  2D33               	goto	u831
  2107     0532  2D34               	goto	u830
  2108     0533                     u831:
  2109     0533  2D30               	goto	l121
  2110     0534                     u830:
  2111     0534                     l123:
  2112                           
  2113                           ;configADC.c: 71:     ADIF = 0;
  2114     0534  130C               	bcf	12,6	;volatile
  2115     0535                     l1256:
  2116                           
  2117                           ;configADC.c: 72:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2118     0535  301A               	movlw	26
  2119     0536  00F1               	movwf	??_readADC+1
  2120     0537  30F8               	movlw	248
  2121     0538  00F0               	movwf	??_readADC
  2122     0539                     u957:
  2123     0539  0BF0               	decfsz	??_readADC,f
  2124     053A  2D39               	goto	u957
  2125     053B  0BF1               	decfsz	??_readADC+1,f
  2126     053C  2D39               	goto	u957
  2127     053D  0000               	nop
  2128     053E                     l124:
  2129     053E  0008               	return
  2130     053F                     __end_of_readADC:
  2131                           
  2132                           	psect	text8
  2133     04BB                     __ptext8:	
  2134 ;; *************** function _Lcd_Write_String *****************
  2135 ;; Defined at:
  2136 ;;		line 99 in file "configLCD_4bits.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  a               2    5[COMMON] PTR unsigned char 
  2139 ;;		 -> main@ADC2(3), main@ADC1(3), STR_2(4), STR_1(4), 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  i               2   10[COMMON] int 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2151 ;;      Params:         2       0       0       0       0
  2152 ;;      Locals:         2       0       0       0       0
  2153 ;;      Temps:          3       0       0       0       0
  2154 ;;      Totals:         7       0       0       0       0
  2155 ;;Total ram usage:        7 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; Hardware stack levels required when called: 2
  2158 ;; This function calls:
  2159 ;;		_Lcd_Write_Char
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165     04BB                     _Lcd_Write_String:	
  2166                           ;psect for function _Lcd_Write_String
  2167                           
  2168     04BB                     l1230:	
  2169                           ;incstack = 0
  2170                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2171                           
  2172                           
  2173                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  2174     04BB  01FA               	clrf	Lcd_Write_String@i
  2175     04BC  01FB               	clrf	Lcd_Write_String@i+1
  2176     04BD  2CE0               	goto	l1236
  2177     04BE                     l1232:
  2178                           
  2179                           ;configLCD_4bits.c: 102:         Lcd_Write_Char(a[i]);
  2180     04BE  087A               	movf	Lcd_Write_String@i,w
  2181     04BF  0775               	addwf	Lcd_Write_String@a,w
  2182     04C0  00F8               	movwf	??_Lcd_Write_String+1
  2183     04C1  0876               	movf	Lcd_Write_String@a+1,w
  2184     04C2  00F7               	movwf	??_Lcd_Write_String
  2185     04C3  1803               	skipnc
  2186     04C4  0AF7               	incf	??_Lcd_Write_String,f
  2187     04C5  1FFA               	btfss	Lcd_Write_String@i,7
  2188     04C6  2CC8               	goto	u770
  2189     04C7  03F7               	decf	??_Lcd_Write_String,f
  2190     04C8                     u770:
  2191     04C8  0877               	movf	??_Lcd_Write_String,w
  2192     04C9  00F9               	movwf	??_Lcd_Write_String+2
  2193     04CA  0879               	movf	??_Lcd_Write_String+2,w
  2194     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2195     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2196     04CD  00FF               	movwf	btemp+1
  2197     04CE  0878               	movf	??_Lcd_Write_String+1,w
  2198     04CF  0084               	movwf	4
  2199     04D0  120A  118A  2003  120A  118A  	fcall	stringtab
  2200     04D5  120A  118A  244C  120A  118A  	fcall	_Lcd_Write_Char
  2201     04DA                     l1234:
  2202     04DA  3001               	movlw	1
  2203     04DB  07FA               	addwf	Lcd_Write_String@i,f
  2204     04DC  1803               	skipnc
  2205     04DD  0AFB               	incf	Lcd_Write_String@i+1,f
  2206     04DE  3000               	movlw	0
  2207     04DF  07FB               	addwf	Lcd_Write_String@i+1,f
  2208     04E0                     l1236:
  2209     04E0  087A               	movf	Lcd_Write_String@i,w
  2210     04E1  0775               	addwf	Lcd_Write_String@a,w
  2211     04E2  00F8               	movwf	??_Lcd_Write_String+1
  2212     04E3  0876               	movf	Lcd_Write_String@a+1,w
  2213     04E4  00F7               	movwf	??_Lcd_Write_String
  2214     04E5  1803               	skipnc
  2215     04E6  0AF7               	incf	??_Lcd_Write_String,f
  2216     04E7  1FFA               	btfss	Lcd_Write_String@i,7
  2217     04E8  2CEA               	goto	u780
  2218     04E9  03F7               	decf	??_Lcd_Write_String,f
  2219     04EA                     u780:
  2220     04EA  0877               	movf	??_Lcd_Write_String,w
  2221     04EB  00F9               	movwf	??_Lcd_Write_String+2
  2222     04EC  0879               	movf	??_Lcd_Write_String+2,w
  2223     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2224     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2225     04EF  00FF               	movwf	btemp+1
  2226     04F0  0878               	movf	??_Lcd_Write_String+1,w
  2227     04F1  0084               	movwf	4
  2228     04F2  120A  118A  2003  120A  118A  	fcall	stringtab
  2229     04F7  3A00               	xorlw	0
  2230     04F8  1D03               	skipz
  2231     04F9  2CFB               	goto	u791
  2232     04FA  2CFC               	goto	u790
  2233     04FB                     u791:
  2234     04FB  2CBE               	goto	l1232
  2235     04FC                     u790:
  2236     04FC                     l90:
  2237     04FC  0008               	return
  2238     04FD                     __end_of_Lcd_Write_String:
  2239                           
  2240                           	psect	text9
  2241     044C                     __ptext9:	
  2242 ;; *************** function _Lcd_Write_Char *****************
  2243 ;; Defined at:
  2244 ;;		line 84 in file "configLCD_4bits.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  a               1    wreg     unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  a               1    4[COMMON] unsigned char 
  2249 ;;  y               1    3[COMMON] unsigned char 
  2250 ;;  temp            1    2[COMMON] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, pclath, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2260 ;;      Params:         0       0       0       0       0
  2261 ;;      Locals:         3       0       0       0       0
  2262 ;;      Temps:          1       0       0       0       0
  2263 ;;      Totals:         4       0       0       0       0
  2264 ;;Total ram usage:        4 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 1
  2267 ;; This function calls:
  2268 ;;		_Lcd_Port
  2269 ;; This function is called by:
  2270 ;;		_Lcd_Write_String
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274     044C                     _Lcd_Write_Char:	
  2275                           ;psect for function _Lcd_Write_Char
  2276                           
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2280                           ;Lcd_Write_Char@a stored from wreg
  2281     044C  00F4               	movwf	Lcd_Write_Char@a
  2282     044D                     l1088:
  2283                           
  2284                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  2285     044D  0874               	movf	Lcd_Write_Char@a,w
  2286     044E  390F               	andlw	15
  2287     044F  00F2               	movwf	Lcd_Write_Char@temp
  2288                           
  2289                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  2290     0450  0874               	movf	Lcd_Write_Char@a,w
  2291     0451  39F0               	andlw	240
  2292     0452  00F3               	movwf	Lcd_Write_Char@y
  2293     0453                     l1090:
  2294                           
  2295                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  2296     0453  1283               	bcf	3,5	;RP0=0, select bank0
  2297     0454  1303               	bcf	3,6	;RP1=0, select bank0
  2298     0455  1508               	bsf	8,2	;volatile
  2299     0456                     l1092:
  2300                           
  2301                           ;configLCD_4bits.c: 89:     Lcd_Port(y >> 4);
  2302     0456  0873               	movf	Lcd_Write_Char@y,w
  2303     0457  00F1               	movwf	??_Lcd_Write_Char
  2304     0458  3004               	movlw	4
  2305     0459                     u505:
  2306     0459  1003               	clrc
  2307     045A  0CF1               	rrf	??_Lcd_Write_Char,f
  2308     045B  3EFF               	addlw	-1
  2309     045C  1D03               	skipz
  2310     045D  2C59               	goto	u505
  2311     045E  0871               	movf	??_Lcd_Write_Char,w
  2312     045F  120A  118A  23FD  120A  118A  	fcall	_Lcd_Port
  2313     0464                     l1094:
  2314                           
  2315                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  2316     0464  1283               	bcf	3,5	;RP0=0, select bank0
  2317     0465  1303               	bcf	3,6	;RP1=0, select bank0
  2318     0466  1588               	bsf	8,3	;volatile
  2319     0467                     l1096:
  2320                           
  2321                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2322     0467  301A               	movlw	26
  2323     0468  00F1               	movwf	??_Lcd_Write_Char
  2324     0469                     u967:
  2325     0469  0BF1               	decfsz	??_Lcd_Write_Char,f
  2326     046A  2C69               	goto	u967
  2327     046B  0000               	nop
  2328     046C                     l1098:
  2329                           
  2330                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  2331     046C  1283               	bcf	3,5	;RP0=0, select bank0
  2332     046D  1303               	bcf	3,6	;RP1=0, select bank0
  2333     046E  1188               	bcf	8,3	;volatile
  2334     046F                     l1100:
  2335                           
  2336                           ;configLCD_4bits.c: 93:     Lcd_Port(temp);
  2337     046F  0872               	movf	Lcd_Write_Char@temp,w
  2338     0470  120A  118A  23FD  120A  118A  	fcall	_Lcd_Port
  2339     0475                     l1102:
  2340                           
  2341                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  2342     0475  1283               	bcf	3,5	;RP0=0, select bank0
  2343     0476  1303               	bcf	3,6	;RP1=0, select bank0
  2344     0477  1588               	bsf	8,3	;volatile
  2345     0478                     l1104:
  2346                           
  2347                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2348     0478  301A               	movlw	26
  2349     0479  00F1               	movwf	??_Lcd_Write_Char
  2350     047A                     u977:
  2351     047A  0BF1               	decfsz	??_Lcd_Write_Char,f
  2352     047B  2C7A               	goto	u977
  2353     047C  0000               	nop
  2354     047D                     l1106:
  2355                           
  2356                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  2357     047D  1283               	bcf	3,5	;RP0=0, select bank0
  2358     047E  1303               	bcf	3,6	;RP1=0, select bank0
  2359     047F  1188               	bcf	8,3	;volatile
  2360     0480                     l84:
  2361     0480  0008               	return
  2362     0481                     __end_of_Lcd_Write_Char:
  2363                           
  2364                           	psect	text10
  2365     0583                     __ptext10:	
  2366 ;; *************** function _Lcd_Set_Cursor *****************
  2367 ;; Defined at:
  2368 ;;		line 49 in file "configLCD_4bits.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  a               1    wreg     unsigned char 
  2371 ;;  b               1    4[COMMON] unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  a               1    6[COMMON] unsigned char 
  2374 ;;  temp            1    9[COMMON] unsigned char 
  2375 ;;  y               1    8[COMMON] unsigned char 
  2376 ;;  z               1    7[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         1       0       0       0       0
  2387 ;;      Locals:         4       0       0       0       0
  2388 ;;      Temps:          1       0       0       0       0
  2389 ;;      Totals:         6       0       0       0       0
  2390 ;;Total ram usage:        6 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 2
  2393 ;; This function calls:
  2394 ;;		_Lcd_Cmd
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400     0583                     _Lcd_Set_Cursor:	
  2401                           ;psect for function _Lcd_Set_Cursor
  2402                           
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2406                           ;Lcd_Set_Cursor@a stored from wreg
  2407     0583  00F6               	movwf	Lcd_Set_Cursor@a
  2408     0584                     l1210:
  2409                           
  2410                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  2411     0584  0376               	decf	Lcd_Set_Cursor@a,w
  2412     0585  1D03               	btfss	3,2
  2413     0586  2D88               	goto	u731
  2414     0587  2D89               	goto	u730
  2415     0588                     u731:
  2416     0588  2DA6               	goto	l1220
  2417     0589                     u730:
  2418     0589                     l1212:
  2419                           
  2420                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  2421     0589  0874               	movf	Lcd_Set_Cursor@b,w
  2422     058A  3E7F               	addlw	127
  2423     058B  00F9               	movwf	Lcd_Set_Cursor@temp
  2424                           
  2425                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  2426     058C  0879               	movf	Lcd_Set_Cursor@temp,w
  2427     058D  00F5               	movwf	??_Lcd_Set_Cursor
  2428     058E  3004               	movlw	4
  2429     058F                     u745:
  2430     058F  1003               	clrc
  2431     0590  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2432     0591  3EFF               	addlw	-1
  2433     0592  1D03               	skipz
  2434     0593  2D8F               	goto	u745
  2435     0594  0875               	movf	??_Lcd_Set_Cursor,w
  2436     0595  00F7               	movwf	Lcd_Set_Cursor@z
  2437     0596                     l1214:
  2438                           
  2439                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  2440     0596  0879               	movf	Lcd_Set_Cursor@temp,w
  2441     0597  390F               	andlw	15
  2442     0598  00F8               	movwf	Lcd_Set_Cursor@y
  2443     0599                     l1216:
  2444                           
  2445                           ;configLCD_4bits.c: 55:         Lcd_Cmd(z);
  2446     0599  0877               	movf	Lcd_Set_Cursor@z,w
  2447     059A  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2448     059F                     l1218:
  2449                           
  2450                           ;configLCD_4bits.c: 56:         Lcd_Cmd(y);
  2451     059F  0878               	movf	Lcd_Set_Cursor@y,w
  2452     05A0  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2453                           
  2454                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  2455     05A5  2DC8               	goto	l78
  2456     05A6                     l1220:
  2457     05A6  3002               	movlw	2
  2458     05A7  0676               	xorwf	Lcd_Set_Cursor@a,w
  2459     05A8  1D03               	btfss	3,2
  2460     05A9  2DAB               	goto	u751
  2461     05AA  2DAC               	goto	u750
  2462     05AB                     u751:
  2463     05AB  2DC8               	goto	l78
  2464     05AC                     u750:
  2465     05AC                     l1222:
  2466                           
  2467                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  2468     05AC  0874               	movf	Lcd_Set_Cursor@b,w
  2469     05AD  3EBF               	addlw	191
  2470     05AE  00F9               	movwf	Lcd_Set_Cursor@temp
  2471                           
  2472                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  2473     05AF  0879               	movf	Lcd_Set_Cursor@temp,w
  2474     05B0  00F5               	movwf	??_Lcd_Set_Cursor
  2475     05B1  3004               	movlw	4
  2476     05B2                     u765:
  2477     05B2  1003               	clrc
  2478     05B3  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2479     05B4  3EFF               	addlw	-1
  2480     05B5  1D03               	skipz
  2481     05B6  2DB2               	goto	u765
  2482     05B7  0875               	movf	??_Lcd_Set_Cursor,w
  2483     05B8  00F7               	movwf	Lcd_Set_Cursor@z
  2484     05B9                     l1224:
  2485                           
  2486                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  2487     05B9  0879               	movf	Lcd_Set_Cursor@temp,w
  2488     05BA  390F               	andlw	15
  2489     05BB  00F8               	movwf	Lcd_Set_Cursor@y
  2490     05BC                     l1226:
  2491                           
  2492                           ;configLCD_4bits.c: 61:         Lcd_Cmd(z);
  2493     05BC  0877               	movf	Lcd_Set_Cursor@z,w
  2494     05BD  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2495     05C2                     l1228:
  2496                           
  2497                           ;configLCD_4bits.c: 62:         Lcd_Cmd(y);
  2498     05C2  0878               	movf	Lcd_Set_Cursor@y,w
  2499     05C3  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2500     05C8                     l78:
  2501     05C8  0008               	return
  2502     05C9                     __end_of_Lcd_Set_Cursor:
  2503                           
  2504                           	psect	text11
  2505     05C9                     __ptext11:	
  2506 ;; *************** function _Lcd_Init *****************
  2507 ;; Defined at:
  2508 ;;		line 66 in file "configLCD_4bits.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, pclath, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2522 ;;      Params:         0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0
  2524 ;;      Temps:          2       0       0       0       0
  2525 ;;      Totals:         2       0       0       0       0
  2526 ;;Total ram usage:        2 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 2
  2529 ;; This function calls:
  2530 ;;		_Lcd_Cmd
  2531 ;;		_Lcd_Port
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537     05C9                     _Lcd_Init:	
  2538                           ;psect for function _Lcd_Init
  2539                           
  2540     05C9                     l1198:	
  2541                           ;incstack = 0
  2542                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2543                           
  2544                           
  2545                           ;configLCD_4bits.c: 67:     Lcd_Port(0x00);
  2546     05C9  3000               	movlw	0
  2547     05CA  120A  118A  23FD  120A  118A  	fcall	_Lcd_Port
  2548     05CF                     l1200:
  2549                           
  2550                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2551     05CF  3034               	movlw	52
  2552     05D0  00F5               	movwf	??_Lcd_Init+1
  2553     05D1  30F1               	movlw	241
  2554     05D2  00F4               	movwf	??_Lcd_Init
  2555     05D3                     u987:
  2556     05D3  0BF4               	decfsz	??_Lcd_Init,f
  2557     05D4  2DD3               	goto	u987
  2558     05D5  0BF5               	decfsz	??_Lcd_Init+1,f
  2559     05D6  2DD3               	goto	u987
  2560     05D7  2DD8               	nop2
  2561     05D8                     l1202:
  2562                           
  2563                           ;configLCD_4bits.c: 69:     Lcd_Cmd(0x03);
  2564     05D8  3003               	movlw	3
  2565     05D9  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2566                           
  2567                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2568     05DE  300D               	movlw	13
  2569     05DF  00F5               	movwf	??_Lcd_Init+1
  2570     05E0  30FB               	movlw	251
  2571     05E1  00F4               	movwf	??_Lcd_Init
  2572     05E2                     u997:
  2573     05E2  0BF4               	decfsz	??_Lcd_Init,f
  2574     05E3  2DE2               	goto	u997
  2575     05E4  0BF5               	decfsz	??_Lcd_Init+1,f
  2576     05E5  2DE2               	goto	u997
  2577     05E6  2DE7               	nop2
  2578     05E7                     l1204:
  2579                           
  2580                           ;configLCD_4bits.c: 71:     Lcd_Cmd(0x03);
  2581     05E7  3003               	movlw	3
  2582     05E8  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2583     05ED                     l1206:
  2584                           
  2585                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2586     05ED  301D               	movlw	29
  2587     05EE  00F5               	movwf	??_Lcd_Init+1
  2588     05EF  3091               	movlw	145
  2589     05F0  00F4               	movwf	??_Lcd_Init
  2590     05F1                     u1007:
  2591     05F1  0BF4               	decfsz	??_Lcd_Init,f
  2592     05F2  2DF1               	goto	u1007
  2593     05F3  0BF5               	decfsz	??_Lcd_Init+1,f
  2594     05F4  2DF1               	goto	u1007
  2595                           
  2596                           ;configLCD_4bits.c: 73:     Lcd_Cmd(0x03);
  2597     05F5  3003               	movlw	3
  2598     05F6  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2599                           
  2600                           ;configLCD_4bits.c: 75:     Lcd_Cmd(0x02);
  2601     05FB  3002               	movlw	2
  2602     05FC  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2603                           
  2604                           ;configLCD_4bits.c: 76:     Lcd_Cmd(0x02);
  2605     0601  3002               	movlw	2
  2606     0602  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2607                           
  2608                           ;configLCD_4bits.c: 77:     Lcd_Cmd(0x08);
  2609     0607  3008               	movlw	8
  2610     0608  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2611                           
  2612                           ;configLCD_4bits.c: 78:     Lcd_Cmd(0x00);
  2613     060D  3000               	movlw	0
  2614     060E  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2615                           
  2616                           ;configLCD_4bits.c: 79:     Lcd_Cmd(0x0C);
  2617     0613  300C               	movlw	12
  2618     0614  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2619                           
  2620                           ;configLCD_4bits.c: 80:     Lcd_Cmd(0x00);
  2621     0619  3000               	movlw	0
  2622     061A  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2623                           
  2624                           ;configLCD_4bits.c: 81:     Lcd_Cmd(0x06);
  2625     061F  3006               	movlw	6
  2626     0620  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2627     0625                     l81:
  2628     0625  0008               	return
  2629     0626                     __end_of_Lcd_Init:
  2630                           
  2631                           	psect	text12
  2632     03C5                     __ptext12:	
  2633 ;; *************** function _Lcd_Clear *****************
  2634 ;; Defined at:
  2635 ;;		line 44 in file "configLCD_4bits.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 2
  2656 ;; This function calls:
  2657 ;;		_Lcd_Cmd
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663     03C5                     _Lcd_Clear:	
  2664                           ;psect for function _Lcd_Clear
  2665                           
  2666     03C5                     l1208:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2669                           
  2670                           
  2671                           ;configLCD_4bits.c: 45:     Lcd_Cmd(0);
  2672     03C5  3000               	movlw	0
  2673     03C6  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2674                           
  2675                           ;configLCD_4bits.c: 46:     Lcd_Cmd(1);
  2676     03CB  3001               	movlw	1
  2677     03CC  120A  118A  23E3  120A  118A  	fcall	_Lcd_Cmd
  2678     03D1                     l72:
  2679     03D1  0008               	return
  2680     03D2                     __end_of_Lcd_Clear:
  2681                           
  2682                           	psect	text13
  2683     03E3                     __ptext13:	
  2684 ;; *************** function _Lcd_Cmd *****************
  2685 ;; Defined at:
  2686 ;;		line 36 in file "configLCD_4bits.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  a               1    wreg     unsigned char 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  a               1    3[COMMON] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, pclath, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       0       0       0       0
  2701 ;;      Locals:         1       0       0       0       0
  2702 ;;      Temps:          2       0       0       0       0
  2703 ;;      Totals:         3       0       0       0       0
  2704 ;;Total ram usage:        3 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 1
  2707 ;; This function calls:
  2708 ;;		_Lcd_Port
  2709 ;; This function is called by:
  2710 ;;		_Lcd_Clear
  2711 ;;		_Lcd_Set_Cursor
  2712 ;;		_Lcd_Init
  2713 ;;		_Lcd_Shift_Right
  2714 ;;		_Lcd_Shift_Left
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718     03E3                     _Lcd_Cmd:	
  2719                           ;psect for function _Lcd_Cmd
  2720                           
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2724                           ;Lcd_Cmd@a stored from wreg
  2725     03E3  00F3               	movwf	Lcd_Cmd@a
  2726     03E4                     l1078:
  2727                           
  2728                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  2729     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2730     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2731     03E6  1108               	bcf	8,2	;volatile
  2732     03E7                     l1080:
  2733                           
  2734                           ;configLCD_4bits.c: 38:     Lcd_Port(a);
  2735     03E7  0873               	movf	Lcd_Cmd@a,w
  2736     03E8  120A  118A  23FD  120A  118A  	fcall	_Lcd_Port
  2737     03ED                     l1082:
  2738                           
  2739                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  2740     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2741     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2742     03EF  1588               	bsf	8,3	;volatile
  2743     03F0                     l1084:
  2744                           
  2745                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2746     03F0  300B               	movlw	11
  2747     03F1  00F2               	movwf	??_Lcd_Cmd+1
  2748     03F2  3062               	movlw	98
  2749     03F3  00F1               	movwf	??_Lcd_Cmd
  2750     03F4                     u1017:
  2751     03F4  0BF1               	decfsz	??_Lcd_Cmd,f
  2752     03F5  2BF4               	goto	u1017
  2753     03F6  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2754     03F7  2BF4               	goto	u1017
  2755     03F8  0000               	nop
  2756     03F9                     l1086:
  2757                           
  2758                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  2759     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2760     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2761     03FB  1188               	bcf	8,3	;volatile
  2762     03FC                     l69:
  2763     03FC  0008               	return
  2764     03FD                     __end_of_Lcd_Cmd:
  2765                           
  2766                           	psect	text14
  2767     03FD                     __ptext14:	
  2768 ;; *************** function _Lcd_Port *****************
  2769 ;; Defined at:
  2770 ;;		line 14 in file "configLCD_4bits.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  a               1    wreg     unsigned char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  a               1    0[COMMON] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         1       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0
  2787 ;;      Totals:         1       0       0       0       0
  2788 ;;Total ram usage:        1 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_Lcd_Cmd
  2794 ;;		_Lcd_Init
  2795 ;;		_Lcd_Write_Char
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799     03FD                     _Lcd_Port:	
  2800                           ;psect for function _Lcd_Port
  2801                           
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in _Lcd_Port: [wreg]
  2805                           ;Lcd_Port@a stored from wreg
  2806     03FD  00F0               	movwf	Lcd_Port@a
  2807     03FE                     l1068:
  2808                           
  2809                           ;configLCD_4bits.c: 15:     if (a & 1)
  2810     03FE  1C70               	btfss	Lcd_Port@a,0
  2811     03FF  2C01               	goto	u461
  2812     0400  2C02               	goto	u460
  2813     0401                     u461:
  2814     0401  2C06               	goto	l58
  2815     0402                     u460:
  2816     0402                     l1070:
  2817                           
  2818                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  2819     0402  1283               	bcf	3,5	;RP0=0, select bank0
  2820     0403  1303               	bcf	3,6	;RP1=0, select bank0
  2821     0404  1608               	bsf	8,4	;volatile
  2822     0405  2C09               	goto	l59
  2823     0406                     l58:	
  2824                           ;configLCD_4bits.c: 17:     else
  2825                           
  2826                           
  2827                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  2828     0406  1283               	bcf	3,5	;RP0=0, select bank0
  2829     0407  1303               	bcf	3,6	;RP1=0, select bank0
  2830     0408  1208               	bcf	8,4	;volatile
  2831     0409                     l59:
  2832                           
  2833                           ;configLCD_4bits.c: 20:     if (a & 2)
  2834     0409  1CF0               	btfss	Lcd_Port@a,1
  2835     040A  2C0C               	goto	u471
  2836     040B  2C0D               	goto	u470
  2837     040C                     u471:
  2838     040C  2C0F               	goto	l60
  2839     040D                     u470:
  2840     040D                     l1072:
  2841                           
  2842                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  2843     040D  1688               	bsf	8,5	;volatile
  2844     040E  2C10               	goto	l61
  2845     040F                     l60:	
  2846                           ;configLCD_4bits.c: 22:     else
  2847                           
  2848                           
  2849                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  2850     040F  1288               	bcf	8,5	;volatile
  2851     0410                     l61:
  2852                           
  2853                           ;configLCD_4bits.c: 25:     if (a & 4)
  2854     0410  1D70               	btfss	Lcd_Port@a,2
  2855     0411  2C13               	goto	u481
  2856     0412  2C14               	goto	u480
  2857     0413                     u481:
  2858     0413  2C16               	goto	l62
  2859     0414                     u480:
  2860     0414                     l1074:
  2861                           
  2862                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  2863     0414  1708               	bsf	8,6	;volatile
  2864     0415  2C17               	goto	l63
  2865     0416                     l62:	
  2866                           ;configLCD_4bits.c: 27:     else
  2867                           
  2868                           
  2869                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  2870     0416  1308               	bcf	8,6	;volatile
  2871     0417                     l63:
  2872                           
  2873                           ;configLCD_4bits.c: 30:     if (a & 8)
  2874     0417  1DF0               	btfss	Lcd_Port@a,3
  2875     0418  2C1A               	goto	u491
  2876     0419  2C1B               	goto	u490
  2877     041A                     u491:
  2878     041A  2C1D               	goto	l64
  2879     041B                     u490:
  2880     041B                     l1076:
  2881                           
  2882                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  2883     041B  1788               	bsf	8,7	;volatile
  2884     041C  2C1E               	goto	l66
  2885     041D                     l64:	
  2886                           ;configLCD_4bits.c: 32:     else
  2887                           
  2888                           
  2889                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  2890     041D  1388               	bcf	8,7	;volatile
  2891     041E                     l66:
  2892     041E  0008               	return
  2893     041F                     __end_of_Lcd_Port:
  2894     007E                     btemp	set	126	;btemp
  2895     007E                     wtemp0	set	126
  2896                           
  2897                           	psect	idloc
  2898                           
  2899                           ;Config register IDLOC0 @ 0x2000
  2900                           ;	unspecified, using default values
  2901     2000                     	org	8192
  2902     2000  3FFF               	dw	16383
  2903                           
  2904                           ;Config register IDLOC1 @ 0x2001
  2905                           ;	unspecified, using default values
  2906     2001                     	org	8193
  2907     2001  3FFF               	dw	16383
  2908                           
  2909                           ;Config register IDLOC2 @ 0x2002
  2910                           ;	unspecified, using default values
  2911     2002                     	org	8194
  2912     2002  3FFF               	dw	16383
  2913                           
  2914                           ;Config register IDLOC3 @ 0x2003
  2915                           ;	unspecified, using default values
  2916     2003                     	org	8195
  2917     2003  3FFF               	dw	16383
  2918                           
  2919                           	psect	config
  2920                           
  2921                           ;Config register CONFIG1 @ 0x2007
  2922                           ;	Oscillator Selection bits
  2923                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2924                           ;	Watchdog Timer Enable bit
  2925                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2926                           ;	Power-up Timer Enable bit
  2927                           ;	PWRTE = OFF, PWRT disabled
  2928                           ;	RE3/MCLR pin function select bit
  2929                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2930                           ;	Code Protection bit
  2931                           ;	CP = OFF, Program memory code protection is disabled
  2932                           ;	Data Code Protection bit
  2933                           ;	CPD = OFF, Data memory code protection is disabled
  2934                           ;	Brown Out Reset Selection bits
  2935                           ;	BOREN = OFF, BOR disabled
  2936                           ;	Internal External Switchover bit
  2937                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2938                           ;	Fail-Safe Clock Monitor Enabled bit
  2939                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2940                           ;	Low Voltage Programming Enable bit
  2941                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2942                           ;	In-Circuit Debugger Mode bit
  2943                           ;	DEBUG = 0x1, unprogramme  2944     2007                     	org	8199
  2945     2007  20D4               	dw	8404
  2946                           
  2947                           ;Config register CONFIG2 @ 0x2008
  2948                           ;	Brown-out Reset Selection bit
  2949                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2950                           ;	Flash Program Memory Self Write Enable bits
  2951                           ;	WRT = OFF, Write protection off
  2952     2008                     	org	8200
  2953     2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> main@ADC2(BANK0[3]), main@ADC1(BANK0[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 4
		 -> main@ADC2(BANK0[3]), main@ADC1(BANK0[3]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    3310
                                             13 BANK0      8     8      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _readADC
                              _setup
                           _setupADC
                        _setupINTOSC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _readADC
   _setup
   _setupADC
   _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 27 01:14:51 2023

                          pc 0002                           l51 03E2                           l60 040F  
                         l61 0410                           l62 0416                           l63 0417  
                         l64 041D                           l72 03D1                           l81 0625  
                         l66 041E                           l58 0406                           l90 04FC  
                         l59 0409                           l84 0480                           l69 03FC  
                         l78 05C8                           fsr 0004                          l112 0436  
                        l121 0530                          l113 044B                          l130 0642  
                        l123 0534                          l131 0652                          l124 053E  
                        l132 065F                          l117 050F                          l133 066D  
                        l134 067B                          l119 0513                          l136 0687  
                        l129 0634                          l246 07FB                          l522 0582  
                        l532 04BA                          u510 0547                          u511 0546  
                        u600 0499                          u505 0459                          u601 0498  
                        u530 0559                          u610 04A3                          u531 0558  
                        u611 04A2                          u460 0402                          u700 0682  
                        u461 0401                          u701 0681                          u525 054B  
                        u470 040D                          u710 0425                          u550 056A  
                        u630 04B6                          u471 040C                          u711 0424  
                        u551 0569                          u631 04B5                          u615 049F  
                        u480 0414                          u800 0503                          u720 0430  
                        u640 062D                          u481 0413                          u801 0502  
                        u721 042F                          u641 062C                          u545 055A  
                        u625 04AA                          u490 041B                          u730 0589  
                        u810 0513                          u650 063B                          u570 057E  
                        u491 041A                          u731 0588                          u811 0512  
                        u651 063A                          u571 057D                          u555 0566  
                        u820 0522                          u660 064B                          u580 0487  
                        u900 07F7                          u821 0521                          u661 064A  
                        u565 0572                          u581 0486                          u901 07F6  
                        u750 05AC                          u830 0534                          u670 0658  
                        u751 05AB                          u831 0533                          u671 0657  
                        u680 0666                          u840 072E                          u745 058F  
                        u681 0665                          u841 072D                          u770 04C8  
                        u690 0674                          u850 0766                          u691 0673  
                        u595 048B                          u851 0765                          u780 04EA  
                        u860 078C                          u765 05B2                          u917 0448  
                        u861 078B                          u790 04FC                          u870 0797  
                        u791 04FB                          u927 0509                          u871 0796  
                        u880 079D                          u937 0518                          u881 079C  
                        u865 0788                          u890 07E7                          u947 052A  
                        u891 07E6                          u957 0539                          u967 0469  
                        u977 047A                          u987 05D3                          u997 05E2  
                        fsr0 0004                          indf 0000                         l1100 046F  
                       l1102 0475                         l1110 0541                         l1200 05CF  
                       l1104 0478                         l1120 0559                         l1112 0547  
                       l1202 05D8                         l1210 0584                         l1106 047D  
                       l1122 056A                         l1114 054A                         l1130 057E  
                       l1204 05E7                         l1212 0589                         l1220 05A6  
                       l1124 0570                         l1116 0551                         l1108 053F  
                       l1140 0491                         l1300 07A6                         l1070 0402  
                       l1206 05ED                         l1222 05AC                         l1214 0596  
                       l1230 04BB                         l1126 0571                         l1118 0555  
                       l1150 04B0                         l1142 0495                         l1134 0481  
                       l1302 07A9                         l1310 07E7                         l1072 040D  
                       l1080 03E7                         l1208 03C5                         l1224 05B9  
                       l1216 0599                         l1232 04BE                         l1240 0503  
                       l1160 062D                         l1128 0578                         l1144 0499  
                       l1136 0487                         l1152 04B6                         l1304 07D5  
                       l1312 07F7                         l1320 0688                         l1074 0414  
                       l1082 03ED                         l1226 05BC                         l1218 059F  
                       l1090 0453                         l1234 04DA                         l1250 0522  
                       l1242 0507                         l1170 0651                         l1162 0633  
                       l1146 04A3                         l1138 048A                         l1306 07DA  
                       l1330 06A7                         l1322 068D                         l1076 041B  
                       l1068 03FE                         l1084 03F0                         l1228 05C2  
                       l1092 0456                         l1236 04E0                         l1252 0528  
                       l1244 050C                         l1156 03D2                         l1180 0674  
                       l1172 0658                         l1164 063B                         l1148 04A9  
                       l1308 07DE                         l1260 0728                         l1340 06CE  
                       l1332 06AC                         l1324 0696                         l1086 03F9  
                       l1078 03E4                         l1094 0464                         l1254 052D  
                       l1246 0514                         l1238 04FE                         l1190 0425  
                       l1182 067A                         l1174 065E                         l1166 0641  
                       l1158 0626                         l1270 0739                         l1262 072E  
                       l1350 06FC                         l1342 06D4                         l1334 06B4  
                       l1326 069C                         l1096 0467                         l1088 044D  
                       l1256 0535                         l1248 051D                         l1192 042B  
                       l1184 0682                         l1176 0666                         l1168 064B  
                       l1280 076A                         l1272 0756                         l1264 0733  
                       l1352 070D                         l1344 06E5                         l1336 06BD  
                       l1328 06A2                         l1098 046C                         l1194 0430  
                       l1186 0686                         l1178 066C                         l1282 076F  
                       l1274 075E                         l1266 0738                         l1258 0725  
                       l1354 0715                         l1346 06ED                         l1338 06C5  
                       l1196 0446                         l1188 0420                         l1292 078D  
                       l1276 0762                         l1380 074B                         l1348 06F6  
                       l1198 05C9                         l1294 0797                         l1278 0766  
                       l1296 079D                         l1288 0771                         l1298 07A2  
                       _ADIF 0066                         STR_1 001D                         STR_2 0021  
                       STR_3 0025                         STR_4 0025                         u1007 05F1  
                       u1017 03F4            ?_Lcd_Write_String 0075                         _main 0688  
                       btemp 007E                         start 0000           ??_Lcd_Write_String 0077  
            __end_of_Lcd_Cmd 03FD                        ?_main 0070                        _ANSEL 0188  
            __end_of___lwdiv 0583              __end_of___lwmod 04BB                        _PORTB 0006  
                      _PORTC 0007                        _PORTD 0008                        _PORTE 0009  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      _TRISE 0089              __end_of_readADC 053F              __end_of_dpowers 001D  
                      _setup 03D2                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 07FC             __end_of_Lcd_Init 0626  
           __end_of_Lcd_Port 041F              __initialization 07FC                 __end_of_main 0722  
                     ??_main 002D                       _ADRESH 001E                       ?_setup 0070  
                     _ANSELH 0189                    ??_Lcd_Cmd 0071                 readADC@canal 0072  
                  ??___lwdiv 0074                    ??___lwmod 007C                 ?_setupINTOSC 0070  
                  ??_readADC 0070             __end_of_setupADC 044C                    ??_sprintf 0023  
            Lcd_Set_Cursor@a 0076              Lcd_Set_Cursor@b 0074              Lcd_Set_Cursor@y 0078  
            Lcd_Set_Cursor@z 0077      __end_of__initialization 07FC            __end_of_Lcd_Clear 03D2  
             __pcstackCOMMON 0070                __end_of_setup 03E3               _Lcd_Set_Cursor 0583  
                  ?_Lcd_Init 0070                    ?_Lcd_Port 0070                      ??_setup 0070  
                 __pmaintext 0688       __end_of_Lcd_Set_Cursor 05C9                   ??_Lcd_Init 0074  
                 ??_Lcd_Port 0070                   __stringtab 0003               _Lcd_Write_Char 044C  
                    _Lcd_Cmd 03E3                    ?_setupADC 0070                      ___lwdiv 053F  
                    ___lwmod 0481                    _ANSELbits 0188              ?_Lcd_Set_Cursor 0074  
                    __ptext1 0722                      __ptext2 0481                      __ptext3 053F  
                    __ptext4 0626                      __ptext5 041F                      __ptext6 03D2  
                    __ptext7 04FD                      __ptext8 04BB                      __ptext9 044C  
                    _readADC 04FD                      _dpowers 0013                      _sprintf 0722  
     __end_of_Lcd_Write_Char 0481         end_of_initialization 07FC                   ??_setupADC 0070  
                  Lcd_Port@a 0070                    _PORTDbits 0008                    _TRISAbits 0085  
            ?_Lcd_Write_Char 0070            Lcd_Write_String@a 0075            Lcd_Write_String@i 007A  
                  _Lcd_Clear 03C5             _Lcd_Write_String 04BB          start_initialization 07FC  
                 ?_Lcd_Clear 0070              Lcd_Write_Char@a 0074              Lcd_Write_Char@y 0073  
                  ___latbits 0002                __pcstackBANK0 0020                     ?_Lcd_Cmd 0070  
                sprintf@flag 0027                  sprintf@prec 0028             ___lwdiv@dividend 0072  
           ??_Lcd_Set_Cursor 0075                     ?___lwdiv 0070                     ?___lwmod 0078  
                  __pstrings 0003                     ?_readADC 0070             ___lwdiv@quotient 0075  
                   ?_sprintf 0020                     Lcd_Cmd@a 0073                  ??_Lcd_Clear 0074  
                 _ADCON0bits 001F                  __stringbase 0012                   _ADCON1bits 009F  
              ??_setupINTOSC 0072             ??_Lcd_Write_Char 0071                     _Lcd_Init 05C9  
                   _Lcd_Port 03FD     __end_of_Lcd_Write_String 04FD           __end_of__stringtab 0013  
                 sprintf@val 0029              ___lwdiv@divisor 0070              ___lwdiv@counter 0077  
                   __ptext10 0583                     __ptext11 05C9                     __ptext12 03C5  
                   __ptext13 03E3                     __ptext14 03FD          __end_of_setupINTOSC 0688  
              setupADC@canal 0071                     _setupADC 041F                     main@ADC1 002F  
                   main@ADC2 0032  setupINTOSC@OsciladorInterno 0070           Lcd_Write_Char@temp 0072  
                  sprintf@ap 0026                    sprintf@sp 002B             ___lwmod@dividend 007A  
                  stringcode 000D                   _OSCCONbits 008F           Lcd_Set_Cursor@temp 0079  
                _setupINTOSC 0626                     sprintf@c 002C                     sprintf@f 0020  
            ___lwmod@divisor 0078              ___lwmod@counter 007D                     stringdir 000D  
                   stringtab 0003  
