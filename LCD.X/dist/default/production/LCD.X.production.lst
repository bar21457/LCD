

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 01 17:32:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2
    42                           	psect	text33,local,class=CODE,merge=1,delta=2
    43                           	psect	text34,local,class=CODE,merge=1,delta=2
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47     0000                     
    48                           ; Version 2.40
    49                           ; Generated 17/11/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0014                     	;# 
   105     0015                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     001D                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     0081                     	;# 
   119     0085                     	;# 
   120     0086                     	;# 
   121     0087                     	;# 
   122     0088                     	;# 
   123     0089                     	;# 
   124     008C                     	;# 
   125     008D                     	;# 
   126     008E                     	;# 
   127     008F                     	;# 
   128     0090                     	;# 
   129     0091                     	;# 
   130     0092                     	;# 
   131     0093                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0094                     	;# 
   135     0095                     	;# 
   136     0096                     	;# 
   137     0097                     	;# 
   138     0098                     	;# 
   139     0099                     	;# 
   140     009A                     	;# 
   141     009B                     	;# 
   142     009C                     	;# 
   143     009D                     	;# 
   144     009E                     	;# 
   145     009F                     	;# 
   146     0105                     	;# 
   147     0107                     	;# 
   148     0108                     	;# 
   149     0109                     	;# 
   150     010C                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     010E                     	;# 
   154     010F                     	;# 
   155     0185                     	;# 
   156     0187                     	;# 
   157     0188                     	;# 
   158     0189                     	;# 
   159     018C                     	;# 
   160     018D                     	;# 
   161     0000                     	;# 
   162     0001                     	;# 
   163     0002                     	;# 
   164     0003                     	;# 
   165     0004                     	;# 
   166     0005                     	;# 
   167     0006                     	;# 
   168     0007                     	;# 
   169     0008                     	;# 
   170     0009                     	;# 
   171     000A                     	;# 
   172     000B                     	;# 
   173     000C                     	;# 
   174     000D                     	;# 
   175     000E                     	;# 
   176     000E                     	;# 
   177     000F                     	;# 
   178     0010                     	;# 
   179     0011                     	;# 
   180     0012                     	;# 
   181     0013                     	;# 
   182     0014                     	;# 
   183     0015                     	;# 
   184     0015                     	;# 
   185     0016                     	;# 
   186     0017                     	;# 
   187     0018                     	;# 
   188     0019                     	;# 
   189     001A                     	;# 
   190     001B                     	;# 
   191     001B                     	;# 
   192     001C                     	;# 
   193     001D                     	;# 
   194     001E                     	;# 
   195     001F                     	;# 
   196     0081                     	;# 
   197     0085                     	;# 
   198     0086                     	;# 
   199     0087                     	;# 
   200     0088                     	;# 
   201     0089                     	;# 
   202     008C                     	;# 
   203     008D                     	;# 
   204     008E                     	;# 
   205     008F                     	;# 
   206     0090                     	;# 
   207     0091                     	;# 
   208     0092                     	;# 
   209     0093                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0094                     	;# 
   213     0095                     	;# 
   214     0096                     	;# 
   215     0097                     	;# 
   216     0098                     	;# 
   217     0099                     	;# 
   218     009A                     	;# 
   219     009B                     	;# 
   220     009C                     	;# 
   221     009D                     	;# 
   222     009E                     	;# 
   223     009F                     	;# 
   224     0105                     	;# 
   225     0107                     	;# 
   226     0108                     	;# 
   227     0109                     	;# 
   228     010C                     	;# 
   229     010C                     	;# 
   230     010D                     	;# 
   231     010E                     	;# 
   232     010F                     	;# 
   233     0185                     	;# 
   234     0187                     	;# 
   235     0188                     	;# 
   236     0189                     	;# 
   237     018C                     	;# 
   238     018D                     	;# 
   239     0000                     	;# 
   240     0001                     	;# 
   241     0002                     	;# 
   242     0003                     	;# 
   243     0004                     	;# 
   244     0005                     	;# 
   245     0006                     	;# 
   246     0007                     	;# 
   247     0008                     	;# 
   248     0009                     	;# 
   249     000A                     	;# 
   250     000B                     	;# 
   251     000C                     	;# 
   252     000D                     	;# 
   253     000E                     	;# 
   254     000E                     	;# 
   255     000F                     	;# 
   256     0010                     	;# 
   257     0011                     	;# 
   258     0012                     	;# 
   259     0013                     	;# 
   260     0014                     	;# 
   261     0015                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0017                     	;# 
   265     0018                     	;# 
   266     0019                     	;# 
   267     001A                     	;# 
   268     001B                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001D                     	;# 
   272     001E                     	;# 
   273     001F                     	;# 
   274     0081                     	;# 
   275     0085                     	;# 
   276     0086                     	;# 
   277     0087                     	;# 
   278     0088                     	;# 
   279     0089                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     008F                     	;# 
   284     0090                     	;# 
   285     0091                     	;# 
   286     0092                     	;# 
   287     0093                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0094                     	;# 
   291     0095                     	;# 
   292     0096                     	;# 
   293     0097                     	;# 
   294     0098                     	;# 
   295     0099                     	;# 
   296     009A                     	;# 
   297     009B                     	;# 
   298     009C                     	;# 
   299     009D                     	;# 
   300     009E                     	;# 
   301     009F                     	;# 
   302     0105                     	;# 
   303     0107                     	;# 
   304     0108                     	;# 
   305     0109                     	;# 
   306     010C                     	;# 
   307     010C                     	;# 
   308     010D                     	;# 
   309     010E                     	;# 
   310     010F                     	;# 
   311     0185                     	;# 
   312     0187                     	;# 
   313     0188                     	;# 
   314     0189                     	;# 
   315     018C                     	;# 
   316     018D                     	;# 
   317     0000                     	;# 
   318     0001                     	;# 
   319     0002                     	;# 
   320     0003                     	;# 
   321     0004                     	;# 
   322     0005                     	;# 
   323     0006                     	;# 
   324     0007                     	;# 
   325     0008                     	;# 
   326     0009                     	;# 
   327     000A                     	;# 
   328     000B                     	;# 
   329     000C                     	;# 
   330     000D                     	;# 
   331     000E                     	;# 
   332     000E                     	;# 
   333     000F                     	;# 
   334     0010                     	;# 
   335     0011                     	;# 
   336     0012                     	;# 
   337     0013                     	;# 
   338     0014                     	;# 
   339     0015                     	;# 
   340     0015                     	;# 
   341     0016                     	;# 
   342     0017                     	;# 
   343     0018                     	;# 
   344     0019                     	;# 
   345     001A                     	;# 
   346     001B                     	;# 
   347     001B                     	;# 
   348     001C                     	;# 
   349     001D                     	;# 
   350     001E                     	;# 
   351     001F                     	;# 
   352     0081                     	;# 
   353     0085                     	;# 
   354     0086                     	;# 
   355     0087                     	;# 
   356     0088                     	;# 
   357     0089                     	;# 
   358     008C                     	;# 
   359     008D                     	;# 
   360     008E                     	;# 
   361     008F                     	;# 
   362     0090                     	;# 
   363     0091                     	;# 
   364     0092                     	;# 
   365     0093                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0094                     	;# 
   369     0095                     	;# 
   370     0096                     	;# 
   371     0097                     	;# 
   372     0098                     	;# 
   373     0099                     	;# 
   374     009A                     	;# 
   375     009B                     	;# 
   376     009C                     	;# 
   377     009D                     	;# 
   378     009E                     	;# 
   379     009F                     	;# 
   380     0105                     	;# 
   381     0107                     	;# 
   382     0108                     	;# 
   383     0109                     	;# 
   384     010C                     	;# 
   385     010C                     	;# 
   386     010D                     	;# 
   387     010E                     	;# 
   388     010F                     	;# 
   389     0185                     	;# 
   390     0187                     	;# 
   391     0188                     	;# 
   392     0189                     	;# 
   393     018C                     	;# 
   394     018D                     	;# 
   395     0000                     	;# 
   396     0001                     	;# 
   397     0002                     	;# 
   398     0003                     	;# 
   399     0004                     	;# 
   400     0005                     	;# 
   401     0006                     	;# 
   402     0007                     	;# 
   403     0008                     	;# 
   404     0009                     	;# 
   405     000A                     	;# 
   406     000B                     	;# 
   407     000C                     	;# 
   408     000D                     	;# 
   409     000E                     	;# 
   410     000E                     	;# 
   411     000F                     	;# 
   412     0010                     	;# 
   413     0011                     	;# 
   414     0012                     	;# 
   415     0013                     	;# 
   416     0014                     	;# 
   417     0015                     	;# 
   418     0015                     	;# 
   419     0016                     	;# 
   420     0017                     	;# 
   421     0018                     	;# 
   422     0019                     	;# 
   423     001A                     	;# 
   424     001B                     	;# 
   425     001B                     	;# 
   426     001C                     	;# 
   427     001D                     	;# 
   428     001E                     	;# 
   429     001F                     	;# 
   430     0081                     	;# 
   431     0085                     	;# 
   432     0086                     	;# 
   433     0087                     	;# 
   434     0088                     	;# 
   435     0089                     	;# 
   436     008C                     	;# 
   437     008D                     	;# 
   438     008E                     	;# 
   439     008F                     	;# 
   440     0090                     	;# 
   441     0091                     	;# 
   442     0092                     	;# 
   443     0093                     	;# 
   444     0093                     	;# 
   445     0093                     	;# 
   446     0094                     	;# 
   447     0095                     	;# 
   448     0096                     	;# 
   449     0097                     	;# 
   450     0098                     	;# 
   451     0099                     	;# 
   452     009A                     	;# 
   453     009B                     	;# 
   454     009C                     	;# 
   455     009D                     	;# 
   456     009E                     	;# 
   457     009F                     	;# 
   458     0105                     	;# 
   459     0107                     	;# 
   460     0108                     	;# 
   461     0109                     	;# 
   462     010C                     	;# 
   463     010C                     	;# 
   464     010D                     	;# 
   465     010E                     	;# 
   466     010F                     	;# 
   467     0185                     	;# 
   468     0187                     	;# 
   469     0188                     	;# 
   470     0189                     	;# 
   471     018C                     	;# 
   472     018D                     	;# 
   473                           
   474                           	psect	strings
   475     1800                     __pstrings:
   476     1800                     stringtab:
   477     1800                     __stringtab:
   478                           
   479                           ;	String table - string pointers are 1 byte each
   480     1800  1BFF               	btfsc	btemp+1,7
   481     1801  280A               	ljmp	stringcode
   482     1802  1383               	bcf	3,7
   483     1803  187F               	btfsc	btemp+1,0
   484     1804  1783               	bsf	3,7
   485     1805  0800               	movf	0,w
   486     1806  0A84               	incf	4,f
   487     1807  1903               	skipnz
   488     1808  0AFF               	incf	btemp+1,f
   489     1809  0008               	return
   490     180A                     stringcode:
   491     180A                     stringdir:
   492     180A  3018               	movlw	high stringdir
   493     180B  008A               	movwf	10
   494     180C  0804               	movf	4,w
   495     180D  0A84               	incf	4,f
   496     180E  0782               	addwf	2,f
   497     180F                     __stringbase:
   498     180F  3400               	retlw	0
   499     1810                     __end_of__stringtab:
   500     1810                     __powers_:
   501     1810  3400               	retlw	0
   502     1811  3400               	retlw	0
   503     1812  3480               	retlw	128
   504     1813  343F               	retlw	63
   505     1814  3400               	retlw	0
   506     1815  3400               	retlw	0
   507     1816  3420               	retlw	32
   508     1817  3441               	retlw	65
   509     1818  3400               	retlw	0
   510     1819  3400               	retlw	0
   511     181A  34C8               	retlw	200
   512     181B  3442               	retlw	66
   513     181C  3400               	retlw	0
   514     181D  3400               	retlw	0
   515     181E  347A               	retlw	122
   516     181F  3444               	retlw	68
   517     1820  3400               	retlw	0
   518     1821  3440               	retlw	64
   519     1822  341C               	retlw	28
   520     1823  3446               	retlw	70
   521     1824  3400               	retlw	0
   522     1825  3450               	retlw	80
   523     1826  34C3               	retlw	195
   524     1827  3447               	retlw	71
   525     1828  3400               	retlw	0
   526     1829  3424               	retlw	36
   527     182A  3474               	retlw	116
   528     182B  3449               	retlw	73
   529     182C  3480               	retlw	128
   530     182D  3496               	retlw	150
   531     182E  3418               	retlw	24
   532     182F  344B               	retlw	75
   533     1830  3420               	retlw	32
   534     1831  34BC               	retlw	188
   535     1832  34BE               	retlw	190
   536     1833  344C               	retlw	76
   537     1834  3428               	retlw	40
   538     1835  346B               	retlw	107
   539     1836  346E               	retlw	110
   540     1837  344E               	retlw	78
   541     1838  34F9               	retlw	249
   542     1839  3402               	retlw	2
   543     183A  3415               	retlw	21
   544     183B  3450               	retlw	80
   545     183C  34EC               	retlw	236
   546     183D  3478               	retlw	120
   547     183E  34AD               	retlw	173
   548     183F  3460               	retlw	96
   549     1840  34CA               	retlw	202
   550     1841  34F2               	retlw	242
   551     1842  3449               	retlw	73
   552     1843  3471               	retlw	113
   553     1844                     __end_of__powers_:
   554     1844                     __npowers_:
   555     1844  3400               	retlw	0
   556     1845  3400               	retlw	0
   557     1846  3480               	retlw	128
   558     1847  343F               	retlw	63
   559     1848  34CD               	retlw	205
   560     1849  34CC               	retlw	204
   561     184A  34CC               	retlw	204
   562     184B  343D               	retlw	61
   563     184C  340A               	retlw	10
   564     184D  34D7               	retlw	215
   565     184E  3423               	retlw	35
   566     184F  343C               	retlw	60
   567     1850  346F               	retlw	111
   568     1851  3412               	retlw	18
   569     1852  3483               	retlw	131
   570     1853  343A               	retlw	58
   571     1854  3417               	retlw	23
   572     1855  34B7               	retlw	183
   573     1856  34D1               	retlw	209
   574     1857  3438               	retlw	56
   575     1858  34AC               	retlw	172
   576     1859  34C5               	retlw	197
   577     185A  3427               	retlw	39
   578     185B  3437               	retlw	55
   579     185C  34BD               	retlw	189
   580     185D  3437               	retlw	55
   581     185E  3486               	retlw	134
   582     185F  3435               	retlw	53
   583     1860  3495               	retlw	149
   584     1861  34BF               	retlw	191
   585     1862  34D6               	retlw	214
   586     1863  3433               	retlw	51
   587     1864  3477               	retlw	119
   588     1865  34CC               	retlw	204
   589     1866  342B               	retlw	43
   590     1867  3432               	retlw	50
   591     1868  345F               	retlw	95
   592     1869  3470               	retlw	112
   593     186A  3489               	retlw	137
   594     186B  3430               	retlw	48
   595     186C  34FF               	retlw	255
   596     186D  34E6               	retlw	230
   597     186E  34DB               	retlw	219
   598     186F  342E               	retlw	46
   599     1870  3408               	retlw	8
   600     1871  34E5               	retlw	229
   601     1872  343C               	retlw	60
   602     1873  341E               	retlw	30
   603     1874  3460               	retlw	96
   604     1875  3442               	retlw	66
   605     1876  34A2               	retlw	162
   606     1877  340D               	retlw	13
   607     1878                     __end_of__npowers_:
   608     1878                     _dpowers:
   609     1878  3401               	retlw	1
   610     1879  3400               	retlw	0
   611     187A  3400               	retlw	0
   612     187B  3400               	retlw	0
   613     187C  340A               	retlw	10
   614     187D  3400               	retlw	0
   615     187E  3400               	retlw	0
   616     187F  3400               	retlw	0
   617     1880  3464               	retlw	100
   618     1881  3400               	retlw	0
   619     1882  3400               	retlw	0
   620     1883  3400               	retlw	0
   621     1884  34E8               	retlw	232
   622     1885  3403               	retlw	3
   623     1886  3400               	retlw	0
   624     1887  3400               	retlw	0
   625     1888  3410               	retlw	16
   626     1889  3427               	retlw	39
   627     188A  3400               	retlw	0
   628     188B  3400               	retlw	0
   629     188C  34A0               	retlw	160
   630     188D  3486               	retlw	134
   631     188E  3401               	retlw	1
   632     188F  3400               	retlw	0
   633     1890  3440               	retlw	64
   634     1891  3442               	retlw	66
   635     1892  340F               	retlw	15
   636     1893  3400               	retlw	0
   637     1894  3480               	retlw	128
   638     1895  3496               	retlw	150
   639     1896  3498               	retlw	152
   640     1897  3400               	retlw	0
   641     1898  3400               	retlw	0
   642     1899  34E1               	retlw	225
   643     189A  34F5               	retlw	245
   644     189B  3405               	retlw	5
   645     189C  3400               	retlw	0
   646     189D  34CA               	retlw	202
   647     189E  349A               	retlw	154
   648     189F  343B               	retlw	59
   649     18A0                     __end_of_dpowers:
   650     001F                     _ADCON0bits	set	31
   651     0008                     _PORTDbits	set	8
   652     0009                     _PORTE	set	9
   653     0008                     _PORTD	set	8
   654     0007                     _PORTC	set	7
   655     0006                     _PORTB	set	6
   656     001E                     _ADRESH	set	30
   657     0066                     _ADIF	set	102
   658     008F                     _OSCCONbits	set	143
   659     009F                     _ADCON1bits	set	159
   660     0085                     _TRISAbits	set	133
   661     0089                     _TRISE	set	137
   662     0088                     _TRISD	set	136
   663     0087                     _TRISC	set	135
   664     0086                     _TRISB	set	134
   665     0188                     _ANSELbits	set	392
   666     0189                     _ANSELH	set	393
   667     0188                     _ANSEL	set	392
   668     18A0                     STR_3:
   669     18A0  3443               	retlw	67	;'C'
   670     18A1  344F               	retlw	79	;'O'
   671     18A2  344E               	retlw	78	;'N'
   672     18A3  3454               	retlw	84	;'T'
   673     18A4  342E               	retlw	46	;'.'
   674     18A5  3400               	retlw	0
   675     18A6                     STR_4:
   676     18A6  3425               	retlw	37	;'%'
   677     18A7  342E               	retlw	46	;'.'
   678     18A8  3432               	retlw	50	;'2'
   679     18A9  3466               	retlw	102	;'f'
   680     18AA  3400               	retlw	0
   681     18AB                     STR_1:
   682     18AB  3453               	retlw	83	;'S'
   683     18AC  3431               	retlw	49	;'1'
   684     18AD  343A               	retlw	58	;':'
   685     18AE  3400               	retlw	0
   686     18AF                     STR_2:
   687     18AF  3453               	retlw	83	;'S'
   688     18B0  3432               	retlw	50	;'2'
   689     18B1  343A               	retlw	58	;':'
   690     18B2  3400               	retlw	0
   691     18A6                     
   692                           	psect	cinit
   693     07FC                     start_initialization:	
   694                           ; #config settings
   695                           
   696     07FC                     __initialization:
   697     07FC                     end_of_initialization:	
   698                           ;End of C runtime variable initialization code
   699                           
   700     07FC                     __end_of__initialization:
   701     07FC  0183               	clrf	3
   702     07FD  120A  118A  2859   	ljmp	_main	;jump to C main() function
   703                           
   704                           	psect	cstackBANK1
   705     00A0                     __pcstackBANK1:
   706     00A0                     ?_sprintf:
   707     00A0                     sprintf@f:	
   708                           ; 2 bytes @ 0x0
   709                           
   710                           
   711                           ; 1 bytes @ 0x0
   712     00A0                     	ds	5
   713     00A5                     ??_sprintf:
   714                           
   715                           ; 1 bytes @ 0x5
   716     00A5                     	ds	5
   717     00AA                     _sprintf$1019:
   718                           
   719                           ; 4 bytes @ 0xA
   720     00AA                     	ds	4
   721     00AE                     sprintf@ap:
   722                           
   723                           ; 1 bytes @ 0xE
   724     00AE                     	ds	1
   725     00AF                     sprintf@flag:
   726                           
   727                           ; 2 bytes @ 0xF
   728     00AF                     	ds	2
   729     00B1                     sprintf@val:
   730                           
   731                           ; 4 bytes @ 0x11
   732     00B1                     	ds	4
   733     00B5                     sprintf@eexp:
   734                           
   735                           ; 2 bytes @ 0x15
   736     00B5                     	ds	2
   737     00B7                     sprintf@tmpval:
   738                           
   739                           ; 4 bytes @ 0x17
   740     00B7                     	ds	4
   741     00BB                     sprintf@sp:
   742                           
   743                           ; 1 bytes @ 0x1B
   744     00BB                     	ds	1
   745     00BC                     sprintf@prec:
   746                           
   747                           ; 2 bytes @ 0x1C
   748     00BC                     	ds	2
   749     00BE                     sprintf@fval:
   750                           
   751                           ; 4 bytes @ 0x1E
   752     00BE                     	ds	4
   753     00C2                     sprintf@c:
   754                           
   755                           ; 1 bytes @ 0x22
   756     00C2                     	ds	1
   757     00C3                     ??_main:
   758                           
   759                           ; 1 bytes @ 0x23
   760     00C3                     	ds	4
   761     00C7                     main@V1:
   762                           
   763                           ; 4 bytes @ 0x27
   764     00C7                     	ds	4
   765     00CB                     main@V2:
   766                           
   767                           ; 4 bytes @ 0x2B
   768     00CB                     	ds	4
   769     00CF                     main@ADC1:
   770                           
   771                           ; 3 bytes @ 0x2F
   772     00CF                     	ds	3
   773     00D2                     main@ADC2:
   774                           
   775                           ; 3 bytes @ 0x32
   776     00D2                     	ds	3
   777                           
   778                           	psect	cstackCOMMON
   779     0070                     __pcstackCOMMON:
   780     0070                     ?_isdigit:
   781     0070                     ?___fleq:	
   782                           ; 1 bit 
   783                           
   784     0070                     ?___flge:	
   785                           ; 1 bit 
   786                           
   787     0070                     ?_setup:	
   788                           ; 1 bit 
   789                           
   790     0070                     ??_setup:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?_setupINTOSC:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ?_setupADC:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ??_setupADC:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ?_Lcd_Init_4bits:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ?_Lcd_Clear_4bits:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ?_readADC:	
   809                           ; 1 bytes @ 0x0
   810                           
   811     0070                     ??_readADC:	
   812                           ; 1 bytes @ 0x0
   813                           
   814     0070                     ??_isdigit:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ?_main:	
   818                           ; 1 bytes @ 0x0
   819                           
   820     0070                     ?_Lcd_Port_4bits:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     ??_Lcd_Port_4bits:	
   824                           ; 1 bytes @ 0x0
   825                           
   826     0070                     ?_Lcd_Cmd_4bits:	
   827                           ; 1 bytes @ 0x0
   828                           
   829     0070                     ?_Lcd_Write_Char_4bits:	
   830                           ; 1 bytes @ 0x0
   831                           
   832     0070                     ?__Umul8_16:	
   833                           ; 1 bytes @ 0x0
   834                           
   835     0070                     ?___wmul:	
   836                           ; 2 bytes @ 0x0
   837                           
   838     0070                     ?___awmod:	
   839                           ; 2 bytes @ 0x0
   840                           
   841     0070                     ?___lwmod:	
   842                           ; 2 bytes @ 0x0
   843                           
   844     0070                     ?__tdiv_to_l_:	
   845                           ; 2 bytes @ 0x0
   846                           
   847     0070                     ?__div_to_l_:	
   848                           ; 4 bytes @ 0x0
   849                           
   850     0070                     ?___lldiv:	
   851                           ; 4 bytes @ 0x0
   852                           
   853     0070                     ?___flneg:	
   854                           ; 4 bytes @ 0x0
   855                           
   856     0070                     ?___llmod:	
   857                           ; 4 bytes @ 0x0
   858                           
   859     0070                     ?___xxtofl:	
   860                           ; 4 bytes @ 0x0
   861                           
   862     0070                     Lcd_Port_4bits@a:	
   863                           ; 4 bytes @ 0x0
   864                           
   865     0070                     __Umul8_16@multiplicand:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     _isdigit$838:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     setupINTOSC@OsciladorInterno:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ___wmul@multiplier:	
   875                           ; 2 bytes @ 0x0
   876                           
   877     0070                     ___awmod@divisor:	
   878                           ; 2 bytes @ 0x0
   879                           
   880     0070                     ___lwmod@divisor:	
   881                           ; 2 bytes @ 0x0
   882                           
   883     0070                     ___lldiv@divisor:	
   884                           ; 2 bytes @ 0x0
   885                           
   886     0070                     __div_to_l_@f1:	
   887                           ; 4 bytes @ 0x0
   888                           
   889     0070                     ___fleq@ff1:	
   890                           ; 4 bytes @ 0x0
   891                           
   892     0070                     ___flge@ff1:	
   893                           ; 4 bytes @ 0x0
   894                           
   895     0070                     ___flneg@f1:	
   896                           ; 4 bytes @ 0x0
   897                           
   898     0070                     __tdiv_to_l_@f1:	
   899                           ; 4 bytes @ 0x0
   900                           
   901     0070                     ___llmod@divisor:	
   902                           ; 4 bytes @ 0x0
   903                           
   904     0070                     ___xxtofl@val:	
   905                           ; 4 bytes @ 0x0
   906                           
   907                           
   908                           ; 4 bytes @ 0x0
   909     0070                     	ds	1
   910     0071                     ??_Lcd_Cmd_4bits:
   911     0071                     ??_Lcd_Write_Char_4bits:	
   912                           ; 1 bytes @ 0x1
   913                           
   914     0071                     setupADC@canal:	
   915                           ; 1 bytes @ 0x1
   916                           
   917     0071                     isdigit@c:	
   918                           ; 1 bytes @ 0x1
   919                           
   920                           
   921                           ; 1 bytes @ 0x1
   922     0071                     	ds	1
   923     0072                     ??_setupINTOSC:
   924     0072                     ??__Umul8_16:	
   925                           ; 1 bytes @ 0x2
   926                           
   927     0072                     Lcd_Write_Char_4bits@temp:	
   928                           ; 1 bytes @ 0x2
   929                           
   930     0072                     readADC@canal:	
   931                           ; 1 bytes @ 0x2
   932                           
   933     0072                     ___wmul@multiplicand:	
   934                           ; 1 bytes @ 0x2
   935                           
   936     0072                     ___awmod@dividend:	
   937                           ; 2 bytes @ 0x2
   938                           
   939     0072                     ___lwmod@dividend:	
   940                           ; 2 bytes @ 0x2
   941                           
   942                           
   943                           ; 2 bytes @ 0x2
   944     0072                     	ds	1
   945     0073                     Lcd_Cmd_4bits@a:
   946     0073                     Lcd_Write_Char_4bits@y:	
   947                           ; 1 bytes @ 0x3
   948                           
   949                           
   950                           ; 1 bytes @ 0x3
   951     0073                     	ds	1
   952     0074                     ??_Lcd_Init_4bits:
   953     0074                     ??_Lcd_Clear_4bits:	
   954                           ; 1 bytes @ 0x4
   955                           
   956     0074                     ?_Lcd_Set_Cursor_4bits:	
   957                           ; 1 bytes @ 0x4
   958                           
   959     0074                     ??___wmul:	
   960                           ; 1 bytes @ 0x4
   961                           
   962     0074                     ??___awmod:	
   963                           ; 1 bytes @ 0x4
   964                           
   965     0074                     ??___flneg:	
   966                           ; 1 bytes @ 0x4
   967                           
   968     0074                     ??___lwmod:	
   969                           ; 1 bytes @ 0x4
   970                           
   971     0074                     ??___xxtofl:	
   972                           ; 1 bytes @ 0x4
   973                           
   974     0074                     Lcd_Set_Cursor_4bits@b:	
   975                           ; 1 bytes @ 0x4
   976                           
   977     0074                     Lcd_Write_Char_4bits@a:	
   978                           ; 1 bytes @ 0x4
   979                           
   980     0074                     ___wmul@product:	
   981                           ; 1 bytes @ 0x4
   982                           
   983     0074                     __Umul8_16@product:	
   984                           ; 2 bytes @ 0x4
   985                           
   986     0074                     ___lldiv@dividend:	
   987                           ; 2 bytes @ 0x4
   988                           
   989     0074                     __div_to_l_@f2:	
   990                           ; 4 bytes @ 0x4
   991                           
   992     0074                     ___fleq@ff2:	
   993                           ; 4 bytes @ 0x4
   994                           
   995     0074                     ___flge@ff2:	
   996                           ; 4 bytes @ 0x4
   997                           
   998     0074                     __tdiv_to_l_@f2:	
   999                           ; 4 bytes @ 0x4
  1000                           
  1001     0074                     ___llmod@dividend:	
  1002                           ; 4 bytes @ 0x4
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006     0074                     	ds	1
  1007     0075                     ??_Lcd_Set_Cursor_4bits:
  1008     0075                     ?_Lcd_Write_String_4bits:	
  1009                           ; 1 bytes @ 0x5
  1010                           
  1011     0075                     ___awmod@counter:	
  1012                           ; 1 bytes @ 0x5
  1013                           
  1014     0075                     ___lwmod@counter:	
  1015                           ; 1 bytes @ 0x5
  1016                           
  1017     0075                     Lcd_Write_String_4bits@a:	
  1018                           ; 1 bytes @ 0x5
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x5
  1022     0075                     	ds	1
  1023     0076                     ?___lwdiv:
  1024     0076                     Lcd_Set_Cursor_4bits@a:	
  1025                           ; 2 bytes @ 0x6
  1026                           
  1027     0076                     ___awmod@sign:	
  1028                           ; 1 bytes @ 0x6
  1029                           
  1030     0076                     ___lwdiv@divisor:	
  1031                           ; 1 bytes @ 0x6
  1032                           
  1033     0076                     __Umul8_16@word_mpld:	
  1034                           ; 2 bytes @ 0x6
  1035                           
  1036                           
  1037                           ; 2 bytes @ 0x6
  1038     0076                     	ds	1
  1039     0077                     ??_Lcd_Write_String_4bits:
  1040     0077                     ?___awdiv:	
  1041                           ; 1 bytes @ 0x7
  1042                           
  1043     0077                     Lcd_Set_Cursor_4bits@z:	
  1044                           ; 2 bytes @ 0x7
  1045                           
  1046     0077                     ___awdiv@divisor:	
  1047                           ; 1 bytes @ 0x7
  1048                           
  1049                           
  1050                           ; 2 bytes @ 0x7
  1051     0077                     	ds	1
  1052     0078                     ??__tdiv_to_l_:
  1053     0078                     ??__div_to_l_:	
  1054                           ; 1 bytes @ 0x8
  1055                           
  1056     0078                     ??___lldiv:	
  1057                           ; 1 bytes @ 0x8
  1058                           
  1059     0078                     ??___fleq:	
  1060                           ; 1 bytes @ 0x8
  1061                           
  1062     0078                     ??___flge:	
  1063                           ; 1 bytes @ 0x8
  1064                           
  1065     0078                     ??___llmod:	
  1066                           ; 1 bytes @ 0x8
  1067                           
  1068     0078                     Lcd_Set_Cursor_4bits@y:	
  1069                           ; 1 bytes @ 0x8
  1070                           
  1071     0078                     __Umul8_16@multiplier:	
  1072                           ; 1 bytes @ 0x8
  1073                           
  1074     0078                     ___xxtofl@sign:	
  1075                           ; 1 bytes @ 0x8
  1076                           
  1077     0078                     ___lwdiv@dividend:	
  1078                           ; 1 bytes @ 0x8
  1079                           
  1080                           
  1081                           ; 2 bytes @ 0x8
  1082     0078                     	ds	1
  1083     0079                     Lcd_Set_Cursor_4bits@temp:
  1084     0079                     ___llmod@counter:	
  1085                           ; 1 bytes @ 0x9
  1086                           
  1087     0079                     ___xxtofl@exp:	
  1088                           ; 1 bytes @ 0x9
  1089                           
  1090     0079                     ___awdiv@dividend:	
  1091                           ; 1 bytes @ 0x9
  1092                           
  1093     0079                     ___lldiv@quotient:	
  1094                           ; 2 bytes @ 0x9
  1095                           
  1096                           
  1097                           ; 4 bytes @ 0x9
  1098     0079                     	ds	1
  1099     007A                     ??___lwdiv:
  1100     007A                     Lcd_Write_String_4bits@i:	
  1101                           ; 1 bytes @ 0xA
  1102                           
  1103     007A                     ___xxtofl@arg:	
  1104                           ; 2 bytes @ 0xA
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0xA
  1108     007A                     	ds	1
  1109     007B                     ??___awdiv:
  1110     007B                     ___lwdiv@quotient:	
  1111                           ; 1 bytes @ 0xB
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0xB
  1115     007B                     	ds	2
  1116     007D                     ___lldiv@counter:
  1117     007D                     ___lwdiv@counter:	
  1118                           ; 1 bytes @ 0xD
  1119                           
  1120                           
  1121                           ; 1 bytes @ 0xD
  1122     007D                     	ds	1
  1123     007E                     ??___flsub:
  1124                           
  1125                           	psect	cstackBANK0
  1126     0020                     __pcstackBANK0:	
  1127                           ; 1 bytes @ 0xE
  1128                           
  1129     0020                     ___awdiv@counter:
  1130     0020                     __div_to_l_@quot:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133     0020                     __tdiv_to_l_@quot:	
  1134                           ; 4 bytes @ 0x0
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0x0
  1138     0020                     	ds	1
  1139     0021                     ___awdiv@sign:
  1140                           
  1141                           ; 1 bytes @ 0x1
  1142     0021                     	ds	1
  1143     0022                     ___awdiv@quotient:
  1144                           
  1145                           ; 2 bytes @ 0x2
  1146     0022                     	ds	2
  1147     0024                     ?___flmul:
  1148     0024                     __div_to_l_@cntr:	
  1149                           ; 4 bytes @ 0x4
  1150                           
  1151     0024                     __tdiv_to_l_@cntr:	
  1152                           ; 1 bytes @ 0x4
  1153                           
  1154     0024                     ___flmul@b:	
  1155                           ; 1 bytes @ 0x4
  1156                           
  1157                           
  1158                           ; 4 bytes @ 0x4
  1159     0024                     	ds	1
  1160     0025                     __div_to_l_@exp1:
  1161     0025                     __tdiv_to_l_@exp1:	
  1162                           ; 1 bytes @ 0x5
  1163                           
  1164                           
  1165                           ; 1 bytes @ 0x5
  1166     0025                     	ds	3
  1167     0028                     ___flmul@a:
  1168                           
  1169                           ; 4 bytes @ 0x8
  1170     0028                     	ds	4
  1171     002C                     ??___flmul:
  1172                           
  1173                           ; 1 bytes @ 0xC
  1174     002C                     	ds	5
  1175     0031                     ___flmul@sign:
  1176                           
  1177                           ; 1 bytes @ 0x11
  1178     0031                     	ds	1
  1179     0032                     ___flmul@grs:
  1180                           
  1181                           ; 4 bytes @ 0x12
  1182     0032                     	ds	4
  1183     0036                     ___flmul@aexp:
  1184                           
  1185                           ; 1 bytes @ 0x16
  1186     0036                     	ds	1
  1187     0037                     ___flmul@bexp:
  1188                           
  1189                           ; 1 bytes @ 0x17
  1190     0037                     	ds	1
  1191     0038                     ___flmul@prod:
  1192                           
  1193                           ; 4 bytes @ 0x18
  1194     0038                     	ds	4
  1195     003C                     ___flmul@temp:
  1196                           
  1197                           ; 2 bytes @ 0x1C
  1198     003C                     	ds	2
  1199     003E                     ?_fround:
  1200     003E                     ?_scale:	
  1201                           ; 4 bytes @ 0x1E
  1202                           
  1203     003E                     ?___fldiv:	
  1204                           ; 4 bytes @ 0x1E
  1205                           
  1206     003E                     ___fldiv@a:	
  1207                           ; 4 bytes @ 0x1E
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0x1E
  1211     003E                     	ds	4
  1212     0042                     ??_fround:
  1213     0042                     ??_scale:	
  1214                           ; 1 bytes @ 0x22
  1215                           
  1216     0042                     ___fldiv@b:	
  1217                           ; 1 bytes @ 0x22
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x22
  1221     0042                     	ds	4
  1222     0046                     ??___fldiv:
  1223                           
  1224                           ; 1 bytes @ 0x26
  1225     0046                     	ds	3
  1226     0049                     _fround$1017:
  1227                           
  1228                           ; 4 bytes @ 0x29
  1229     0049                     	ds	2
  1230     004B                     ___fldiv@rem:
  1231                           
  1232                           ; 4 bytes @ 0x2B
  1233     004B                     	ds	1
  1234     004C                     _scale$1018:
  1235                           
  1236                           ; 4 bytes @ 0x2C
  1237     004C                     	ds	1
  1238     004D                     _fround$1016:
  1239                           
  1240                           ; 4 bytes @ 0x2D
  1241     004D                     	ds	2
  1242     004F                     ___fldiv@sign:
  1243                           
  1244                           ; 1 bytes @ 0x2F
  1245     004F                     	ds	1
  1246     0050                     scale@scl:
  1247     0050                     ___fldiv@new_exp:	
  1248                           ; 1 bytes @ 0x30
  1249                           
  1250                           
  1251                           ; 2 bytes @ 0x30
  1252     0050                     	ds	1
  1253     0051                     ?___fltol:
  1254     0051                     fround@prec:	
  1255                           ; 4 bytes @ 0x31
  1256                           
  1257     0051                     ___fltol@f1:	
  1258                           ; 1 bytes @ 0x31
  1259                           
  1260                           
  1261                           ; 4 bytes @ 0x31
  1262     0051                     	ds	1
  1263     0052                     ?___fladd:
  1264     0052                     ___fladd@b:	
  1265                           ; 4 bytes @ 0x32
  1266                           
  1267     0052                     ___fldiv@grs:	
  1268                           ; 4 bytes @ 0x32
  1269                           
  1270                           
  1271                           ; 4 bytes @ 0x32
  1272     0052                     	ds	3
  1273     0055                     ??___fltol:
  1274                           
  1275                           ; 1 bytes @ 0x35
  1276     0055                     	ds	1
  1277     0056                     ___fldiv@bexp:
  1278     0056                     ___fladd@a:	
  1279                           ; 1 bytes @ 0x36
  1280                           
  1281                           
  1282                           ; 4 bytes @ 0x36
  1283     0056                     	ds	1
  1284     0057                     ___fldiv@aexp:
  1285                           
  1286                           ; 1 bytes @ 0x37
  1287     0057                     	ds	2
  1288     0059                     ___fltol@sign1:
  1289                           
  1290                           ; 1 bytes @ 0x39
  1291     0059                     	ds	1
  1292     005A                     ??___fladd:
  1293     005A                     ___fltol@exp1:	
  1294                           ; 1 bytes @ 0x3A
  1295                           
  1296                           
  1297                           ; 1 bytes @ 0x3A
  1298     005A                     	ds	8
  1299     0062                     ___fladd@signs:
  1300                           
  1301                           ; 1 bytes @ 0x42
  1302     0062                     	ds	1
  1303     0063                     ___fladd@aexp:
  1304                           
  1305                           ; 1 bytes @ 0x43
  1306     0063                     	ds	1
  1307     0064                     ___fladd@bexp:
  1308                           
  1309                           ; 1 bytes @ 0x44
  1310     0064                     	ds	1
  1311     0065                     ___fladd@grs:
  1312                           
  1313                           ; 1 bytes @ 0x45
  1314     0065                     	ds	1
  1315     0066                     ?___flsub:
  1316     0066                     ___flsub@a:	
  1317                           ; 4 bytes @ 0x46
  1318                           
  1319                           
  1320                           ; 4 bytes @ 0x46
  1321     0066                     	ds	4
  1322     006A                     ___flsub@b:
  1323                           
  1324                           ; 4 bytes @ 0x4A
  1325     006A                     	ds	4
  1326                           
  1327                           	psect	maintext
  1328     0059                     __pmaintext:	
  1329 ;;
  1330 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1331 ;;
  1332 ;; *************** function _main *****************
  1333 ;; Defined at:
  1334 ;;		line 60 in file "main.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  V2              4   43[BANK1 ] float 
  1339 ;;  V1              4   39[BANK1 ] float 
  1340 ;;  ADC2            3   50[BANK1 ] unsigned char [3]
  1341 ;;  ADC1            3   47[BANK1 ] unsigned char [3]
  1342 ;;  OsciladorInt    2    0        int 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : B00/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       0      14       0       0
  1354 ;;      Temps:          0       0       4       0       0
  1355 ;;      Totals:         0       0      18       0       0
  1356 ;;Total ram usage:       18 bytes
  1357 ;; Hardware stack levels required when called: 4
  1358 ;; This function calls:
  1359 ;;		_Lcd_Clear_4bits
  1360 ;;		_Lcd_Init_4bits
  1361 ;;		_Lcd_Set_Cursor_4bits
  1362 ;;		_Lcd_Write_String_4bits
  1363 ;;		___fldiv
  1364 ;;		___flmul
  1365 ;;		___xxtofl
  1366 ;;		_readADC
  1367 ;;		_setup
  1368 ;;		_setupADC
  1369 ;;		_setupINTOSC
  1370 ;;		_sprintf
  1371 ;; This function is called by:
  1372 ;;		Startup code after reset
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376     0059                     _main:	
  1377                           ;psect for function _main
  1378                           
  1379     0059                     l3626:	
  1380                           ;incstack = 0
  1381                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1382                           
  1383                           
  1384                           ;main.c: 62:   int OsciladorInterno;;main.c: 64:   float V1;;main.c: 65:   float V2;;mai
      +                          n.c: 67:   char ADC1[3];;main.c: 68:   char ADC2[3];;main.c: 70:   setup();
  1385     0059  160A  158A  2333  120A  118A  	fcall	_setup
  1386     005E                     l3628:
  1387                           
  1388                           ;main.c: 71:   setupINTOSC(8);
  1389     005E  3008               	movlw	8
  1390     005F  00F0               	movwf	setupINTOSC@OsciladorInterno
  1391     0060  3000               	movlw	0
  1392     0061  00F1               	movwf	setupINTOSC@OsciladorInterno+1
  1393     0062  160A  158A  2657  120A  118A  	fcall	_setupINTOSC
  1394     0067                     l3630:
  1395                           
  1396                           ;main.c: 72:   setupADC(0);
  1397     0067  3000               	movlw	0
  1398     0068  160A  158A  2402  120A  118A  	fcall	_setupADC
  1399     006D                     l3632:
  1400                           
  1401                           ;main.c: 73:   setupADC(1);
  1402     006D  3001               	movlw	1
  1403     006E  160A  158A  2402  120A  118A  	fcall	_setupADC
  1404     0073                     l3634:
  1405                           
  1406                           ;main.c: 74:   Lcd_Init_4bits();
  1407     0073  160A  158A  25FA  120A  118A  	fcall	_Lcd_Init_4bits
  1408     0078                     l3636:
  1409                           
  1410                           ;main.c: 76:   Lcd_Clear_4bits();
  1411     0078  160A  158A  2326  120A  118A  	fcall	_Lcd_Clear_4bits
  1412     007D                     l3638:
  1413                           
  1414                           ;main.c: 77:   Lcd_Set_Cursor_4bits(1,1);
  1415     007D  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1416     007E  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1417     007F  3001               	movlw	1
  1418     0080  160A  158A  2566  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1419     0085                     l3640:
  1420                           
  1421                           ;main.c: 78:   Lcd_Write_String_4bits("S1:");
  1422     0085  309C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1423     0086  00F5               	movwf	Lcd_Write_String_4bits@a
  1424     0087  3080               	movlw	128
  1425     0088  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1426     0089  160A  158A  249E  120A  118A  	fcall	_Lcd_Write_String_4bits
  1427     008E                     l3642:
  1428                           
  1429                           ;main.c: 79:   Lcd_Set_Cursor_4bits(1,7);
  1430     008E  3007               	movlw	7
  1431     008F  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1432     0090  3001               	movlw	1
  1433     0091  160A  158A  2566  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1434     0096                     l3644:
  1435                           
  1436                           ;main.c: 80:   Lcd_Write_String_4bits("S2:");
  1437     0096  30A0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1438     0097  00F5               	movwf	Lcd_Write_String_4bits@a
  1439     0098  3080               	movlw	128
  1440     0099  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1441     009A  160A  158A  249E  120A  118A  	fcall	_Lcd_Write_String_4bits
  1442     009F                     l3646:
  1443                           
  1444                           ;main.c: 81:   Lcd_Set_Cursor_4bits(1,13);
  1445     009F  300D               	movlw	13
  1446     00A0  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1447     00A1  3001               	movlw	1
  1448     00A2  160A  158A  2566  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1449     00A7                     l3648:
  1450                           
  1451                           ;main.c: 82:   Lcd_Write_String_4bits("CONT.");
  1452     00A7  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1453     00A8  00F5               	movwf	Lcd_Write_String_4bits@a
  1454     00A9  3080               	movlw	128
  1455     00AA  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1456     00AB  160A  158A  249E  120A  118A  	fcall	_Lcd_Write_String_4bits
  1457     00B0                     l3650:
  1458                           
  1459                           ;main.c: 85:   {;main.c: 86:       readADC(0);
  1460     00B0  3000               	movlw	0
  1461     00B1  160A  158A  24E0  120A  118A  	fcall	_readADC
  1462     00B6                     l3652:
  1463                           
  1464                           ;main.c: 88:       V1 = (ADRESH*5.0)/255;
  1465     00B6  3043               	movlw	67
  1466     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1467     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1468     00B9  00C1               	movwf	___fldiv@a+3
  1469     00BA  307F               	movlw	127
  1470     00BB  00C0               	movwf	___fldiv@a+2
  1471     00BC  3000               	movlw	0
  1472     00BD  00BF               	movwf	___fldiv@a+1
  1473     00BE  3000               	movlw	0
  1474     00BF  00BE               	movwf	___fldiv@a
  1475     00C0  3040               	movlw	64
  1476     00C1  00A7               	movwf	___flmul@b+3
  1477     00C2  30A0               	movlw	160
  1478     00C3  00A6               	movwf	___flmul@b+2
  1479     00C4  3000               	movlw	0
  1480     00C5  00A5               	movwf	___flmul@b+1
  1481     00C6  3000               	movlw	0
  1482     00C7  00A4               	movwf	___flmul@b
  1483     00C8  081E               	movf	30,w	;volatile
  1484     00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1485     00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1486     00CB  00C3               	movwf	??_main^(0+128)
  1487     00CC  01C4               	clrf	(??_main^(0+128)+1)
  1488     00CD  01C5               	clrf	(??_main^(0+128)+2)
  1489     00CE  01C6               	clrf	(??_main^(0+128)+3)
  1490     00CF  0846               	movf	(??_main+3)^(0+128),w
  1491     00D0  00F3               	movwf	___xxtofl@val+3
  1492     00D1  0845               	movf	(??_main+2)^(0+128),w
  1493     00D2  00F2               	movwf	___xxtofl@val+2
  1494     00D3  0844               	movf	(??_main+1)^(0+128),w
  1495     00D4  00F1               	movwf	___xxtofl@val+1
  1496     00D5  0843               	movf	??_main^(0+128),w
  1497     00D6  00F0               	movwf	___xxtofl@val
  1498     00D7  3001               	movlw	1
  1499     00D8  160A  118A  2112  120A  118A  	fcall	___xxtofl
  1500     00DD  0873               	movf	?___xxtofl+3,w
  1501     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1502     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1503     00E0  00AB               	movwf	___flmul@a+3
  1504     00E1  0872               	movf	?___xxtofl+2,w
  1505     00E2  00AA               	movwf	___flmul@a+2
  1506     00E3  0871               	movf	?___xxtofl+1,w
  1507     00E4  00A9               	movwf	___flmul@a+1
  1508     00E5  0870               	movf	?___xxtofl,w
  1509     00E6  00A8               	movwf	___flmul@a
  1510     00E7  120A  158A  215C  120A  118A  	fcall	___flmul
  1511     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1512     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1513     00EE  0827               	movf	?___flmul+3,w
  1514     00EF  00C5               	movwf	___fldiv@b+3
  1515     00F0  0826               	movf	?___flmul+2,w
  1516     00F1  00C4               	movwf	___fldiv@b+2
  1517     00F2  0825               	movf	?___flmul+1,w
  1518     00F3  00C3               	movwf	___fldiv@b+1
  1519     00F4  0824               	movf	?___flmul,w
  1520     00F5  00C2               	movwf	___fldiv@b
  1521     00F6  160A  118A  21CA  120A  118A  	fcall	___fldiv
  1522     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1523     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1524     00FD  0841               	movf	?___fldiv+3,w
  1525     00FE  1683               	bsf	3,5	;RP0=1, select bank1
  1526     00FF  1303               	bcf	3,6	;RP1=0, select bank1
  1527     0100  00CA               	movwf	(main@V1+3)^(0+128)
  1528     0101  1283               	bcf	3,5	;RP0=0, select bank0
  1529     0102  1303               	bcf	3,6	;RP1=0, select bank0
  1530     0103  0840               	movf	?___fldiv+2,w
  1531     0104  1683               	bsf	3,5	;RP0=1, select bank1
  1532     0105  1303               	bcf	3,6	;RP1=0, select bank1
  1533     0106  00C9               	movwf	(main@V1+2)^(0+128)
  1534     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1535     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1536     0109  083F               	movf	?___fldiv+1,w
  1537     010A  1683               	bsf	3,5	;RP0=1, select bank1
  1538     010B  1303               	bcf	3,6	;RP1=0, select bank1
  1539     010C  00C8               	movwf	(main@V1+1)^(0+128)
  1540     010D  1283               	bcf	3,5	;RP0=0, select bank0
  1541     010E  1303               	bcf	3,6	;RP1=0, select bank0
  1542     010F  083E               	movf	?___fldiv,w
  1543     0110  1683               	bsf	3,5	;RP0=1, select bank1
  1544     0111  1303               	bcf	3,6	;RP1=0, select bank1
  1545     0112  00C7               	movwf	main@V1^(0+128)
  1546     0113                     l3654:
  1547                           
  1548                           ;main.c: 90:       sprintf(ADC1, "%.2f", V1);
  1549     0113  3097               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1550     0114  00A0               	movwf	sprintf@f^(0+128)
  1551     0115  084A               	movf	(main@V1+3)^(0+128),w
  1552     0116  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1553     0117  0849               	movf	(main@V1+2)^(0+128),w
  1554     0118  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1555     0119  0848               	movf	(main@V1+1)^(0+128),w
  1556     011A  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1557     011B  0847               	movf	main@V1^(0+128),w
  1558     011C  00A1               	movwf	(?_sprintf^(0+128)+1)
  1559     011D  30CF               	movlw	(low (main@ADC1| 0))& (0+255)
  1560     011E  120A  118A  21BC  120A  118A  	fcall	_sprintf
  1561     0123                     l3656:
  1562                           
  1563                           ;main.c: 91:       Lcd_Set_Cursor_4bits(2,1);
  1564     0123  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1565     0124  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1566     0125  3002               	movlw	2
  1567     0126  160A  158A  2566  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1568     012B                     l3658:
  1569                           
  1570                           ;main.c: 92:       Lcd_Write_String_4bits(ADC1);
  1571     012B  30CF               	movlw	(low (main@ADC1| 0))& (0+255)
  1572     012C  00F5               	movwf	Lcd_Write_String_4bits@a
  1573     012D  3000               	movlw	0
  1574     012E  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1575     012F  160A  158A  249E  120A  118A  	fcall	_Lcd_Write_String_4bits
  1576     0134                     l3660:
  1577                           
  1578                           ;main.c: 94:       readADC(1);
  1579     0134  3001               	movlw	1
  1580     0135  160A  158A  24E0  120A  118A  	fcall	_readADC
  1581     013A                     l3662:
  1582                           
  1583                           ;main.c: 96:       V2 = (ADRESH*5.0)/255;
  1584     013A  3043               	movlw	67
  1585     013B  1283               	bcf	3,5	;RP0=0, select bank0
  1586     013C  1303               	bcf	3,6	;RP1=0, select bank0
  1587     013D  00C1               	movwf	___fldiv@a+3
  1588     013E  307F               	movlw	127
  1589     013F  00C0               	movwf	___fldiv@a+2
  1590     0140  3000               	movlw	0
  1591     0141  00BF               	movwf	___fldiv@a+1
  1592     0142  3000               	movlw	0
  1593     0143  00BE               	movwf	___fldiv@a
  1594     0144  3040               	movlw	64
  1595     0145  00A7               	movwf	___flmul@b+3
  1596     0146  30A0               	movlw	160
  1597     0147  00A6               	movwf	___flmul@b+2
  1598     0148  3000               	movlw	0
  1599     0149  00A5               	movwf	___flmul@b+1
  1600     014A  3000               	movlw	0
  1601     014B  00A4               	movwf	___flmul@b
  1602     014C  081E               	movf	30,w	;volatile
  1603     014D  1683               	bsf	3,5	;RP0=1, select bank1
  1604     014E  1303               	bcf	3,6	;RP1=0, select bank1
  1605     014F  00C3               	movwf	??_main^(0+128)
  1606     0150  01C4               	clrf	(??_main^(0+128)+1)
  1607     0151  01C5               	clrf	(??_main^(0+128)+2)
  1608     0152  01C6               	clrf	(??_main^(0+128)+3)
  1609     0153  0846               	movf	(??_main+3)^(0+128),w
  1610     0154  00F3               	movwf	___xxtofl@val+3
  1611     0155  0845               	movf	(??_main+2)^(0+128),w
  1612     0156  00F2               	movwf	___xxtofl@val+2
  1613     0157  0844               	movf	(??_main+1)^(0+128),w
  1614     0158  00F1               	movwf	___xxtofl@val+1
  1615     0159  0843               	movf	??_main^(0+128),w
  1616     015A  00F0               	movwf	___xxtofl@val
  1617     015B  3001               	movlw	1
  1618     015C  160A  118A  2112  120A  118A  	fcall	___xxtofl
  1619     0161  0873               	movf	?___xxtofl+3,w
  1620     0162  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0163  1303               	bcf	3,6	;RP1=0, select bank0
  1622     0164  00AB               	movwf	___flmul@a+3
  1623     0165  0872               	movf	?___xxtofl+2,w
  1624     0166  00AA               	movwf	___flmul@a+2
  1625     0167  0871               	movf	?___xxtofl+1,w
  1626     0168  00A9               	movwf	___flmul@a+1
  1627     0169  0870               	movf	?___xxtofl,w
  1628     016A  00A8               	movwf	___flmul@a
  1629     016B  120A  158A  215C  120A  118A  	fcall	___flmul
  1630     0170  1283               	bcf	3,5	;RP0=0, select bank0
  1631     0171  1303               	bcf	3,6	;RP1=0, select bank0
  1632     0172  0827               	movf	?___flmul+3,w
  1633     0173  00C5               	movwf	___fldiv@b+3
  1634     0174  0826               	movf	?___flmul+2,w
  1635     0175  00C4               	movwf	___fldiv@b+2
  1636     0176  0825               	movf	?___flmul+1,w
  1637     0177  00C3               	movwf	___fldiv@b+1
  1638     0178  0824               	movf	?___flmul,w
  1639     0179  00C2               	movwf	___fldiv@b
  1640     017A  160A  118A  21CA  120A  118A  	fcall	___fldiv
  1641     017F  1283               	bcf	3,5	;RP0=0, select bank0
  1642     0180  1303               	bcf	3,6	;RP1=0, select bank0
  1643     0181  0841               	movf	?___fldiv+3,w
  1644     0182  1683               	bsf	3,5	;RP0=1, select bank1
  1645     0183  1303               	bcf	3,6	;RP1=0, select bank1
  1646     0184  00CE               	movwf	(main@V2+3)^(0+128)
  1647     0185  1283               	bcf	3,5	;RP0=0, select bank0
  1648     0186  1303               	bcf	3,6	;RP1=0, select bank0
  1649     0187  0840               	movf	?___fldiv+2,w
  1650     0188  1683               	bsf	3,5	;RP0=1, select bank1
  1651     0189  1303               	bcf	3,6	;RP1=0, select bank1
  1652     018A  00CD               	movwf	(main@V2+2)^(0+128)
  1653     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1654     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1655     018D  083F               	movf	?___fldiv+1,w
  1656     018E  1683               	bsf	3,5	;RP0=1, select bank1
  1657     018F  1303               	bcf	3,6	;RP1=0, select bank1
  1658     0190  00CC               	movwf	(main@V2+1)^(0+128)
  1659     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1660     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1661     0193  083E               	movf	?___fldiv,w
  1662     0194  1683               	bsf	3,5	;RP0=1, select bank1
  1663     0195  1303               	bcf	3,6	;RP1=0, select bank1
  1664     0196  00CB               	movwf	main@V2^(0+128)
  1665     0197                     l3664:
  1666                           
  1667                           ;main.c: 98:       sprintf(ADC2, "%.2f", V2);
  1668     0197  3097               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1669     0198  00A0               	movwf	sprintf@f^(0+128)
  1670     0199  084E               	movf	(main@V2+3)^(0+128),w
  1671     019A  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1672     019B  084D               	movf	(main@V2+2)^(0+128),w
  1673     019C  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1674     019D  084C               	movf	(main@V2+1)^(0+128),w
  1675     019E  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1676     019F  084B               	movf	main@V2^(0+128),w
  1677     01A0  00A1               	movwf	(?_sprintf^(0+128)+1)
  1678     01A1  30D2               	movlw	(low (main@ADC2| 0))& (0+255)
  1679     01A2  120A  118A  21BC  120A  118A  	fcall	_sprintf
  1680     01A7                     l3666:
  1681                           
  1682                           ;main.c: 99:       Lcd_Set_Cursor_4bits(2,7);
  1683     01A7  3007               	movlw	7
  1684     01A8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1685     01A9  3002               	movlw	2
  1686     01AA  160A  158A  2566  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1687     01AF                     l3668:
  1688                           
  1689                           ;main.c: 100:       Lcd_Write_String_4bits(ADC2);
  1690     01AF  30D2               	movlw	(low (main@ADC2| 0))& (0+255)
  1691     01B0  00F5               	movwf	Lcd_Write_String_4bits@a
  1692     01B1  3000               	movlw	0
  1693     01B2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1694     01B3  160A  158A  249E  120A  118A  	fcall	_Lcd_Write_String_4bits
  1695     01B8  28B0               	goto	l3650
  1696     01B9  120A  118A  2800   	ljmp	start
  1697     01BC                     __end_of_main:
  1698                           
  1699                           	psect	text1
  1700     01BC                     __ptext1:	
  1701 ;; *************** function _sprintf *****************
  1702 ;; Defined at:
  1703 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  sp              1    wreg     PTR unsigned char 
  1706 ;;		 -> main@ADC2(3), main@ADC1(3), 
  1707 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1708 ;;		 -> STR_5(5), STR_4(5), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1711 ;;		 -> main@ADC2(3), main@ADC1(3), 
  1712 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1713 ;;  tmpval          4   23[BANK1 ] struct .
  1714 ;;  val             4   17[BANK1 ] unsigned long 
  1715 ;;  prec            2   28[BANK1 ] int 
  1716 ;;  eexp            2   21[BANK1 ] int 
  1717 ;;  flag            2   15[BANK1 ] unsigned short 
  1718 ;;  cp              2    0        PTR const unsigned char 
  1719 ;;  len             2    0        unsigned int 
  1720 ;;  width           2    0        int 
  1721 ;;  c               1   34[BANK1 ] unsigned char 
  1722 ;;  ap              1   14[BANK1 ] PTR void [1]
  1723 ;;		 -> ?_sprintf(2), 
  1724 ;;  d               1    0        unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  2    0[BANK1 ] int 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       0       5       0       0
  1735 ;;      Locals:         0       0      25       0       0
  1736 ;;      Temps:          0       0       5       0       0
  1737 ;;      Totals:         0       0      35       0       0
  1738 ;;Total ram usage:       35 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 3
  1741 ;; This function calls:
  1742 ;;		___awdiv
  1743 ;;		___fladd
  1744 ;;		___fleq
  1745 ;;		___flge
  1746 ;;		___flmul
  1747 ;;		___flneg
  1748 ;;		___flsub
  1749 ;;		___fltol
  1750 ;;		___lldiv
  1751 ;;		___llmod
  1752 ;;		___wmul
  1753 ;;		___xxtofl
  1754 ;;		__div_to_l_
  1755 ;;		__tdiv_to_l_
  1756 ;;		_fround
  1757 ;;		_isdigit
  1758 ;;		_scale
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764     01BC                     _sprintf:	
  1765                           ;psect for function _sprintf
  1766                           
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1770                           ;sprintf@sp stored from wreg
  1771     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1772     01BD  1303               	bcf	3,6	;RP1=0, select bank1
  1773     01BE  00BB               	movwf	sprintf@sp^(0+128)
  1774     01BF                     l3278:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1777     01BF  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1778     01C0  00AE               	movwf	sprintf@ap^(0+128)
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1781     01C1  2FE7               	goto	l3472
  1782     01C2                     l3280:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1785     01C2  3025               	movlw	37
  1786     01C3  0642               	xorwf	sprintf@c^(0+128),w
  1787     01C4  1903               	btfsc	3,2
  1788     01C5  29C7               	goto	u5611
  1789     01C6  29C8               	goto	u5610
  1790     01C7                     u5611:
  1791     01C7  29D2               	goto	l3286
  1792     01C8                     u5610:
  1793     01C8                     l3282:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1796     01C8  083B               	movf	sprintf@sp^(0+128),w
  1797     01C9  0084               	movwf	4
  1798     01CA  0842               	movf	sprintf@c^(0+128),w
  1799     01CB  1383               	bcf	3,7	;select IRP bank0
  1800     01CC  0080               	movwf	0
  1801     01CD                     l3284:
  1802     01CD  3001               	movlw	1
  1803     01CE  00A5               	movwf	??_sprintf^(0+128)
  1804     01CF  0825               	movf	??_sprintf^(0+128),w
  1805     01D0  07BB               	addwf	sprintf@sp^(0+128),f
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1808     01D1  2FE7               	goto	l3472
  1809     01D2                     l3286:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1812     01D2  01AF               	clrf	sprintf@flag^(0+128)
  1813     01D3  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1814     01D4                     l3288:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1817     01D4  0820               	movf	sprintf@f^(0+128),w
  1818     01D5  0084               	movwf	4
  1819     01D6  160A  158A  200A  120A  118A  	fcall	stringdir
  1820     01DB  3A2E               	xorlw	46
  1821     01DC  1D03               	skipz
  1822     01DD  29DF               	goto	u5621
  1823     01DE  29E0               	goto	u5620
  1824     01DF                     u5621:
  1825     01DF  2A25               	goto	l3304
  1826     01E0                     u5620:
  1827     01E0                     l3290:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1830     01E0  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1831     01E1                     l3292:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1834     01E1  3001               	movlw	1
  1835     01E2  00A5               	movwf	??_sprintf^(0+128)
  1836     01E3  0825               	movf	??_sprintf^(0+128),w
  1837     01E4  07A0               	addwf	sprintf@f^(0+128),f
  1838     01E5                     l3294:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1841     01E5  01BC               	clrf	sprintf@prec^(0+128)
  1842     01E6  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1845     01E7  2A14               	goto	l3302
  1846     01E8                     l3296:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1849     01E8  300A               	movlw	10
  1850     01E9  00F0               	movwf	___wmul@multiplier
  1851     01EA  3000               	movlw	0
  1852     01EB  00F1               	movwf	___wmul@multiplier+1
  1853     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1854     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1855     01EE  083D               	movf	(sprintf@prec+1)^(0+128),w
  1856     01EF  00F3               	movwf	___wmul@multiplicand+1
  1857     01F0  083C               	movf	sprintf@prec^(0+128),w
  1858     01F1  00F2               	movwf	___wmul@multiplicand
  1859     01F2  160A  158A  23B6  120A  118A  	fcall	___wmul
  1860     01F7  0871               	movf	?___wmul+1,w
  1861     01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1862     01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1863     01FA  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1864     01FB  0870               	movf	?___wmul,w
  1865     01FC  00BC               	movwf	sprintf@prec^(0+128)
  1866     01FD                     l3298:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1869     01FD  0820               	movf	sprintf@f^(0+128),w
  1870     01FE  0084               	movwf	4
  1871     01FF  160A  158A  200A  120A  118A  	fcall	stringdir
  1872     0204  3ED0               	addlw	208
  1873     0205  00A5               	movwf	??_sprintf^(0+128)
  1874     0206  30FF               	movlw	255
  1875     0207  1803               	skipnc
  1876     0208  3000               	movlw	0
  1877     0209  00A6               	movwf	(??_sprintf^(0+128)+1)
  1878     020A  0825               	movf	??_sprintf^(0+128),w
  1879     020B  07BC               	addwf	sprintf@prec^(0+128),f
  1880     020C  1803               	skipnc
  1881     020D  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  1882     020E  0826               	movf	(??_sprintf+1)^(0+128),w
  1883     020F  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  1884     0210                     l3300:
  1885     0210  3001               	movlw	1
  1886     0211  00A5               	movwf	??_sprintf^(0+128)
  1887     0212  0825               	movf	??_sprintf^(0+128),w
  1888     0213  07A0               	addwf	sprintf@f^(0+128),f
  1889     0214                     l3302:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1892     0214  0820               	movf	sprintf@f^(0+128),w
  1893     0215  0084               	movwf	4
  1894     0216  160A  158A  200A  120A  118A  	fcall	stringdir
  1895     021B  160A  158A  2344  120A  118A  	fcall	_isdigit
  1896     0220  1803               	btfsc	3,0
  1897     0221  2A23               	goto	u5631
  1898     0222  2A24               	goto	u5630
  1899     0223                     u5631:
  1900     0223  29E8               	goto	l3296
  1901     0224                     u5630:
  1902     0224  2A2B               	goto	l3310
  1903     0225                     l3304:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1906     0225  01BC               	clrf	sprintf@prec^(0+128)
  1907     0226  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1908     0227                     l3306:
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1911     0227  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1912     0228  2A2B               	goto	l3310
  1913     0229                     l264:	
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1915                           
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1918     0229  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1921     022A  2A47               	goto	l3312
  1922     022B                     l3310:
  1923     022B  3001               	movlw	1
  1924     022C  1683               	bsf	3,5	;RP0=1, select bank1
  1925     022D  1303               	bcf	3,6	;RP1=0, select bank1
  1926     022E  07A0               	addwf	sprintf@f^(0+128),f
  1927     022F  30FF               	movlw	-1
  1928     0230  0720               	addwf	sprintf@f^(0+128),w
  1929     0231  0084               	movwf	4
  1930     0232  160A  158A  200A  120A  118A  	fcall	stringdir
  1931     0237  00C2               	movwf	sprintf@c^(0+128)
  1932     0238  00A5               	movwf	??_sprintf^(0+128)
  1933     0239  01A6               	clrf	(??_sprintf^(0+128)+1)
  1934                           
  1935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1936                           ; Switch size 1, requested type "simple"
  1937                           ; Number of cases is 1, Range of values is 0 to 0
  1938                           ; switch strategies available:
  1939                           ; Name         Instructions Cycles
  1940                           ; simple_byte            4     3 (average)
  1941                           ; direct_byte           11     8 (fixed)
  1942                           ; jumptable            260     6 (fixed)
  1943                           ;	Chosen strategy is simple_byte
  1944     023A  0826               	movf	(??_sprintf+1)^(0+128),w
  1945     023B  3A00               	xorlw	0	; case 0
  1946     023C  1903               	skipnz
  1947     023D  2A3F               	goto	l3704
  1948     023E  2FE7               	goto	l3472
  1949     023F                     l3704:
  1950                           
  1951                           ; Switch size 1, requested type "simple"
  1952                           ; Number of cases is 2, Range of values is 0 to 102
  1953                           ; switch strategies available:
  1954                           ; Name         Instructions Cycles
  1955                           ; simple_byte            7     4 (average)
  1956                           ; jumptable            260     6 (fixed)
  1957                           ;	Chosen strategy is simple_byte
  1958     023F  0825               	movf	??_sprintf^(0+128),w
  1959     0240  3A00               	xorlw	0	; case 0
  1960     0241  1903               	skipnz
  1961     0242  2FF7               	goto	l3474
  1962     0243  3A66               	xorlw	102	; case 102
  1963     0244  1903               	skipnz
  1964     0245  2A29               	goto	l264
  1965     0246  2FE7               	goto	l3472
  1966     0247                     l3312:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1969     0247  3000               	movlw	0
  1970     0248  052F               	andwf	sprintf@flag^(0+128),w
  1971     0249  00A5               	movwf	??_sprintf^(0+128)
  1972     024A  3007               	movlw	7
  1973     024B  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1974     024C  00A6               	movwf	(??_sprintf+1)^(0+128)
  1975     024D  0825               	movf	??_sprintf^(0+128),w
  1976     024E  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1977     024F  1903               	btfsc	3,2
  1978     0250  2A52               	goto	u5641
  1979     0251  2A53               	goto	u5640
  1980     0252                     u5641:
  1981     0252  2FA4               	goto	l3454
  1982     0253                     u5640:
  1983     0253                     l3314:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1986     0253  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1987     0254  2A56               	goto	u5651
  1988     0255  2A57               	goto	u5650
  1989     0256                     u5651:
  1990     0256  2A5B               	goto	l3318
  1991     0257                     u5650:
  1992     0257                     l3316:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1995     0257  3006               	movlw	6
  1996     0258  00BC               	movwf	sprintf@prec^(0+128)
  1997     0259  3000               	movlw	0
  1998     025A  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1999     025B                     l3318:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2002     025B  082E               	movf	sprintf@ap^(0+128),w
  2003     025C  0084               	movwf	4
  2004     025D  1383               	bcf	3,7	;select IRP bank0
  2005     025E  0800               	movf	0,w
  2006     025F  00BE               	movwf	sprintf@fval^(0+128)
  2007     0260  0A84               	incf	4,f
  2008     0261  0800               	movf	0,w
  2009     0262  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2010     0263  0A84               	incf	4,f
  2011     0264  0800               	movf	0,w
  2012     0265  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2013     0266  0A84               	incf	4,f
  2014     0267  0800               	movf	0,w
  2015     0268  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2016     0269                     l3320:
  2017     0269  3004               	movlw	4
  2018     026A  00A5               	movwf	??_sprintf^(0+128)
  2019     026B  0825               	movf	??_sprintf^(0+128),w
  2020     026C  07AE               	addwf	sprintf@ap^(0+128),f
  2021     026D                     l3322:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2024     026D  0841               	movf	(sprintf@fval+3)^(0+128),w
  2025     026E  00F3               	movwf	___flge@ff1+3
  2026     026F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2027     0270  00F2               	movwf	___flge@ff1+2
  2028     0271  083F               	movf	(sprintf@fval+1)^(0+128),w
  2029     0272  00F1               	movwf	___flge@ff1+1
  2030     0273  083E               	movf	sprintf@fval^(0+128),w
  2031     0274  00F0               	movwf	___flge@ff1
  2032     0275  3000               	movlw	0
  2033     0276  00F7               	movwf	___flge@ff2+3
  2034     0277  3000               	movlw	0
  2035     0278  00F6               	movwf	___flge@ff2+2
  2036     0279  3000               	movlw	0
  2037     027A  00F5               	movwf	___flge@ff2+1
  2038     027B  3000               	movlw	0
  2039     027C  00F4               	movwf	___flge@ff2
  2040     027D  120A  158A  2002  120A  118A  	fcall	___flge
  2041     0282  1803               	btfsc	3,0
  2042     0283  2A85               	goto	u5661
  2043     0284  2A86               	goto	u5660
  2044     0285                     u5661:
  2045     0285  2AA3               	goto	l3328
  2046     0286                     u5660:
  2047     0286                     l3324:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2050     0286  1683               	bsf	3,5	;RP0=1, select bank1
  2051     0287  1303               	bcf	3,6	;RP1=0, select bank1
  2052     0288  0841               	movf	(sprintf@fval+3)^(0+128),w
  2053     0289  00F3               	movwf	___flneg@f1+3
  2054     028A  0840               	movf	(sprintf@fval+2)^(0+128),w
  2055     028B  00F2               	movwf	___flneg@f1+2
  2056     028C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2057     028D  00F1               	movwf	___flneg@f1+1
  2058     028E  083E               	movf	sprintf@fval^(0+128),w
  2059     028F  00F0               	movwf	___flneg@f1
  2060     0290  160A  158A  231B  120A  118A  	fcall	___flneg
  2061     0295  0873               	movf	?___flneg+3,w
  2062     0296  1683               	bsf	3,5	;RP0=1, select bank1
  2063     0297  1303               	bcf	3,6	;RP1=0, select bank1
  2064     0298  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2065     0299  0872               	movf	?___flneg+2,w
  2066     029A  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2067     029B  0871               	movf	?___flneg+1,w
  2068     029C  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2069     029D  0870               	movf	?___flneg,w
  2070     029E  00BE               	movwf	sprintf@fval^(0+128)
  2071     029F                     l3326:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2074     029F  3003               	movlw	3
  2075     02A0  04AF               	iorwf	sprintf@flag^(0+128),f
  2076     02A1  3000               	movlw	0
  2077     02A2  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2078     02A3                     l3328:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2081     02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2082     02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2083     02A5  01B5               	clrf	sprintf@eexp^(0+128)
  2084     02A6  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2085     02A7                     l3330:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2088     02A7  0841               	movf	(sprintf@fval+3)^(0+128),w
  2089     02A8  00F3               	movwf	___fleq@ff1+3
  2090     02A9  0840               	movf	(sprintf@fval+2)^(0+128),w
  2091     02AA  00F2               	movwf	___fleq@ff1+2
  2092     02AB  083F               	movf	(sprintf@fval+1)^(0+128),w
  2093     02AC  00F1               	movwf	___fleq@ff1+1
  2094     02AD  083E               	movf	sprintf@fval^(0+128),w
  2095     02AE  00F0               	movwf	___fleq@ff1
  2096     02AF  3000               	movlw	0
  2097     02B0  00F7               	movwf	___fleq@ff2+3
  2098     02B1  3000               	movlw	0
  2099     02B2  00F6               	movwf	___fleq@ff2+2
  2100     02B3  3000               	movlw	0
  2101     02B4  00F5               	movwf	___fleq@ff2+1
  2102     02B5  3000               	movlw	0
  2103     02B6  00F4               	movwf	___fleq@ff2
  2104     02B7  160A  158A  25AC  120A  118A  	fcall	___fleq
  2105     02BC  1803               	btfsc	3,0
  2106     02BD  2ABF               	goto	u5671
  2107     02BE  2AC0               	goto	u5670
  2108     02BF                     u5671:
  2109     02BF  2BB0               	goto	l3356
  2110     02C0                     u5670:
  2111     02C0                     l3332:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2114     02C0  1003               	clrc
  2115     02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2116     02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2117     02C3  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2118     02C4  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2119     02C5  3E82               	addlw	130
  2120     02C6  00B5               	movwf	sprintf@eexp^(0+128)
  2121     02C7  30FF               	movlw	255
  2122     02C8  1803               	skipnc
  2123     02C9  3000               	movlw	0
  2124     02CA  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2125     02CB                     l3334:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2128     02CB  30FF               	movlw	255
  2129     02CC  07B5               	addwf	sprintf@eexp^(0+128),f
  2130     02CD  1803               	skipnc
  2131     02CE  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2132     02CF  30FF               	movlw	255
  2133     02D0  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2134     02D1                     l3336:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2137     02D1  3003               	movlw	3
  2138     02D2  00F0               	movwf	___wmul@multiplier
  2139     02D3  3000               	movlw	0
  2140     02D4  00F1               	movwf	___wmul@multiplier+1
  2141     02D5  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2142     02D6  00F3               	movwf	___wmul@multiplicand+1
  2143     02D7  0835               	movf	sprintf@eexp^(0+128),w
  2144     02D8  00F2               	movwf	___wmul@multiplicand
  2145     02D9  160A  158A  23B6  120A  118A  	fcall	___wmul
  2146     02DE  0871               	movf	?___wmul+1,w
  2147     02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2148     02E0  1303               	bcf	3,6	;RP1=0, select bank1
  2149     02E1  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2150     02E2  0870               	movf	?___wmul,w
  2151     02E3  00B5               	movwf	sprintf@eexp^(0+128)
  2152     02E4                     l3338:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2155     02E4  300A               	movlw	10
  2156     02E5  00F7               	movwf	___awdiv@divisor
  2157     02E6  3000               	movlw	0
  2158     02E7  00F8               	movwf	___awdiv@divisor+1
  2159     02E8  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2160     02E9  00FA               	movwf	___awdiv@dividend+1
  2161     02EA  0835               	movf	sprintf@eexp^(0+128),w
  2162     02EB  00F9               	movwf	___awdiv@dividend
  2163     02EC  160A  158A  271F  120A  118A  	fcall	___awdiv
  2164     02F1  0878               	movf	?___awdiv+1,w
  2165     02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2166     02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2167     02F4  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2168     02F5  0877               	movf	?___awdiv,w
  2169     02F6  00B5               	movwf	sprintf@eexp^(0+128)
  2170     02F7                     l3340:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2173     02F7  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2174     02F8  2AFA               	goto	u5681
  2175     02F9  2AFB               	goto	u5680
  2176     02FA                     u5681:
  2177     02FA  2B01               	goto	l3344
  2178     02FB                     u5680:
  2179     02FB                     l3342:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2182     02FB  30FF               	movlw	255
  2183     02FC  07B5               	addwf	sprintf@eexp^(0+128),f
  2184     02FD  1803               	skipnc
  2185     02FE  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2186     02FF  30FF               	movlw	255
  2187     0300  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2188     0301                     l3344:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2191     0301  0335               	decf	sprintf@eexp^(0+128),w
  2192     0302  3AFF               	xorlw	255
  2193     0303  120A  158A  24A1  120A  118A  	fcall	_scale
  2194     0308  1283               	bcf	3,5	;RP0=0, select bank0
  2195     0309  1303               	bcf	3,6	;RP1=0, select bank0
  2196     030A  0841               	movf	?_scale+3,w
  2197     030B  1683               	bsf	3,5	;RP0=1, select bank1
  2198     030C  1303               	bcf	3,6	;RP1=0, select bank1
  2199     030D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2200     030E  1283               	bcf	3,5	;RP0=0, select bank0
  2201     030F  1303               	bcf	3,6	;RP1=0, select bank0
  2202     0310  0840               	movf	?_scale+2,w
  2203     0311  1683               	bsf	3,5	;RP0=1, select bank1
  2204     0312  1303               	bcf	3,6	;RP1=0, select bank1
  2205     0313  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2206     0314  1283               	bcf	3,5	;RP0=0, select bank0
  2207     0315  1303               	bcf	3,6	;RP1=0, select bank0
  2208     0316  083F               	movf	?_scale+1,w
  2209     0317  1683               	bsf	3,5	;RP0=1, select bank1
  2210     0318  1303               	bcf	3,6	;RP1=0, select bank1
  2211     0319  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2212     031A  1283               	bcf	3,5	;RP0=0, select bank0
  2213     031B  1303               	bcf	3,6	;RP1=0, select bank0
  2214     031C  083E               	movf	?_scale,w
  2215     031D  1683               	bsf	3,5	;RP0=1, select bank1
  2216     031E  1303               	bcf	3,6	;RP1=0, select bank1
  2217     031F  00B7               	movwf	sprintf@tmpval^(0+128)
  2218     0320                     l3346:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2221     0320  0841               	movf	(sprintf@fval+3)^(0+128),w
  2222     0321  1283               	bcf	3,5	;RP0=0, select bank0
  2223     0322  1303               	bcf	3,6	;RP1=0, select bank0
  2224     0323  00A7               	movwf	___flmul@b+3
  2225     0324  1683               	bsf	3,5	;RP0=1, select bank1
  2226     0325  1303               	bcf	3,6	;RP1=0, select bank1
  2227     0326  0840               	movf	(sprintf@fval+2)^(0+128),w
  2228     0327  1283               	bcf	3,5	;RP0=0, select bank0
  2229     0328  1303               	bcf	3,6	;RP1=0, select bank0
  2230     0329  00A6               	movwf	___flmul@b+2
  2231     032A  1683               	bsf	3,5	;RP0=1, select bank1
  2232     032B  1303               	bcf	3,6	;RP1=0, select bank1
  2233     032C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2234     032D  1283               	bcf	3,5	;RP0=0, select bank0
  2235     032E  1303               	bcf	3,6	;RP1=0, select bank0
  2236     032F  00A5               	movwf	___flmul@b+1
  2237     0330  1683               	bsf	3,5	;RP0=1, select bank1
  2238     0331  1303               	bcf	3,6	;RP1=0, select bank1
  2239     0332  083E               	movf	sprintf@fval^(0+128),w
  2240     0333  1283               	bcf	3,5	;RP0=0, select bank0
  2241     0334  1303               	bcf	3,6	;RP1=0, select bank0
  2242     0335  00A4               	movwf	___flmul@b
  2243     0336  1683               	bsf	3,5	;RP0=1, select bank1
  2244     0337  1303               	bcf	3,6	;RP1=0, select bank1
  2245     0338  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2246     0339  1283               	bcf	3,5	;RP0=0, select bank0
  2247     033A  1303               	bcf	3,6	;RP1=0, select bank0
  2248     033B  00AB               	movwf	___flmul@a+3
  2249     033C  1683               	bsf	3,5	;RP0=1, select bank1
  2250     033D  1303               	bcf	3,6	;RP1=0, select bank1
  2251     033E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2252     033F  1283               	bcf	3,5	;RP0=0, select bank0
  2253     0340  1303               	bcf	3,6	;RP1=0, select bank0
  2254     0341  00AA               	movwf	___flmul@a+2
  2255     0342  1683               	bsf	3,5	;RP0=1, select bank1
  2256     0343  1303               	bcf	3,6	;RP1=0, select bank1
  2257     0344  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2258     0345  1283               	bcf	3,5	;RP0=0, select bank0
  2259     0346  1303               	bcf	3,6	;RP1=0, select bank0
  2260     0347  00A9               	movwf	___flmul@a+1
  2261     0348  1683               	bsf	3,5	;RP0=1, select bank1
  2262     0349  1303               	bcf	3,6	;RP1=0, select bank1
  2263     034A  0837               	movf	sprintf@tmpval^(0+128),w
  2264     034B  1283               	bcf	3,5	;RP0=0, select bank0
  2265     034C  1303               	bcf	3,6	;RP1=0, select bank0
  2266     034D  00A8               	movwf	___flmul@a
  2267     034E  120A  158A  215C  120A  118A  	fcall	___flmul
  2268     0353  1283               	bcf	3,5	;RP0=0, select bank0
  2269     0354  1303               	bcf	3,6	;RP1=0, select bank0
  2270     0355  0827               	movf	?___flmul+3,w
  2271     0356  1683               	bsf	3,5	;RP0=1, select bank1
  2272     0357  1303               	bcf	3,6	;RP1=0, select bank1
  2273     0358  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2274     0359  1283               	bcf	3,5	;RP0=0, select bank0
  2275     035A  1303               	bcf	3,6	;RP1=0, select bank0
  2276     035B  0826               	movf	?___flmul+2,w
  2277     035C  1683               	bsf	3,5	;RP0=1, select bank1
  2278     035D  1303               	bcf	3,6	;RP1=0, select bank1
  2279     035E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2280     035F  1283               	bcf	3,5	;RP0=0, select bank0
  2281     0360  1303               	bcf	3,6	;RP1=0, select bank0
  2282     0361  0825               	movf	?___flmul+1,w
  2283     0362  1683               	bsf	3,5	;RP0=1, select bank1
  2284     0363  1303               	bcf	3,6	;RP1=0, select bank1
  2285     0364  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2286     0365  1283               	bcf	3,5	;RP0=0, select bank0
  2287     0366  1303               	bcf	3,6	;RP1=0, select bank0
  2288     0367  0824               	movf	?___flmul,w
  2289     0368  1683               	bsf	3,5	;RP0=1, select bank1
  2290     0369  1303               	bcf	3,6	;RP1=0, select bank1
  2291     036A  00B7               	movwf	sprintf@tmpval^(0+128)
  2292     036B                     l3348:
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2295     036B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2296     036C  00F3               	movwf	___flge@ff1+3
  2297     036D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2298     036E  00F2               	movwf	___flge@ff1+2
  2299     036F  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2300     0370  00F1               	movwf	___flge@ff1+1
  2301     0371  0837               	movf	sprintf@tmpval^(0+128),w
  2302     0372  00F0               	movwf	___flge@ff1
  2303     0373  303F               	movlw	63
  2304     0374  00F7               	movwf	___flge@ff2+3
  2305     0375  3080               	movlw	128
  2306     0376  00F6               	movwf	___flge@ff2+2
  2307     0377  3000               	movlw	0
  2308     0378  00F5               	movwf	___flge@ff2+1
  2309     0379  3000               	movlw	0
  2310     037A  00F4               	movwf	___flge@ff2
  2311     037B  120A  158A  2002  120A  118A  	fcall	___flge
  2312     0380  1803               	btfsc	3,0
  2313     0381  2B83               	goto	u5691
  2314     0382  2B84               	goto	u5690
  2315     0383                     u5691:
  2316     0383  2B8D               	goto	l3352
  2317     0384                     u5690:
  2318     0384                     l3350:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2321     0384  30FF               	movlw	255
  2322     0385  1683               	bsf	3,5	;RP0=1, select bank1
  2323     0386  1303               	bcf	3,6	;RP1=0, select bank1
  2324     0387  07B5               	addwf	sprintf@eexp^(0+128),f
  2325     0388  1803               	skipnc
  2326     0389  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2327     038A  30FF               	movlw	255
  2328     038B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2329     038C  2BB0               	goto	l3356
  2330     038D                     l3352:
  2331     038D  1683               	bsf	3,5	;RP0=1, select bank1
  2332     038E  1303               	bcf	3,6	;RP1=0, select bank1
  2333     038F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2334     0390  00F3               	movwf	___flge@ff1+3
  2335     0391  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2336     0392  00F2               	movwf	___flge@ff1+2
  2337     0393  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2338     0394  00F1               	movwf	___flge@ff1+1
  2339     0395  0837               	movf	sprintf@tmpval^(0+128),w
  2340     0396  00F0               	movwf	___flge@ff1
  2341     0397  3041               	movlw	65
  2342     0398  00F7               	movwf	___flge@ff2+3
  2343     0399  3020               	movlw	32
  2344     039A  00F6               	movwf	___flge@ff2+2
  2345     039B  3000               	movlw	0
  2346     039C  00F5               	movwf	___flge@ff2+1
  2347     039D  3000               	movlw	0
  2348     039E  00F4               	movwf	___flge@ff2
  2349     039F  120A  158A  2002  120A  118A  	fcall	___flge
  2350     03A4  1C03               	btfss	3,0
  2351     03A5  2BA7               	goto	u5701
  2352     03A6  2BA8               	goto	u5700
  2353     03A7                     u5701:
  2354     03A7  2BB0               	goto	l3356
  2355     03A8                     u5700:
  2356     03A8                     l3354:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2359     03A8  3001               	movlw	1
  2360     03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2361     03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2362     03AB  07B5               	addwf	sprintf@eexp^(0+128),f
  2363     03AC  1803               	skipnc
  2364     03AD  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2365     03AE  3000               	movlw	0
  2366     03AF  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2367     03B0                     l3356:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2370     03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2371     03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2372     03B2  083D               	movf	(sprintf@prec+1)^(0+128),w
  2373     03B3  3A80               	xorlw	128
  2374     03B4  00FF               	movwf	btemp+1
  2375     03B5  3080               	movlw	128
  2376     03B6  027F               	subwf	btemp+1,w
  2377     03B7  1D03               	skipz
  2378     03B8  2BBB               	goto	u5715
  2379     03B9  300D               	movlw	13
  2380     03BA  023C               	subwf	sprintf@prec^(0+128),w
  2381     03BB                     u5715:
  2382     03BB  1803               	skipnc
  2383     03BC  2BBE               	goto	u5711
  2384     03BD  2BBF               	goto	u5710
  2385     03BE                     u5711:
  2386     03BE  2C06               	goto	l3360
  2387     03BF                     u5710:
  2388     03BF                     l3358:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2391     03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2392     03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2393     03C1  083C               	movf	sprintf@prec^(0+128),w
  2394     03C2  160A  118A  239D  120A  118A  	fcall	_fround
  2395     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2396     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2397     03C9  0841               	movf	?_fround+3,w
  2398     03CA  00D5               	movwf	___fladd@b+3
  2399     03CB  0840               	movf	?_fround+2,w
  2400     03CC  00D4               	movwf	___fladd@b+2
  2401     03CD  083F               	movf	?_fround+1,w
  2402     03CE  00D3               	movwf	___fladd@b+1
  2403     03CF  083E               	movf	?_fround,w
  2404     03D0  00D2               	movwf	___fladd@b
  2405     03D1  1683               	bsf	3,5	;RP0=1, select bank1
  2406     03D2  1303               	bcf	3,6	;RP1=0, select bank1
  2407     03D3  0841               	movf	(sprintf@fval+3)^(0+128),w
  2408     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2409     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2410     03D6  00D9               	movwf	___fladd@a+3
  2411     03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2412     03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2413     03D9  0840               	movf	(sprintf@fval+2)^(0+128),w
  2414     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2415     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2416     03DC  00D8               	movwf	___fladd@a+2
  2417     03DD  1683               	bsf	3,5	;RP0=1, select bank1
  2418     03DE  1303               	bcf	3,6	;RP1=0, select bank1
  2419     03DF  083F               	movf	(sprintf@fval+1)^(0+128),w
  2420     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2421     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2422     03E2  00D7               	movwf	___fladd@a+1
  2423     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2424     03E4  1303               	bcf	3,6	;RP1=0, select bank1
  2425     03E5  083E               	movf	sprintf@fval^(0+128),w
  2426     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2427     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2428     03E8  00D6               	movwf	___fladd@a
  2429     03E9  160A  118A  25A8  120A  118A  	fcall	___fladd
  2430     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2431     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2432     03F0  0855               	movf	?___fladd+3,w
  2433     03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2434     03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2435     03F3  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2436     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2437     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2438     03F6  0854               	movf	?___fladd+2,w
  2439     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2440     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2441     03F9  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2442     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2443     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2444     03FC  0853               	movf	?___fladd+1,w
  2445     03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2446     03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2447     03FF  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2448     0400  1283               	bcf	3,5	;RP0=0, select bank0
  2449     0401  1303               	bcf	3,6	;RP1=0, select bank0
  2450     0402  0852               	movf	?___fladd,w
  2451     0403  1683               	bsf	3,5	;RP0=1, select bank1
  2452     0404  1303               	bcf	3,6	;RP1=0, select bank1
  2453     0405  00BE               	movwf	sprintf@fval^(0+128)
  2454     0406                     l3360:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2457     0406  1683               	bsf	3,5	;RP0=1, select bank1
  2458     0407  1303               	bcf	3,6	;RP1=0, select bank1
  2459     0408  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2460     0409  3A80               	xorlw	128
  2461     040A  00FF               	movwf	btemp+1
  2462     040B  3080               	movlw	128
  2463     040C  027F               	subwf	btemp+1,w
  2464     040D  1D03               	skipz
  2465     040E  2C11               	goto	u5725
  2466     040F  300A               	movlw	10
  2467     0410  0235               	subwf	sprintf@eexp^(0+128),w
  2468     0411                     u5725:
  2469     0411  1803               	skipnc
  2470     0412  2C14               	goto	u5721
  2471     0413  2C15               	goto	u5720
  2472     0414                     u5721:
  2473     0414  2C66               	goto	l3368
  2474     0415                     u5720:
  2475     0415                     l3362:
  2476     0415  1683               	bsf	3,5	;RP0=1, select bank1
  2477     0416  1303               	bcf	3,6	;RP1=0, select bank1
  2478     0417  0841               	movf	(sprintf@fval+3)^(0+128),w
  2479     0418  00F3               	movwf	___fleq@ff1+3
  2480     0419  0840               	movf	(sprintf@fval+2)^(0+128),w
  2481     041A  00F2               	movwf	___fleq@ff1+2
  2482     041B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2483     041C  00F1               	movwf	___fleq@ff1+1
  2484     041D  083E               	movf	sprintf@fval^(0+128),w
  2485     041E  00F0               	movwf	___fleq@ff1
  2486     041F  3000               	movlw	0
  2487     0420  00F7               	movwf	___fleq@ff2+3
  2488     0421  3000               	movlw	0
  2489     0422  00F6               	movwf	___fleq@ff2+2
  2490     0423  3000               	movlw	0
  2491     0424  00F5               	movwf	___fleq@ff2+1
  2492     0425  3000               	movlw	0
  2493     0426  00F4               	movwf	___fleq@ff2
  2494     0427  160A  158A  25AC  120A  118A  	fcall	___fleq
  2495     042C  1803               	btfsc	3,0
  2496     042D  2C2F               	goto	u5731
  2497     042E  2C30               	goto	u5730
  2498     042F                     u5731:
  2499     042F  2CD8               	goto	l3382
  2500     0430                     u5730:
  2501     0430                     l3364:
  2502     0430  1683               	bsf	3,5	;RP0=1, select bank1
  2503     0431  1303               	bcf	3,6	;RP1=0, select bank1
  2504     0432  0841               	movf	(sprintf@fval+3)^(0+128),w
  2505     0433  1283               	bcf	3,5	;RP0=0, select bank0
  2506     0434  1303               	bcf	3,6	;RP1=0, select bank0
  2507     0435  00D4               	movwf	___fltol@f1+3
  2508     0436  1683               	bsf	3,5	;RP0=1, select bank1
  2509     0437  1303               	bcf	3,6	;RP1=0, select bank1
  2510     0438  0840               	movf	(sprintf@fval+2)^(0+128),w
  2511     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2512     043A  1303               	bcf	3,6	;RP1=0, select bank0
  2513     043B  00D3               	movwf	___fltol@f1+2
  2514     043C  1683               	bsf	3,5	;RP0=1, select bank1
  2515     043D  1303               	bcf	3,6	;RP1=0, select bank1
  2516     043E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2517     043F  1283               	bcf	3,5	;RP0=0, select bank0
  2518     0440  1303               	bcf	3,6	;RP1=0, select bank0
  2519     0441  00D2               	movwf	___fltol@f1+1
  2520     0442  1683               	bsf	3,5	;RP0=1, select bank1
  2521     0443  1303               	bcf	3,6	;RP1=0, select bank1
  2522     0444  083E               	movf	sprintf@fval^(0+128),w
  2523     0445  1283               	bcf	3,5	;RP0=0, select bank0
  2524     0446  1303               	bcf	3,6	;RP1=0, select bank0
  2525     0447  00D1               	movwf	___fltol@f1
  2526     0448  160A  158A  2788  120A  118A  	fcall	___fltol
  2527     044D  1283               	bcf	3,5	;RP0=0, select bank0
  2528     044E  1303               	bcf	3,6	;RP1=0, select bank0
  2529     044F  0854               	movf	?___fltol+3,w
  2530     0450  0453               	iorwf	?___fltol+2,w
  2531     0451  0452               	iorwf	?___fltol+1,w
  2532     0452  0451               	iorwf	?___fltol,w
  2533     0453  1D03               	skipz
  2534     0454  2C56               	goto	u5741
  2535     0455  2C57               	goto	u5740
  2536     0456                     u5741:
  2537     0456  2CD8               	goto	l3382
  2538     0457                     u5740:
  2539     0457                     l3366:
  2540     0457  1683               	bsf	3,5	;RP0=1, select bank1
  2541     0458  1303               	bcf	3,6	;RP1=0, select bank1
  2542     0459  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2543     045A  3A80               	xorlw	128
  2544     045B  00FF               	movwf	btemp+1
  2545     045C  3080               	movlw	128
  2546     045D  027F               	subwf	btemp+1,w
  2547     045E  1D03               	skipz
  2548     045F  2C62               	goto	u5755
  2549     0460  3002               	movlw	2
  2550     0461  0235               	subwf	sprintf@eexp^(0+128),w
  2551     0462                     u5755:
  2552     0462  1C03               	skipc
  2553     0463  2C65               	goto	u5751
  2554     0464  2C66               	goto	u5750
  2555     0465                     u5751:
  2556     0465  2CD8               	goto	l3382
  2557     0466                     u5750:
  2558     0466                     l3368:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2561     0466  1683               	bsf	3,5	;RP0=1, select bank1
  2562     0467  1303               	bcf	3,6	;RP1=0, select bank1
  2563     0468  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2564     0469  00F3               	movwf	___flge@ff1+3
  2565     046A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2566     046B  00F2               	movwf	___flge@ff1+2
  2567     046C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2568     046D  00F1               	movwf	___flge@ff1+1
  2569     046E  0837               	movf	sprintf@tmpval^(0+128),w
  2570     046F  00F0               	movwf	___flge@ff1
  2571     0470  3040               	movlw	64
  2572     0471  00F7               	movwf	___flge@ff2+3
  2573     0472  3089               	movlw	137
  2574     0473  00F6               	movwf	___flge@ff2+2
  2575     0474  3070               	movlw	112
  2576     0475  00F5               	movwf	___flge@ff2+1
  2577     0476  305F               	movlw	95
  2578     0477  00F4               	movwf	___flge@ff2
  2579     0478  120A  158A  2002  120A  118A  	fcall	___flge
  2580     047D  1803               	btfsc	3,0
  2581     047E  2C80               	goto	u5761
  2582     047F  2C81               	goto	u5760
  2583     0480                     u5761:
  2584     0480  2C8A               	goto	l3372
  2585     0481                     u5760:
  2586     0481                     l3370:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2589     0481  30F7               	movlw	247
  2590     0482  1683               	bsf	3,5	;RP0=1, select bank1
  2591     0483  1303               	bcf	3,6	;RP1=0, select bank1
  2592     0484  07B5               	addwf	sprintf@eexp^(0+128),f
  2593     0485  1803               	skipnc
  2594     0486  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2595     0487  30FF               	movlw	255
  2596     0488  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2599     0489  2C92               	goto	l3374
  2600     048A                     l3372:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2603     048A  30F8               	movlw	248
  2604     048B  1683               	bsf	3,5	;RP0=1, select bank1
  2605     048C  1303               	bcf	3,6	;RP1=0, select bank1
  2606     048D  07B5               	addwf	sprintf@eexp^(0+128),f
  2607     048E  1803               	skipnc
  2608     048F  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2609     0490  30FF               	movlw	255
  2610     0491  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2611     0492                     l3374:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2614     0492  0835               	movf	sprintf@eexp^(0+128),w
  2615     0493  120A  158A  24A1  120A  118A  	fcall	_scale
  2616     0498  1283               	bcf	3,5	;RP0=0, select bank0
  2617     0499  1303               	bcf	3,6	;RP1=0, select bank0
  2618     049A  0841               	movf	?_scale+3,w
  2619     049B  1683               	bsf	3,5	;RP0=1, select bank1
  2620     049C  1303               	bcf	3,6	;RP1=0, select bank1
  2621     049D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2622     049E  1283               	bcf	3,5	;RP0=0, select bank0
  2623     049F  1303               	bcf	3,6	;RP1=0, select bank0
  2624     04A0  0840               	movf	?_scale+2,w
  2625     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2626     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2627     04A3  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2628     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2629     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2630     04A6  083F               	movf	?_scale+1,w
  2631     04A7  1683               	bsf	3,5	;RP0=1, select bank1
  2632     04A8  1303               	bcf	3,6	;RP1=0, select bank1
  2633     04A9  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2634     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2635     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2636     04AC  083E               	movf	?_scale,w
  2637     04AD  1683               	bsf	3,5	;RP0=1, select bank1
  2638     04AE  1303               	bcf	3,6	;RP1=0, select bank1
  2639     04AF  00B7               	movwf	sprintf@tmpval^(0+128)
  2640     04B0                     l3376:
  2641     04B0  0841               	movf	(sprintf@fval+3)^(0+128),w
  2642     04B1  00F3               	movwf	__div_to_l_@f1+3
  2643     04B2  0840               	movf	(sprintf@fval+2)^(0+128),w
  2644     04B3  00F2               	movwf	__div_to_l_@f1+2
  2645     04B4  083F               	movf	(sprintf@fval+1)^(0+128),w
  2646     04B5  00F1               	movwf	__div_to_l_@f1+1
  2647     04B6  083E               	movf	sprintf@fval^(0+128),w
  2648     04B7  00F0               	movwf	__div_to_l_@f1
  2649     04B8  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2650     04B9  00F7               	movwf	__div_to_l_@f2+3
  2651     04BA  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2652     04BB  00F6               	movwf	__div_to_l_@f2+2
  2653     04BC  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2654     04BD  00F5               	movwf	__div_to_l_@f2+1
  2655     04BE  0837               	movf	sprintf@tmpval^(0+128),w
  2656     04BF  00F4               	movwf	__div_to_l_@f2
  2657     04C0  120A  158A  20A4  120A  118A  	fcall	__div_to_l_
  2658     04C5  0873               	movf	?__div_to_l_+3,w
  2659     04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2660     04C7  1303               	bcf	3,6	;RP1=0, select bank1
  2661     04C8  00B4               	movwf	(sprintf@val+3)^(0+128)
  2662     04C9  0872               	movf	?__div_to_l_+2,w
  2663     04CA  00B3               	movwf	(sprintf@val+2)^(0+128)
  2664     04CB  0871               	movf	?__div_to_l_+1,w
  2665     04CC  00B2               	movwf	(sprintf@val+1)^(0+128)
  2666     04CD  0870               	movf	?__div_to_l_,w
  2667     04CE  00B1               	movwf	sprintf@val^(0+128)
  2668     04CF                     l3380:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2671     04CF  3000               	movlw	0
  2672     04D0  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2673     04D1  3000               	movlw	0
  2674     04D2  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2675     04D3  3000               	movlw	0
  2676     04D4  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2677     04D5  3000               	movlw	0
  2678     04D6  00BE               	movwf	sprintf@fval^(0+128)
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2681     04D7  2D5C               	goto	l3388
  2682     04D8                     l3382:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2685     04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2686     04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2687     04DA  0841               	movf	(sprintf@fval+3)^(0+128),w
  2688     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2689     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2690     04DD  00D4               	movwf	___fltol@f1+3
  2691     04DE  1683               	bsf	3,5	;RP0=1, select bank1
  2692     04DF  1303               	bcf	3,6	;RP1=0, select bank1
  2693     04E0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2694     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2695     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2696     04E3  00D3               	movwf	___fltol@f1+2
  2697     04E4  1683               	bsf	3,5	;RP0=1, select bank1
  2698     04E5  1303               	bcf	3,6	;RP1=0, select bank1
  2699     04E6  083F               	movf	(sprintf@fval+1)^(0+128),w
  2700     04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2701     04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2702     04E9  00D2               	movwf	___fltol@f1+1
  2703     04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2704     04EB  1303               	bcf	3,6	;RP1=0, select bank1
  2705     04EC  083E               	movf	sprintf@fval^(0+128),w
  2706     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2707     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2708     04EF  00D1               	movwf	___fltol@f1
  2709     04F0  160A  158A  2788  120A  118A  	fcall	___fltol
  2710     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2711     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2712     04F7  0854               	movf	?___fltol+3,w
  2713     04F8  1683               	bsf	3,5	;RP0=1, select bank1
  2714     04F9  1303               	bcf	3,6	;RP1=0, select bank1
  2715     04FA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2716     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2717     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2718     04FD  0853               	movf	?___fltol+2,w
  2719     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  2720     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  2721     0500  00B3               	movwf	(sprintf@val+2)^(0+128)
  2722     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2723     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2724     0503  0852               	movf	?___fltol+1,w
  2725     0504  1683               	bsf	3,5	;RP0=1, select bank1
  2726     0505  1303               	bcf	3,6	;RP1=0, select bank1
  2727     0506  00B2               	movwf	(sprintf@val+1)^(0+128)
  2728     0507  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0508  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0509  0851               	movf	?___fltol,w
  2731     050A  1683               	bsf	3,5	;RP0=1, select bank1
  2732     050B  1303               	bcf	3,6	;RP1=0, select bank1
  2733     050C  00B1               	movwf	sprintf@val^(0+128)
  2734     050D                     l3384:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2737     050D  0834               	movf	(sprintf@val+3)^(0+128),w
  2738     050E  00F3               	movwf	___xxtofl@val+3
  2739     050F  0833               	movf	(sprintf@val+2)^(0+128),w
  2740     0510  00F2               	movwf	___xxtofl@val+2
  2741     0511  0832               	movf	(sprintf@val+1)^(0+128),w
  2742     0512  00F1               	movwf	___xxtofl@val+1
  2743     0513  0831               	movf	sprintf@val^(0+128),w
  2744     0514  00F0               	movwf	___xxtofl@val
  2745     0515  3000               	movlw	0
  2746     0516  160A  118A  2112  120A  118A  	fcall	___xxtofl
  2747     051B  0873               	movf	?___xxtofl+3,w
  2748     051C  1283               	bcf	3,5	;RP0=0, select bank0
  2749     051D  1303               	bcf	3,6	;RP1=0, select bank0
  2750     051E  00E9               	movwf	___flsub@a+3
  2751     051F  0872               	movf	?___xxtofl+2,w
  2752     0520  00E8               	movwf	___flsub@a+2
  2753     0521  0871               	movf	?___xxtofl+1,w
  2754     0522  00E7               	movwf	___flsub@a+1
  2755     0523  0870               	movf	?___xxtofl,w
  2756     0524  00E6               	movwf	___flsub@a
  2757     0525  1683               	bsf	3,5	;RP0=1, select bank1
  2758     0526  1303               	bcf	3,6	;RP1=0, select bank1
  2759     0527  0841               	movf	(sprintf@fval+3)^(0+128),w
  2760     0528  1283               	bcf	3,5	;RP0=0, select bank0
  2761     0529  1303               	bcf	3,6	;RP1=0, select bank0
  2762     052A  00ED               	movwf	___flsub@b+3
  2763     052B  1683               	bsf	3,5	;RP0=1, select bank1
  2764     052C  1303               	bcf	3,6	;RP1=0, select bank1
  2765     052D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2766     052E  1283               	bcf	3,5	;RP0=0, select bank0
  2767     052F  1303               	bcf	3,6	;RP1=0, select bank0
  2768     0530  00EC               	movwf	___flsub@b+2
  2769     0531  1683               	bsf	3,5	;RP0=1, select bank1
  2770     0532  1303               	bcf	3,6	;RP1=0, select bank1
  2771     0533  083F               	movf	(sprintf@fval+1)^(0+128),w
  2772     0534  1283               	bcf	3,5	;RP0=0, select bank0
  2773     0535  1303               	bcf	3,6	;RP1=0, select bank0
  2774     0536  00EB               	movwf	___flsub@b+1
  2775     0537  1683               	bsf	3,5	;RP0=1, select bank1
  2776     0538  1303               	bcf	3,6	;RP1=0, select bank1
  2777     0539  083E               	movf	sprintf@fval^(0+128),w
  2778     053A  1283               	bcf	3,5	;RP0=0, select bank0
  2779     053B  1303               	bcf	3,6	;RP1=0, select bank0
  2780     053C  00EA               	movwf	___flsub@b
  2781     053D  160A  158A  2392  120A  118A  	fcall	___flsub
  2782     0542  1283               	bcf	3,5	;RP0=0, select bank0
  2783     0543  1303               	bcf	3,6	;RP1=0, select bank0
  2784     0544  0869               	movf	?___flsub+3,w
  2785     0545  1683               	bsf	3,5	;RP0=1, select bank1
  2786     0546  1303               	bcf	3,6	;RP1=0, select bank1
  2787     0547  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2788     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2789     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2790     054A  0868               	movf	?___flsub+2,w
  2791     054B  1683               	bsf	3,5	;RP0=1, select bank1
  2792     054C  1303               	bcf	3,6	;RP1=0, select bank1
  2793     054D  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2794     054E  1283               	bcf	3,5	;RP0=0, select bank0
  2795     054F  1303               	bcf	3,6	;RP1=0, select bank0
  2796     0550  0867               	movf	?___flsub+1,w
  2797     0551  1683               	bsf	3,5	;RP0=1, select bank1
  2798     0552  1303               	bcf	3,6	;RP1=0, select bank1
  2799     0553  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2800     0554  1283               	bcf	3,5	;RP0=0, select bank0
  2801     0555  1303               	bcf	3,6	;RP1=0, select bank0
  2802     0556  0866               	movf	?___flsub,w
  2803     0557  1683               	bsf	3,5	;RP0=1, select bank1
  2804     0558  1303               	bcf	3,6	;RP1=0, select bank1
  2805     0559  00BE               	movwf	sprintf@fval^(0+128)
  2806     055A                     l3386:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2809     055A  01B5               	clrf	sprintf@eexp^(0+128)
  2810     055B  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2811     055C                     l3388:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2814     055C  01C2               	clrf	sprintf@c^(0+128)
  2815     055D  0AC2               	incf	sprintf@c^(0+128),f
  2816     055E                     l3394:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2819     055E  0842               	movf	sprintf@c^(0+128),w
  2820     055F  00A5               	movwf	??_sprintf^(0+128)
  2821     0560  3001               	movlw	1
  2822     0561                     u5775:
  2823     0561  1003               	clrc
  2824     0562  0DA5               	rlf	??_sprintf^(0+128),f
  2825     0563  3EFF               	addlw	-1
  2826     0564  1D03               	skipz
  2827     0565  2D61               	goto	u5775
  2828     0566  1003               	clrc
  2829     0567  0D25               	rlf	??_sprintf^(0+128),w
  2830     0568  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2831     0569  0084               	movwf	4
  2832     056A  160A  158A  200A  120A  118A  	fcall	stringdir
  2833     056F  00A6               	movwf	(??_sprintf+1)^(0+128)
  2834     0570  160A  158A  200A  120A  118A  	fcall	stringdir
  2835     0575  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2836     0576  160A  158A  200A  120A  118A  	fcall	stringdir
  2837     057B  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2838     057C  160A  158A  200A  120A  118A  	fcall	stringdir
  2839     0581  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2840     0582  0829               	movf	(??_sprintf+4)^(0+128),w
  2841     0583  0234               	subwf	(sprintf@val+3)^(0+128),w
  2842     0584  1D03               	skipz
  2843     0585  2D90               	goto	u5785
  2844     0586  0828               	movf	(??_sprintf+3)^(0+128),w
  2845     0587  0233               	subwf	(sprintf@val+2)^(0+128),w
  2846     0588  1D03               	skipz
  2847     0589  2D90               	goto	u5785
  2848     058A  0827               	movf	(??_sprintf+2)^(0+128),w
  2849     058B  0232               	subwf	(sprintf@val+1)^(0+128),w
  2850     058C  1D03               	skipz
  2851     058D  2D90               	goto	u5785
  2852     058E  0826               	movf	(??_sprintf+1)^(0+128),w
  2853     058F  0231               	subwf	sprintf@val^(0+128),w
  2854     0590                     u5785:
  2855     0590  1803               	skipnc
  2856     0591  2D93               	goto	u5781
  2857     0592  2D94               	goto	u5780
  2858     0593                     u5781:
  2859     0593  2D95               	goto	l3398
  2860     0594                     u5780:
  2861     0594  2D9F               	goto	l3400
  2862     0595                     l3398:
  2863     0595  3001               	movlw	1
  2864     0596  00A5               	movwf	??_sprintf^(0+128)
  2865     0597  0825               	movf	??_sprintf^(0+128),w
  2866     0598  07C2               	addwf	sprintf@c^(0+128),f
  2867     0599  300A               	movlw	10
  2868     059A  0642               	xorwf	sprintf@c^(0+128),w
  2869     059B  1D03               	btfss	3,2
  2870     059C  2D9E               	goto	u5791
  2871     059D  2D9F               	goto	u5790
  2872     059E                     u5791:
  2873     059E  2D5E               	goto	l3394
  2874     059F                     u5790:
  2875     059F                     l3400:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2878     059F  3003               	movlw	3
  2879     05A0  052F               	andwf	sprintf@flag^(0+128),w
  2880     05A1  00A5               	movwf	??_sprintf^(0+128)
  2881     05A2  3000               	movlw	0
  2882     05A3  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2883     05A4  00A6               	movwf	(??_sprintf+1)^(0+128)
  2884     05A5  0825               	movf	??_sprintf^(0+128),w
  2885     05A6  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2886     05A7  1903               	btfsc	3,2
  2887     05A8  2DAA               	goto	u5801
  2888     05A9  2DAB               	goto	u5800
  2889     05AA                     u5801:
  2890     05AA  2E19               	goto	l290
  2891     05AB                     u5800:
  2892     05AB                     l3402:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2895     05AB  083B               	movf	sprintf@sp^(0+128),w
  2896     05AC  0084               	movwf	4
  2897     05AD  302D               	movlw	45
  2898     05AE  1383               	bcf	3,7	;select IRP bank0
  2899     05AF  0080               	movwf	0
  2900     05B0                     l3404:
  2901     05B0  3001               	movlw	1
  2902     05B1  00A5               	movwf	??_sprintf^(0+128)
  2903     05B2  0825               	movf	??_sprintf^(0+128),w
  2904     05B3  07BB               	addwf	sprintf@sp^(0+128),f
  2905     05B4  2E19               	goto	l290
  2906     05B5                     l3406:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2909     05B5  0842               	movf	sprintf@c^(0+128),w
  2910     05B6  00A5               	movwf	??_sprintf^(0+128)
  2911     05B7  3001               	movlw	1
  2912     05B8                     u5815:
  2913     05B8  1003               	clrc
  2914     05B9  0DA5               	rlf	??_sprintf^(0+128),f
  2915     05BA  3EFF               	addlw	-1
  2916     05BB  1D03               	skipz
  2917     05BC  2DB8               	goto	u5815
  2918     05BD  1003               	clrc
  2919     05BE  0D25               	rlf	??_sprintf^(0+128),w
  2920     05BF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2921     05C0  0084               	movwf	4
  2922     05C1  160A  158A  200A  120A  118A  	fcall	stringdir
  2923     05C6  00F0               	movwf	___lldiv@divisor
  2924     05C7  160A  158A  200A  120A  118A  	fcall	stringdir
  2925     05CC  00F1               	movwf	___lldiv@divisor+1
  2926     05CD  160A  158A  200A  120A  118A  	fcall	stringdir
  2927     05D2  00F2               	movwf	___lldiv@divisor+2
  2928     05D3  160A  158A  200A  120A  118A  	fcall	stringdir
  2929     05D8  00F3               	movwf	___lldiv@divisor+3
  2930     05D9  0834               	movf	(sprintf@val+3)^(0+128),w
  2931     05DA  00F7               	movwf	___lldiv@dividend+3
  2932     05DB  0833               	movf	(sprintf@val+2)^(0+128),w
  2933     05DC  00F6               	movwf	___lldiv@dividend+2
  2934     05DD  0832               	movf	(sprintf@val+1)^(0+128),w
  2935     05DE  00F5               	movwf	___lldiv@dividend+1
  2936     05DF  0831               	movf	sprintf@val^(0+128),w
  2937     05E0  00F4               	movwf	___lldiv@dividend
  2938     05E1  160A  158A  26B9  120A  118A  	fcall	___lldiv
  2939     05E6  0873               	movf	?___lldiv+3,w
  2940     05E7  1683               	bsf	3,5	;RP0=1, select bank1
  2941     05E8  1303               	bcf	3,6	;RP1=0, select bank1
  2942     05E9  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2943     05EA  0872               	movf	?___lldiv+2,w
  2944     05EB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2945     05EC  0871               	movf	?___lldiv+1,w
  2946     05ED  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2947     05EE  0870               	movf	?___lldiv,w
  2948     05EF  00B7               	movwf	sprintf@tmpval^(0+128)
  2949     05F0                     l3408:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2952     05F0  3000               	movlw	0
  2953     05F1  00F3               	movwf	___llmod@divisor+3
  2954     05F2  3000               	movlw	0
  2955     05F3  00F2               	movwf	___llmod@divisor+2
  2956     05F4  3000               	movlw	0
  2957     05F5  00F1               	movwf	___llmod@divisor+1
  2958     05F6  300A               	movlw	10
  2959     05F7  00F0               	movwf	___llmod@divisor
  2960     05F8  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2961     05F9  00F7               	movwf	___llmod@dividend+3
  2962     05FA  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2963     05FB  00F6               	movwf	___llmod@dividend+2
  2964     05FC  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2965     05FD  00F5               	movwf	___llmod@dividend+1
  2966     05FE  0837               	movf	sprintf@tmpval^(0+128),w
  2967     05FF  00F4               	movwf	___llmod@dividend
  2968     0600  120A  118A  2005  120A  118A  	fcall	___llmod
  2969     0605  0873               	movf	?___llmod+3,w
  2970     0606  1683               	bsf	3,5	;RP0=1, select bank1
  2971     0607  1303               	bcf	3,6	;RP1=0, select bank1
  2972     0608  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2973     0609  0872               	movf	?___llmod+2,w
  2974     060A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2975     060B  0871               	movf	?___llmod+1,w
  2976     060C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2977     060D  0870               	movf	?___llmod,w
  2978     060E  00B7               	movwf	sprintf@tmpval^(0+128)
  2979     060F                     l3410:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2982     060F  083B               	movf	sprintf@sp^(0+128),w
  2983     0610  0084               	movwf	4
  2984     0611  0837               	movf	sprintf@tmpval^(0+128),w
  2985     0612  3E30               	addlw	48
  2986     0613  1383               	bcf	3,7	;select IRP bank0
  2987     0614  0080               	movwf	0
  2988     0615  3001               	movlw	1
  2989     0616  00A5               	movwf	??_sprintf^(0+128)
  2990     0617  0825               	movf	??_sprintf^(0+128),w
  2991     0618  07BB               	addwf	sprintf@sp^(0+128),f
  2992     0619                     l290:	
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  2994                           
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2997     0619  3001               	movlw	1
  2998     061A  02C2               	subwf	sprintf@c^(0+128),f
  2999     061B  0A42               	incf	sprintf@c^(0+128),w
  3000     061C  1D03               	btfss	3,2
  3001     061D  2E1F               	goto	u5821
  3002     061E  2E20               	goto	u5820
  3003     061F                     u5821:
  3004     061F  2DB5               	goto	l3406
  3005     0620                     u5820:
  3006     0620  2E32               	goto	l3418
  3007     0621                     l3412:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3010     0621  1683               	bsf	3,5	;RP0=1, select bank1
  3011     0622  1303               	bcf	3,6	;RP1=0, select bank1
  3012     0623  083B               	movf	sprintf@sp^(0+128),w
  3013     0624  0084               	movwf	4
  3014     0625  3030               	movlw	48
  3015     0626  1383               	bcf	3,7	;select IRP bank0
  3016     0627  0080               	movwf	0
  3017     0628                     l3414:
  3018     0628  3001               	movlw	1
  3019     0629  00A5               	movwf	??_sprintf^(0+128)
  3020     062A  0825               	movf	??_sprintf^(0+128),w
  3021     062B  07BB               	addwf	sprintf@sp^(0+128),f
  3022     062C                     l3416:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3025     062C  30FF               	movlw	255
  3026     062D  07B5               	addwf	sprintf@eexp^(0+128),f
  3027     062E  1803               	skipnc
  3028     062F  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3029     0630  30FF               	movlw	255
  3030     0631  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3031     0632                     l3418:
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3034     0632  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3035     0633  3A80               	xorlw	128
  3036     0634  00FF               	movwf	btemp+1
  3037     0635  3080               	movlw	128
  3038     0636  027F               	subwf	btemp+1,w
  3039     0637  1D03               	skipz
  3040     0638  2E3B               	goto	u5835
  3041     0639  3001               	movlw	1
  3042     063A  0235               	subwf	sprintf@eexp^(0+128),w
  3043     063B                     u5835:
  3044     063B  1803               	skipnc
  3045     063C  2E3E               	goto	u5831
  3046     063D  2E3F               	goto	u5830
  3047     063E                     u5831:
  3048     063E  2E21               	goto	l3412
  3049     063F                     u5830:
  3050     063F                     l3420:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3053     063F  1683               	bsf	3,5	;RP0=1, select bank1
  3054     0640  1303               	bcf	3,6	;RP1=0, select bank1
  3055     0641  083D               	movf	(sprintf@prec+1)^(0+128),w
  3056     0642  3A80               	xorlw	128
  3057     0643  00FF               	movwf	btemp+1
  3058     0644  3080               	movlw	128
  3059     0645  027F               	subwf	btemp+1,w
  3060     0646  1D03               	skipz
  3061     0647  2E4A               	goto	u5845
  3062     0648  3009               	movlw	9
  3063     0649  023C               	subwf	sprintf@prec^(0+128),w
  3064     064A                     u5845:
  3065     064A  1C03               	skipc
  3066     064B  2E4D               	goto	u5841
  3067     064C  2E4E               	goto	u5840
  3068     064D                     u5841:
  3069     064D  2E53               	goto	l3424
  3070     064E                     u5840:
  3071     064E                     l3422:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3074     064E  3008               	movlw	8
  3075     064F  1683               	bsf	3,5	;RP0=1, select bank1
  3076     0650  1303               	bcf	3,6	;RP1=0, select bank1
  3077     0651  00C2               	movwf	sprintf@c^(0+128)
  3078     0652  2E57               	goto	l297
  3079     0653                     l3424:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3082     0653  1683               	bsf	3,5	;RP0=1, select bank1
  3083     0654  1303               	bcf	3,6	;RP1=0, select bank1
  3084     0655  083C               	movf	sprintf@prec^(0+128),w
  3085     0656  00C2               	movwf	sprintf@c^(0+128)
  3086     0657                     l297:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3089     0657  0842               	movf	sprintf@c^(0+128),w
  3090     0658  00A5               	movwf	??_sprintf^(0+128)
  3091     0659  01A6               	clrf	(??_sprintf^(0+128)+1)
  3092     065A  0825               	movf	??_sprintf^(0+128),w
  3093     065B  02BC               	subwf	sprintf@prec^(0+128),f
  3094     065C  0826               	movf	(??_sprintf+1)^(0+128),w
  3095     065D  1C03               	skipc
  3096     065E  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3097     065F  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3098     0660                     l3426:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3101     0660  0842               	movf	sprintf@c^(0+128),w
  3102     0661  1903               	btfsc	3,2
  3103     0662  2E64               	goto	u5851
  3104     0663  2E65               	goto	u5850
  3105     0664                     u5851:
  3106     0664  2E6E               	goto	l3432
  3107     0665                     u5850:
  3108     0665                     l3428:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3111     0665  083B               	movf	sprintf@sp^(0+128),w
  3112     0666  0084               	movwf	4
  3113     0667  302E               	movlw	46
  3114     0668  1383               	bcf	3,7	;select IRP bank0
  3115     0669  0080               	movwf	0
  3116     066A                     l3430:
  3117     066A  3001               	movlw	1
  3118     066B  00A5               	movwf	??_sprintf^(0+128)
  3119     066C  0825               	movf	??_sprintf^(0+128),w
  3120     066D  07BB               	addwf	sprintf@sp^(0+128),f
  3121     066E                     l3432:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3124     066E  0842               	movf	sprintf@c^(0+128),w
  3125     066F  120A  158A  24A1  120A  118A  	fcall	_scale
  3126     0674  1283               	bcf	3,5	;RP0=0, select bank0
  3127     0675  1303               	bcf	3,6	;RP1=0, select bank0
  3128     0676  0841               	movf	?_scale+3,w
  3129     0677  1683               	bsf	3,5	;RP0=1, select bank1
  3130     0678  1303               	bcf	3,6	;RP1=0, select bank1
  3131     0679  00AD               	movwf	(_sprintf$1019+3)^(0+128)
  3132     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3133     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3134     067C  0840               	movf	?_scale+2,w
  3135     067D  1683               	bsf	3,5	;RP0=1, select bank1
  3136     067E  1303               	bcf	3,6	;RP1=0, select bank1
  3137     067F  00AC               	movwf	(_sprintf$1019+2)^(0+128)
  3138     0680  1283               	bcf	3,5	;RP0=0, select bank0
  3139     0681  1303               	bcf	3,6	;RP1=0, select bank0
  3140     0682  083F               	movf	?_scale+1,w
  3141     0683  1683               	bsf	3,5	;RP0=1, select bank1
  3142     0684  1303               	bcf	3,6	;RP1=0, select bank1
  3143     0685  00AB               	movwf	(_sprintf$1019+1)^(0+128)
  3144     0686  1283               	bcf	3,5	;RP0=0, select bank0
  3145     0687  1303               	bcf	3,6	;RP1=0, select bank0
  3146     0688  083E               	movf	?_scale,w
  3147     0689  1683               	bsf	3,5	;RP0=1, select bank1
  3148     068A  1303               	bcf	3,6	;RP1=0, select bank1
  3149     068B  00AA               	movwf	_sprintf$1019^(0+128)
  3150     068C                     l3434:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3153     068C  082D               	movf	(_sprintf$1019+3)^(0+128),w
  3154     068D  1283               	bcf	3,5	;RP0=0, select bank0
  3155     068E  1303               	bcf	3,6	;RP1=0, select bank0
  3156     068F  00AB               	movwf	___flmul@a+3
  3157     0690  1683               	bsf	3,5	;RP0=1, select bank1
  3158     0691  1303               	bcf	3,6	;RP1=0, select bank1
  3159     0692  082C               	movf	(_sprintf$1019+2)^(0+128),w
  3160     0693  1283               	bcf	3,5	;RP0=0, select bank0
  3161     0694  1303               	bcf	3,6	;RP1=0, select bank0
  3162     0695  00AA               	movwf	___flmul@a+2
  3163     0696  1683               	bsf	3,5	;RP0=1, select bank1
  3164     0697  1303               	bcf	3,6	;RP1=0, select bank1
  3165     0698  082B               	movf	(_sprintf$1019+1)^(0+128),w
  3166     0699  1283               	bcf	3,5	;RP0=0, select bank0
  3167     069A  1303               	bcf	3,6	;RP1=0, select bank0
  3168     069B  00A9               	movwf	___flmul@a+1
  3169     069C  1683               	bsf	3,5	;RP0=1, select bank1
  3170     069D  1303               	bcf	3,6	;RP1=0, select bank1
  3171     069E  082A               	movf	_sprintf$1019^(0+128),w
  3172     069F  1283               	bcf	3,5	;RP0=0, select bank0
  3173     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3174     06A1  00A8               	movwf	___flmul@a
  3175     06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3176     06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3177     06A4  0841               	movf	(sprintf@fval+3)^(0+128),w
  3178     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3179     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3180     06A7  00A7               	movwf	___flmul@b+3
  3181     06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3182     06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3183     06AA  0840               	movf	(sprintf@fval+2)^(0+128),w
  3184     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3185     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3186     06AD  00A6               	movwf	___flmul@b+2
  3187     06AE  1683               	bsf	3,5	;RP0=1, select bank1
  3188     06AF  1303               	bcf	3,6	;RP1=0, select bank1
  3189     06B0  083F               	movf	(sprintf@fval+1)^(0+128),w
  3190     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  3191     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  3192     06B3  00A5               	movwf	___flmul@b+1
  3193     06B4  1683               	bsf	3,5	;RP0=1, select bank1
  3194     06B5  1303               	bcf	3,6	;RP1=0, select bank1
  3195     06B6  083E               	movf	sprintf@fval^(0+128),w
  3196     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  3197     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  3198     06B9  00A4               	movwf	___flmul@b
  3199     06BA  120A  158A  215C  120A  118A  	fcall	___flmul
  3200     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3201     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3202     06C1  0827               	movf	?___flmul+3,w
  3203     06C2  00D4               	movwf	___fltol@f1+3
  3204     06C3  0826               	movf	?___flmul+2,w
  3205     06C4  00D3               	movwf	___fltol@f1+2
  3206     06C5  0825               	movf	?___flmul+1,w
  3207     06C6  00D2               	movwf	___fltol@f1+1
  3208     06C7  0824               	movf	?___flmul,w
  3209     06C8  00D1               	movwf	___fltol@f1
  3210     06C9  160A  158A  2788  120A  118A  	fcall	___fltol
  3211     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3212     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3213     06D0  0854               	movf	?___fltol+3,w
  3214     06D1  1683               	bsf	3,5	;RP0=1, select bank1
  3215     06D2  1303               	bcf	3,6	;RP1=0, select bank1
  3216     06D3  00B4               	movwf	(sprintf@val+3)^(0+128)
  3217     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3218     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3219     06D6  0853               	movf	?___fltol+2,w
  3220     06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3221     06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3222     06D9  00B3               	movwf	(sprintf@val+2)^(0+128)
  3223     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  3224     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  3225     06DC  0852               	movf	?___fltol+1,w
  3226     06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3227     06DE  1303               	bcf	3,6	;RP1=0, select bank1
  3228     06DF  00B2               	movwf	(sprintf@val+1)^(0+128)
  3229     06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3230     06E1  1303               	bcf	3,6	;RP1=0, select bank0
  3231     06E2  0851               	movf	?___fltol,w
  3232     06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3233     06E4  1303               	bcf	3,6	;RP1=0, select bank1
  3234     06E5  00B1               	movwf	sprintf@val^(0+128)
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3237     06E6  2F86               	goto	l3444
  3238     06E7                     l3436:
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3241     06E7  0842               	movf	sprintf@c^(0+128),w
  3242     06E8  00A5               	movwf	??_sprintf^(0+128)
  3243     06E9  3001               	movlw	1
  3244     06EA                     u5865:
  3245     06EA  1003               	clrc
  3246     06EB  0DA5               	rlf	??_sprintf^(0+128),f
  3247     06EC  3EFF               	addlw	-1
  3248     06ED  1D03               	skipz
  3249     06EE  2EEA               	goto	u5865
  3250     06EF  1003               	clrc
  3251     06F0  0D25               	rlf	??_sprintf^(0+128),w
  3252     06F1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3253     06F2  0084               	movwf	4
  3254     06F3  160A  158A  200A  120A  118A  	fcall	stringdir
  3255     06F8  00F0               	movwf	___lldiv@divisor
  3256     06F9  160A  158A  200A  120A  118A  	fcall	stringdir
  3257     06FE  00F1               	movwf	___lldiv@divisor+1
  3258     06FF  160A  158A  200A  120A  118A  	fcall	stringdir
  3259     0704  00F2               	movwf	___lldiv@divisor+2
  3260     0705  160A  158A  200A  120A  118A  	fcall	stringdir
  3261     070A  00F3               	movwf	___lldiv@divisor+3
  3262     070B  0834               	movf	(sprintf@val+3)^(0+128),w
  3263     070C  00F7               	movwf	___lldiv@dividend+3
  3264     070D  0833               	movf	(sprintf@val+2)^(0+128),w
  3265     070E  00F6               	movwf	___lldiv@dividend+2
  3266     070F  0832               	movf	(sprintf@val+1)^(0+128),w
  3267     0710  00F5               	movwf	___lldiv@dividend+1
  3268     0711  0831               	movf	sprintf@val^(0+128),w
  3269     0712  00F4               	movwf	___lldiv@dividend
  3270     0713  160A  158A  26B9  120A  118A  	fcall	___lldiv
  3271     0718  0873               	movf	?___lldiv+3,w
  3272     0719  1683               	bsf	3,5	;RP0=1, select bank1
  3273     071A  1303               	bcf	3,6	;RP1=0, select bank1
  3274     071B  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3275     071C  0872               	movf	?___lldiv+2,w
  3276     071D  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3277     071E  0871               	movf	?___lldiv+1,w
  3278     071F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3279     0720  0870               	movf	?___lldiv,w
  3280     0721  00B7               	movwf	sprintf@tmpval^(0+128)
  3281     0722                     l3438:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3284     0722  3000               	movlw	0
  3285     0723  00F3               	movwf	___llmod@divisor+3
  3286     0724  3000               	movlw	0
  3287     0725  00F2               	movwf	___llmod@divisor+2
  3288     0726  3000               	movlw	0
  3289     0727  00F1               	movwf	___llmod@divisor+1
  3290     0728  300A               	movlw	10
  3291     0729  00F0               	movwf	___llmod@divisor
  3292     072A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3293     072B  00F7               	movwf	___llmod@dividend+3
  3294     072C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3295     072D  00F6               	movwf	___llmod@dividend+2
  3296     072E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3297     072F  00F5               	movwf	___llmod@dividend+1
  3298     0730  0837               	movf	sprintf@tmpval^(0+128),w
  3299     0731  00F4               	movwf	___llmod@dividend
  3300     0732  120A  118A  2005  120A  118A  	fcall	___llmod
  3301     0737  0873               	movf	?___llmod+3,w
  3302     0738  1683               	bsf	3,5	;RP0=1, select bank1
  3303     0739  1303               	bcf	3,6	;RP1=0, select bank1
  3304     073A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3305     073B  0872               	movf	?___llmod+2,w
  3306     073C  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3307     073D  0871               	movf	?___llmod+1,w
  3308     073E  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3309     073F  0870               	movf	?___llmod,w
  3310     0740  00B7               	movwf	sprintf@tmpval^(0+128)
  3311     0741                     l3440:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3314     0741  083B               	movf	sprintf@sp^(0+128),w
  3315     0742  0084               	movwf	4
  3316     0743  0837               	movf	sprintf@tmpval^(0+128),w
  3317     0744  3E30               	addlw	48
  3318     0745  1383               	bcf	3,7	;select IRP bank0
  3319     0746  0080               	movwf	0
  3320     0747  3001               	movlw	1
  3321     0748  00A5               	movwf	??_sprintf^(0+128)
  3322     0749  0825               	movf	??_sprintf^(0+128),w
  3323     074A  07BB               	addwf	sprintf@sp^(0+128),f
  3324     074B                     l3442:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3327     074B  0842               	movf	sprintf@c^(0+128),w
  3328     074C  00A5               	movwf	??_sprintf^(0+128)
  3329     074D  3001               	movlw	1
  3330     074E                     u5875:
  3331     074E  1003               	clrc
  3332     074F  0DA5               	rlf	??_sprintf^(0+128),f
  3333     0750  3EFF               	addlw	-1
  3334     0751  1D03               	skipz
  3335     0752  2F4E               	goto	u5875
  3336     0753  1003               	clrc
  3337     0754  0D25               	rlf	??_sprintf^(0+128),w
  3338     0755  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3339     0756  0084               	movwf	4
  3340     0757  160A  158A  200A  120A  118A  	fcall	stringdir
  3341     075C  00F0               	movwf	___llmod@divisor
  3342     075D  160A  158A  200A  120A  118A  	fcall	stringdir
  3343     0762  00F1               	movwf	___llmod@divisor+1
  3344     0763  160A  158A  200A  120A  118A  	fcall	stringdir
  3345     0768  00F2               	movwf	___llmod@divisor+2
  3346     0769  160A  158A  200A  120A  118A  	fcall	stringdir
  3347     076E  00F3               	movwf	___llmod@divisor+3
  3348     076F  0834               	movf	(sprintf@val+3)^(0+128),w
  3349     0770  00F7               	movwf	___llmod@dividend+3
  3350     0771  0833               	movf	(sprintf@val+2)^(0+128),w
  3351     0772  00F6               	movwf	___llmod@dividend+2
  3352     0773  0832               	movf	(sprintf@val+1)^(0+128),w
  3353     0774  00F5               	movwf	___llmod@dividend+1
  3354     0775  0831               	movf	sprintf@val^(0+128),w
  3355     0776  00F4               	movwf	___llmod@dividend
  3356     0777  120A  118A  2005  120A  118A  	fcall	___llmod
  3357     077C  0873               	movf	?___llmod+3,w
  3358     077D  1683               	bsf	3,5	;RP0=1, select bank1
  3359     077E  1303               	bcf	3,6	;RP1=0, select bank1
  3360     077F  00B4               	movwf	(sprintf@val+3)^(0+128)
  3361     0780  0872               	movf	?___llmod+2,w
  3362     0781  00B3               	movwf	(sprintf@val+2)^(0+128)
  3363     0782  0871               	movf	?___llmod+1,w
  3364     0783  00B2               	movwf	(sprintf@val+1)^(0+128)
  3365     0784  0870               	movf	?___llmod,w
  3366     0785  00B1               	movwf	sprintf@val^(0+128)
  3367     0786                     l3444:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3370     0786  3001               	movlw	1
  3371     0787  02C2               	subwf	sprintf@c^(0+128),f
  3372     0788  0A42               	incf	sprintf@c^(0+128),w
  3373     0789  1D03               	btfss	3,2
  3374     078A  2F8C               	goto	u5881
  3375     078B  2F8D               	goto	u5880
  3376     078C                     u5881:
  3377     078C  2EE7               	goto	l3436
  3378     078D                     u5880:
  3379     078D  2F9D               	goto	l3452
  3380     078E                     l3446:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3383     078E  083B               	movf	sprintf@sp^(0+128),w
  3384     078F  0084               	movwf	4
  3385     0790  3030               	movlw	48
  3386     0791  1383               	bcf	3,7	;select IRP bank0
  3387     0792  0080               	movwf	0
  3388     0793                     l3448:
  3389     0793  3001               	movlw	1
  3390     0794  00A5               	movwf	??_sprintf^(0+128)
  3391     0795  0825               	movf	??_sprintf^(0+128),w
  3392     0796  07BB               	addwf	sprintf@sp^(0+128),f
  3393     0797                     l3450:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3396     0797  30FF               	movlw	255
  3397     0798  07BC               	addwf	sprintf@prec^(0+128),f
  3398     0799  1803               	skipnc
  3399     079A  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3400     079B  30FF               	movlw	255
  3401     079C  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3402     079D                     l3452:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3405     079D  083C               	movf	sprintf@prec^(0+128),w
  3406     079E  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3407     079F  1D03               	btfss	3,2
  3408     07A0  2FA2               	goto	u5891
  3409     07A1  2FA3               	goto	u5890
  3410     07A2                     u5891:
  3411     07A2  2F8E               	goto	l3446
  3412     07A3                     u5890:
  3413     07A3  2FE7               	goto	l3472
  3414     07A4                     l3454:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3417     07A4  083C               	movf	sprintf@prec^(0+128),w
  3418     07A5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3419     07A6  1D03               	btfss	3,2
  3420     07A7  2FA9               	goto	u5901
  3421     07A8  2FAA               	goto	u5900
  3422     07A9                     u5901:
  3423     07A9  2FB8               	goto	l305
  3424     07AA                     u5900:
  3425     07AA                     l3456:
  3426     07AA  0834               	movf	(sprintf@val+3)^(0+128),w
  3427     07AB  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3428     07AC  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3429     07AD  0431               	iorwf	sprintf@val^(0+128),w
  3430     07AE  1D03               	skipz
  3431     07AF  2FB1               	goto	u5911
  3432     07B0  2FB2               	goto	u5910
  3433     07B1                     u5911:
  3434     07B1  2FB8               	goto	l305
  3435     07B2                     u5910:
  3436     07B2                     l3458:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3439     07B2  3001               	movlw	1
  3440     07B3  07BC               	addwf	sprintf@prec^(0+128),f
  3441     07B4  1803               	skipnc
  3442     07B5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3443     07B6  3000               	movlw	0
  3444     07B7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3445     07B8                     l305:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3448     07B8  083D               	movf	(sprintf@prec+1)^(0+128),w
  3449     07B9  3A80               	xorlw	128
  3450     07BA  3C80               	sublw	128
  3451     07BB  1D03               	skipz
  3452     07BC  2FBF               	goto	u5925
  3453     07BD  083C               	movf	sprintf@prec^(0+128),w
  3454     07BE  0242               	subwf	sprintf@c^(0+128),w
  3455     07BF                     u5925:
  3456     07BF  1803               	skipnc
  3457     07C0  2FC2               	goto	u5921
  3458     07C1  2FC3               	goto	u5920
  3459     07C2                     u5921:
  3460     07C2  2FC4               	goto	l3462
  3461     07C3                     u5920:
  3462     07C3                     l3460:
  3463     07C3  2FD3               	goto	l3466
  3464     07C4                     l3462:
  3465     07C4  1683               	bsf	3,5	;RP0=1, select bank1
  3466     07C5  1303               	bcf	3,6	;RP1=0, select bank1
  3467     07C6  083D               	movf	(sprintf@prec+1)^(0+128),w
  3468     07C7  3A80               	xorlw	128
  3469     07C8  00A5               	movwf	??_sprintf^(0+128)
  3470     07C9  3080               	movlw	128
  3471     07CA  0225               	subwf	??_sprintf^(0+128),w
  3472     07CB  1D03               	skipz
  3473     07CC  2FCF               	goto	u5935
  3474     07CD  0842               	movf	sprintf@c^(0+128),w
  3475     07CE  023C               	subwf	sprintf@prec^(0+128),w
  3476     07CF                     u5935:
  3477     07CF  1803               	skipnc
  3478     07D0  2FD2               	goto	u5931
  3479     07D1  2FD3               	goto	u5930
  3480     07D2                     u5931:
  3481     07D2  2FD3               	goto	l3466
  3482     07D3                     u5930:
  3483     07D3                     l3464:
  3484     07D3                     l3466:
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3487     07D3  3003               	movlw	3
  3488     07D4  1683               	bsf	3,5	;RP0=1, select bank1
  3489     07D5  1303               	bcf	3,6	;RP1=0, select bank1
  3490     07D6  052F               	andwf	sprintf@flag^(0+128),w
  3491     07D7  00A5               	movwf	??_sprintf^(0+128)
  3492     07D8  3000               	movlw	0
  3493     07D9  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3494     07DA  00A6               	movwf	(??_sprintf+1)^(0+128)
  3495     07DB  0825               	movf	??_sprintf^(0+128),w
  3496     07DC  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3497     07DD  1903               	btfsc	3,2
  3498     07DE  2FE0               	goto	u5941
  3499     07DF  2FE1               	goto	u5940
  3500     07E0                     u5941:
  3501     07E0  2FE7               	goto	l3472
  3502     07E1                     u5940:
  3503     07E1                     l3468:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3506     07E1  083B               	movf	sprintf@sp^(0+128),w
  3507     07E2  0084               	movwf	4
  3508     07E3  302D               	movlw	45
  3509     07E4  1383               	bcf	3,7	;select IRP bank0
  3510     07E5  0080               	movwf	0
  3511     07E6  29CD               	goto	l3284
  3512     07E7                     l3472:
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3515     07E7  3001               	movlw	1
  3516     07E8  07A0               	addwf	sprintf@f^(0+128),f
  3517     07E9  30FF               	movlw	-1
  3518     07EA  0720               	addwf	sprintf@f^(0+128),w
  3519     07EB  0084               	movwf	4
  3520     07EC  160A  158A  200A  120A  118A  	fcall	stringdir
  3521     07F1  00C2               	movwf	sprintf@c^(0+128)
  3522     07F2  0842               	movf	sprintf@c^(0+128),w
  3523     07F3  1D03               	btfss	3,2
  3524     07F4  2FF6               	goto	u5951
  3525     07F5  2FF7               	goto	u5950
  3526     07F6                     u5951:
  3527     07F6  29C2               	goto	l3280
  3528     07F7                     u5950:
  3529     07F7                     l3474:
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3532     07F7  083B               	movf	sprintf@sp^(0+128),w
  3533     07F8  0084               	movwf	4
  3534     07F9  1383               	bcf	3,7	;select IRP bank0
  3535     07FA  0180               	clrf	0
  3536     07FB                     l311:
  3537     07FB  0008               	return
  3538     07FC                     __end_of_sprintf:
  3539                           
  3540                           	psect	text2
  3541     0CA1                     __ptext2:	
  3542 ;; *************** function _scale *****************
  3543 ;; Defined at:
  3544 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  scl             1    wreg     char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  scl             1   48[BANK0 ] char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  4   30[BANK0 ] char 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         0       4       0       0       0
  3559 ;;      Locals:         0       5       0       0       0
  3560 ;;      Temps:          0      10       0       0       0
  3561 ;;      Totals:         0      19       0       0       0
  3562 ;;Total ram usage:       19 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 2
  3565 ;; This function calls:
  3566 ;;		___awdiv
  3567 ;;		___awmod
  3568 ;;		___flmul
  3569 ;; This function is called by:
  3570 ;;		_sprintf
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574     0CA1                     _scale:	
  3575                           ;psect for function _scale
  3576                           
  3577                           
  3578                           ;incstack = 0
  3579                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3580                           ;scale@scl stored from wreg
  3581     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3582     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3583     0CA3  00D0               	movwf	scale@scl
  3584     0CA4                     l2836:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3587     0CA4  1FD0               	btfss	scale@scl,7
  3588     0CA5  2CA7               	goto	u4441
  3589     0CA6  2CA8               	goto	u4440
  3590     0CA7                     u4441:
  3591     0CA7  2E55               	goto	l2858
  3592     0CA8                     u4440:
  3593     0CA8                     l2838:
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3596     0CA8  09D0               	comf	scale@scl,f
  3597     0CA9  0AD0               	incf	scale@scl,f
  3598     0CAA                     l2840:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3601     0CAA  0850               	movf	scale@scl,w
  3602     0CAB  3A80               	xorlw	128
  3603     0CAC  3E12               	addlw	-238
  3604     0CAD  1C03               	skipc
  3605     0CAE  2CB0               	goto	u4451
  3606     0CAF  2CB1               	goto	u4450
  3607     0CB0                     u4451:
  3608     0CB0  2D99               	goto	l2848
  3609     0CB1                     u4450:
  3610     0CB1                     l2842:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3613     0CB1  300A               	movlw	10
  3614     0CB2  00F7               	movwf	___awdiv@divisor
  3615     0CB3  3000               	movlw	0
  3616     0CB4  00F8               	movwf	___awdiv@divisor+1
  3617     0CB5  0850               	movf	scale@scl,w
  3618     0CB6  00F2               	movwf	___awmod@dividend
  3619     0CB7  01F3               	clrf	___awmod@dividend+1
  3620     0CB8  1BF2               	btfsc	___awmod@dividend,7
  3621     0CB9  03F3               	decf	___awmod@dividend+1,f
  3622     0CBA  3064               	movlw	100
  3623     0CBB  00F0               	movwf	___awmod@divisor
  3624     0CBC  3000               	movlw	0
  3625     0CBD  00F1               	movwf	___awmod@divisor+1
  3626     0CBE  160A  118A  2002  120A  158A  	fcall	___awmod
  3627     0CC3  0871               	movf	?___awmod+1,w
  3628     0CC4  00FA               	movwf	___awdiv@dividend+1
  3629     0CC5  0870               	movf	?___awmod,w
  3630     0CC6  00F9               	movwf	___awdiv@dividend
  3631     0CC7  160A  158A  271F  120A  158A  	fcall	___awdiv
  3632     0CCC  0877               	movf	?___awdiv,w
  3633     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  3634     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  3635     0CCF  00C2               	movwf	??_scale
  3636     0CD0  3001               	movlw	1
  3637     0CD1                     u4465:
  3638     0CD1  1003               	clrc
  3639     0CD2  0DC2               	rlf	??_scale,f
  3640     0CD3  3EFF               	addlw	-1
  3641     0CD4  1D03               	skipz
  3642     0CD5  2CD1               	goto	u4465
  3643     0CD6  1003               	clrc
  3644     0CD7  0D42               	rlf	??_scale,w
  3645     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3646     0CD9  0084               	movwf	4
  3647     0CDA  160A  158A  200A  120A  158A  	fcall	stringdir
  3648     0CDF  00C3               	movwf	??_scale+1
  3649     0CE0  160A  158A  200A  120A  158A  	fcall	stringdir
  3650     0CE5  00C4               	movwf	??_scale+2
  3651     0CE6  160A  158A  200A  120A  158A  	fcall	stringdir
  3652     0CEB  00C5               	movwf	??_scale+3
  3653     0CEC  160A  158A  200A  120A  158A  	fcall	stringdir
  3654     0CF1  00C6               	movwf	??_scale+4
  3655     0CF2  0846               	movf	??_scale+4,w
  3656     0CF3  00A7               	movwf	___flmul@b+3
  3657     0CF4  0845               	movf	??_scale+3,w
  3658     0CF5  00A6               	movwf	___flmul@b+2
  3659     0CF6  0844               	movf	??_scale+2,w
  3660     0CF7  00A5               	movwf	___flmul@b+1
  3661     0CF8  0843               	movf	??_scale+1,w
  3662     0CF9  00A4               	movwf	___flmul@b
  3663     0CFA  3064               	movlw	100
  3664     0CFB  00F7               	movwf	___awdiv@divisor
  3665     0CFC  3000               	movlw	0
  3666     0CFD  00F8               	movwf	___awdiv@divisor+1
  3667     0CFE  0850               	movf	scale@scl,w
  3668     0CFF  00F9               	movwf	___awdiv@dividend
  3669     0D00  01FA               	clrf	___awdiv@dividend+1
  3670     0D01  1BF9               	btfsc	___awdiv@dividend,7
  3671     0D02  03FA               	decf	___awdiv@dividend+1,f
  3672     0D03  160A  158A  271F  120A  158A  	fcall	___awdiv
  3673     0D08  0877               	movf	?___awdiv,w
  3674     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  3675     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  3676     0D0B  00C7               	movwf	??_scale+5
  3677     0D0C  3001               	movlw	1
  3678     0D0D                     u4475:
  3679     0D0D  1003               	clrc
  3680     0D0E  0DC7               	rlf	??_scale+5,f
  3681     0D0F  3EFF               	addlw	-1
  3682     0D10  1D03               	skipz
  3683     0D11  2D0D               	goto	u4475
  3684     0D12  1003               	clrc
  3685     0D13  0D47               	rlf	??_scale+5,w
  3686     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3687     0D15  0084               	movwf	4
  3688     0D16  160A  158A  200A  120A  158A  	fcall	stringdir
  3689     0D1B  00C8               	movwf	??_scale+6
  3690     0D1C  160A  158A  200A  120A  158A  	fcall	stringdir
  3691     0D21  00C9               	movwf	??_scale+7
  3692     0D22  160A  158A  200A  120A  158A  	fcall	stringdir
  3693     0D27  00CA               	movwf	??_scale+8
  3694     0D28  160A  158A  200A  120A  158A  	fcall	stringdir
  3695     0D2D  00CB               	movwf	??_scale+9
  3696     0D2E  084B               	movf	??_scale+9,w
  3697     0D2F  00AB               	movwf	___flmul@a+3
  3698     0D30  084A               	movf	??_scale+8,w
  3699     0D31  00AA               	movwf	___flmul@a+2
  3700     0D32  0849               	movf	??_scale+7,w
  3701     0D33  00A9               	movwf	___flmul@a+1
  3702     0D34  0848               	movf	??_scale+6,w
  3703     0D35  00A8               	movwf	___flmul@a
  3704     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  3705     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  3706     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  3707     0D3D  0827               	movf	?___flmul+3,w
  3708     0D3E  00CF               	movwf	_scale$1018+3
  3709     0D3F  0826               	movf	?___flmul+2,w
  3710     0D40  00CE               	movwf	_scale$1018+2
  3711     0D41  0825               	movf	?___flmul+1,w
  3712     0D42  00CD               	movwf	_scale$1018+1
  3713     0D43  0824               	movf	?___flmul,w
  3714     0D44  00CC               	movwf	_scale$1018
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3717     0D45  300A               	movlw	10
  3718     0D46  00F0               	movwf	___awmod@divisor
  3719     0D47  3000               	movlw	0
  3720     0D48  00F1               	movwf	___awmod@divisor+1
  3721     0D49  0850               	movf	scale@scl,w
  3722     0D4A  00F2               	movwf	___awmod@dividend
  3723     0D4B  01F3               	clrf	___awmod@dividend+1
  3724     0D4C  1BF2               	btfsc	___awmod@dividend,7
  3725     0D4D  03F3               	decf	___awmod@dividend+1,f
  3726     0D4E  160A  118A  2002  120A  158A  	fcall	___awmod
  3727     0D53  0870               	movf	?___awmod,w
  3728     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  3729     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  3730     0D56  00C2               	movwf	??_scale
  3731     0D57  3001               	movlw	1
  3732     0D58                     u4485:
  3733     0D58  1003               	clrc
  3734     0D59  0DC2               	rlf	??_scale,f
  3735     0D5A  3EFF               	addlw	-1
  3736     0D5B  1D03               	skipz
  3737     0D5C  2D58               	goto	u4485
  3738     0D5D  1003               	clrc
  3739     0D5E  0D42               	rlf	??_scale,w
  3740     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3741     0D60  0084               	movwf	4
  3742     0D61  160A  158A  200A  120A  158A  	fcall	stringdir
  3743     0D66  00C3               	movwf	??_scale+1
  3744     0D67  160A  158A  200A  120A  158A  	fcall	stringdir
  3745     0D6C  00C4               	movwf	??_scale+2
  3746     0D6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3747     0D72  00C5               	movwf	??_scale+3
  3748     0D73  160A  158A  200A  120A  158A  	fcall	stringdir
  3749     0D78  00C6               	movwf	??_scale+4
  3750     0D79  0846               	movf	??_scale+4,w
  3751     0D7A  00A7               	movwf	___flmul@b+3
  3752     0D7B  0845               	movf	??_scale+3,w
  3753     0D7C  00A6               	movwf	___flmul@b+2
  3754     0D7D  0844               	movf	??_scale+2,w
  3755     0D7E  00A5               	movwf	___flmul@b+1
  3756     0D7F  0843               	movf	??_scale+1,w
  3757     0D80  00A4               	movwf	___flmul@b
  3758     0D81  084F               	movf	_scale$1018+3,w
  3759     0D82  00AB               	movwf	___flmul@a+3
  3760     0D83  084E               	movf	_scale$1018+2,w
  3761     0D84  00AA               	movwf	___flmul@a+2
  3762     0D85  084D               	movf	_scale$1018+1,w
  3763     0D86  00A9               	movwf	___flmul@a+1
  3764     0D87  084C               	movf	_scale$1018,w
  3765     0D88  00A8               	movwf	___flmul@a
  3766     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  3767     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  3768     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  3769     0D90  0827               	movf	?___flmul+3,w
  3770     0D91  00C1               	movwf	?_scale+3
  3771     0D92  0826               	movf	?___flmul+2,w
  3772     0D93  00C0               	movwf	?_scale+2
  3773     0D94  0825               	movf	?___flmul+1,w
  3774     0D95  00BF               	movwf	?_scale+1
  3775     0D96  0824               	movf	?___flmul,w
  3776     0D97  00BE               	movwf	?_scale
  3777     0D98  2FFF               	goto	l245
  3778     0D99                     l2848:
  3779     0D99  0850               	movf	scale@scl,w
  3780     0D9A  3A80               	xorlw	128
  3781     0D9B  3E75               	addlw	-139
  3782     0D9C  1C03               	skipc
  3783     0D9D  2D9F               	goto	u4491
  3784     0D9E  2DA0               	goto	u4490
  3785     0D9F                     u4491:
  3786     0D9F  2E28               	goto	l2854
  3787     0DA0                     u4490:
  3788     0DA0                     l2850:
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3791     0DA0  300A               	movlw	10
  3792     0DA1  00F0               	movwf	___awmod@divisor
  3793     0DA2  3000               	movlw	0
  3794     0DA3  00F1               	movwf	___awmod@divisor+1
  3795     0DA4  0850               	movf	scale@scl,w
  3796     0DA5  00F2               	movwf	___awmod@dividend
  3797     0DA6  01F3               	clrf	___awmod@dividend+1
  3798     0DA7  1BF2               	btfsc	___awmod@dividend,7
  3799     0DA8  03F3               	decf	___awmod@dividend+1,f
  3800     0DA9  160A  118A  2002  120A  158A  	fcall	___awmod
  3801     0DAE  0870               	movf	?___awmod,w
  3802     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3803     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  3804     0DB1  00C2               	movwf	??_scale
  3805     0DB2  3001               	movlw	1
  3806     0DB3                     u4505:
  3807     0DB3  1003               	clrc
  3808     0DB4  0DC2               	rlf	??_scale,f
  3809     0DB5  3EFF               	addlw	-1
  3810     0DB6  1D03               	skipz
  3811     0DB7  2DB3               	goto	u4505
  3812     0DB8  1003               	clrc
  3813     0DB9  0D42               	rlf	??_scale,w
  3814     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3815     0DBB  0084               	movwf	4
  3816     0DBC  160A  158A  200A  120A  158A  	fcall	stringdir
  3817     0DC1  00C3               	movwf	??_scale+1
  3818     0DC2  160A  158A  200A  120A  158A  	fcall	stringdir
  3819     0DC7  00C4               	movwf	??_scale+2
  3820     0DC8  160A  158A  200A  120A  158A  	fcall	stringdir
  3821     0DCD  00C5               	movwf	??_scale+3
  3822     0DCE  160A  158A  200A  120A  158A  	fcall	stringdir
  3823     0DD3  00C6               	movwf	??_scale+4
  3824     0DD4  0846               	movf	??_scale+4,w
  3825     0DD5  00A7               	movwf	___flmul@b+3
  3826     0DD6  0845               	movf	??_scale+3,w
  3827     0DD7  00A6               	movwf	___flmul@b+2
  3828     0DD8  0844               	movf	??_scale+2,w
  3829     0DD9  00A5               	movwf	___flmul@b+1
  3830     0DDA  0843               	movf	??_scale+1,w
  3831     0DDB  00A4               	movwf	___flmul@b
  3832     0DDC  300A               	movlw	10
  3833     0DDD  00F7               	movwf	___awdiv@divisor
  3834     0DDE  3000               	movlw	0
  3835     0DDF  00F8               	movwf	___awdiv@divisor+1
  3836     0DE0  0850               	movf	scale@scl,w
  3837     0DE1  00F9               	movwf	___awdiv@dividend
  3838     0DE2  01FA               	clrf	___awdiv@dividend+1
  3839     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  3840     0DE4  03FA               	decf	___awdiv@dividend+1,f
  3841     0DE5  160A  158A  271F  120A  158A  	fcall	___awdiv
  3842     0DEA  0877               	movf	?___awdiv,w
  3843     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3844     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3845     0DED  00C7               	movwf	??_scale+5
  3846     0DEE  3001               	movlw	1
  3847     0DEF                     u4515:
  3848     0DEF  1003               	clrc
  3849     0DF0  0DC7               	rlf	??_scale+5,f
  3850     0DF1  3EFF               	addlw	-1
  3851     0DF2  1D03               	skipz
  3852     0DF3  2DEF               	goto	u4515
  3853     0DF4  1003               	clrc
  3854     0DF5  0D47               	rlf	??_scale+5,w
  3855     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3856     0DF7  0084               	movwf	4
  3857     0DF8  160A  158A  200A  120A  158A  	fcall	stringdir
  3858     0DFD  00C8               	movwf	??_scale+6
  3859     0DFE  160A  158A  200A  120A  158A  	fcall	stringdir
  3860     0E03  00C9               	movwf	??_scale+7
  3861     0E04  160A  158A  200A  120A  158A  	fcall	stringdir
  3862     0E09  00CA               	movwf	??_scale+8
  3863     0E0A  160A  158A  200A  120A  158A  	fcall	stringdir
  3864     0E0F  00CB               	movwf	??_scale+9
  3865     0E10  084B               	movf	??_scale+9,w
  3866     0E11  00AB               	movwf	___flmul@a+3
  3867     0E12  084A               	movf	??_scale+8,w
  3868     0E13  00AA               	movwf	___flmul@a+2
  3869     0E14  0849               	movf	??_scale+7,w
  3870     0E15  00A9               	movwf	___flmul@a+1
  3871     0E16  0848               	movf	??_scale+6,w
  3872     0E17  00A8               	movwf	___flmul@a
  3873     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  3874     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3875     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3876     0E1F  0827               	movf	?___flmul+3,w
  3877     0E20  00C1               	movwf	?_scale+3
  3878     0E21  0826               	movf	?___flmul+2,w
  3879     0E22  00C0               	movwf	?_scale+2
  3880     0E23  0825               	movf	?___flmul+1,w
  3881     0E24  00BF               	movwf	?_scale+1
  3882     0E25  0824               	movf	?___flmul,w
  3883     0E26  00BE               	movwf	?_scale
  3884     0E27  2FFF               	goto	l245
  3885     0E28                     l2854:
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3888     0E28  0850               	movf	scale@scl,w
  3889     0E29  00C2               	movwf	??_scale
  3890     0E2A  3001               	movlw	1
  3891     0E2B                     u4525:
  3892     0E2B  1003               	clrc
  3893     0E2C  0DC2               	rlf	??_scale,f
  3894     0E2D  3EFF               	addlw	-1
  3895     0E2E  1D03               	skipz
  3896     0E2F  2E2B               	goto	u4525
  3897     0E30  1003               	clrc
  3898     0E31  0D42               	rlf	??_scale,w
  3899     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3900     0E33  0084               	movwf	4
  3901     0E34  160A  158A  200A  120A  158A  	fcall	stringdir
  3902     0E39  00C3               	movwf	??_scale+1
  3903     0E3A  160A  158A  200A  120A  158A  	fcall	stringdir
  3904     0E3F  00C4               	movwf	??_scale+2
  3905     0E40  160A  158A  200A  120A  158A  	fcall	stringdir
  3906     0E45  00C5               	movwf	??_scale+3
  3907     0E46  160A  158A  200A  120A  158A  	fcall	stringdir
  3908     0E4B  00C6               	movwf	??_scale+4
  3909     0E4C  0846               	movf	??_scale+4,w
  3910     0E4D  00C1               	movwf	?_scale+3
  3911     0E4E  0845               	movf	??_scale+3,w
  3912     0E4F  00C0               	movwf	?_scale+2
  3913     0E50  0844               	movf	??_scale+2,w
  3914     0E51  00BF               	movwf	?_scale+1
  3915     0E52  0843               	movf	??_scale+1,w
  3916     0E53  00BE               	movwf	?_scale
  3917     0E54  2FFF               	goto	l245
  3918     0E55                     l2858:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3921     0E55  0850               	movf	scale@scl,w
  3922     0E56  3A80               	xorlw	128
  3923     0E57  3E12               	addlw	-238
  3924     0E58  1C03               	skipc
  3925     0E59  2E5B               	goto	u4531
  3926     0E5A  2E5C               	goto	u4530
  3927     0E5B                     u4531:
  3928     0E5B  2F44               	goto	l2866
  3929     0E5C                     u4530:
  3930     0E5C                     l2860:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3933     0E5C  300A               	movlw	10
  3934     0E5D  00F7               	movwf	___awdiv@divisor
  3935     0E5E  3000               	movlw	0
  3936     0E5F  00F8               	movwf	___awdiv@divisor+1
  3937     0E60  0850               	movf	scale@scl,w
  3938     0E61  00F2               	movwf	___awmod@dividend
  3939     0E62  01F3               	clrf	___awmod@dividend+1
  3940     0E63  1BF2               	btfsc	___awmod@dividend,7
  3941     0E64  03F3               	decf	___awmod@dividend+1,f
  3942     0E65  3064               	movlw	100
  3943     0E66  00F0               	movwf	___awmod@divisor
  3944     0E67  3000               	movlw	0
  3945     0E68  00F1               	movwf	___awmod@divisor+1
  3946     0E69  160A  118A  2002  120A  158A  	fcall	___awmod
  3947     0E6E  0871               	movf	?___awmod+1,w
  3948     0E6F  00FA               	movwf	___awdiv@dividend+1
  3949     0E70  0870               	movf	?___awmod,w
  3950     0E71  00F9               	movwf	___awdiv@dividend
  3951     0E72  160A  158A  271F  120A  158A  	fcall	___awdiv
  3952     0E77  0877               	movf	?___awdiv,w
  3953     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3954     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3955     0E7A  00C2               	movwf	??_scale
  3956     0E7B  3001               	movlw	1
  3957     0E7C                     u4545:
  3958     0E7C  1003               	clrc
  3959     0E7D  0DC2               	rlf	??_scale,f
  3960     0E7E  3EFF               	addlw	-1
  3961     0E7F  1D03               	skipz
  3962     0E80  2E7C               	goto	u4545
  3963     0E81  1003               	clrc
  3964     0E82  0D42               	rlf	??_scale,w
  3965     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3966     0E84  0084               	movwf	4
  3967     0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3968     0E8A  00C3               	movwf	??_scale+1
  3969     0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3970     0E90  00C4               	movwf	??_scale+2
  3971     0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3972     0E96  00C5               	movwf	??_scale+3
  3973     0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3974     0E9C  00C6               	movwf	??_scale+4
  3975     0E9D  0846               	movf	??_scale+4,w
  3976     0E9E  00A7               	movwf	___flmul@b+3
  3977     0E9F  0845               	movf	??_scale+3,w
  3978     0EA0  00A6               	movwf	___flmul@b+2
  3979     0EA1  0844               	movf	??_scale+2,w
  3980     0EA2  00A5               	movwf	___flmul@b+1
  3981     0EA3  0843               	movf	??_scale+1,w
  3982     0EA4  00A4               	movwf	___flmul@b
  3983     0EA5  3064               	movlw	100
  3984     0EA6  00F7               	movwf	___awdiv@divisor
  3985     0EA7  3000               	movlw	0
  3986     0EA8  00F8               	movwf	___awdiv@divisor+1
  3987     0EA9  0850               	movf	scale@scl,w
  3988     0EAA  00F9               	movwf	___awdiv@dividend
  3989     0EAB  01FA               	clrf	___awdiv@dividend+1
  3990     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  3991     0EAD  03FA               	decf	___awdiv@dividend+1,f
  3992     0EAE  160A  158A  271F  120A  158A  	fcall	___awdiv
  3993     0EB3  0877               	movf	?___awdiv,w
  3994     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3995     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  3996     0EB6  00C7               	movwf	??_scale+5
  3997     0EB7  3001               	movlw	1
  3998     0EB8                     u4555:
  3999     0EB8  1003               	clrc
  4000     0EB9  0DC7               	rlf	??_scale+5,f
  4001     0EBA  3EFF               	addlw	-1
  4002     0EBB  1D03               	skipz
  4003     0EBC  2EB8               	goto	u4555
  4004     0EBD  1003               	clrc
  4005     0EBE  0D47               	rlf	??_scale+5,w
  4006     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4007     0EC0  0084               	movwf	4
  4008     0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  4009     0EC6  00C8               	movwf	??_scale+6
  4010     0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  4011     0ECC  00C9               	movwf	??_scale+7
  4012     0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  4013     0ED2  00CA               	movwf	??_scale+8
  4014     0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  4015     0ED8  00CB               	movwf	??_scale+9
  4016     0ED9  084B               	movf	??_scale+9,w
  4017     0EDA  00AB               	movwf	___flmul@a+3
  4018     0EDB  084A               	movf	??_scale+8,w
  4019     0EDC  00AA               	movwf	___flmul@a+2
  4020     0EDD  0849               	movf	??_scale+7,w
  4021     0EDE  00A9               	movwf	___flmul@a+1
  4022     0EDF  0848               	movf	??_scale+6,w
  4023     0EE0  00A8               	movwf	___flmul@a
  4024     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4025     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4026     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4027     0EE8  0827               	movf	?___flmul+3,w
  4028     0EE9  00CF               	movwf	_scale$1018+3
  4029     0EEA  0826               	movf	?___flmul+2,w
  4030     0EEB  00CE               	movwf	_scale$1018+2
  4031     0EEC  0825               	movf	?___flmul+1,w
  4032     0EED  00CD               	movwf	_scale$1018+1
  4033     0EEE  0824               	movf	?___flmul,w
  4034     0EEF  00CC               	movwf	_scale$1018
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4037     0EF0  300A               	movlw	10
  4038     0EF1  00F0               	movwf	___awmod@divisor
  4039     0EF2  3000               	movlw	0
  4040     0EF3  00F1               	movwf	___awmod@divisor+1
  4041     0EF4  0850               	movf	scale@scl,w
  4042     0EF5  00F2               	movwf	___awmod@dividend
  4043     0EF6  01F3               	clrf	___awmod@dividend+1
  4044     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4045     0EF8  03F3               	decf	___awmod@dividend+1,f
  4046     0EF9  160A  118A  2002  120A  158A  	fcall	___awmod
  4047     0EFE  0870               	movf	?___awmod,w
  4048     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4049     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4050     0F01  00C2               	movwf	??_scale
  4051     0F02  3001               	movlw	1
  4052     0F03                     u4565:
  4053     0F03  1003               	clrc
  4054     0F04  0DC2               	rlf	??_scale,f
  4055     0F05  3EFF               	addlw	-1
  4056     0F06  1D03               	skipz
  4057     0F07  2F03               	goto	u4565
  4058     0F08  1003               	clrc
  4059     0F09  0D42               	rlf	??_scale,w
  4060     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4061     0F0B  0084               	movwf	4
  4062     0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4063     0F11  00C3               	movwf	??_scale+1
  4064     0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  4065     0F17  00C4               	movwf	??_scale+2
  4066     0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  4067     0F1D  00C5               	movwf	??_scale+3
  4068     0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  4069     0F23  00C6               	movwf	??_scale+4
  4070     0F24  0846               	movf	??_scale+4,w
  4071     0F25  00A7               	movwf	___flmul@b+3
  4072     0F26  0845               	movf	??_scale+3,w
  4073     0F27  00A6               	movwf	___flmul@b+2
  4074     0F28  0844               	movf	??_scale+2,w
  4075     0F29  00A5               	movwf	___flmul@b+1
  4076     0F2A  0843               	movf	??_scale+1,w
  4077     0F2B  00A4               	movwf	___flmul@b
  4078     0F2C  084F               	movf	_scale$1018+3,w
  4079     0F2D  00AB               	movwf	___flmul@a+3
  4080     0F2E  084E               	movf	_scale$1018+2,w
  4081     0F2F  00AA               	movwf	___flmul@a+2
  4082     0F30  084D               	movf	_scale$1018+1,w
  4083     0F31  00A9               	movwf	___flmul@a+1
  4084     0F32  084C               	movf	_scale$1018,w
  4085     0F33  00A8               	movwf	___flmul@a
  4086     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4087     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4088     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4089     0F3B  0827               	movf	?___flmul+3,w
  4090     0F3C  00C1               	movwf	?_scale+3
  4091     0F3D  0826               	movf	?___flmul+2,w
  4092     0F3E  00C0               	movwf	?_scale+2
  4093     0F3F  0825               	movf	?___flmul+1,w
  4094     0F40  00BF               	movwf	?_scale+1
  4095     0F41  0824               	movf	?___flmul,w
  4096     0F42  00BE               	movwf	?_scale
  4097     0F43  2FFF               	goto	l245
  4098     0F44                     l2866:
  4099     0F44  0850               	movf	scale@scl,w
  4100     0F45  3A80               	xorlw	128
  4101     0F46  3E75               	addlw	-139
  4102     0F47  1C03               	skipc
  4103     0F48  2F4A               	goto	u4571
  4104     0F49  2F4B               	goto	u4570
  4105     0F4A                     u4571:
  4106     0F4A  2FD3               	goto	l2872
  4107     0F4B                     u4570:
  4108     0F4B                     l2868:
  4109                           
  4110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4111     0F4B  300A               	movlw	10
  4112     0F4C  00F0               	movwf	___awmod@divisor
  4113     0F4D  3000               	movlw	0
  4114     0F4E  00F1               	movwf	___awmod@divisor+1
  4115     0F4F  0850               	movf	scale@scl,w
  4116     0F50  00F2               	movwf	___awmod@dividend
  4117     0F51  01F3               	clrf	___awmod@dividend+1
  4118     0F52  1BF2               	btfsc	___awmod@dividend,7
  4119     0F53  03F3               	decf	___awmod@dividend+1,f
  4120     0F54  160A  118A  2002  120A  158A  	fcall	___awmod
  4121     0F59  0870               	movf	?___awmod,w
  4122     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4123     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4124     0F5C  00C2               	movwf	??_scale
  4125     0F5D  3001               	movlw	1
  4126     0F5E                     u4585:
  4127     0F5E  1003               	clrc
  4128     0F5F  0DC2               	rlf	??_scale,f
  4129     0F60  3EFF               	addlw	-1
  4130     0F61  1D03               	skipz
  4131     0F62  2F5E               	goto	u4585
  4132     0F63  1003               	clrc
  4133     0F64  0D42               	rlf	??_scale,w
  4134     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4135     0F66  0084               	movwf	4
  4136     0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  4137     0F6C  00C3               	movwf	??_scale+1
  4138     0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4139     0F72  00C4               	movwf	??_scale+2
  4140     0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  4141     0F78  00C5               	movwf	??_scale+3
  4142     0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  4143     0F7E  00C6               	movwf	??_scale+4
  4144     0F7F  0846               	movf	??_scale+4,w
  4145     0F80  00A7               	movwf	___flmul@b+3
  4146     0F81  0845               	movf	??_scale+3,w
  4147     0F82  00A6               	movwf	___flmul@b+2
  4148     0F83  0844               	movf	??_scale+2,w
  4149     0F84  00A5               	movwf	___flmul@b+1
  4150     0F85  0843               	movf	??_scale+1,w
  4151     0F86  00A4               	movwf	___flmul@b
  4152     0F87  300A               	movlw	10
  4153     0F88  00F7               	movwf	___awdiv@divisor
  4154     0F89  3000               	movlw	0
  4155     0F8A  00F8               	movwf	___awdiv@divisor+1
  4156     0F8B  0850               	movf	scale@scl,w
  4157     0F8C  00F9               	movwf	___awdiv@dividend
  4158     0F8D  01FA               	clrf	___awdiv@dividend+1
  4159     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4160     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4161     0F90  160A  158A  271F  120A  158A  	fcall	___awdiv
  4162     0F95  0877               	movf	?___awdiv,w
  4163     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4164     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4165     0F98  00C7               	movwf	??_scale+5
  4166     0F99  3001               	movlw	1
  4167     0F9A                     u4595:
  4168     0F9A  1003               	clrc
  4169     0F9B  0DC7               	rlf	??_scale+5,f
  4170     0F9C  3EFF               	addlw	-1
  4171     0F9D  1D03               	skipz
  4172     0F9E  2F9A               	goto	u4595
  4173     0F9F  1003               	clrc
  4174     0FA0  0D47               	rlf	??_scale+5,w
  4175     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4176     0FA2  0084               	movwf	4
  4177     0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4178     0FA8  00C8               	movwf	??_scale+6
  4179     0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4180     0FAE  00C9               	movwf	??_scale+7
  4181     0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  4182     0FB4  00CA               	movwf	??_scale+8
  4183     0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  4184     0FBA  00CB               	movwf	??_scale+9
  4185     0FBB  084B               	movf	??_scale+9,w
  4186     0FBC  00AB               	movwf	___flmul@a+3
  4187     0FBD  084A               	movf	??_scale+8,w
  4188     0FBE  00AA               	movwf	___flmul@a+2
  4189     0FBF  0849               	movf	??_scale+7,w
  4190     0FC0  00A9               	movwf	___flmul@a+1
  4191     0FC1  0848               	movf	??_scale+6,w
  4192     0FC2  00A8               	movwf	___flmul@a
  4193     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4194     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4195     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4196     0FCA  0827               	movf	?___flmul+3,w
  4197     0FCB  00C1               	movwf	?_scale+3
  4198     0FCC  0826               	movf	?___flmul+2,w
  4199     0FCD  00C0               	movwf	?_scale+2
  4200     0FCE  0825               	movf	?___flmul+1,w
  4201     0FCF  00BF               	movwf	?_scale+1
  4202     0FD0  0824               	movf	?___flmul,w
  4203     0FD1  00BE               	movwf	?_scale
  4204     0FD2  2FFF               	goto	l245
  4205     0FD3                     l2872:
  4206                           
  4207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4208     0FD3  0850               	movf	scale@scl,w
  4209     0FD4  00C2               	movwf	??_scale
  4210     0FD5  3001               	movlw	1
  4211     0FD6                     u4605:
  4212     0FD6  1003               	clrc
  4213     0FD7  0DC2               	rlf	??_scale,f
  4214     0FD8  3EFF               	addlw	-1
  4215     0FD9  1D03               	skipz
  4216     0FDA  2FD6               	goto	u4605
  4217     0FDB  1003               	clrc
  4218     0FDC  0D42               	rlf	??_scale,w
  4219     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4220     0FDE  0084               	movwf	4
  4221     0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  4222     0FE4  00C3               	movwf	??_scale+1
  4223     0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4224     0FEA  00C4               	movwf	??_scale+2
  4225     0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  4226     0FF0  00C5               	movwf	??_scale+3
  4227     0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  4228     0FF6  00C6               	movwf	??_scale+4
  4229     0FF7  0846               	movf	??_scale+4,w
  4230     0FF8  00C1               	movwf	?_scale+3
  4231     0FF9  0845               	movf	??_scale+3,w
  4232     0FFA  00C0               	movwf	?_scale+2
  4233     0FFB  0844               	movf	??_scale+2,w
  4234     0FFC  00BF               	movwf	?_scale+1
  4235     0FFD  0843               	movf	??_scale+1,w
  4236     0FFE  00BE               	movwf	?_scale
  4237     0FFF                     l245:
  4238     0FFF  0008               	return
  4239     1000                     __end_of_scale:
  4240                           
  4241                           	psect	text3
  4242     1002                     __ptext3:	
  4243 ;; *************** function ___awmod *****************
  4244 ;; Defined at:
  4245 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  divisor         2    0[COMMON] int 
  4248 ;;  dividend        2    2[COMMON] int 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  sign            1    6[COMMON] unsigned char 
  4251 ;;  counter         1    5[COMMON] unsigned char 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  2    0[COMMON] int 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4261 ;;      Params:         4       0       0       0       0
  4262 ;;      Locals:         2       0       0       0       0
  4263 ;;      Temps:          1       0       0       0       0
  4264 ;;      Totals:         7       0       0       0       0
  4265 ;;Total ram usage:        7 bytes
  4266 ;; Hardware stack levels used: 1
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_scale
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274     1002                     ___awmod:	
  4275                           ;psect for function ___awmod
  4276                           
  4277     1002                     l2368:	
  4278                           ;incstack = 0
  4279                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4280                           
  4281     1002  01F6               	clrf	___awmod@sign
  4282     1003                     l2370:
  4283     1003  1FF3               	btfss	___awmod@dividend+1,7
  4284     1004  2806               	goto	u3301
  4285     1005  2807               	goto	u3300
  4286     1006                     u3301:
  4287     1006  280E               	goto	l2376
  4288     1007                     u3300:
  4289     1007                     l2372:
  4290     1007  09F2               	comf	___awmod@dividend,f
  4291     1008  09F3               	comf	___awmod@dividend+1,f
  4292     1009  0AF2               	incf	___awmod@dividend,f
  4293     100A  1903               	skipnz
  4294     100B  0AF3               	incf	___awmod@dividend+1,f
  4295     100C                     l2374:
  4296     100C  01F6               	clrf	___awmod@sign
  4297     100D  0AF6               	incf	___awmod@sign,f
  4298     100E                     l2376:
  4299     100E  1FF1               	btfss	___awmod@divisor+1,7
  4300     100F  2811               	goto	u3311
  4301     1010  2812               	goto	u3310
  4302     1011                     u3311:
  4303     1011  2817               	goto	l2380
  4304     1012                     u3310:
  4305     1012                     l2378:
  4306     1012  09F0               	comf	___awmod@divisor,f
  4307     1013  09F1               	comf	___awmod@divisor+1,f
  4308     1014  0AF0               	incf	___awmod@divisor,f
  4309     1015  1903               	skipnz
  4310     1016  0AF1               	incf	___awmod@divisor+1,f
  4311     1017                     l2380:
  4312     1017  0870               	movf	___awmod@divisor,w
  4313     1018  0471               	iorwf	___awmod@divisor+1,w
  4314     1019  1903               	btfsc	3,2
  4315     101A  281C               	goto	u3321
  4316     101B  281D               	goto	u3320
  4317     101C                     u3321:
  4318     101C  284C               	goto	l2398
  4319     101D                     u3320:
  4320     101D                     l2382:
  4321     101D  01F5               	clrf	___awmod@counter
  4322     101E  0AF5               	incf	___awmod@counter,f
  4323     101F  282B               	goto	l2388
  4324     1020                     l2384:
  4325     1020  3001               	movlw	1
  4326     1021                     u3335:
  4327     1021  1003               	clrc
  4328     1022  0DF0               	rlf	___awmod@divisor,f
  4329     1023  0DF1               	rlf	___awmod@divisor+1,f
  4330     1024  3EFF               	addlw	-1
  4331     1025  1D03               	skipz
  4332     1026  2821               	goto	u3335
  4333     1027                     l2386:
  4334     1027  3001               	movlw	1
  4335     1028  00F4               	movwf	??___awmod
  4336     1029  0874               	movf	??___awmod,w
  4337     102A  07F5               	addwf	___awmod@counter,f
  4338     102B                     l2388:
  4339     102B  1FF1               	btfss	___awmod@divisor+1,7
  4340     102C  282E               	goto	u3341
  4341     102D  282F               	goto	u3340
  4342     102E                     u3341:
  4343     102E  2820               	goto	l2384
  4344     102F                     u3340:
  4345     102F                     l2390:
  4346     102F  0871               	movf	___awmod@divisor+1,w
  4347     1030  0273               	subwf	___awmod@dividend+1,w
  4348     1031  1D03               	skipz
  4349     1032  2835               	goto	u3355
  4350     1033  0870               	movf	___awmod@divisor,w
  4351     1034  0272               	subwf	___awmod@dividend,w
  4352     1035                     u3355:
  4353     1035  1C03               	skipc
  4354     1036  2838               	goto	u3351
  4355     1037  2839               	goto	u3350
  4356     1038                     u3351:
  4357     1038  283F               	goto	l2394
  4358     1039                     u3350:
  4359     1039                     l2392:
  4360     1039  0870               	movf	___awmod@divisor,w
  4361     103A  02F2               	subwf	___awmod@dividend,f
  4362     103B  0871               	movf	___awmod@divisor+1,w
  4363     103C  1C03               	skipc
  4364     103D  03F3               	decf	___awmod@dividend+1,f
  4365     103E  02F3               	subwf	___awmod@dividend+1,f
  4366     103F                     l2394:
  4367     103F  3001               	movlw	1
  4368     1040                     u3365:
  4369     1040  1003               	clrc
  4370     1041  0CF1               	rrf	___awmod@divisor+1,f
  4371     1042  0CF0               	rrf	___awmod@divisor,f
  4372     1043  3EFF               	addlw	-1
  4373     1044  1D03               	skipz
  4374     1045  2840               	goto	u3365
  4375     1046                     l2396:
  4376     1046  3001               	movlw	1
  4377     1047  02F5               	subwf	___awmod@counter,f
  4378     1048  1D03               	btfss	3,2
  4379     1049  284B               	goto	u3371
  4380     104A  284C               	goto	u3370
  4381     104B                     u3371:
  4382     104B  282F               	goto	l2390
  4383     104C                     u3370:
  4384     104C                     l2398:
  4385     104C  0876               	movf	___awmod@sign,w
  4386     104D  1903               	btfsc	3,2
  4387     104E  2850               	goto	u3381
  4388     104F  2851               	goto	u3380
  4389     1050                     u3381:
  4390     1050  2856               	goto	l2402
  4391     1051                     u3380:
  4392     1051                     l2400:
  4393     1051  09F2               	comf	___awmod@dividend,f
  4394     1052  09F3               	comf	___awmod@dividend+1,f
  4395     1053  0AF2               	incf	___awmod@dividend,f
  4396     1054  1903               	skipnz
  4397     1055  0AF3               	incf	___awmod@dividend+1,f
  4398     1056                     l2402:
  4399     1056  0873               	movf	___awmod@dividend+1,w
  4400     1057  00F1               	movwf	?___awmod+1
  4401     1058  0872               	movf	___awmod@dividend,w
  4402     1059  00F0               	movwf	?___awmod
  4403     105A                     l481:
  4404     105A  0008               	return
  4405     105B                     __end_of___awmod:
  4406                           
  4407                           	psect	text4
  4408     1F1F                     __ptext4:	
  4409 ;; *************** function ___awdiv *****************
  4410 ;; Defined at:
  4411 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  divisor         2    7[COMMON] int 
  4414 ;;  dividend        2    9[COMMON] int 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  quotient        2    2[BANK0 ] int 
  4417 ;;  sign            1    1[BANK0 ] unsigned char 
  4418 ;;  counter         1    0[BANK0 ] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  2    7[COMMON] int 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         4       0       0       0       0
  4429 ;;      Locals:         0       4       0       0       0
  4430 ;;      Temps:          1       0       0       0       0
  4431 ;;      Totals:         5       4       0       0       0
  4432 ;;Total ram usage:        9 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_scale
  4438 ;;		_sprintf
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442     1F1F                     ___awdiv:	
  4443                           ;psect for function ___awdiv
  4444                           
  4445     1F1F                     l2324:	
  4446                           ;incstack = 0
  4447                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4448                           
  4449     1F1F  1283               	bcf	3,5	;RP0=0, select bank0
  4450     1F20  1303               	bcf	3,6	;RP1=0, select bank0
  4451     1F21  01A1               	clrf	___awdiv@sign
  4452     1F22                     l2326:
  4453     1F22  1FF8               	btfss	___awdiv@divisor+1,7
  4454     1F23  2F25               	goto	u3201
  4455     1F24  2F26               	goto	u3200
  4456     1F25                     u3201:
  4457     1F25  2F2D               	goto	l2332
  4458     1F26                     u3200:
  4459     1F26                     l2328:
  4460     1F26  09F7               	comf	___awdiv@divisor,f
  4461     1F27  09F8               	comf	___awdiv@divisor+1,f
  4462     1F28  0AF7               	incf	___awdiv@divisor,f
  4463     1F29  1903               	skipnz
  4464     1F2A  0AF8               	incf	___awdiv@divisor+1,f
  4465     1F2B                     l2330:
  4466     1F2B  01A1               	clrf	___awdiv@sign
  4467     1F2C  0AA1               	incf	___awdiv@sign,f
  4468     1F2D                     l2332:
  4469     1F2D  1FFA               	btfss	___awdiv@dividend+1,7
  4470     1F2E  2F30               	goto	u3211
  4471     1F2F  2F31               	goto	u3210
  4472     1F30                     u3211:
  4473     1F30  2F3A               	goto	l2338
  4474     1F31                     u3210:
  4475     1F31                     l2334:
  4476     1F31  09F9               	comf	___awdiv@dividend,f
  4477     1F32  09FA               	comf	___awdiv@dividend+1,f
  4478     1F33  0AF9               	incf	___awdiv@dividend,f
  4479     1F34  1903               	skipnz
  4480     1F35  0AFA               	incf	___awdiv@dividend+1,f
  4481     1F36                     l2336:
  4482     1F36  3001               	movlw	1
  4483     1F37  00FB               	movwf	??___awdiv
  4484     1F38  087B               	movf	??___awdiv,w
  4485     1F39  06A1               	xorwf	___awdiv@sign,f
  4486     1F3A                     l2338:
  4487     1F3A  01A2               	clrf	___awdiv@quotient
  4488     1F3B  01A3               	clrf	___awdiv@quotient+1
  4489     1F3C                     l2340:
  4490     1F3C  0877               	movf	___awdiv@divisor,w
  4491     1F3D  0478               	iorwf	___awdiv@divisor+1,w
  4492     1F3E  1903               	btfsc	3,2
  4493     1F3F  2F41               	goto	u3221
  4494     1F40  2F42               	goto	u3220
  4495     1F41                     u3221:
  4496     1F41  2F79               	goto	l2360
  4497     1F42                     u3220:
  4498     1F42                     l2342:
  4499     1F42  01A0               	clrf	___awdiv@counter
  4500     1F43  0AA0               	incf	___awdiv@counter,f
  4501     1F44  2F50               	goto	l2348
  4502     1F45                     l2344:
  4503     1F45  3001               	movlw	1
  4504     1F46                     u3235:
  4505     1F46  1003               	clrc
  4506     1F47  0DF7               	rlf	___awdiv@divisor,f
  4507     1F48  0DF8               	rlf	___awdiv@divisor+1,f
  4508     1F49  3EFF               	addlw	-1
  4509     1F4A  1D03               	skipz
  4510     1F4B  2F46               	goto	u3235
  4511     1F4C                     l2346:
  4512     1F4C  3001               	movlw	1
  4513     1F4D  00FB               	movwf	??___awdiv
  4514     1F4E  087B               	movf	??___awdiv,w
  4515     1F4F  07A0               	addwf	___awdiv@counter,f
  4516     1F50                     l2348:
  4517     1F50  1FF8               	btfss	___awdiv@divisor+1,7
  4518     1F51  2F53               	goto	u3241
  4519     1F52  2F54               	goto	u3240
  4520     1F53                     u3241:
  4521     1F53  2F45               	goto	l2344
  4522     1F54                     u3240:
  4523     1F54                     l2350:
  4524     1F54  3001               	movlw	1
  4525     1F55                     u3255:
  4526     1F55  1003               	clrc
  4527     1F56  0DA2               	rlf	___awdiv@quotient,f
  4528     1F57  0DA3               	rlf	___awdiv@quotient+1,f
  4529     1F58  3EFF               	addlw	-1
  4530     1F59  1D03               	skipz
  4531     1F5A  2F55               	goto	u3255
  4532     1F5B  0878               	movf	___awdiv@divisor+1,w
  4533     1F5C  027A               	subwf	___awdiv@dividend+1,w
  4534     1F5D  1D03               	skipz
  4535     1F5E  2F61               	goto	u3265
  4536     1F5F  0877               	movf	___awdiv@divisor,w
  4537     1F60  0279               	subwf	___awdiv@dividend,w
  4538     1F61                     u3265:
  4539     1F61  1C03               	skipc
  4540     1F62  2F64               	goto	u3261
  4541     1F63  2F65               	goto	u3260
  4542     1F64                     u3261:
  4543     1F64  2F6C               	goto	l2356
  4544     1F65                     u3260:
  4545     1F65                     l2352:
  4546     1F65  0877               	movf	___awdiv@divisor,w
  4547     1F66  02F9               	subwf	___awdiv@dividend,f
  4548     1F67  0878               	movf	___awdiv@divisor+1,w
  4549     1F68  1C03               	skipc
  4550     1F69  03FA               	decf	___awdiv@dividend+1,f
  4551     1F6A  02FA               	subwf	___awdiv@dividend+1,f
  4552     1F6B                     l2354:
  4553     1F6B  1422               	bsf	___awdiv@quotient,0
  4554     1F6C                     l2356:
  4555     1F6C  3001               	movlw	1
  4556     1F6D                     u3275:
  4557     1F6D  1003               	clrc
  4558     1F6E  0CF8               	rrf	___awdiv@divisor+1,f
  4559     1F6F  0CF7               	rrf	___awdiv@divisor,f
  4560     1F70  3EFF               	addlw	-1
  4561     1F71  1D03               	skipz
  4562     1F72  2F6D               	goto	u3275
  4563     1F73                     l2358:
  4564     1F73  3001               	movlw	1
  4565     1F74  02A0               	subwf	___awdiv@counter,f
  4566     1F75  1D03               	btfss	3,2
  4567     1F76  2F78               	goto	u3281
  4568     1F77  2F79               	goto	u3280
  4569     1F78                     u3281:
  4570     1F78  2F54               	goto	l2350
  4571     1F79                     u3280:
  4572     1F79                     l2360:
  4573     1F79  0821               	movf	___awdiv@sign,w
  4574     1F7A  1903               	btfsc	3,2
  4575     1F7B  2F7D               	goto	u3291
  4576     1F7C  2F7E               	goto	u3290
  4577     1F7D                     u3291:
  4578     1F7D  2F83               	goto	l2364
  4579     1F7E                     u3290:
  4580     1F7E                     l2362:
  4581     1F7E  09A2               	comf	___awdiv@quotient,f
  4582     1F7F  09A3               	comf	___awdiv@quotient+1,f
  4583     1F80  0AA2               	incf	___awdiv@quotient,f
  4584     1F81  1903               	skipnz
  4585     1F82  0AA3               	incf	___awdiv@quotient+1,f
  4586     1F83                     l2364:
  4587     1F83  0823               	movf	___awdiv@quotient+1,w
  4588     1F84  00F8               	movwf	?___awdiv+1
  4589     1F85  0822               	movf	___awdiv@quotient,w
  4590     1F86  00F7               	movwf	?___awdiv
  4591     1F87                     l468:
  4592     1F87  0008               	return
  4593     1F88                     __end_of___awdiv:
  4594                           
  4595                           	psect	text5
  4596     1B44                     __ptext5:	
  4597 ;; *************** function _isdigit *****************
  4598 ;; Defined at:
  4599 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  c               1    wreg     unsigned char 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  c               1    1[COMMON] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;		None               void
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4613 ;;      Params:         0       0       0       0       0
  4614 ;;      Locals:         2       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0
  4616 ;;      Totals:         2       0       0       0       0
  4617 ;;Total ram usage:        2 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_sprintf
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626     1B44                     _isdigit:	
  4627                           ;psect for function _isdigit
  4628                           
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4632                           ;isdigit@c stored from wreg
  4633     1B44  00F1               	movwf	isdigit@c
  4634     1B45                     l2876:
  4635     1B45  01F0               	clrf	_isdigit$838
  4636     1B46                     l2878:
  4637     1B46  303A               	movlw	58
  4638     1B47  0271               	subwf	isdigit@c,w
  4639     1B48  1803               	skipnc
  4640     1B49  2B4B               	goto	u4611
  4641     1B4A  2B4C               	goto	u4610
  4642     1B4B                     u4611:
  4643     1B4B  2B54               	goto	l2884
  4644     1B4C                     u4610:
  4645     1B4C                     l2880:
  4646     1B4C  3030               	movlw	48
  4647     1B4D  0271               	subwf	isdigit@c,w
  4648     1B4E  1C03               	skipc
  4649     1B4F  2B51               	goto	u4621
  4650     1B50  2B52               	goto	u4620
  4651     1B51                     u4621:
  4652     1B51  2B54               	goto	l2884
  4653     1B52                     u4620:
  4654     1B52                     l2882:
  4655     1B52  01F0               	clrf	_isdigit$838
  4656     1B53  0AF0               	incf	_isdigit$838,f
  4657     1B54                     l2884:
  4658     1B54  0C70               	rrf	_isdigit$838,w
  4659     1B55                     l802:
  4660     1B55  0008               	return
  4661     1B56                     __end_of_isdigit:
  4662                           
  4663                           	psect	text6
  4664     139D                     __ptext6:	
  4665 ;; *************** function _fround *****************
  4666 ;; Defined at:
  4667 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  prec            1    wreg     unsigned char 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  prec            1   49[BANK0 ] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  4   30[BANK0 ] unsigned char 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4681 ;;      Params:         0       4       0       0       0
  4682 ;;      Locals:         0       9       0       0       0
  4683 ;;      Temps:          0       7       0       0       0
  4684 ;;      Totals:         0      20       0       0       0
  4685 ;;Total ram usage:       20 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 2
  4688 ;; This function calls:
  4689 ;;		___flmul
  4690 ;;		___lwdiv
  4691 ;;		___lwmod
  4692 ;; This function is called by:
  4693 ;;		_sprintf
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697     139D                     _fround:	
  4698                           ;psect for function _fround
  4699                           
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4703                           ;fround@prec stored from wreg
  4704     139D  1283               	bcf	3,5	;RP0=0, select bank0
  4705     139E  1303               	bcf	3,6	;RP1=0, select bank0
  4706     139F  00D1               	movwf	fround@prec
  4707     13A0                     l2818:
  4708                           
  4709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4710     13A0  306E               	movlw	110
  4711     13A1  0251               	subwf	fround@prec,w
  4712     13A2  1C03               	skipc
  4713     13A3  2BA5               	goto	u4361
  4714     13A4  2BA6               	goto	u4360
  4715     13A5                     u4361:
  4716     13A5  2CB3               	goto	l2826
  4717     13A6                     u4360:
  4718     13A6                     l2820:
  4719                           
  4720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4721     13A6  303F               	movlw	63
  4722     13A7  00A7               	movwf	___flmul@b+3
  4723     13A8  3000               	movlw	0
  4724     13A9  00A6               	movwf	___flmul@b+2
  4725     13AA  3000               	movlw	0
  4726     13AB  00A5               	movwf	___flmul@b+1
  4727     13AC  3000               	movlw	0
  4728     13AD  00A4               	movwf	___flmul@b
  4729     13AE  3064               	movlw	100
  4730     13AF  00F6               	movwf	___lwdiv@divisor
  4731     13B0  3000               	movlw	0
  4732     13B1  00F7               	movwf	___lwdiv@divisor+1
  4733     13B2  0851               	movf	fround@prec,w
  4734     13B3  00C2               	movwf	??_fround
  4735     13B4  01C3               	clrf	??_fround+1
  4736     13B5  0842               	movf	??_fround,w
  4737     13B6  00F8               	movwf	___lwdiv@dividend
  4738     13B7  0843               	movf	??_fround+1,w
  4739     13B8  00F9               	movwf	___lwdiv@dividend+1
  4740     13B9  160A  158A  2522  160A  118A  	fcall	___lwdiv
  4741     13BE  0876               	movf	?___lwdiv,w
  4742     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4743     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4744     13C1  00C4               	movwf	??_fround+2
  4745     13C2  3001               	movlw	1
  4746     13C3                     u4375:
  4747     13C3  1003               	clrc
  4748     13C4  0DC4               	rlf	??_fround+2,f
  4749     13C5  3EFF               	addlw	-1
  4750     13C6  1D03               	skipz
  4751     13C7  2BC3               	goto	u4375
  4752     13C8  1003               	clrc
  4753     13C9  0D44               	rlf	??_fround+2,w
  4754     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4755     13CB  0084               	movwf	4
  4756     13CC  160A  158A  200A  160A  118A  	fcall	stringdir
  4757     13D1  00C5               	movwf	??_fround+3
  4758     13D2  160A  158A  200A  160A  118A  	fcall	stringdir
  4759     13D7  00C6               	movwf	??_fround+4
  4760     13D8  160A  158A  200A  160A  118A  	fcall	stringdir
  4761     13DD  00C7               	movwf	??_fround+5
  4762     13DE  160A  158A  200A  160A  118A  	fcall	stringdir
  4763     13E3  00C8               	movwf	??_fround+6
  4764     13E4  0848               	movf	??_fround+6,w
  4765     13E5  00AB               	movwf	___flmul@a+3
  4766     13E6  0847               	movf	??_fround+5,w
  4767     13E7  00AA               	movwf	___flmul@a+2
  4768     13E8  0846               	movf	??_fround+4,w
  4769     13E9  00A9               	movwf	___flmul@a+1
  4770     13EA  0845               	movf	??_fround+3,w
  4771     13EB  00A8               	movwf	___flmul@a
  4772     13EC  120A  158A  215C  160A  118A  	fcall	___flmul
  4773     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4774     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4775     13F3  0827               	movf	?___flmul+3,w
  4776     13F4  00D0               	movwf	_fround$1016+3
  4777     13F5  0826               	movf	?___flmul+2,w
  4778     13F6  00CF               	movwf	_fround$1016+2
  4779     13F7  0825               	movf	?___flmul+1,w
  4780     13F8  00CE               	movwf	_fround$1016+1
  4781     13F9  0824               	movf	?___flmul,w
  4782     13FA  00CD               	movwf	_fround$1016
  4783                           
  4784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4785     13FB  300A               	movlw	10
  4786     13FC  00F6               	movwf	___lwdiv@divisor
  4787     13FD  3000               	movlw	0
  4788     13FE  00F7               	movwf	___lwdiv@divisor+1
  4789     13FF  0851               	movf	fround@prec,w
  4790     1400  00C2               	movwf	??_fround
  4791     1401  01C3               	clrf	??_fround+1
  4792     1402  0842               	movf	??_fround,w
  4793     1403  00F2               	movwf	___lwmod@dividend
  4794     1404  0843               	movf	??_fround+1,w
  4795     1405  00F3               	movwf	___lwmod@dividend+1
  4796     1406  3064               	movlw	100
  4797     1407  00F0               	movwf	___lwmod@divisor
  4798     1408  3000               	movlw	0
  4799     1409  00F1               	movwf	___lwmod@divisor+1
  4800     140A  160A  158A  2464  160A  118A  	fcall	___lwmod
  4801     140F  0871               	movf	?___lwmod+1,w
  4802     1410  00F9               	movwf	___lwdiv@dividend+1
  4803     1411  0870               	movf	?___lwmod,w
  4804     1412  00F8               	movwf	___lwdiv@dividend
  4805     1413  160A  158A  2522  160A  118A  	fcall	___lwdiv
  4806     1418  0876               	movf	?___lwdiv,w
  4807     1419  1283               	bcf	3,5	;RP0=0, select bank0
  4808     141A  1303               	bcf	3,6	;RP1=0, select bank0
  4809     141B  00C4               	movwf	??_fround+2
  4810     141C  3001               	movlw	1
  4811     141D                     u4385:
  4812     141D  1003               	clrc
  4813     141E  0DC4               	rlf	??_fround+2,f
  4814     141F  3EFF               	addlw	-1
  4815     1420  1D03               	skipz
  4816     1421  2C1D               	goto	u4385
  4817     1422  1003               	clrc
  4818     1423  0D44               	rlf	??_fround+2,w
  4819     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4820     1425  0084               	movwf	4
  4821     1426  160A  158A  200A  160A  118A  	fcall	stringdir
  4822     142B  00C5               	movwf	??_fround+3
  4823     142C  160A  158A  200A  160A  118A  	fcall	stringdir
  4824     1431  00C6               	movwf	??_fround+4
  4825     1432  160A  158A  200A  160A  118A  	fcall	stringdir
  4826     1437  00C7               	movwf	??_fround+5
  4827     1438  160A  158A  200A  160A  118A  	fcall	stringdir
  4828     143D  00C8               	movwf	??_fround+6
  4829     143E  0848               	movf	??_fround+6,w
  4830     143F  00A7               	movwf	___flmul@b+3
  4831     1440  0847               	movf	??_fround+5,w
  4832     1441  00A6               	movwf	___flmul@b+2
  4833     1442  0846               	movf	??_fround+4,w
  4834     1443  00A5               	movwf	___flmul@b+1
  4835     1444  0845               	movf	??_fround+3,w
  4836     1445  00A4               	movwf	___flmul@b
  4837     1446  0850               	movf	_fround$1016+3,w
  4838     1447  00AB               	movwf	___flmul@a+3
  4839     1448  084F               	movf	_fround$1016+2,w
  4840     1449  00AA               	movwf	___flmul@a+2
  4841     144A  084E               	movf	_fround$1016+1,w
  4842     144B  00A9               	movwf	___flmul@a+1
  4843     144C  084D               	movf	_fround$1016,w
  4844     144D  00A8               	movwf	___flmul@a
  4845     144E  120A  158A  215C  160A  118A  	fcall	___flmul
  4846     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4847     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4848     1455  0827               	movf	?___flmul+3,w
  4849     1456  00CC               	movwf	_fround$1017+3
  4850     1457  0826               	movf	?___flmul+2,w
  4851     1458  00CB               	movwf	_fround$1017+2
  4852     1459  0825               	movf	?___flmul+1,w
  4853     145A  00CA               	movwf	_fround$1017+1
  4854     145B  0824               	movf	?___flmul,w
  4855     145C  00C9               	movwf	_fround$1017
  4856                           
  4857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4858     145D  300A               	movlw	10
  4859     145E  00F0               	movwf	___lwmod@divisor
  4860     145F  3000               	movlw	0
  4861     1460  00F1               	movwf	___lwmod@divisor+1
  4862     1461  0851               	movf	fround@prec,w
  4863     1462  00C2               	movwf	??_fround
  4864     1463  01C3               	clrf	??_fround+1
  4865     1464  0842               	movf	??_fround,w
  4866     1465  00F2               	movwf	___lwmod@dividend
  4867     1466  0843               	movf	??_fround+1,w
  4868     1467  00F3               	movwf	___lwmod@dividend+1
  4869     1468  160A  158A  2464  160A  118A  	fcall	___lwmod
  4870     146D  0870               	movf	?___lwmod,w
  4871     146E  1283               	bcf	3,5	;RP0=0, select bank0
  4872     146F  1303               	bcf	3,6	;RP1=0, select bank0
  4873     1470  00C4               	movwf	??_fround+2
  4874     1471  3001               	movlw	1
  4875     1472                     u4395:
  4876     1472  1003               	clrc
  4877     1473  0DC4               	rlf	??_fround+2,f
  4878     1474  3EFF               	addlw	-1
  4879     1475  1D03               	skipz
  4880     1476  2C72               	goto	u4395
  4881     1477  1003               	clrc
  4882     1478  0D44               	rlf	??_fround+2,w
  4883     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4884     147A  0084               	movwf	4
  4885     147B  160A  158A  200A  160A  118A  	fcall	stringdir
  4886     1480  00C5               	movwf	??_fround+3
  4887     1481  160A  158A  200A  160A  118A  	fcall	stringdir
  4888     1486  00C6               	movwf	??_fround+4
  4889     1487  160A  158A  200A  160A  118A  	fcall	stringdir
  4890     148C  00C7               	movwf	??_fround+5
  4891     148D  160A  158A  200A  160A  118A  	fcall	stringdir
  4892     1492  00C8               	movwf	??_fround+6
  4893     1493  0848               	movf	??_fround+6,w
  4894     1494  00A7               	movwf	___flmul@b+3
  4895     1495  0847               	movf	??_fround+5,w
  4896     1496  00A6               	movwf	___flmul@b+2
  4897     1497  0846               	movf	??_fround+4,w
  4898     1498  00A5               	movwf	___flmul@b+1
  4899     1499  0845               	movf	??_fround+3,w
  4900     149A  00A4               	movwf	___flmul@b
  4901     149B  084C               	movf	_fround$1017+3,w
  4902     149C  00AB               	movwf	___flmul@a+3
  4903     149D  084B               	movf	_fround$1017+2,w
  4904     149E  00AA               	movwf	___flmul@a+2
  4905     149F  084A               	movf	_fround$1017+1,w
  4906     14A0  00A9               	movwf	___flmul@a+1
  4907     14A1  0849               	movf	_fround$1017,w
  4908     14A2  00A8               	movwf	___flmul@a
  4909     14A3  120A  158A  215C  160A  118A  	fcall	___flmul
  4910     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4911     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4912     14AA  0827               	movf	?___flmul+3,w
  4913     14AB  00C1               	movwf	?_fround+3
  4914     14AC  0826               	movf	?___flmul+2,w
  4915     14AD  00C0               	movwf	?_fround+2
  4916     14AE  0825               	movf	?___flmul+1,w
  4917     14AF  00BF               	movwf	?_fround+1
  4918     14B0  0824               	movf	?___flmul,w
  4919     14B1  00BE               	movwf	?_fround
  4920     14B2  2DA7               	goto	l238
  4921     14B3                     l2826:
  4922     14B3  300B               	movlw	11
  4923     14B4  0251               	subwf	fround@prec,w
  4924     14B5  1C03               	skipc
  4925     14B6  2CB8               	goto	u4401
  4926     14B7  2CB9               	goto	u4400
  4927     14B8                     u4401:
  4928     14B8  2D64               	goto	l2832
  4929     14B9                     u4400:
  4930     14B9                     l2828:
  4931                           
  4932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4933     14B9  303F               	movlw	63
  4934     14BA  00A7               	movwf	___flmul@b+3
  4935     14BB  3000               	movlw	0
  4936     14BC  00A6               	movwf	___flmul@b+2
  4937     14BD  3000               	movlw	0
  4938     14BE  00A5               	movwf	___flmul@b+1
  4939     14BF  3000               	movlw	0
  4940     14C0  00A4               	movwf	___flmul@b
  4941     14C1  300A               	movlw	10
  4942     14C2  00F6               	movwf	___lwdiv@divisor
  4943     14C3  3000               	movlw	0
  4944     14C4  00F7               	movwf	___lwdiv@divisor+1
  4945     14C5  0851               	movf	fround@prec,w
  4946     14C6  00C2               	movwf	??_fround
  4947     14C7  01C3               	clrf	??_fround+1
  4948     14C8  0842               	movf	??_fround,w
  4949     14C9  00F8               	movwf	___lwdiv@dividend
  4950     14CA  0843               	movf	??_fround+1,w
  4951     14CB  00F9               	movwf	___lwdiv@dividend+1
  4952     14CC  160A  158A  2522  160A  118A  	fcall	___lwdiv
  4953     14D1  0876               	movf	?___lwdiv,w
  4954     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4955     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4956     14D4  00C4               	movwf	??_fround+2
  4957     14D5  3001               	movlw	1
  4958     14D6                     u4415:
  4959     14D6  1003               	clrc
  4960     14D7  0DC4               	rlf	??_fround+2,f
  4961     14D8  3EFF               	addlw	-1
  4962     14D9  1D03               	skipz
  4963     14DA  2CD6               	goto	u4415
  4964     14DB  1003               	clrc
  4965     14DC  0D44               	rlf	??_fround+2,w
  4966     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4967     14DE  0084               	movwf	4
  4968     14DF  160A  158A  200A  160A  118A  	fcall	stringdir
  4969     14E4  00C5               	movwf	??_fround+3
  4970     14E5  160A  158A  200A  160A  118A  	fcall	stringdir
  4971     14EA  00C6               	movwf	??_fround+4
  4972     14EB  160A  158A  200A  160A  118A  	fcall	stringdir
  4973     14F0  00C7               	movwf	??_fround+5
  4974     14F1  160A  158A  200A  160A  118A  	fcall	stringdir
  4975     14F6  00C8               	movwf	??_fround+6
  4976     14F7  0848               	movf	??_fround+6,w
  4977     14F8  00AB               	movwf	___flmul@a+3
  4978     14F9  0847               	movf	??_fround+5,w
  4979     14FA  00AA               	movwf	___flmul@a+2
  4980     14FB  0846               	movf	??_fround+4,w
  4981     14FC  00A9               	movwf	___flmul@a+1
  4982     14FD  0845               	movf	??_fround+3,w
  4983     14FE  00A8               	movwf	___flmul@a
  4984     14FF  120A  158A  215C  160A  118A  	fcall	___flmul
  4985     1504  1283               	bcf	3,5	;RP0=0, select bank0
  4986     1505  1303               	bcf	3,6	;RP1=0, select bank0
  4987     1506  0827               	movf	?___flmul+3,w
  4988     1507  00D0               	movwf	_fround$1016+3
  4989     1508  0826               	movf	?___flmul+2,w
  4990     1509  00CF               	movwf	_fround$1016+2
  4991     150A  0825               	movf	?___flmul+1,w
  4992     150B  00CE               	movwf	_fround$1016+1
  4993     150C  0824               	movf	?___flmul,w
  4994     150D  00CD               	movwf	_fround$1016
  4995                           
  4996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4997     150E  300A               	movlw	10
  4998     150F  00F0               	movwf	___lwmod@divisor
  4999     1510  3000               	movlw	0
  5000     1511  00F1               	movwf	___lwmod@divisor+1
  5001     1512  0851               	movf	fround@prec,w
  5002     1513  00C2               	movwf	??_fround
  5003     1514  01C3               	clrf	??_fround+1
  5004     1515  0842               	movf	??_fround,w
  5005     1516  00F2               	movwf	___lwmod@dividend
  5006     1517  0843               	movf	??_fround+1,w
  5007     1518  00F3               	movwf	___lwmod@dividend+1
  5008     1519  160A  158A  2464  160A  118A  	fcall	___lwmod
  5009     151E  0870               	movf	?___lwmod,w
  5010     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5011     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5012     1521  00C4               	movwf	??_fround+2
  5013     1522  3001               	movlw	1
  5014     1523                     u4425:
  5015     1523  1003               	clrc
  5016     1524  0DC4               	rlf	??_fround+2,f
  5017     1525  3EFF               	addlw	-1
  5018     1526  1D03               	skipz
  5019     1527  2D23               	goto	u4425
  5020     1528  1003               	clrc
  5021     1529  0D44               	rlf	??_fround+2,w
  5022     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5023     152B  0084               	movwf	4
  5024     152C  160A  158A  200A  160A  118A  	fcall	stringdir
  5025     1531  00C5               	movwf	??_fround+3
  5026     1532  160A  158A  200A  160A  118A  	fcall	stringdir
  5027     1537  00C6               	movwf	??_fround+4
  5028     1538  160A  158A  200A  160A  118A  	fcall	stringdir
  5029     153D  00C7               	movwf	??_fround+5
  5030     153E  160A  158A  200A  160A  118A  	fcall	stringdir
  5031     1543  00C8               	movwf	??_fround+6
  5032     1544  0848               	movf	??_fround+6,w
  5033     1545  00A7               	movwf	___flmul@b+3
  5034     1546  0847               	movf	??_fround+5,w
  5035     1547  00A6               	movwf	___flmul@b+2
  5036     1548  0846               	movf	??_fround+4,w
  5037     1549  00A5               	movwf	___flmul@b+1
  5038     154A  0845               	movf	??_fround+3,w
  5039     154B  00A4               	movwf	___flmul@b
  5040     154C  0850               	movf	_fround$1016+3,w
  5041     154D  00AB               	movwf	___flmul@a+3
  5042     154E  084F               	movf	_fround$1016+2,w
  5043     154F  00AA               	movwf	___flmul@a+2
  5044     1550  084E               	movf	_fround$1016+1,w
  5045     1551  00A9               	movwf	___flmul@a+1
  5046     1552  084D               	movf	_fround$1016,w
  5047     1553  00A8               	movwf	___flmul@a
  5048     1554  120A  158A  215C  160A  118A  	fcall	___flmul
  5049     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5050     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5051     155B  0827               	movf	?___flmul+3,w
  5052     155C  00C1               	movwf	?_fround+3
  5053     155D  0826               	movf	?___flmul+2,w
  5054     155E  00C0               	movwf	?_fround+2
  5055     155F  0825               	movf	?___flmul+1,w
  5056     1560  00BF               	movwf	?_fround+1
  5057     1561  0824               	movf	?___flmul,w
  5058     1562  00BE               	movwf	?_fround
  5059     1563  2DA7               	goto	l238
  5060     1564                     l2832:
  5061                           
  5062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5063     1564  303F               	movlw	63
  5064     1565  00A7               	movwf	___flmul@b+3
  5065     1566  3000               	movlw	0
  5066     1567  00A6               	movwf	___flmul@b+2
  5067     1568  3000               	movlw	0
  5068     1569  00A5               	movwf	___flmul@b+1
  5069     156A  3000               	movlw	0
  5070     156B  00A4               	movwf	___flmul@b
  5071     156C  0851               	movf	fround@prec,w
  5072     156D  00C2               	movwf	??_fround
  5073     156E  3001               	movlw	1
  5074     156F                     u4435:
  5075     156F  1003               	clrc
  5076     1570  0DC2               	rlf	??_fround,f
  5077     1571  3EFF               	addlw	-1
  5078     1572  1D03               	skipz
  5079     1573  2D6F               	goto	u4435
  5080     1574  1003               	clrc
  5081     1575  0D42               	rlf	??_fround,w
  5082     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5083     1577  0084               	movwf	4
  5084     1578  160A  158A  200A  160A  118A  	fcall	stringdir
  5085     157D  00C3               	movwf	??_fround+1
  5086     157E  160A  158A  200A  160A  118A  	fcall	stringdir
  5087     1583  00C4               	movwf	??_fround+2
  5088     1584  160A  158A  200A  160A  118A  	fcall	stringdir
  5089     1589  00C5               	movwf	??_fround+3
  5090     158A  160A  158A  200A  160A  118A  	fcall	stringdir
  5091     158F  00C6               	movwf	??_fround+4
  5092     1590  0846               	movf	??_fround+4,w
  5093     1591  00AB               	movwf	___flmul@a+3
  5094     1592  0845               	movf	??_fround+3,w
  5095     1593  00AA               	movwf	___flmul@a+2
  5096     1594  0844               	movf	??_fround+2,w
  5097     1595  00A9               	movwf	___flmul@a+1
  5098     1596  0843               	movf	??_fround+1,w
  5099     1597  00A8               	movwf	___flmul@a
  5100     1598  120A  158A  215C  160A  118A  	fcall	___flmul
  5101     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5102     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5103     159F  0827               	movf	?___flmul+3,w
  5104     15A0  00C1               	movwf	?_fround+3
  5105     15A1  0826               	movf	?___flmul+2,w
  5106     15A2  00C0               	movwf	?_fround+2
  5107     15A3  0825               	movf	?___flmul+1,w
  5108     15A4  00BF               	movwf	?_fround+1
  5109     15A5  0824               	movf	?___flmul,w
  5110     15A6  00BE               	movwf	?_fround
  5111     15A7                     l238:
  5112     15A7  0008               	return
  5113     15A8                     __end_of_fround:
  5114                           
  5115                           	psect	text7
  5116     1C64                     __ptext7:	
  5117 ;; *************** function ___lwmod *****************
  5118 ;; Defined at:
  5119 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  divisor         2    0[COMMON] unsigned int 
  5122 ;;  dividend        2    2[COMMON] unsigned int 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  counter         1    5[COMMON] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2    0[COMMON] unsigned int 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5134 ;;      Params:         4       0       0       0       0
  5135 ;;      Locals:         1       0       0       0       0
  5136 ;;      Temps:          1       0       0       0       0
  5137 ;;      Totals:         6       0       0       0       0
  5138 ;;Total ram usage:        6 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_fround
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147     1C64                     ___lwmod:	
  5148                           ;psect for function ___lwmod
  5149                           
  5150     1C64                     l2432:	
  5151                           ;incstack = 0
  5152                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5153                           
  5154     1C64  0870               	movf	___lwmod@divisor,w
  5155     1C65  0471               	iorwf	___lwmod@divisor+1,w
  5156     1C66  1903               	btfsc	3,2
  5157     1C67  2C69               	goto	u3461
  5158     1C68  2C6A               	goto	u3460
  5159     1C69                     u3461:
  5160     1C69  2C99               	goto	l2450
  5161     1C6A                     u3460:
  5162     1C6A                     l2434:
  5163     1C6A  01F5               	clrf	___lwmod@counter
  5164     1C6B  0AF5               	incf	___lwmod@counter,f
  5165     1C6C  2C78               	goto	l2440
  5166     1C6D                     l2436:
  5167     1C6D  3001               	movlw	1
  5168     1C6E                     u3475:
  5169     1C6E  1003               	clrc
  5170     1C6F  0DF0               	rlf	___lwmod@divisor,f
  5171     1C70  0DF1               	rlf	___lwmod@divisor+1,f
  5172     1C71  3EFF               	addlw	-1
  5173     1C72  1D03               	skipz
  5174     1C73  2C6E               	goto	u3475
  5175     1C74                     l2438:
  5176     1C74  3001               	movlw	1
  5177     1C75  00F4               	movwf	??___lwmod
  5178     1C76  0874               	movf	??___lwmod,w
  5179     1C77  07F5               	addwf	___lwmod@counter,f
  5180     1C78                     l2440:
  5181     1C78  1FF1               	btfss	___lwmod@divisor+1,7
  5182     1C79  2C7B               	goto	u3481
  5183     1C7A  2C7C               	goto	u3480
  5184     1C7B                     u3481:
  5185     1C7B  2C6D               	goto	l2436
  5186     1C7C                     u3480:
  5187     1C7C                     l2442:
  5188     1C7C  0871               	movf	___lwmod@divisor+1,w
  5189     1C7D  0273               	subwf	___lwmod@dividend+1,w
  5190     1C7E  1D03               	skipz
  5191     1C7F  2C82               	goto	u3495
  5192     1C80  0870               	movf	___lwmod@divisor,w
  5193     1C81  0272               	subwf	___lwmod@dividend,w
  5194     1C82                     u3495:
  5195     1C82  1C03               	skipc
  5196     1C83  2C85               	goto	u3491
  5197     1C84  2C86               	goto	u3490
  5198     1C85                     u3491:
  5199     1C85  2C8C               	goto	l2446
  5200     1C86                     u3490:
  5201     1C86                     l2444:
  5202     1C86  0870               	movf	___lwmod@divisor,w
  5203     1C87  02F2               	subwf	___lwmod@dividend,f
  5204     1C88  0871               	movf	___lwmod@divisor+1,w
  5205     1C89  1C03               	skipc
  5206     1C8A  03F3               	decf	___lwmod@dividend+1,f
  5207     1C8B  02F3               	subwf	___lwmod@dividend+1,f
  5208     1C8C                     l2446:
  5209     1C8C  3001               	movlw	1
  5210     1C8D                     u3505:
  5211     1C8D  1003               	clrc
  5212     1C8E  0CF1               	rrf	___lwmod@divisor+1,f
  5213     1C8F  0CF0               	rrf	___lwmod@divisor,f
  5214     1C90  3EFF               	addlw	-1
  5215     1C91  1D03               	skipz
  5216     1C92  2C8D               	goto	u3505
  5217     1C93                     l2448:
  5218     1C93  3001               	movlw	1
  5219     1C94  02F5               	subwf	___lwmod@counter,f
  5220     1C95  1D03               	btfss	3,2
  5221     1C96  2C98               	goto	u3511
  5222     1C97  2C99               	goto	u3510
  5223     1C98                     u3511:
  5224     1C98  2C7C               	goto	l2442
  5225     1C99                     u3510:
  5226     1C99                     l2450:
  5227     1C99  0873               	movf	___lwmod@dividend+1,w
  5228     1C9A  00F1               	movwf	?___lwmod+1
  5229     1C9B  0872               	movf	___lwmod@dividend,w
  5230     1C9C  00F0               	movwf	?___lwmod
  5231     1C9D                     l631:
  5232     1C9D  0008               	return
  5233     1C9E                     __end_of___lwmod:
  5234                           
  5235                           	psect	text8
  5236     1D22                     __ptext8:	
  5237 ;; *************** function ___lwdiv *****************
  5238 ;; Defined at:
  5239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  divisor         2    6[COMMON] unsigned int 
  5242 ;;  dividend        2    8[COMMON] unsigned int 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  quotient        2   11[COMMON] unsigned int 
  5245 ;;  counter         1   13[COMMON] unsigned char 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  2    6[COMMON] unsigned int 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5255 ;;      Params:         4       0       0       0       0
  5256 ;;      Locals:         3       0       0       0       0
  5257 ;;      Temps:          1       0       0       0       0
  5258 ;;      Totals:         8       0       0       0       0
  5259 ;;Total ram usage:        8 bytes
  5260 ;; Hardware stack levels used: 1
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_fround
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268     1D22                     ___lwdiv:	
  5269                           ;psect for function ___lwdiv
  5270                           
  5271     1D22                     l2406:	
  5272                           ;incstack = 0
  5273                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5274                           
  5275     1D22  01FB               	clrf	___lwdiv@quotient
  5276     1D23  01FC               	clrf	___lwdiv@quotient+1
  5277     1D24                     l2408:
  5278     1D24  0876               	movf	___lwdiv@divisor,w
  5279     1D25  0477               	iorwf	___lwdiv@divisor+1,w
  5280     1D26  1903               	btfsc	3,2
  5281     1D27  2D29               	goto	u3391
  5282     1D28  2D2A               	goto	u3390
  5283     1D29                     u3391:
  5284     1D29  2D61               	goto	l2428
  5285     1D2A                     u3390:
  5286     1D2A                     l2410:
  5287     1D2A  01FD               	clrf	___lwdiv@counter
  5288     1D2B  0AFD               	incf	___lwdiv@counter,f
  5289     1D2C  2D38               	goto	l2416
  5290     1D2D                     l2412:
  5291     1D2D  3001               	movlw	1
  5292     1D2E                     u3405:
  5293     1D2E  1003               	clrc
  5294     1D2F  0DF6               	rlf	___lwdiv@divisor,f
  5295     1D30  0DF7               	rlf	___lwdiv@divisor+1,f
  5296     1D31  3EFF               	addlw	-1
  5297     1D32  1D03               	skipz
  5298     1D33  2D2E               	goto	u3405
  5299     1D34                     l2414:
  5300     1D34  3001               	movlw	1
  5301     1D35  00FA               	movwf	??___lwdiv
  5302     1D36  087A               	movf	??___lwdiv,w
  5303     1D37  07FD               	addwf	___lwdiv@counter,f
  5304     1D38                     l2416:
  5305     1D38  1FF7               	btfss	___lwdiv@divisor+1,7
  5306     1D39  2D3B               	goto	u3411
  5307     1D3A  2D3C               	goto	u3410
  5308     1D3B                     u3411:
  5309     1D3B  2D2D               	goto	l2412
  5310     1D3C                     u3410:
  5311     1D3C                     l2418:
  5312     1D3C  3001               	movlw	1
  5313     1D3D                     u3425:
  5314     1D3D  1003               	clrc
  5315     1D3E  0DFB               	rlf	___lwdiv@quotient,f
  5316     1D3F  0DFC               	rlf	___lwdiv@quotient+1,f
  5317     1D40  3EFF               	addlw	-1
  5318     1D41  1D03               	skipz
  5319     1D42  2D3D               	goto	u3425
  5320     1D43  0877               	movf	___lwdiv@divisor+1,w
  5321     1D44  0279               	subwf	___lwdiv@dividend+1,w
  5322     1D45  1D03               	skipz
  5323     1D46  2D49               	goto	u3435
  5324     1D47  0876               	movf	___lwdiv@divisor,w
  5325     1D48  0278               	subwf	___lwdiv@dividend,w
  5326     1D49                     u3435:
  5327     1D49  1C03               	skipc
  5328     1D4A  2D4C               	goto	u3431
  5329     1D4B  2D4D               	goto	u3430
  5330     1D4C                     u3431:
  5331     1D4C  2D54               	goto	l2424
  5332     1D4D                     u3430:
  5333     1D4D                     l2420:
  5334     1D4D  0876               	movf	___lwdiv@divisor,w
  5335     1D4E  02F8               	subwf	___lwdiv@dividend,f
  5336     1D4F  0877               	movf	___lwdiv@divisor+1,w
  5337     1D50  1C03               	skipc
  5338     1D51  03F9               	decf	___lwdiv@dividend+1,f
  5339     1D52  02F9               	subwf	___lwdiv@dividend+1,f
  5340     1D53                     l2422:
  5341     1D53  147B               	bsf	___lwdiv@quotient,0
  5342     1D54                     l2424:
  5343     1D54  3001               	movlw	1
  5344     1D55                     u3445:
  5345     1D55  1003               	clrc
  5346     1D56  0CF7               	rrf	___lwdiv@divisor+1,f
  5347     1D57  0CF6               	rrf	___lwdiv@divisor,f
  5348     1D58  3EFF               	addlw	-1
  5349     1D59  1D03               	skipz
  5350     1D5A  2D55               	goto	u3445
  5351     1D5B                     l2426:
  5352     1D5B  3001               	movlw	1
  5353     1D5C  02FD               	subwf	___lwdiv@counter,f
  5354     1D5D  1D03               	btfss	3,2
  5355     1D5E  2D60               	goto	u3451
  5356     1D5F  2D61               	goto	u3450
  5357     1D60                     u3451:
  5358     1D60  2D3C               	goto	l2418
  5359     1D61                     u3450:
  5360     1D61                     l2428:
  5361     1D61  087C               	movf	___lwdiv@quotient+1,w
  5362     1D62  00F7               	movwf	?___lwdiv+1
  5363     1D63  087B               	movf	___lwdiv@quotient,w
  5364     1D64  00F6               	movwf	?___lwdiv
  5365     1D65                     l621:
  5366     1D65  0008               	return
  5367     1D66                     __end_of___lwdiv:
  5368                           
  5369                           	psect	text9
  5370     095C                     __ptext9:	
  5371 ;; *************** function ___flmul *****************
  5372 ;; Defined at:
  5373 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  b               4    4[BANK0 ] unsigned int 
  5376 ;;  a               4    8[BANK0 ] unsigned int 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  prod            4   24[BANK0 ] struct .
  5379 ;;  grs             4   18[BANK0 ] unsigned long 
  5380 ;;  temp            2   28[BANK0 ] struct .
  5381 ;;  bexp            1   23[BANK0 ] unsigned char 
  5382 ;;  aexp            1   22[BANK0 ] unsigned char 
  5383 ;;  sign            1   17[BANK0 ] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  4    4[BANK0 ] unsigned char 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5393 ;;      Params:         0       8       0       0       0
  5394 ;;      Locals:         0      13       0       0       0
  5395 ;;      Temps:          0       5       0       0       0
  5396 ;;      Totals:         0      26       0       0       0
  5397 ;;Total ram usage:       26 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; Hardware stack levels required when called: 1
  5400 ;; This function calls:
  5401 ;;		__Umul8_16
  5402 ;; This function is called by:
  5403 ;;		_main
  5404 ;;		_fround
  5405 ;;		_scale
  5406 ;;		_sprintf
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410     095C                     ___flmul:	
  5411                           ;psect for function ___flmul
  5412                           
  5413     095C                     l2648:	
  5414                           ;incstack = 0
  5415                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5416                           
  5417     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5418     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5419     095E  0827               	movf	___flmul@b+3,w
  5420     095F  3980               	andlw	128
  5421     0960  00B1               	movwf	___flmul@sign
  5422     0961                     l2650:
  5423     0961  0827               	movf	___flmul@b+3,w
  5424     0962  00AC               	movwf	??___flmul
  5425     0963  072C               	addwf	??___flmul,w
  5426     0964  00B7               	movwf	___flmul@bexp
  5427     0965                     l2652:
  5428     0965  1FA6               	btfss	___flmul@b+2,7
  5429     0966  2968               	goto	u3981
  5430     0967  2969               	goto	u3980
  5431     0968                     u3981:
  5432     0968  296A               	goto	l2656
  5433     0969                     u3980:
  5434     0969                     l2654:
  5435     0969  1437               	bsf	___flmul@bexp,0
  5436     096A                     l2656:
  5437     096A  0837               	movf	___flmul@bexp,w
  5438     096B  1903               	btfsc	3,2
  5439     096C  296E               	goto	u3991
  5440     096D  296F               	goto	u3990
  5441     096E                     u3991:
  5442     096E  297E               	goto	l2664
  5443     096F                     u3990:
  5444     096F                     l2658:
  5445     096F  0A37               	incf	___flmul@bexp,w
  5446     0970  1D03               	btfss	3,2
  5447     0971  2973               	goto	u4001
  5448     0972  2974               	goto	u4000
  5449     0973                     u4001:
  5450     0973  297C               	goto	l2662
  5451     0974                     u4000:
  5452     0974                     l2660:
  5453     0974  3000               	movlw	0
  5454     0975  00A7               	movwf	___flmul@b+3
  5455     0976  3000               	movlw	0
  5456     0977  00A6               	movwf	___flmul@b+2
  5457     0978  3000               	movlw	0
  5458     0979  00A5               	movwf	___flmul@b+1
  5459     097A  3000               	movlw	0
  5460     097B  00A4               	movwf	___flmul@b
  5461     097C                     l2662:
  5462     097C  17A6               	bsf	___flmul@b+2,7
  5463     097D  2986               	goto	l2666
  5464     097E                     l2664:
  5465     097E  3000               	movlw	0
  5466     097F  00A7               	movwf	___flmul@b+3
  5467     0980  3000               	movlw	0
  5468     0981  00A6               	movwf	___flmul@b+2
  5469     0982  3000               	movlw	0
  5470     0983  00A5               	movwf	___flmul@b+1
  5471     0984  3000               	movlw	0
  5472     0985  00A4               	movwf	___flmul@b
  5473     0986                     l2666:
  5474     0986  082B               	movf	___flmul@a+3,w
  5475     0987  3980               	andlw	128
  5476     0988  00AC               	movwf	??___flmul
  5477     0989  082C               	movf	??___flmul,w
  5478     098A  06B1               	xorwf	___flmul@sign,f
  5479     098B                     l2668:
  5480     098B  082B               	movf	___flmul@a+3,w
  5481     098C  00AC               	movwf	??___flmul
  5482     098D  072C               	addwf	??___flmul,w
  5483     098E  00B6               	movwf	___flmul@aexp
  5484     098F                     l2670:
  5485     098F  1FAA               	btfss	___flmul@a+2,7
  5486     0990  2992               	goto	u4011
  5487     0991  2993               	goto	u4010
  5488     0992                     u4011:
  5489     0992  2994               	goto	l2674
  5490     0993                     u4010:
  5491     0993                     l2672:
  5492     0993  1436               	bsf	___flmul@aexp,0
  5493     0994                     l2674:
  5494     0994  0836               	movf	___flmul@aexp,w
  5495     0995  1903               	btfsc	3,2
  5496     0996  2998               	goto	u4021
  5497     0997  2999               	goto	u4020
  5498     0998                     u4021:
  5499     0998  29A8               	goto	l2682
  5500     0999                     u4020:
  5501     0999                     l2676:
  5502     0999  0A36               	incf	___flmul@aexp,w
  5503     099A  1D03               	btfss	3,2
  5504     099B  299D               	goto	u4031
  5505     099C  299E               	goto	u4030
  5506     099D                     u4031:
  5507     099D  29A6               	goto	l2680
  5508     099E                     u4030:
  5509     099E                     l2678:
  5510     099E  3000               	movlw	0
  5511     099F  00AB               	movwf	___flmul@a+3
  5512     09A0  3000               	movlw	0
  5513     09A1  00AA               	movwf	___flmul@a+2
  5514     09A2  3000               	movlw	0
  5515     09A3  00A9               	movwf	___flmul@a+1
  5516     09A4  3000               	movlw	0
  5517     09A5  00A8               	movwf	___flmul@a
  5518     09A6                     l2680:
  5519     09A6  17AA               	bsf	___flmul@a+2,7
  5520     09A7  29B0               	goto	l2684
  5521     09A8                     l2682:
  5522     09A8  3000               	movlw	0
  5523     09A9  00AB               	movwf	___flmul@a+3
  5524     09AA  3000               	movlw	0
  5525     09AB  00AA               	movwf	___flmul@a+2
  5526     09AC  3000               	movlw	0
  5527     09AD  00A9               	movwf	___flmul@a+1
  5528     09AE  3000               	movlw	0
  5529     09AF  00A8               	movwf	___flmul@a
  5530     09B0                     l2684:
  5531     09B0  0836               	movf	___flmul@aexp,w
  5532     09B1  1903               	btfsc	3,2
  5533     09B2  29B4               	goto	u4041
  5534     09B3  29B5               	goto	u4040
  5535     09B4                     u4041:
  5536     09B4  29BA               	goto	l2688
  5537     09B5                     u4040:
  5538     09B5                     l2686:
  5539     09B5  0837               	movf	___flmul@bexp,w
  5540     09B6  1D03               	btfss	3,2
  5541     09B7  29B9               	goto	u4051
  5542     09B8  29BA               	goto	u4050
  5543     09B9                     u4051:
  5544     09B9  29C3               	goto	l2692
  5545     09BA                     u4050:
  5546     09BA                     l2688:
  5547     09BA  3000               	movlw	0
  5548     09BB  00A7               	movwf	?___flmul+3
  5549     09BC  3000               	movlw	0
  5550     09BD  00A6               	movwf	?___flmul+2
  5551     09BE  3000               	movlw	0
  5552     09BF  00A5               	movwf	?___flmul+1
  5553     09C0  3000               	movlw	0
  5554     09C1  00A4               	movwf	?___flmul
  5555     09C2  2CA0               	goto	l738
  5556     09C3                     l2692:
  5557     09C3  0824               	movf	___flmul@b,w
  5558     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5559     09C5  082A               	movf	___flmul@a+2,w
  5560     09C6  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5561     09CB  0871               	movf	?__Umul8_16+1,w
  5562     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5563     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5564     09CE  00BD               	movwf	___flmul@temp+1
  5565     09CF  0870               	movf	?__Umul8_16,w
  5566     09D0  00BC               	movwf	___flmul@temp
  5567     09D1                     l2694:
  5568     09D1  083C               	movf	___flmul@temp,w
  5569     09D2  00AC               	movwf	??___flmul
  5570     09D3  01AD               	clrf	??___flmul+1
  5571     09D4  01AE               	clrf	??___flmul+2
  5572     09D5  01AF               	clrf	??___flmul+3
  5573     09D6  082F               	movf	??___flmul+3,w
  5574     09D7  00B5               	movwf	___flmul@grs+3
  5575     09D8  082E               	movf	??___flmul+2,w
  5576     09D9  00B4               	movwf	___flmul@grs+2
  5577     09DA  082D               	movf	??___flmul+1,w
  5578     09DB  00B3               	movwf	___flmul@grs+1
  5579     09DC  082C               	movf	??___flmul,w
  5580     09DD  00B2               	movwf	___flmul@grs
  5581     09DE                     l2696:
  5582     09DE  083D               	movf	___flmul@temp+1,w
  5583     09DF  00AC               	movwf	??___flmul
  5584     09E0  01AD               	clrf	??___flmul+1
  5585     09E1  01AE               	clrf	??___flmul+2
  5586     09E2  01AF               	clrf	??___flmul+3
  5587     09E3  082F               	movf	??___flmul+3,w
  5588     09E4  00BB               	movwf	___flmul@prod+3
  5589     09E5  082E               	movf	??___flmul+2,w
  5590     09E6  00BA               	movwf	___flmul@prod+2
  5591     09E7  082D               	movf	??___flmul+1,w
  5592     09E8  00B9               	movwf	___flmul@prod+1
  5593     09E9  082C               	movf	??___flmul,w
  5594     09EA  00B8               	movwf	___flmul@prod
  5595     09EB  0825               	movf	___flmul@b+1,w
  5596     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5597     09ED  0829               	movf	___flmul@a+1,w
  5598     09EE  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5599     09F3  0871               	movf	?__Umul8_16+1,w
  5600     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5601     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5602     09F6  00BD               	movwf	___flmul@temp+1
  5603     09F7  0870               	movf	?__Umul8_16,w
  5604     09F8  00BC               	movwf	___flmul@temp
  5605     09F9                     l2698:
  5606     09F9  083C               	movf	___flmul@temp,w
  5607     09FA  00AC               	movwf	??___flmul
  5608     09FB  01AD               	clrf	??___flmul+1
  5609     09FC  01AE               	clrf	??___flmul+2
  5610     09FD  01AF               	clrf	??___flmul+3
  5611     09FE  082C               	movf	??___flmul,w
  5612     09FF  07B2               	addwf	___flmul@grs,f
  5613     0A00  082D               	movf	??___flmul+1,w
  5614     0A01  1103               	clrz
  5615     0A02  1803               	skipnc
  5616     0A03  3E01               	addlw	1
  5617     0A04  1903               	skipnz
  5618     0A05  2A07               	goto	u4061
  5619     0A06  07B3               	addwf	___flmul@grs+1,f
  5620     0A07                     u4061:
  5621     0A07  082E               	movf	??___flmul+2,w
  5622     0A08  1103               	clrz
  5623     0A09  1803               	skipnc
  5624     0A0A  3E01               	addlw	1
  5625     0A0B  1903               	skipnz
  5626     0A0C  2A0E               	goto	u4062
  5627     0A0D  07B4               	addwf	___flmul@grs+2,f
  5628     0A0E                     u4062:
  5629     0A0E  082F               	movf	??___flmul+3,w
  5630     0A0F  1103               	clrz
  5631     0A10  1803               	skipnc
  5632     0A11  3E01               	addlw	1
  5633     0A12  1903               	skipnz
  5634     0A13  2A15               	goto	u4063
  5635     0A14  07B5               	addwf	___flmul@grs+3,f
  5636     0A15                     u4063:
  5637     0A15                     l2700:
  5638     0A15  083D               	movf	___flmul@temp+1,w
  5639     0A16  00AC               	movwf	??___flmul
  5640     0A17  01AD               	clrf	??___flmul+1
  5641     0A18  01AE               	clrf	??___flmul+2
  5642     0A19  01AF               	clrf	??___flmul+3
  5643     0A1A  082C               	movf	??___flmul,w
  5644     0A1B  07B8               	addwf	___flmul@prod,f
  5645     0A1C  082D               	movf	??___flmul+1,w
  5646     0A1D  1103               	clrz
  5647     0A1E  1803               	skipnc
  5648     0A1F  3E01               	addlw	1
  5649     0A20  1903               	skipnz
  5650     0A21  2A23               	goto	u4071
  5651     0A22  07B9               	addwf	___flmul@prod+1,f
  5652     0A23                     u4071:
  5653     0A23  082E               	movf	??___flmul+2,w
  5654     0A24  1103               	clrz
  5655     0A25  1803               	skipnc
  5656     0A26  3E01               	addlw	1
  5657     0A27  1903               	skipnz
  5658     0A28  2A2A               	goto	u4072
  5659     0A29  07BA               	addwf	___flmul@prod+2,f
  5660     0A2A                     u4072:
  5661     0A2A  082F               	movf	??___flmul+3,w
  5662     0A2B  1103               	clrz
  5663     0A2C  1803               	skipnc
  5664     0A2D  3E01               	addlw	1
  5665     0A2E  1903               	skipnz
  5666     0A2F  2A31               	goto	u4073
  5667     0A30  07BB               	addwf	___flmul@prod+3,f
  5668     0A31                     u4073:
  5669     0A31  0826               	movf	___flmul@b+2,w
  5670     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5671     0A33  0828               	movf	___flmul@a,w
  5672     0A34  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5673     0A39  0871               	movf	?__Umul8_16+1,w
  5674     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5675     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5676     0A3C  00BD               	movwf	___flmul@temp+1
  5677     0A3D  0870               	movf	?__Umul8_16,w
  5678     0A3E  00BC               	movwf	___flmul@temp
  5679     0A3F                     l2702:
  5680     0A3F  083C               	movf	___flmul@temp,w
  5681     0A40  00AC               	movwf	??___flmul
  5682     0A41  01AD               	clrf	??___flmul+1
  5683     0A42  01AE               	clrf	??___flmul+2
  5684     0A43  01AF               	clrf	??___flmul+3
  5685     0A44  082C               	movf	??___flmul,w
  5686     0A45  07B2               	addwf	___flmul@grs,f
  5687     0A46  082D               	movf	??___flmul+1,w
  5688     0A47  1103               	clrz
  5689     0A48  1803               	skipnc
  5690     0A49  3E01               	addlw	1
  5691     0A4A  1903               	skipnz
  5692     0A4B  2A4D               	goto	u4081
  5693     0A4C  07B3               	addwf	___flmul@grs+1,f
  5694     0A4D                     u4081:
  5695     0A4D  082E               	movf	??___flmul+2,w
  5696     0A4E  1103               	clrz
  5697     0A4F  1803               	skipnc
  5698     0A50  3E01               	addlw	1
  5699     0A51  1903               	skipnz
  5700     0A52  2A54               	goto	u4082
  5701     0A53  07B4               	addwf	___flmul@grs+2,f
  5702     0A54                     u4082:
  5703     0A54  082F               	movf	??___flmul+3,w
  5704     0A55  1103               	clrz
  5705     0A56  1803               	skipnc
  5706     0A57  3E01               	addlw	1
  5707     0A58  1903               	skipnz
  5708     0A59  2A5B               	goto	u4083
  5709     0A5A  07B5               	addwf	___flmul@grs+3,f
  5710     0A5B                     u4083:
  5711     0A5B                     l2704:
  5712     0A5B  083D               	movf	___flmul@temp+1,w
  5713     0A5C  00AC               	movwf	??___flmul
  5714     0A5D  01AD               	clrf	??___flmul+1
  5715     0A5E  01AE               	clrf	??___flmul+2
  5716     0A5F  01AF               	clrf	??___flmul+3
  5717     0A60  082C               	movf	??___flmul,w
  5718     0A61  07B8               	addwf	___flmul@prod,f
  5719     0A62  082D               	movf	??___flmul+1,w
  5720     0A63  1103               	clrz
  5721     0A64  1803               	skipnc
  5722     0A65  3E01               	addlw	1
  5723     0A66  1903               	skipnz
  5724     0A67  2A69               	goto	u4091
  5725     0A68  07B9               	addwf	___flmul@prod+1,f
  5726     0A69                     u4091:
  5727     0A69  082E               	movf	??___flmul+2,w
  5728     0A6A  1103               	clrz
  5729     0A6B  1803               	skipnc
  5730     0A6C  3E01               	addlw	1
  5731     0A6D  1903               	skipnz
  5732     0A6E  2A70               	goto	u4092
  5733     0A6F  07BA               	addwf	___flmul@prod+2,f
  5734     0A70                     u4092:
  5735     0A70  082F               	movf	??___flmul+3,w
  5736     0A71  1103               	clrz
  5737     0A72  1803               	skipnc
  5738     0A73  3E01               	addlw	1
  5739     0A74  1903               	skipnz
  5740     0A75  2A77               	goto	u4093
  5741     0A76  07BB               	addwf	___flmul@prod+3,f
  5742     0A77                     u4093:
  5743     0A77                     l2706:
  5744     0A77  3008               	movlw	8
  5745     0A78  00AC               	movwf	??___flmul
  5746     0A79                     u4105:
  5747     0A79  1003               	clrc
  5748     0A7A  0DB2               	rlf	___flmul@grs,f
  5749     0A7B  0DB3               	rlf	___flmul@grs+1,f
  5750     0A7C  0DB4               	rlf	___flmul@grs+2,f
  5751     0A7D  0DB5               	rlf	___flmul@grs+3,f
  5752     0A7E  0BAC               	decfsz	??___flmul,f
  5753     0A7F  2A79               	goto	u4105
  5754     0A80                     l2708:
  5755     0A80  0825               	movf	___flmul@b+1,w
  5756     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5757     0A82  0828               	movf	___flmul@a,w
  5758     0A83  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5759     0A88  0871               	movf	?__Umul8_16+1,w
  5760     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5761     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5762     0A8B  00BD               	movwf	___flmul@temp+1
  5763     0A8C  0870               	movf	?__Umul8_16,w
  5764     0A8D  00BC               	movwf	___flmul@temp
  5765     0A8E                     l2710:
  5766     0A8E  083C               	movf	___flmul@temp,w
  5767     0A8F  00AC               	movwf	??___flmul
  5768     0A90  083D               	movf	___flmul@temp+1,w
  5769     0A91  00AD               	movwf	??___flmul+1
  5770     0A92  01AE               	clrf	??___flmul+2
  5771     0A93  01AF               	clrf	??___flmul+3
  5772     0A94  082C               	movf	??___flmul,w
  5773     0A95  07B2               	addwf	___flmul@grs,f
  5774     0A96  082D               	movf	??___flmul+1,w
  5775     0A97  1103               	clrz
  5776     0A98  1803               	skipnc
  5777     0A99  3E01               	addlw	1
  5778     0A9A  1903               	skipnz
  5779     0A9B  2A9D               	goto	u4111
  5780     0A9C  07B3               	addwf	___flmul@grs+1,f
  5781     0A9D                     u4111:
  5782     0A9D  082E               	movf	??___flmul+2,w
  5783     0A9E  1103               	clrz
  5784     0A9F  1803               	skipnc
  5785     0AA0  3E01               	addlw	1
  5786     0AA1  1903               	skipnz
  5787     0AA2  2AA4               	goto	u4112
  5788     0AA3  07B4               	addwf	___flmul@grs+2,f
  5789     0AA4                     u4112:
  5790     0AA4  082F               	movf	??___flmul+3,w
  5791     0AA5  1103               	clrz
  5792     0AA6  1803               	skipnc
  5793     0AA7  3E01               	addlw	1
  5794     0AA8  1903               	skipnz
  5795     0AA9  2AAB               	goto	u4113
  5796     0AAA  07B5               	addwf	___flmul@grs+3,f
  5797     0AAB                     u4113:
  5798     0AAB                     l2712:
  5799     0AAB  0824               	movf	___flmul@b,w
  5800     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5801     0AAD  0829               	movf	___flmul@a+1,w
  5802     0AAE  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5803     0AB3  0871               	movf	?__Umul8_16+1,w
  5804     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5805     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5806     0AB6  00BD               	movwf	___flmul@temp+1
  5807     0AB7  0870               	movf	?__Umul8_16,w
  5808     0AB8  00BC               	movwf	___flmul@temp
  5809     0AB9                     l2714:
  5810     0AB9  083C               	movf	___flmul@temp,w
  5811     0ABA  00AC               	movwf	??___flmul
  5812     0ABB  083D               	movf	___flmul@temp+1,w
  5813     0ABC  00AD               	movwf	??___flmul+1
  5814     0ABD  01AE               	clrf	??___flmul+2
  5815     0ABE  01AF               	clrf	??___flmul+3
  5816     0ABF  082C               	movf	??___flmul,w
  5817     0AC0  07B2               	addwf	___flmul@grs,f
  5818     0AC1  082D               	movf	??___flmul+1,w
  5819     0AC2  1103               	clrz
  5820     0AC3  1803               	skipnc
  5821     0AC4  3E01               	addlw	1
  5822     0AC5  1903               	skipnz
  5823     0AC6  2AC8               	goto	u4121
  5824     0AC7  07B3               	addwf	___flmul@grs+1,f
  5825     0AC8                     u4121:
  5826     0AC8  082E               	movf	??___flmul+2,w
  5827     0AC9  1103               	clrz
  5828     0ACA  1803               	skipnc
  5829     0ACB  3E01               	addlw	1
  5830     0ACC  1903               	skipnz
  5831     0ACD  2ACF               	goto	u4122
  5832     0ACE  07B4               	addwf	___flmul@grs+2,f
  5833     0ACF                     u4122:
  5834     0ACF  082F               	movf	??___flmul+3,w
  5835     0AD0  1103               	clrz
  5836     0AD1  1803               	skipnc
  5837     0AD2  3E01               	addlw	1
  5838     0AD3  1903               	skipnz
  5839     0AD4  2AD6               	goto	u4123
  5840     0AD5  07B5               	addwf	___flmul@grs+3,f
  5841     0AD6                     u4123:
  5842     0AD6                     l2716:
  5843     0AD6  3008               	movlw	8
  5844     0AD7  00AC               	movwf	??___flmul
  5845     0AD8                     u4135:
  5846     0AD8  1003               	clrc
  5847     0AD9  0DB2               	rlf	___flmul@grs,f
  5848     0ADA  0DB3               	rlf	___flmul@grs+1,f
  5849     0ADB  0DB4               	rlf	___flmul@grs+2,f
  5850     0ADC  0DB5               	rlf	___flmul@grs+3,f
  5851     0ADD  0BAC               	decfsz	??___flmul,f
  5852     0ADE  2AD8               	goto	u4135
  5853     0ADF  0824               	movf	___flmul@b,w
  5854     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5855     0AE1  0828               	movf	___flmul@a,w
  5856     0AE2  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5857     0AE7  0871               	movf	?__Umul8_16+1,w
  5858     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5859     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5860     0AEA  00BD               	movwf	___flmul@temp+1
  5861     0AEB  0870               	movf	?__Umul8_16,w
  5862     0AEC  00BC               	movwf	___flmul@temp
  5863     0AED                     l2718:
  5864     0AED  083C               	movf	___flmul@temp,w
  5865     0AEE  00AC               	movwf	??___flmul
  5866     0AEF  083D               	movf	___flmul@temp+1,w
  5867     0AF0  00AD               	movwf	??___flmul+1
  5868     0AF1  01AE               	clrf	??___flmul+2
  5869     0AF2  01AF               	clrf	??___flmul+3
  5870     0AF3  082C               	movf	??___flmul,w
  5871     0AF4  07B2               	addwf	___flmul@grs,f
  5872     0AF5  082D               	movf	??___flmul+1,w
  5873     0AF6  1103               	clrz
  5874     0AF7  1803               	skipnc
  5875     0AF8  3E01               	addlw	1
  5876     0AF9  1903               	skipnz
  5877     0AFA  2AFC               	goto	u4141
  5878     0AFB  07B3               	addwf	___flmul@grs+1,f
  5879     0AFC                     u4141:
  5880     0AFC  082E               	movf	??___flmul+2,w
  5881     0AFD  1103               	clrz
  5882     0AFE  1803               	skipnc
  5883     0AFF  3E01               	addlw	1
  5884     0B00  1903               	skipnz
  5885     0B01  2B03               	goto	u4142
  5886     0B02  07B4               	addwf	___flmul@grs+2,f
  5887     0B03                     u4142:
  5888     0B03  082F               	movf	??___flmul+3,w
  5889     0B04  1103               	clrz
  5890     0B05  1803               	skipnc
  5891     0B06  3E01               	addlw	1
  5892     0B07  1903               	skipnz
  5893     0B08  2B0A               	goto	u4143
  5894     0B09  07B5               	addwf	___flmul@grs+3,f
  5895     0B0A                     u4143:
  5896     0B0A                     l2720:
  5897     0B0A  0825               	movf	___flmul@b+1,w
  5898     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5899     0B0C  082A               	movf	___flmul@a+2,w
  5900     0B0D  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5901     0B12  0871               	movf	?__Umul8_16+1,w
  5902     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5903     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5904     0B15  00BD               	movwf	___flmul@temp+1
  5905     0B16  0870               	movf	?__Umul8_16,w
  5906     0B17  00BC               	movwf	___flmul@temp
  5907     0B18  083C               	movf	___flmul@temp,w
  5908     0B19  00AC               	movwf	??___flmul
  5909     0B1A  083D               	movf	___flmul@temp+1,w
  5910     0B1B  00AD               	movwf	??___flmul+1
  5911     0B1C  01AE               	clrf	??___flmul+2
  5912     0B1D  01AF               	clrf	??___flmul+3
  5913     0B1E  082C               	movf	??___flmul,w
  5914     0B1F  07B8               	addwf	___flmul@prod,f
  5915     0B20  082D               	movf	??___flmul+1,w
  5916     0B21  1103               	clrz
  5917     0B22  1803               	skipnc
  5918     0B23  3E01               	addlw	1
  5919     0B24  1903               	skipnz
  5920     0B25  2B27               	goto	u4151
  5921     0B26  07B9               	addwf	___flmul@prod+1,f
  5922     0B27                     u4151:
  5923     0B27  082E               	movf	??___flmul+2,w
  5924     0B28  1103               	clrz
  5925     0B29  1803               	skipnc
  5926     0B2A  3E01               	addlw	1
  5927     0B2B  1903               	skipnz
  5928     0B2C  2B2E               	goto	u4152
  5929     0B2D  07BA               	addwf	___flmul@prod+2,f
  5930     0B2E                     u4152:
  5931     0B2E  082F               	movf	??___flmul+3,w
  5932     0B2F  1103               	clrz
  5933     0B30  1803               	skipnc
  5934     0B31  3E01               	addlw	1
  5935     0B32  1903               	skipnz
  5936     0B33  2B35               	goto	u4153
  5937     0B34  07BB               	addwf	___flmul@prod+3,f
  5938     0B35                     u4153:
  5939     0B35                     l2722:
  5940     0B35  0826               	movf	___flmul@b+2,w
  5941     0B36  00F0               	movwf	__Umul8_16@multiplicand
  5942     0B37  0829               	movf	___flmul@a+1,w
  5943     0B38  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5944     0B3D  0871               	movf	?__Umul8_16+1,w
  5945     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5946     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5947     0B40  00BD               	movwf	___flmul@temp+1
  5948     0B41  0870               	movf	?__Umul8_16,w
  5949     0B42  00BC               	movwf	___flmul@temp
  5950     0B43                     l2724:
  5951     0B43  083C               	movf	___flmul@temp,w
  5952     0B44  00AC               	movwf	??___flmul
  5953     0B45  083D               	movf	___flmul@temp+1,w
  5954     0B46  00AD               	movwf	??___flmul+1
  5955     0B47  01AE               	clrf	??___flmul+2
  5956     0B48  01AF               	clrf	??___flmul+3
  5957     0B49  082C               	movf	??___flmul,w
  5958     0B4A  07B8               	addwf	___flmul@prod,f
  5959     0B4B  082D               	movf	??___flmul+1,w
  5960     0B4C  1103               	clrz
  5961     0B4D  1803               	skipnc
  5962     0B4E  3E01               	addlw	1
  5963     0B4F  1903               	skipnz
  5964     0B50  2B52               	goto	u4161
  5965     0B51  07B9               	addwf	___flmul@prod+1,f
  5966     0B52                     u4161:
  5967     0B52  082E               	movf	??___flmul+2,w
  5968     0B53  1103               	clrz
  5969     0B54  1803               	skipnc
  5970     0B55  3E01               	addlw	1
  5971     0B56  1903               	skipnz
  5972     0B57  2B59               	goto	u4162
  5973     0B58  07BA               	addwf	___flmul@prod+2,f
  5974     0B59                     u4162:
  5975     0B59  082F               	movf	??___flmul+3,w
  5976     0B5A  1103               	clrz
  5977     0B5B  1803               	skipnc
  5978     0B5C  3E01               	addlw	1
  5979     0B5D  1903               	skipnz
  5980     0B5E  2B60               	goto	u4163
  5981     0B5F  07BB               	addwf	___flmul@prod+3,f
  5982     0B60                     u4163:
  5983     0B60  0826               	movf	___flmul@b+2,w
  5984     0B61  00F0               	movwf	__Umul8_16@multiplicand
  5985     0B62  082A               	movf	___flmul@a+2,w
  5986     0B63  160A  158A  23DB  120A  158A  	fcall	__Umul8_16
  5987     0B68  0871               	movf	?__Umul8_16+1,w
  5988     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5989     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5990     0B6B  00BD               	movwf	___flmul@temp+1
  5991     0B6C  0870               	movf	?__Umul8_16,w
  5992     0B6D  00BC               	movwf	___flmul@temp
  5993     0B6E                     l2726:
  5994     0B6E  083C               	movf	___flmul@temp,w
  5995     0B6F  00AC               	movwf	??___flmul
  5996     0B70  083D               	movf	___flmul@temp+1,w
  5997     0B71  00AD               	movwf	??___flmul+1
  5998     0B72  01AE               	clrf	??___flmul+2
  5999     0B73  01AF               	clrf	??___flmul+3
  6000     0B74  3008               	movlw	8
  6001     0B75                     u4175:
  6002     0B75  1003               	clrc
  6003     0B76  0DAC               	rlf	??___flmul,f
  6004     0B77  0DAD               	rlf	??___flmul+1,f
  6005     0B78  0DAE               	rlf	??___flmul+2,f
  6006     0B79  0DAF               	rlf	??___flmul+3,f
  6007     0B7A                     u4170:
  6008     0B7A  3EFF               	addlw	-1
  6009     0B7B  1D03               	skipz
  6010     0B7C  2B75               	goto	u4175
  6011     0B7D  082C               	movf	??___flmul,w
  6012     0B7E  07B8               	addwf	___flmul@prod,f
  6013     0B7F  082D               	movf	??___flmul+1,w
  6014     0B80  1103               	clrz
  6015     0B81  1803               	skipnc
  6016     0B82  3E01               	addlw	1
  6017     0B83  1903               	skipnz
  6018     0B84  2B86               	goto	u4181
  6019     0B85  07B9               	addwf	___flmul@prod+1,f
  6020     0B86                     u4181:
  6021     0B86  082E               	movf	??___flmul+2,w
  6022     0B87  1103               	clrz
  6023     0B88  1803               	skipnc
  6024     0B89  3E01               	addlw	1
  6025     0B8A  1903               	skipnz
  6026     0B8B  2B8D               	goto	u4182
  6027     0B8C  07BA               	addwf	___flmul@prod+2,f
  6028     0B8D                     u4182:
  6029     0B8D  082F               	movf	??___flmul+3,w
  6030     0B8E  1103               	clrz
  6031     0B8F  1803               	skipnc
  6032     0B90  3E01               	addlw	1
  6033     0B91  1903               	skipnz
  6034     0B92  2B94               	goto	u4183
  6035     0B93  07BB               	addwf	___flmul@prod+3,f
  6036     0B94                     u4183:
  6037     0B94                     l2728:
  6038     0B94  0832               	movf	___flmul@grs,w
  6039     0B95  00AC               	movwf	??___flmul
  6040     0B96  0833               	movf	___flmul@grs+1,w
  6041     0B97  00AD               	movwf	??___flmul+1
  6042     0B98  0834               	movf	___flmul@grs+2,w
  6043     0B99  00AE               	movwf	??___flmul+2
  6044     0B9A  0835               	movf	___flmul@grs+3,w
  6045     0B9B  00AF               	movwf	??___flmul+3
  6046     0B9C  3018               	movlw	24
  6047     0B9D                     u4195:
  6048     0B9D  1003               	clrc
  6049     0B9E  0CAF               	rrf	??___flmul+3,f
  6050     0B9F  0CAE               	rrf	??___flmul+2,f
  6051     0BA0  0CAD               	rrf	??___flmul+1,f
  6052     0BA1  0CAC               	rrf	??___flmul,f
  6053     0BA2                     u4190:
  6054     0BA2  3EFF               	addlw	-1
  6055     0BA3  1D03               	skipz
  6056     0BA4  2B9D               	goto	u4195
  6057     0BA5  082C               	movf	??___flmul,w
  6058     0BA6  07B8               	addwf	___flmul@prod,f
  6059     0BA7  082D               	movf	??___flmul+1,w
  6060     0BA8  1103               	clrz
  6061     0BA9  1803               	skipnc
  6062     0BAA  3E01               	addlw	1
  6063     0BAB  1903               	skipnz
  6064     0BAC  2BAE               	goto	u4201
  6065     0BAD  07B9               	addwf	___flmul@prod+1,f
  6066     0BAE                     u4201:
  6067     0BAE  082E               	movf	??___flmul+2,w
  6068     0BAF  1103               	clrz
  6069     0BB0  1803               	skipnc
  6070     0BB1  3E01               	addlw	1
  6071     0BB2  1903               	skipnz
  6072     0BB3  2BB5               	goto	u4202
  6073     0BB4  07BA               	addwf	___flmul@prod+2,f
  6074     0BB5                     u4202:
  6075     0BB5  082F               	movf	??___flmul+3,w
  6076     0BB6  1103               	clrz
  6077     0BB7  1803               	skipnc
  6078     0BB8  3E01               	addlw	1
  6079     0BB9  1903               	skipnz
  6080     0BBA  2BBC               	goto	u4203
  6081     0BBB  07BB               	addwf	___flmul@prod+3,f
  6082     0BBC                     u4203:
  6083     0BBC                     l2730:
  6084     0BBC  3008               	movlw	8
  6085     0BBD  00AC               	movwf	??___flmul
  6086     0BBE                     u4215:
  6087     0BBE  1003               	clrc
  6088     0BBF  0DB2               	rlf	___flmul@grs,f
  6089     0BC0  0DB3               	rlf	___flmul@grs+1,f
  6090     0BC1  0DB4               	rlf	___flmul@grs+2,f
  6091     0BC2  0DB5               	rlf	___flmul@grs+3,f
  6092     0BC3  0BAC               	decfsz	??___flmul,f
  6093     0BC4  2BBE               	goto	u4215
  6094     0BC5                     l2732:
  6095     0BC5  0837               	movf	___flmul@bexp,w
  6096     0BC6  0736               	addwf	___flmul@aexp,w
  6097     0BC7  00AC               	movwf	??___flmul
  6098     0BC8  01AD               	clrf	??___flmul+1
  6099     0BC9  0DAD               	rlf	??___flmul+1,f
  6100     0BCA  082C               	movf	??___flmul,w
  6101     0BCB  3E82               	addlw	130
  6102     0BCC  00BC               	movwf	___flmul@temp
  6103     0BCD  082D               	movf	??___flmul+1,w
  6104     0BCE  1803               	skipnc
  6105     0BCF  3E01               	addlw	1
  6106     0BD0  3EFF               	addlw	255
  6107     0BD1  00BD               	movwf	___flmul@temp+1
  6108     0BD2  2BF0               	goto	l2744
  6109     0BD3                     l2734:
  6110     0BD3  3001               	movlw	1
  6111     0BD4  00AC               	movwf	??___flmul
  6112     0BD5                     u4225:
  6113     0BD5  1003               	clrc
  6114     0BD6  0DB8               	rlf	___flmul@prod,f
  6115     0BD7  0DB9               	rlf	___flmul@prod+1,f
  6116     0BD8  0DBA               	rlf	___flmul@prod+2,f
  6117     0BD9  0DBB               	rlf	___flmul@prod+3,f
  6118     0BDA  0BAC               	decfsz	??___flmul,f
  6119     0BDB  2BD5               	goto	u4225
  6120     0BDC                     l2736:
  6121     0BDC  1FB5               	btfss	___flmul@grs+3,7
  6122     0BDD  2BDF               	goto	u4231
  6123     0BDE  2BE0               	goto	u4230
  6124     0BDF                     u4231:
  6125     0BDF  2BE1               	goto	l2740
  6126     0BE0                     u4230:
  6127     0BE0                     l2738:
  6128     0BE0  1438               	bsf	___flmul@prod,0
  6129     0BE1                     l2740:
  6130     0BE1  3001               	movlw	1
  6131     0BE2  00AC               	movwf	??___flmul
  6132     0BE3                     u4245:
  6133     0BE3  1003               	clrc
  6134     0BE4  0DB2               	rlf	___flmul@grs,f
  6135     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6136     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6137     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6138     0BE8  0BAC               	decfsz	??___flmul,f
  6139     0BE9  2BE3               	goto	u4245
  6140     0BEA                     l2742:
  6141     0BEA  30FF               	movlw	255
  6142     0BEB  07BC               	addwf	___flmul@temp,f
  6143     0BEC  1803               	skipnc
  6144     0BED  0ABD               	incf	___flmul@temp+1,f
  6145     0BEE  30FF               	movlw	255
  6146     0BEF  07BD               	addwf	___flmul@temp+1,f
  6147     0BF0                     l2744:
  6148     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6149     0BF1  2BF3               	goto	u4251
  6150     0BF2  2BF4               	goto	u4250
  6151     0BF3                     u4251:
  6152     0BF3  2BD3               	goto	l2734
  6153     0BF4                     u4250:
  6154     0BF4                     l2746:
  6155     0BF4  01B6               	clrf	___flmul@aexp
  6156     0BF5                     l2748:
  6157     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6158     0BF6  2BF8               	goto	u4261
  6159     0BF7  2BF9               	goto	u4260
  6160     0BF8                     u4261:
  6161     0BF8  2C15               	goto	l2756
  6162     0BF9                     u4260:
  6163     0BF9                     l2750:
  6164     0BF9  30FF               	movlw	255
  6165     0BFA  0532               	andwf	___flmul@grs,w
  6166     0BFB  00AC               	movwf	??___flmul
  6167     0BFC  30FF               	movlw	255
  6168     0BFD  0533               	andwf	___flmul@grs+1,w
  6169     0BFE  00AD               	movwf	??___flmul+1
  6170     0BFF  30FF               	movlw	255
  6171     0C00  0534               	andwf	___flmul@grs+2,w
  6172     0C01  00AE               	movwf	??___flmul+2
  6173     0C02  307F               	movlw	127
  6174     0C03  0535               	andwf	___flmul@grs+3,w
  6175     0C04  00AF               	movwf	??___flmul+3
  6176     0C05  082F               	movf	??___flmul+3,w
  6177     0C06  042E               	iorwf	??___flmul+2,w
  6178     0C07  042D               	iorwf	??___flmul+1,w
  6179     0C08  042C               	iorwf	??___flmul,w
  6180     0C09  1903               	skipnz
  6181     0C0A  2C0C               	goto	u4271
  6182     0C0B  2C0D               	goto	u4270
  6183     0C0C                     u4271:
  6184     0C0C  2C10               	goto	l744
  6185     0C0D                     u4270:
  6186     0C0D                     l2752:
  6187     0C0D  01B6               	clrf	___flmul@aexp
  6188     0C0E  0AB6               	incf	___flmul@aexp,f
  6189     0C0F  2C15               	goto	l2756
  6190     0C10                     l744:
  6191     0C10  1C38               	btfss	___flmul@prod,0
  6192     0C11  2C13               	goto	u4281
  6193     0C12  2C14               	goto	u4280
  6194     0C13                     u4281:
  6195     0C13  2C15               	goto	l2756
  6196     0C14                     u4280:
  6197     0C14  2C0D               	goto	l2752
  6198     0C15                     l2756:
  6199     0C15  0836               	movf	___flmul@aexp,w
  6200     0C16  1903               	btfsc	3,2
  6201     0C17  2C19               	goto	u4291
  6202     0C18  2C1A               	goto	u4290
  6203     0C19                     u4291:
  6204     0C19  2C4B               	goto	l2766
  6205     0C1A                     u4290:
  6206     0C1A                     l2758:
  6207     0C1A  3001               	movlw	1
  6208     0C1B  07B8               	addwf	___flmul@prod,f
  6209     0C1C  3000               	movlw	0
  6210     0C1D  1803               	skipnc
  6211     0C1E  3001               	movlw	1
  6212     0C1F  07B9               	addwf	___flmul@prod+1,f
  6213     0C20  3000               	movlw	0
  6214     0C21  1803               	skipnc
  6215     0C22  3001               	movlw	1
  6216     0C23  07BA               	addwf	___flmul@prod+2,f
  6217     0C24  3000               	movlw	0
  6218     0C25  1803               	skipnc
  6219     0C26  3001               	movlw	1
  6220     0C27  07BB               	addwf	___flmul@prod+3,f
  6221     0C28                     l2760:
  6222     0C28  1C3B               	btfss	___flmul@prod+3,0
  6223     0C29  2C2B               	goto	u4301
  6224     0C2A  2C2C               	goto	u4300
  6225     0C2B                     u4301:
  6226     0C2B  2C4B               	goto	l2766
  6227     0C2C                     u4300:
  6228     0C2C                     l2762:
  6229     0C2C  0838               	movf	___flmul@prod,w
  6230     0C2D  00AC               	movwf	??___flmul
  6231     0C2E  0839               	movf	___flmul@prod+1,w
  6232     0C2F  00AD               	movwf	??___flmul+1
  6233     0C30  083A               	movf	___flmul@prod+2,w
  6234     0C31  00AE               	movwf	??___flmul+2
  6235     0C32  083B               	movf	___flmul@prod+3,w
  6236     0C33  00AF               	movwf	??___flmul+3
  6237     0C34  3001               	movlw	1
  6238     0C35  00B0               	movwf	??___flmul+4
  6239     0C36                     u4315:
  6240     0C36  0D2F               	rlf	??___flmul+3,w
  6241     0C37  0CAF               	rrf	??___flmul+3,f
  6242     0C38  0CAE               	rrf	??___flmul+2,f
  6243     0C39  0CAD               	rrf	??___flmul+1,f
  6244     0C3A  0CAC               	rrf	??___flmul,f
  6245     0C3B                     u4310:
  6246     0C3B  0BB0               	decfsz	??___flmul+4,f
  6247     0C3C  2C36               	goto	u4315
  6248     0C3D  082F               	movf	??___flmul+3,w
  6249     0C3E  00BB               	movwf	___flmul@prod+3
  6250     0C3F  082E               	movf	??___flmul+2,w
  6251     0C40  00BA               	movwf	___flmul@prod+2
  6252     0C41  082D               	movf	??___flmul+1,w
  6253     0C42  00B9               	movwf	___flmul@prod+1
  6254     0C43  082C               	movf	??___flmul,w
  6255     0C44  00B8               	movwf	___flmul@prod
  6256     0C45                     l2764:
  6257     0C45  3001               	movlw	1
  6258     0C46  07BC               	addwf	___flmul@temp,f
  6259     0C47  1803               	skipnc
  6260     0C48  0ABD               	incf	___flmul@temp+1,f
  6261     0C49  3000               	movlw	0
  6262     0C4A  07BD               	addwf	___flmul@temp+1,f
  6263     0C4B                     l2766:
  6264     0C4B  083D               	movf	___flmul@temp+1,w
  6265     0C4C  3A80               	xorlw	128
  6266     0C4D  00FF               	movwf	btemp+1
  6267     0C4E  3080               	movlw	128
  6268     0C4F  027F               	subwf	btemp+1,w
  6269     0C50  1D03               	skipz
  6270     0C51  2C54               	goto	u4325
  6271     0C52  30FF               	movlw	255
  6272     0C53  023C               	subwf	___flmul@temp,w
  6273     0C54                     u4325:
  6274     0C54  1C03               	skipc
  6275     0C55  2C57               	goto	u4321
  6276     0C56  2C58               	goto	u4320
  6277     0C57                     u4321:
  6278     0C57  2C63               	goto	l2770
  6279     0C58                     u4320:
  6280     0C58                     l2768:
  6281     0C58  307F               	movlw	127
  6282     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6283     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6284     0C5B  00BB               	movwf	___flmul@prod+3
  6285     0C5C  3080               	movlw	128
  6286     0C5D  00BA               	movwf	___flmul@prod+2
  6287     0C5E  3000               	movlw	0
  6288     0C5F  00B9               	movwf	___flmul@prod+1
  6289     0C60  3000               	movlw	0
  6290     0C61  00B8               	movwf	___flmul@prod
  6291     0C62  2C94               	goto	l750
  6292     0C63                     l2770:
  6293     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6294     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6295     0C65  083D               	movf	___flmul@temp+1,w
  6296     0C66  3A80               	xorlw	128
  6297     0C67  00FF               	movwf	btemp+1
  6298     0C68  3080               	movlw	128
  6299     0C69  027F               	subwf	btemp+1,w
  6300     0C6A  1D03               	skipz
  6301     0C6B  2C6E               	goto	u4335
  6302     0C6C  3001               	movlw	1
  6303     0C6D  023C               	subwf	___flmul@temp,w
  6304     0C6E                     u4335:
  6305     0C6E  1803               	skipnc
  6306     0C6F  2C71               	goto	u4331
  6307     0C70  2C72               	goto	u4330
  6308     0C71                     u4331:
  6309     0C71  2C7E               	goto	l2776
  6310     0C72                     u4330:
  6311     0C72                     l2772:
  6312     0C72  3000               	movlw	0
  6313     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6314     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6315     0C75  00BB               	movwf	___flmul@prod+3
  6316     0C76  3000               	movlw	0
  6317     0C77  00BA               	movwf	___flmul@prod+2
  6318     0C78  3000               	movlw	0
  6319     0C79  00B9               	movwf	___flmul@prod+1
  6320     0C7A  3000               	movlw	0
  6321     0C7B  00B8               	movwf	___flmul@prod
  6322     0C7C                     l2774:
  6323     0C7C  01B1               	clrf	___flmul@sign
  6324     0C7D  2C94               	goto	l750
  6325     0C7E                     l2776:
  6326     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6327     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6328     0C80  083C               	movf	___flmul@temp,w
  6329     0C81  00B7               	movwf	___flmul@bexp
  6330     0C82  30FF               	movlw	255
  6331     0C83  05B8               	andwf	___flmul@prod,f
  6332     0C84  30FF               	movlw	255
  6333     0C85  05B9               	andwf	___flmul@prod+1,f
  6334     0C86  307F               	movlw	127
  6335     0C87  05BA               	andwf	___flmul@prod+2,f
  6336     0C88  3000               	movlw	0
  6337     0C89  05BB               	andwf	___flmul@prod+3,f
  6338     0C8A                     l2778:
  6339     0C8A  1C37               	btfss	___flmul@bexp,0
  6340     0C8B  2C8D               	goto	u4341
  6341     0C8C  2C8E               	goto	u4340
  6342     0C8D                     u4341:
  6343     0C8D  2C8F               	goto	l2782
  6344     0C8E                     u4340:
  6345     0C8E                     l2780:
  6346     0C8E  17BA               	bsf	___flmul@prod+2,7
  6347     0C8F                     l2782:
  6348     0C8F  0837               	movf	___flmul@bexp,w
  6349     0C90  00AC               	movwf	??___flmul
  6350     0C91  1003               	clrc
  6351     0C92  0C2C               	rrf	??___flmul,w
  6352     0C93  00BB               	movwf	___flmul@prod+3
  6353     0C94                     l750:
  6354     0C94  0831               	movf	___flmul@sign,w
  6355     0C95  00AC               	movwf	??___flmul
  6356     0C96  082C               	movf	??___flmul,w
  6357     0C97  04BB               	iorwf	___flmul@prod+3,f
  6358     0C98                     l2784:
  6359     0C98  083B               	movf	___flmul@prod+3,w
  6360     0C99  00A7               	movwf	?___flmul+3
  6361     0C9A  083A               	movf	___flmul@prod+2,w
  6362     0C9B  00A6               	movwf	?___flmul+2
  6363     0C9C  0839               	movf	___flmul@prod+1,w
  6364     0C9D  00A5               	movwf	?___flmul+1
  6365     0C9E  0838               	movf	___flmul@prod,w
  6366     0C9F  00A4               	movwf	?___flmul
  6367     0CA0                     l738:
  6368     0CA0  0008               	return
  6369     0CA1                     __end_of___flmul:
  6370                           
  6371                           	psect	text10
  6372     1BDB                     __ptext10:	
  6373 ;; *************** function __Umul8_16 *****************
  6374 ;; Defined at:
  6375 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  multiplier      1    wreg     unsigned char 
  6378 ;;  multiplicand    1    0[COMMON] unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  multiplier      1    8[COMMON] unsigned char 
  6381 ;;  word_mpld       2    6[COMMON] unsigned int 
  6382 ;;  product         2    4[COMMON] unsigned int 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  2    0[COMMON] unsigned int 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6392 ;;      Params:         2       0       0       0       0
  6393 ;;      Locals:         5       0       0       0       0
  6394 ;;      Temps:          2       0       0       0       0
  6395 ;;      Totals:         9       0       0       0       0
  6396 ;;Total ram usage:        9 bytes
  6397 ;; Hardware stack levels used: 1
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		___flmul
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405     1BDB                     __Umul8_16:	
  6406                           ;psect for function __Umul8_16
  6407                           
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6411                           ;__Umul8_16@multiplier stored from wreg
  6412     1BDB  00F8               	movwf	__Umul8_16@multiplier
  6413     1BDC                     l2300:
  6414     1BDC  01F4               	clrf	__Umul8_16@product
  6415     1BDD  01F5               	clrf	__Umul8_16@product+1
  6416     1BDE                     l2302:
  6417     1BDE  0870               	movf	__Umul8_16@multiplicand,w
  6418     1BDF  00F2               	movwf	??__Umul8_16
  6419     1BE0  01F3               	clrf	??__Umul8_16+1
  6420     1BE1  0872               	movf	??__Umul8_16,w
  6421     1BE2  00F6               	movwf	__Umul8_16@word_mpld
  6422     1BE3  0873               	movf	??__Umul8_16+1,w
  6423     1BE4  00F7               	movwf	__Umul8_16@word_mpld+1
  6424     1BE5                     l2304:
  6425     1BE5  1C78               	btfss	__Umul8_16@multiplier,0
  6426     1BE6  2BE8               	goto	u3131
  6427     1BE7  2BE9               	goto	u3130
  6428     1BE8                     u3131:
  6429     1BE8  2BEF               	goto	l757
  6430     1BE9                     u3130:
  6431     1BE9                     l2306:
  6432     1BE9  0876               	movf	__Umul8_16@word_mpld,w
  6433     1BEA  07F4               	addwf	__Umul8_16@product,f
  6434     1BEB  1803               	skipnc
  6435     1BEC  0AF5               	incf	__Umul8_16@product+1,f
  6436     1BED  0877               	movf	__Umul8_16@word_mpld+1,w
  6437     1BEE  07F5               	addwf	__Umul8_16@product+1,f
  6438     1BEF                     l757:
  6439     1BEF  3001               	movlw	1
  6440     1BF0                     u3145:
  6441     1BF0  1003               	clrc
  6442     1BF1  0DF6               	rlf	__Umul8_16@word_mpld,f
  6443     1BF2  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6444     1BF3  3EFF               	addlw	-1
  6445     1BF4  1D03               	skipz
  6446     1BF5  2BF0               	goto	u3145
  6447     1BF6  1003               	clrc
  6448     1BF7  0CF8               	rrf	__Umul8_16@multiplier,f
  6449     1BF8                     l2308:
  6450     1BF8  0878               	movf	__Umul8_16@multiplier,w
  6451     1BF9  1D03               	btfss	3,2
  6452     1BFA  2BFC               	goto	u3151
  6453     1BFB  2BFD               	goto	u3150
  6454     1BFC                     u3151:
  6455     1BFC  2BE5               	goto	l2304
  6456     1BFD                     u3150:
  6457     1BFD                     l2310:
  6458     1BFD  0875               	movf	__Umul8_16@product+1,w
  6459     1BFE  00F1               	movwf	?__Umul8_16+1
  6460     1BFF  0874               	movf	__Umul8_16@product,w
  6461     1C00  00F0               	movwf	?__Umul8_16
  6462     1C01                     l759:
  6463     1C01  0008               	return
  6464     1C02                     __end_of__Umul8_16:
  6465                           
  6466                           	psect	text11
  6467     105B                     __ptext11:	
  6468 ;; *************** function __tdiv_to_l_ *****************
  6469 ;; Defined at:
  6470 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  f1              4    0[COMMON] float 
  6473 ;;  f2              4    4[COMMON] float 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  quot            4    0[BANK0 ] unsigned long 
  6476 ;;  exp1            1    5[BANK0 ] unsigned char 
  6477 ;;  cntr            1    4[BANK0 ] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  4    0[COMMON] unsigned long 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6487 ;;      Params:         8       0       0       0       0
  6488 ;;      Locals:         0       6       0       0       0
  6489 ;;      Temps:          3       0       0       0       0
  6490 ;;      Totals:        11       6       0       0       0
  6491 ;;Total ram usage:       17 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_sprintf
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500     105B                     __tdiv_to_l_:	
  6501                           ;psect for function __tdiv_to_l_
  6502                           
  6503     105B                     l2888:	
  6504                           ;incstack = 0
  6505                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6506                           
  6507     105B  0870               	movf	__tdiv_to_l_@f1,w
  6508     105C  00F8               	movwf	??__tdiv_to_l_
  6509     105D  0871               	movf	__tdiv_to_l_@f1+1,w
  6510     105E  00F9               	movwf	??__tdiv_to_l_+1
  6511     105F  0872               	movf	__tdiv_to_l_@f1+2,w
  6512     1060  00FA               	movwf	??__tdiv_to_l_+2
  6513     1061  1003               	clrc
  6514     1062  0D79               	rlf	??__tdiv_to_l_+1,w
  6515     1063  0D7A               	rlf	??__tdiv_to_l_+2,w
  6516     1064  1283               	bcf	3,5	;RP0=0, select bank0
  6517     1065  1303               	bcf	3,6	;RP1=0, select bank0
  6518     1066  00A5               	movwf	__tdiv_to_l_@exp1
  6519     1067  0825               	movf	__tdiv_to_l_@exp1,w
  6520     1068  1D03               	btfss	3,2
  6521     1069  286B               	goto	u4631
  6522     106A  286C               	goto	u4630
  6523     106B                     u4631:
  6524     106B  2875               	goto	l2894
  6525     106C                     u4630:
  6526     106C                     l2890:
  6527     106C  3000               	movlw	0
  6528     106D  00F3               	movwf	?__tdiv_to_l_+3
  6529     106E  3000               	movlw	0
  6530     106F  00F2               	movwf	?__tdiv_to_l_+2
  6531     1070  3000               	movlw	0
  6532     1071  00F1               	movwf	?__tdiv_to_l_+1
  6533     1072  3000               	movlw	0
  6534     1073  00F0               	movwf	?__tdiv_to_l_
  6535     1074  2911               	goto	l532
  6536     1075                     l2894:
  6537     1075  0874               	movf	__tdiv_to_l_@f2,w
  6538     1076  00F8               	movwf	??__tdiv_to_l_
  6539     1077  0875               	movf	__tdiv_to_l_@f2+1,w
  6540     1078  00F9               	movwf	??__tdiv_to_l_+1
  6541     1079  0876               	movf	__tdiv_to_l_@f2+2,w
  6542     107A  00FA               	movwf	??__tdiv_to_l_+2
  6543     107B  1003               	clrc
  6544     107C  0D79               	rlf	??__tdiv_to_l_+1,w
  6545     107D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6546     107E  00A4               	movwf	__tdiv_to_l_@cntr
  6547     107F  0824               	movf	__tdiv_to_l_@cntr,w
  6548     1080  1D03               	btfss	3,2
  6549     1081  2883               	goto	u4641
  6550     1082  2884               	goto	u4640
  6551     1083                     u4641:
  6552     1083  2885               	goto	l533
  6553     1084                     u4640:
  6554     1084  286C               	goto	l2890
  6555     1085                     l533:
  6556     1085  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6557     1086                     l2900:
  6558     1086  30FF               	movlw	255
  6559     1087  05F0               	andwf	__tdiv_to_l_@f1,f
  6560     1088  30FF               	movlw	255
  6561     1089  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6562     108A  3000               	movlw	0
  6563     108B  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6564     108C                     l2902:
  6565     108C  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6566     108D  30FF               	movlw	255
  6567     108E  05F4               	andwf	__tdiv_to_l_@f2,f
  6568     108F  30FF               	movlw	255
  6569     1090  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6570     1091  3000               	movlw	0
  6571     1092  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6572     1093  3000               	movlw	0
  6573     1094  00A3               	movwf	__tdiv_to_l_@quot+3
  6574     1095  3000               	movlw	0
  6575     1096  00A2               	movwf	__tdiv_to_l_@quot+2
  6576     1097  3000               	movlw	0
  6577     1098  00A1               	movwf	__tdiv_to_l_@quot+1
  6578     1099  3000               	movlw	0
  6579     109A  00A0               	movwf	__tdiv_to_l_@quot
  6580     109B                     l2904:
  6581     109B  307F               	movlw	127
  6582     109C  02A5               	subwf	__tdiv_to_l_@exp1,f
  6583     109D                     l2906:
  6584     109D  3098               	movlw	152
  6585     109E  0724               	addwf	__tdiv_to_l_@cntr,w
  6586     109F  00F8               	movwf	??__tdiv_to_l_
  6587     10A0  0878               	movf	??__tdiv_to_l_,w
  6588     10A1  02A5               	subwf	__tdiv_to_l_@exp1,f
  6589     10A2  3018               	movlw	24
  6590     10A3  00A4               	movwf	__tdiv_to_l_@cntr
  6591     10A4                     l2908:
  6592     10A4  3001               	movlw	1
  6593     10A5  00F8               	movwf	??__tdiv_to_l_
  6594     10A6                     u4655:
  6595     10A6  1003               	clrc
  6596     10A7  0DA0               	rlf	__tdiv_to_l_@quot,f
  6597     10A8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6598     10A9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6599     10AA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6600     10AB  0BF8               	decfsz	??__tdiv_to_l_,f
  6601     10AC  28A6               	goto	u4655
  6602     10AD                     l2910:
  6603     10AD  0876               	movf	__tdiv_to_l_@f2+2,w
  6604     10AE  0272               	subwf	__tdiv_to_l_@f1+2,w
  6605     10AF  1D03               	skipz
  6606     10B0  28B7               	goto	u4665
  6607     10B1  0875               	movf	__tdiv_to_l_@f2+1,w
  6608     10B2  0271               	subwf	__tdiv_to_l_@f1+1,w
  6609     10B3  1D03               	skipz
  6610     10B4  28B7               	goto	u4665
  6611     10B5  0874               	movf	__tdiv_to_l_@f2,w
  6612     10B6  0270               	subwf	__tdiv_to_l_@f1,w
  6613     10B7                     u4665:
  6614     10B7  1C03               	skipc
  6615     10B8  28BA               	goto	u4661
  6616     10B9  28BB               	goto	u4660
  6617     10BA                     u4661:
  6618     10BA  28C6               	goto	l2916
  6619     10BB                     u4660:
  6620     10BB                     l2912:
  6621     10BB  0874               	movf	__tdiv_to_l_@f2,w
  6622     10BC  02F0               	subwf	__tdiv_to_l_@f1,f
  6623     10BD  0875               	movf	__tdiv_to_l_@f2+1,w
  6624     10BE  1C03               	skipc
  6625     10BF  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6626     10C0  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6627     10C1  0876               	movf	__tdiv_to_l_@f2+2,w
  6628     10C2  1C03               	skipc
  6629     10C3  0A76               	incf	__tdiv_to_l_@f2+2,w
  6630     10C4  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6631     10C5                     l2914:
  6632     10C5  1420               	bsf	__tdiv_to_l_@quot,0
  6633     10C6                     l2916:
  6634     10C6  3001               	movlw	1
  6635     10C7                     u4675:
  6636     10C7  1003               	clrc
  6637     10C8  0DF0               	rlf	__tdiv_to_l_@f1,f
  6638     10C9  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6639     10CA  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6640     10CB  3EFF               	addlw	-1
  6641     10CC  1D03               	skipz
  6642     10CD  28C7               	goto	u4675
  6643     10CE                     l2918:
  6644     10CE  3001               	movlw	1
  6645     10CF  02A4               	subwf	__tdiv_to_l_@cntr,f
  6646     10D0  1D03               	btfss	3,2
  6647     10D1  28D3               	goto	u4681
  6648     10D2  28D4               	goto	u4680
  6649     10D3                     u4681:
  6650     10D3  28A4               	goto	l2908
  6651     10D4                     u4680:
  6652     10D4                     l536:
  6653     10D4  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6654     10D5  28D7               	goto	u4691
  6655     10D6  28D8               	goto	u4690
  6656     10D7                     u4691:
  6657     10D7  28F2               	goto	l2928
  6658     10D8                     u4690:
  6659     10D8                     l2920:
  6660     10D8  0825               	movf	__tdiv_to_l_@exp1,w
  6661     10D9  3A80               	xorlw	128
  6662     10DA  3E97               	addlw	151
  6663     10DB  1803               	skipnc
  6664     10DC  28DE               	goto	u4701
  6665     10DD  28DF               	goto	u4700
  6666     10DE                     u4701:
  6667     10DE  28E0               	goto	l2926
  6668     10DF                     u4700:
  6669     10DF  286C               	goto	l2890
  6670     10E0                     l2926:
  6671     10E0  3001               	movlw	1
  6672     10E1                     u4715:
  6673     10E1  1003               	clrc
  6674     10E2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6675     10E3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6676     10E4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6677     10E5  0CA0               	rrf	__tdiv_to_l_@quot,f
  6678     10E6  3EFF               	addlw	-1
  6679     10E7  1D03               	skipz
  6680     10E8  28E1               	goto	u4715
  6681     10E9  3001               	movlw	1
  6682     10EA  00F8               	movwf	??__tdiv_to_l_
  6683     10EB  0878               	movf	??__tdiv_to_l_,w
  6684     10EC  07A5               	addwf	__tdiv_to_l_@exp1,f
  6685     10ED  1D03               	btfss	3,2
  6686     10EE  28F0               	goto	u4721
  6687     10EF  28F1               	goto	u4720
  6688     10F0                     u4721:
  6689     10F0  28E0               	goto	l2926
  6690     10F1                     u4720:
  6691     10F1  2909               	goto	l2936
  6692     10F2                     l2928:
  6693     10F2  3018               	movlw	24
  6694     10F3  0225               	subwf	__tdiv_to_l_@exp1,w
  6695     10F4  1C03               	skipc
  6696     10F5  28F7               	goto	u4731
  6697     10F6  28F8               	goto	u4730
  6698     10F7                     u4731:
  6699     10F7  2904               	goto	l543
  6700     10F8                     u4730:
  6701     10F8  286C               	goto	l2890
  6702     10F9                     l2934:
  6703     10F9  3001               	movlw	1
  6704     10FA  00F8               	movwf	??__tdiv_to_l_
  6705     10FB                     u4745:
  6706     10FB  1003               	clrc
  6707     10FC  0DA0               	rlf	__tdiv_to_l_@quot,f
  6708     10FD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6709     10FE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6710     10FF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6711     1100  0BF8               	decfsz	??__tdiv_to_l_,f
  6712     1101  28FB               	goto	u4745
  6713     1102  3001               	movlw	1
  6714     1103  02A5               	subwf	__tdiv_to_l_@exp1,f
  6715     1104                     l543:
  6716     1104  0825               	movf	__tdiv_to_l_@exp1,w
  6717     1105  1D03               	btfss	3,2
  6718     1106  2908               	goto	u4751
  6719     1107  2909               	goto	u4750
  6720     1108                     u4751:
  6721     1108  28F9               	goto	l2934
  6722     1109                     u4750:
  6723     1109                     l2936:
  6724     1109  0823               	movf	__tdiv_to_l_@quot+3,w
  6725     110A  00F3               	movwf	?__tdiv_to_l_+3
  6726     110B  0822               	movf	__tdiv_to_l_@quot+2,w
  6727     110C  00F2               	movwf	?__tdiv_to_l_+2
  6728     110D  0821               	movf	__tdiv_to_l_@quot+1,w
  6729     110E  00F1               	movwf	?__tdiv_to_l_+1
  6730     110F  0820               	movf	__tdiv_to_l_@quot,w
  6731     1110  00F0               	movwf	?__tdiv_to_l_
  6732     1111                     l532:
  6733     1111  0008               	return
  6734     1112                     __end_of__tdiv_to_l_:
  6735                           
  6736                           	psect	text12
  6737     08A4                     __ptext12:	
  6738 ;; *************** function __div_to_l_ *****************
  6739 ;; Defined at:
  6740 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  f1              4    0[COMMON] unsigned long 
  6743 ;;  f2              4    4[COMMON] unsigned long 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  quot            4    0[BANK0 ] unsigned long 
  6746 ;;  exp1            1    5[BANK0 ] unsigned char 
  6747 ;;  cntr            1    4[BANK0 ] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  4    0[COMMON] unsigned long 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6757 ;;      Params:         8       0       0       0       0
  6758 ;;      Locals:         0       6       0       0       0
  6759 ;;      Temps:          1       0       0       0       0
  6760 ;;      Totals:         9       6       0       0       0
  6761 ;;Total ram usage:       15 bytes
  6762 ;; Hardware stack levels used: 1
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_sprintf
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770     08A4                     __div_to_l_:	
  6771                           ;psect for function __div_to_l_
  6772                           
  6773     08A4                     l2940:	
  6774                           ;incstack = 0
  6775                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6776                           
  6777     08A4  1003               	clrc
  6778     08A5  0D72               	rlf	__div_to_l_@f1+2,w
  6779     08A6  0D73               	rlf	__div_to_l_@f1+3,w
  6780     08A7  1283               	bcf	3,5	;RP0=0, select bank0
  6781     08A8  1303               	bcf	3,6	;RP1=0, select bank0
  6782     08A9  00A5               	movwf	__div_to_l_@exp1
  6783     08AA  0825               	movf	__div_to_l_@exp1,w
  6784     08AB  1D03               	btfss	3,2
  6785     08AC  28AE               	goto	u4761
  6786     08AD  28AF               	goto	u4760
  6787     08AE                     u4761:
  6788     08AE  28B8               	goto	l2946
  6789     08AF                     u4760:
  6790     08AF                     l2942:
  6791     08AF  3000               	movlw	0
  6792     08B0  00F3               	movwf	?__div_to_l_+3
  6793     08B1  3000               	movlw	0
  6794     08B2  00F2               	movwf	?__div_to_l_+2
  6795     08B3  3000               	movlw	0
  6796     08B4  00F1               	movwf	?__div_to_l_+1
  6797     08B5  3000               	movlw	0
  6798     08B6  00F0               	movwf	?__div_to_l_
  6799     08B7  295B               	goto	l485
  6800     08B8                     l2946:
  6801     08B8  1003               	clrc
  6802     08B9  0D76               	rlf	__div_to_l_@f2+2,w
  6803     08BA  0D77               	rlf	__div_to_l_@f2+3,w
  6804     08BB  00A4               	movwf	__div_to_l_@cntr
  6805     08BC  0824               	movf	__div_to_l_@cntr,w
  6806     08BD  1D03               	btfss	3,2
  6807     08BE  28C0               	goto	u4771
  6808     08BF  28C1               	goto	u4770
  6809     08C0                     u4771:
  6810     08C0  28C2               	goto	l486
  6811     08C1                     u4770:
  6812     08C1  28AF               	goto	l2942
  6813     08C2                     l486:
  6814     08C2  17F2               	bsf	__div_to_l_@f1+2,7
  6815     08C3                     l2952:
  6816     08C3  30FF               	movlw	255
  6817     08C4  05F0               	andwf	__div_to_l_@f1,f
  6818     08C5  30FF               	movlw	255
  6819     08C6  05F1               	andwf	__div_to_l_@f1+1,f
  6820     08C7  30FF               	movlw	255
  6821     08C8  05F2               	andwf	__div_to_l_@f1+2,f
  6822     08C9  3000               	movlw	0
  6823     08CA  05F3               	andwf	__div_to_l_@f1+3,f
  6824     08CB                     l2954:
  6825     08CB  17F6               	bsf	__div_to_l_@f2+2,7
  6826     08CC  30FF               	movlw	255
  6827     08CD  05F4               	andwf	__div_to_l_@f2,f
  6828     08CE  30FF               	movlw	255
  6829     08CF  05F5               	andwf	__div_to_l_@f2+1,f
  6830     08D0  30FF               	movlw	255
  6831     08D1  05F6               	andwf	__div_to_l_@f2+2,f
  6832     08D2  3000               	movlw	0
  6833     08D3  05F7               	andwf	__div_to_l_@f2+3,f
  6834     08D4  3000               	movlw	0
  6835     08D5  00A3               	movwf	__div_to_l_@quot+3
  6836     08D6  3000               	movlw	0
  6837     08D7  00A2               	movwf	__div_to_l_@quot+2
  6838     08D8  3000               	movlw	0
  6839     08D9  00A1               	movwf	__div_to_l_@quot+1
  6840     08DA  3000               	movlw	0
  6841     08DB  00A0               	movwf	__div_to_l_@quot
  6842     08DC                     l2956:
  6843     08DC  307F               	movlw	127
  6844     08DD  02A5               	subwf	__div_to_l_@exp1,f
  6845     08DE                     l2958:
  6846     08DE  30A0               	movlw	160
  6847     08DF  0724               	addwf	__div_to_l_@cntr,w
  6848     08E0  00F8               	movwf	??__div_to_l_
  6849     08E1  0878               	movf	??__div_to_l_,w
  6850     08E2  02A5               	subwf	__div_to_l_@exp1,f
  6851     08E3  3020               	movlw	32
  6852     08E4  00A4               	movwf	__div_to_l_@cntr
  6853     08E5                     l2960:
  6854     08E5  3001               	movlw	1
  6855     08E6  00F8               	movwf	??__div_to_l_
  6856     08E7                     u4785:
  6857     08E7  1003               	clrc
  6858     08E8  0DA0               	rlf	__div_to_l_@quot,f
  6859     08E9  0DA1               	rlf	__div_to_l_@quot+1,f
  6860     08EA  0DA2               	rlf	__div_to_l_@quot+2,f
  6861     08EB  0DA3               	rlf	__div_to_l_@quot+3,f
  6862     08EC  0BF8               	decfsz	??__div_to_l_,f
  6863     08ED  28E7               	goto	u4785
  6864     08EE                     l2962:
  6865     08EE  0877               	movf	__div_to_l_@f2+3,w
  6866     08EF  0273               	subwf	__div_to_l_@f1+3,w
  6867     08F0  1D03               	skipz
  6868     08F1  28FC               	goto	u4795
  6869     08F2  0876               	movf	__div_to_l_@f2+2,w
  6870     08F3  0272               	subwf	__div_to_l_@f1+2,w
  6871     08F4  1D03               	skipz
  6872     08F5  28FC               	goto	u4795
  6873     08F6  0875               	movf	__div_to_l_@f2+1,w
  6874     08F7  0271               	subwf	__div_to_l_@f1+1,w
  6875     08F8  1D03               	skipz
  6876     08F9  28FC               	goto	u4795
  6877     08FA  0874               	movf	__div_to_l_@f2,w
  6878     08FB  0270               	subwf	__div_to_l_@f1,w
  6879     08FC                     u4795:
  6880     08FC  1C03               	skipc
  6881     08FD  28FF               	goto	u4791
  6882     08FE  2900               	goto	u4790
  6883     08FF                     u4791:
  6884     08FF  290F               	goto	l2968
  6885     0900                     u4790:
  6886     0900                     l2964:
  6887     0900  0874               	movf	__div_to_l_@f2,w
  6888     0901  02F0               	subwf	__div_to_l_@f1,f
  6889     0902  0875               	movf	__div_to_l_@f2+1,w
  6890     0903  1C03               	skipc
  6891     0904  0F75               	incfsz	__div_to_l_@f2+1,w
  6892     0905  02F1               	subwf	__div_to_l_@f1+1,f
  6893     0906  0876               	movf	__div_to_l_@f2+2,w
  6894     0907  1C03               	skipc
  6895     0908  0F76               	incfsz	__div_to_l_@f2+2,w
  6896     0909  02F2               	subwf	__div_to_l_@f1+2,f
  6897     090A  0877               	movf	__div_to_l_@f2+3,w
  6898     090B  1C03               	skipc
  6899     090C  0F77               	incfsz	__div_to_l_@f2+3,w
  6900     090D  02F3               	subwf	__div_to_l_@f1+3,f
  6901     090E                     l2966:
  6902     090E  1420               	bsf	__div_to_l_@quot,0
  6903     090F                     l2968:
  6904     090F  3001               	movlw	1
  6905     0910  00F8               	movwf	??__div_to_l_
  6906     0911                     u4805:
  6907     0911  1003               	clrc
  6908     0912  0DF0               	rlf	__div_to_l_@f1,f
  6909     0913  0DF1               	rlf	__div_to_l_@f1+1,f
  6910     0914  0DF2               	rlf	__div_to_l_@f1+2,f
  6911     0915  0DF3               	rlf	__div_to_l_@f1+3,f
  6912     0916  0BF8               	decfsz	??__div_to_l_,f
  6913     0917  2911               	goto	u4805
  6914     0918                     l2970:
  6915     0918  3001               	movlw	1
  6916     0919  02A4               	subwf	__div_to_l_@cntr,f
  6917     091A  1D03               	btfss	3,2
  6918     091B  291D               	goto	u4811
  6919     091C  291E               	goto	u4810
  6920     091D                     u4811:
  6921     091D  28E5               	goto	l2960
  6922     091E                     u4810:
  6923     091E                     l489:
  6924     091E  1FA5               	btfss	__div_to_l_@exp1,7
  6925     091F  2921               	goto	u4821
  6926     0920  2922               	goto	u4820
  6927     0921                     u4821:
  6928     0921  293C               	goto	l2980
  6929     0922                     u4820:
  6930     0922                     l2972:
  6931     0922  0825               	movf	__div_to_l_@exp1,w
  6932     0923  3A80               	xorlw	128
  6933     0924  3E9F               	addlw	159
  6934     0925  1803               	skipnc
  6935     0926  2928               	goto	u4831
  6936     0927  2929               	goto	u4830
  6937     0928                     u4831:
  6938     0928  292A               	goto	l2978
  6939     0929                     u4830:
  6940     0929  28AF               	goto	l2942
  6941     092A                     l2978:
  6942     092A  3001               	movlw	1
  6943     092B                     u4845:
  6944     092B  1003               	clrc
  6945     092C  0CA3               	rrf	__div_to_l_@quot+3,f
  6946     092D  0CA2               	rrf	__div_to_l_@quot+2,f
  6947     092E  0CA1               	rrf	__div_to_l_@quot+1,f
  6948     092F  0CA0               	rrf	__div_to_l_@quot,f
  6949     0930  3EFF               	addlw	-1
  6950     0931  1D03               	skipz
  6951     0932  292B               	goto	u4845
  6952     0933  3001               	movlw	1
  6953     0934  00F8               	movwf	??__div_to_l_
  6954     0935  0878               	movf	??__div_to_l_,w
  6955     0936  07A5               	addwf	__div_to_l_@exp1,f
  6956     0937  1D03               	btfss	3,2
  6957     0938  293A               	goto	u4851
  6958     0939  293B               	goto	u4850
  6959     093A                     u4851:
  6960     093A  292A               	goto	l2978
  6961     093B                     u4850:
  6962     093B  2953               	goto	l2988
  6963     093C                     l2980:
  6964     093C  3020               	movlw	32
  6965     093D  0225               	subwf	__div_to_l_@exp1,w
  6966     093E  1C03               	skipc
  6967     093F  2941               	goto	u4861
  6968     0940  2942               	goto	u4860
  6969     0941                     u4861:
  6970     0941  294E               	goto	l496
  6971     0942                     u4860:
  6972     0942  28AF               	goto	l2942
  6973     0943                     l2986:
  6974     0943  3001               	movlw	1
  6975     0944  00F8               	movwf	??__div_to_l_
  6976     0945                     u4875:
  6977     0945  1003               	clrc
  6978     0946  0DA0               	rlf	__div_to_l_@quot,f
  6979     0947  0DA1               	rlf	__div_to_l_@quot+1,f
  6980     0948  0DA2               	rlf	__div_to_l_@quot+2,f
  6981     0949  0DA3               	rlf	__div_to_l_@quot+3,f
  6982     094A  0BF8               	decfsz	??__div_to_l_,f
  6983     094B  2945               	goto	u4875
  6984     094C  3001               	movlw	1
  6985     094D  02A5               	subwf	__div_to_l_@exp1,f
  6986     094E                     l496:
  6987     094E  0825               	movf	__div_to_l_@exp1,w
  6988     094F  1D03               	btfss	3,2
  6989     0950  2952               	goto	u4881
  6990     0951  2953               	goto	u4880
  6991     0952                     u4881:
  6992     0952  2943               	goto	l2986
  6993     0953                     u4880:
  6994     0953                     l2988:
  6995     0953  0823               	movf	__div_to_l_@quot+3,w
  6996     0954  00F3               	movwf	?__div_to_l_+3
  6997     0955  0822               	movf	__div_to_l_@quot+2,w
  6998     0956  00F2               	movwf	?__div_to_l_+2
  6999     0957  0821               	movf	__div_to_l_@quot+1,w
  7000     0958  00F1               	movwf	?__div_to_l_+1
  7001     0959  0820               	movf	__div_to_l_@quot,w
  7002     095A  00F0               	movwf	?__div_to_l_
  7003     095B                     l485:
  7004     095B  0008               	return
  7005     095C                     __end_of__div_to_l_:
  7006                           
  7007                           	psect	text13
  7008     1112                     __ptext13:	
  7009 ;; *************** function ___xxtofl *****************
  7010 ;; Defined at:
  7011 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  sign            1    wreg     unsigned char 
  7014 ;;  val             4    0[COMMON] long 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  sign            1    8[COMMON] unsigned char 
  7017 ;;  arg             4   10[COMMON] unsigned long 
  7018 ;;  exp             1    9[COMMON] unsigned char 
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  4    0[COMMON] unsigned char 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2, status,0
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7028 ;;      Params:         4       0       0       0       0
  7029 ;;      Locals:         6       0       0       0       0
  7030 ;;      Temps:          4       0       0       0       0
  7031 ;;      Totals:        14       0       0       0       0
  7032 ;;Total ram usage:       14 bytes
  7033 ;; Hardware stack levels used: 1
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;;		_sprintf
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042     1112                     ___xxtofl:	
  7043                           ;psect for function ___xxtofl
  7044                           
  7045                           
  7046                           ;incstack = 0
  7047                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7048                           ;___xxtofl@sign stored from wreg
  7049     1112  00F8               	movwf	___xxtofl@sign
  7050     1113                     l3132:
  7051     1113  0878               	movf	___xxtofl@sign,w
  7052     1114  1903               	btfsc	3,2
  7053     1115  2917               	goto	u5271
  7054     1116  2918               	goto	u5270
  7055     1117                     u5271:
  7056     1117  292C               	goto	l3138
  7057     1118                     u5270:
  7058     1118                     l3134:
  7059     1118  1FF3               	btfss	___xxtofl@val+3,7
  7060     1119  291B               	goto	u5281
  7061     111A  291C               	goto	u5280
  7062     111B                     u5281:
  7063     111B  292C               	goto	l3138
  7064     111C                     u5280:
  7065     111C                     l3136:
  7066     111C  0970               	comf	___xxtofl@val,w
  7067     111D  00FA               	movwf	___xxtofl@arg
  7068     111E  0971               	comf	___xxtofl@val+1,w
  7069     111F  00FB               	movwf	___xxtofl@arg+1
  7070     1120  0972               	comf	___xxtofl@val+2,w
  7071     1121  00FC               	movwf	___xxtofl@arg+2
  7072     1122  0973               	comf	___xxtofl@val+3,w
  7073     1123  00FD               	movwf	___xxtofl@arg+3
  7074     1124  0AFA               	incf	___xxtofl@arg,f
  7075     1125  1903               	skipnz
  7076     1126  0AFB               	incf	___xxtofl@arg+1,f
  7077     1127  1903               	skipnz
  7078     1128  0AFC               	incf	___xxtofl@arg+2,f
  7079     1129  1903               	skipnz
  7080     112A  0AFD               	incf	___xxtofl@arg+3,f
  7081     112B  2934               	goto	l782
  7082     112C                     l3138:
  7083     112C  0873               	movf	___xxtofl@val+3,w
  7084     112D  00FD               	movwf	___xxtofl@arg+3
  7085     112E  0872               	movf	___xxtofl@val+2,w
  7086     112F  00FC               	movwf	___xxtofl@arg+2
  7087     1130  0871               	movf	___xxtofl@val+1,w
  7088     1131  00FB               	movwf	___xxtofl@arg+1
  7089     1132  0870               	movf	___xxtofl@val,w
  7090     1133  00FA               	movwf	___xxtofl@arg
  7091     1134                     l782:
  7092     1134  0873               	movf	___xxtofl@val+3,w
  7093     1135  0472               	iorwf	___xxtofl@val+2,w
  7094     1136  0471               	iorwf	___xxtofl@val+1,w
  7095     1137  0470               	iorwf	___xxtofl@val,w
  7096     1138  1D03               	skipz
  7097     1139  293B               	goto	u5291
  7098     113A  293C               	goto	u5290
  7099     113B                     u5291:
  7100     113B  2945               	goto	l3144
  7101     113C                     u5290:
  7102     113C                     l3140:
  7103     113C  3000               	movlw	0
  7104     113D  00F3               	movwf	?___xxtofl+3
  7105     113E  3000               	movlw	0
  7106     113F  00F2               	movwf	?___xxtofl+2
  7107     1140  3000               	movlw	0
  7108     1141  00F1               	movwf	?___xxtofl+1
  7109     1142  3000               	movlw	0
  7110     1143  00F0               	movwf	?___xxtofl
  7111     1144  29C9               	goto	l784
  7112     1145                     l3144:
  7113     1145  3096               	movlw	150
  7114     1146  00F9               	movwf	___xxtofl@exp
  7115     1147  2955               	goto	l3148
  7116     1148                     l3146:
  7117     1148  3001               	movlw	1
  7118     1149  00F4               	movwf	??___xxtofl
  7119     114A  0874               	movf	??___xxtofl,w
  7120     114B  07F9               	addwf	___xxtofl@exp,f
  7121     114C  3001               	movlw	1
  7122     114D                     u5305:
  7123     114D  1003               	clrc
  7124     114E  0CFD               	rrf	___xxtofl@arg+3,f
  7125     114F  0CFC               	rrf	___xxtofl@arg+2,f
  7126     1150  0CFB               	rrf	___xxtofl@arg+1,f
  7127     1151  0CFA               	rrf	___xxtofl@arg,f
  7128     1152  3EFF               	addlw	-1
  7129     1153  1D03               	skipz
  7130     1154  294D               	goto	u5305
  7131     1155                     l3148:
  7132     1155  30FE               	movlw	254
  7133     1156  057D               	andwf	___xxtofl@arg+3,w
  7134     1157  1D03               	btfss	3,2
  7135     1158  295A               	goto	u5311
  7136     1159  295B               	goto	u5310
  7137     115A                     u5311:
  7138     115A  2948               	goto	l3146
  7139     115B                     u5310:
  7140     115B  2977               	goto	l788
  7141     115C                     l3150:
  7142     115C  3001               	movlw	1
  7143     115D  00F4               	movwf	??___xxtofl
  7144     115E  0874               	movf	??___xxtofl,w
  7145     115F  07F9               	addwf	___xxtofl@exp,f
  7146     1160                     l3152:
  7147     1160  3001               	movlw	1
  7148     1161  07FA               	addwf	___xxtofl@arg,f
  7149     1162  3000               	movlw	0
  7150     1163  1803               	skipnc
  7151     1164  3001               	movlw	1
  7152     1165  07FB               	addwf	___xxtofl@arg+1,f
  7153     1166  3000               	movlw	0
  7154     1167  1803               	skipnc
  7155     1168  3001               	movlw	1
  7156     1169  07FC               	addwf	___xxtofl@arg+2,f
  7157     116A  3000               	movlw	0
  7158     116B  1803               	skipnc
  7159     116C  3001               	movlw	1
  7160     116D  07FD               	addwf	___xxtofl@arg+3,f
  7161     116E                     l3154:
  7162     116E  3001               	movlw	1
  7163     116F                     u5325:
  7164     116F  1003               	clrc
  7165     1170  0CFD               	rrf	___xxtofl@arg+3,f
  7166     1171  0CFC               	rrf	___xxtofl@arg+2,f
  7167     1172  0CFB               	rrf	___xxtofl@arg+1,f
  7168     1173  0CFA               	rrf	___xxtofl@arg,f
  7169     1174  3EFF               	addlw	-1
  7170     1175  1D03               	skipz
  7171     1176  296F               	goto	u5325
  7172     1177                     l788:
  7173     1177  30FF               	movlw	255
  7174     1178  057D               	andwf	___xxtofl@arg+3,w
  7175     1179  1D03               	btfss	3,2
  7176     117A  297C               	goto	u5331
  7177     117B  297D               	goto	u5330
  7178     117C                     u5331:
  7179     117C  295C               	goto	l3150
  7180     117D                     u5330:
  7181     117D  2989               	goto	l3158
  7182     117E                     l3156:
  7183     117E  3001               	movlw	1
  7184     117F  02F9               	subwf	___xxtofl@exp,f
  7185     1180  3001               	movlw	1
  7186     1181  00F4               	movwf	??___xxtofl
  7187     1182                     u5345:
  7188     1182  1003               	clrc
  7189     1183  0DFA               	rlf	___xxtofl@arg,f
  7190     1184  0DFB               	rlf	___xxtofl@arg+1,f
  7191     1185  0DFC               	rlf	___xxtofl@arg+2,f
  7192     1186  0DFD               	rlf	___xxtofl@arg+3,f
  7193     1187  0BF4               	decfsz	??___xxtofl,f
  7194     1188  2982               	goto	u5345
  7195     1189                     l3158:
  7196     1189  1BFC               	btfsc	___xxtofl@arg+2,7
  7197     118A  298C               	goto	u5351
  7198     118B  298D               	goto	u5350
  7199     118C                     u5351:
  7200     118C  2993               	goto	l795
  7201     118D                     u5350:
  7202     118D                     l3160:
  7203     118D  3002               	movlw	2
  7204     118E  0279               	subwf	___xxtofl@exp,w
  7205     118F  1803               	skipnc
  7206     1190  2992               	goto	u5361
  7207     1191  2993               	goto	u5360
  7208     1192                     u5361:
  7209     1192  297E               	goto	l3156
  7210     1193                     u5360:
  7211     1193                     l795:
  7212     1193  1879               	btfsc	___xxtofl@exp,0
  7213     1194  2996               	goto	u5371
  7214     1195  2997               	goto	u5370
  7215     1196                     u5371:
  7216     1196  299F               	goto	l796
  7217     1197                     u5370:
  7218     1197                     l3162:
  7219     1197  30FF               	movlw	255
  7220     1198  05FA               	andwf	___xxtofl@arg,f
  7221     1199  30FF               	movlw	255
  7222     119A  05FB               	andwf	___xxtofl@arg+1,f
  7223     119B  307F               	movlw	127
  7224     119C  05FC               	andwf	___xxtofl@arg+2,f
  7225     119D  30FF               	movlw	255
  7226     119E  05FD               	andwf	___xxtofl@arg+3,f
  7227     119F                     l796:
  7228     119F  1003               	clrc
  7229     11A0  0CF9               	rrf	___xxtofl@exp,f
  7230     11A1                     l3164:
  7231     11A1  0879               	movf	___xxtofl@exp,w
  7232     11A2  00F4               	movwf	??___xxtofl
  7233     11A3  01F5               	clrf	??___xxtofl+1
  7234     11A4  01F6               	clrf	??___xxtofl+2
  7235     11A5  01F7               	clrf	??___xxtofl+3
  7236     11A6  3018               	movlw	24
  7237     11A7                     u5385:
  7238     11A7  1003               	clrc
  7239     11A8  0DF4               	rlf	??___xxtofl,f
  7240     11A9  0DF5               	rlf	??___xxtofl+1,f
  7241     11AA  0DF6               	rlf	??___xxtofl+2,f
  7242     11AB  0DF7               	rlf	??___xxtofl+3,f
  7243     11AC                     u5380:
  7244     11AC  3EFF               	addlw	-1
  7245     11AD  1D03               	skipz
  7246     11AE  29A7               	goto	u5385
  7247     11AF  0874               	movf	??___xxtofl,w
  7248     11B0  04FA               	iorwf	___xxtofl@arg,f
  7249     11B1  0875               	movf	??___xxtofl+1,w
  7250     11B2  04FB               	iorwf	___xxtofl@arg+1,f
  7251     11B3  0876               	movf	??___xxtofl+2,w
  7252     11B4  04FC               	iorwf	___xxtofl@arg+2,f
  7253     11B5  0877               	movf	??___xxtofl+3,w
  7254     11B6  04FD               	iorwf	___xxtofl@arg+3,f
  7255     11B7                     l3166:
  7256     11B7  0878               	movf	___xxtofl@sign,w
  7257     11B8  1903               	btfsc	3,2
  7258     11B9  29BB               	goto	u5391
  7259     11BA  29BC               	goto	u5390
  7260     11BB                     u5391:
  7261     11BB  29C1               	goto	l3172
  7262     11BC                     u5390:
  7263     11BC                     l3168:
  7264     11BC  1FF3               	btfss	___xxtofl@val+3,7
  7265     11BD  29BF               	goto	u5401
  7266     11BE  29C0               	goto	u5400
  7267     11BF                     u5401:
  7268     11BF  29C1               	goto	l3172
  7269     11C0                     u5400:
  7270     11C0                     l3170:
  7271     11C0  17FD               	bsf	___xxtofl@arg+3,7
  7272     11C1                     l3172:
  7273     11C1  087D               	movf	___xxtofl@arg+3,w
  7274     11C2  00F3               	movwf	?___xxtofl+3
  7275     11C3  087C               	movf	___xxtofl@arg+2,w
  7276     11C4  00F2               	movwf	?___xxtofl+2
  7277     11C5  087B               	movf	___xxtofl@arg+1,w
  7278     11C6  00F1               	movwf	?___xxtofl+1
  7279     11C7  087A               	movf	___xxtofl@arg,w
  7280     11C8  00F0               	movwf	?___xxtofl
  7281     11C9                     l784:
  7282     11C9  0008               	return
  7283     11CA                     __end_of___xxtofl:
  7284                           
  7285                           	psect	text14
  7286     1BB6                     __ptext14:	
  7287 ;; *************** function ___wmul *****************
  7288 ;; Defined at:
  7289 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  multiplier      2    0[COMMON] unsigned int 
  7292 ;;  multiplicand    2    2[COMMON] unsigned int 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  product         2    4[COMMON] unsigned int 
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  2    0[COMMON] unsigned int 
  7297 ;; Registers used:
  7298 ;;		wreg, status,2, status,0
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7304 ;;      Params:         4       0       0       0       0
  7305 ;;      Locals:         2       0       0       0       0
  7306 ;;      Temps:          0       0       0       0       0
  7307 ;;      Totals:         6       0       0       0       0
  7308 ;;Total ram usage:        6 bytes
  7309 ;; Hardware stack levels used: 1
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_sprintf
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317     1BB6                     ___wmul:	
  7318                           ;psect for function ___wmul
  7319                           
  7320     1BB6                     l2992:	
  7321                           ;incstack = 0
  7322                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7323                           
  7324     1BB6  01F4               	clrf	___wmul@product
  7325     1BB7  01F5               	clrf	___wmul@product+1
  7326     1BB8                     l2994:
  7327     1BB8  1C70               	btfss	___wmul@multiplier,0
  7328     1BB9  2BBB               	goto	u4891
  7329     1BBA  2BBC               	goto	u4890
  7330     1BBB                     u4891:
  7331     1BBB  2BC2               	goto	l315
  7332     1BBC                     u4890:
  7333     1BBC                     l2996:
  7334     1BBC  0872               	movf	___wmul@multiplicand,w
  7335     1BBD  07F4               	addwf	___wmul@product,f
  7336     1BBE  1803               	skipnc
  7337     1BBF  0AF5               	incf	___wmul@product+1,f
  7338     1BC0  0873               	movf	___wmul@multiplicand+1,w
  7339     1BC1  07F5               	addwf	___wmul@product+1,f
  7340     1BC2                     l315:
  7341     1BC2  3001               	movlw	1
  7342     1BC3                     u4905:
  7343     1BC3  1003               	clrc
  7344     1BC4  0DF2               	rlf	___wmul@multiplicand,f
  7345     1BC5  0DF3               	rlf	___wmul@multiplicand+1,f
  7346     1BC6  3EFF               	addlw	-1
  7347     1BC7  1D03               	skipz
  7348     1BC8  2BC3               	goto	u4905
  7349     1BC9                     l2998:
  7350     1BC9  3001               	movlw	1
  7351     1BCA                     u4915:
  7352     1BCA  1003               	clrc
  7353     1BCB  0CF1               	rrf	___wmul@multiplier+1,f
  7354     1BCC  0CF0               	rrf	___wmul@multiplier,f
  7355     1BCD  3EFF               	addlw	-1
  7356     1BCE  1D03               	skipz
  7357     1BCF  2BCA               	goto	u4915
  7358     1BD0                     l3000:
  7359     1BD0  0870               	movf	___wmul@multiplier,w
  7360     1BD1  0471               	iorwf	___wmul@multiplier+1,w
  7361     1BD2  1D03               	btfss	3,2
  7362     1BD3  2BD5               	goto	u4921
  7363     1BD4  2BD6               	goto	u4920
  7364     1BD5                     u4921:
  7365     1BD5  2BB8               	goto	l2994
  7366     1BD6                     u4920:
  7367     1BD6                     l3002:
  7368     1BD6  0875               	movf	___wmul@product+1,w
  7369     1BD7  00F1               	movwf	?___wmul+1
  7370     1BD8  0874               	movf	___wmul@product,w
  7371     1BD9  00F0               	movwf	?___wmul
  7372     1BDA                     l317:
  7373     1BDA  0008               	return
  7374     1BDB                     __end_of___wmul:
  7375                           
  7376                           	psect	text15
  7377     0005                     __ptext15:	
  7378 ;; *************** function ___llmod *****************
  7379 ;; Defined at:
  7380 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  divisor         4    0[COMMON] unsigned long 
  7383 ;;  dividend        4    4[COMMON] unsigned long 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  counter         1    9[COMMON] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  4    0[COMMON] unsigned long 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7395 ;;      Params:         8       0       0       0       0
  7396 ;;      Locals:         1       0       0       0       0
  7397 ;;      Temps:          1       0       0       0       0
  7398 ;;      Totals:        10       0       0       0       0
  7399 ;;Total ram usage:       10 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; This function calls:
  7402 ;;		Nothing
  7403 ;; This function is called by:
  7404 ;;		_sprintf
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408     0005                     ___llmod:	
  7409                           ;psect for function ___llmod
  7410                           
  7411     0005                     l3106:	
  7412                           ;incstack = 0
  7413                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7414                           
  7415     0005  0873               	movf	___llmod@divisor+3,w
  7416     0006  0472               	iorwf	___llmod@divisor+2,w
  7417     0007  0471               	iorwf	___llmod@divisor+1,w
  7418     0008  0470               	iorwf	___llmod@divisor,w
  7419     0009  1903               	skipnz
  7420     000A  280C               	goto	u5211
  7421     000B  280D               	goto	u5210
  7422     000C                     u5211:
  7423     000C  2850               	goto	l3122
  7424     000D                     u5210:
  7425     000D                     l3108:
  7426     000D  01F9               	clrf	___llmod@counter
  7427     000E  0AF9               	incf	___llmod@counter,f
  7428     000F  281D               	goto	l3112
  7429     0010                     l3110:
  7430     0010  3001               	movlw	1
  7431     0011  00F8               	movwf	??___llmod
  7432     0012                     u5225:
  7433     0012  1003               	clrc
  7434     0013  0DF0               	rlf	___llmod@divisor,f
  7435     0014  0DF1               	rlf	___llmod@divisor+1,f
  7436     0015  0DF2               	rlf	___llmod@divisor+2,f
  7437     0016  0DF3               	rlf	___llmod@divisor+3,f
  7438     0017  0BF8               	decfsz	??___llmod,f
  7439     0018  2812               	goto	u5225
  7440     0019  3001               	movlw	1
  7441     001A  00F8               	movwf	??___llmod
  7442     001B  0878               	movf	??___llmod,w
  7443     001C  07F9               	addwf	___llmod@counter,f
  7444     001D                     l3112:
  7445     001D  1FF3               	btfss	___llmod@divisor+3,7
  7446     001E  2820               	goto	u5231
  7447     001F  2821               	goto	u5230
  7448     0020                     u5231:
  7449     0020  2810               	goto	l3110
  7450     0021                     u5230:
  7451     0021                     l3114:
  7452     0021  0873               	movf	___llmod@divisor+3,w
  7453     0022  0277               	subwf	___llmod@dividend+3,w
  7454     0023  1D03               	skipz
  7455     0024  282F               	goto	u5245
  7456     0025  0872               	movf	___llmod@divisor+2,w
  7457     0026  0276               	subwf	___llmod@dividend+2,w
  7458     0027  1D03               	skipz
  7459     0028  282F               	goto	u5245
  7460     0029  0871               	movf	___llmod@divisor+1,w
  7461     002A  0275               	subwf	___llmod@dividend+1,w
  7462     002B  1D03               	skipz
  7463     002C  282F               	goto	u5245
  7464     002D  0870               	movf	___llmod@divisor,w
  7465     002E  0274               	subwf	___llmod@dividend,w
  7466     002F                     u5245:
  7467     002F  1C03               	skipc
  7468     0030  2832               	goto	u5241
  7469     0031  2833               	goto	u5240
  7470     0032                     u5241:
  7471     0032  2841               	goto	l3118
  7472     0033                     u5240:
  7473     0033                     l3116:
  7474     0033  0870               	movf	___llmod@divisor,w
  7475     0034  02F4               	subwf	___llmod@dividend,f
  7476     0035  0871               	movf	___llmod@divisor+1,w
  7477     0036  1C03               	skipc
  7478     0037  0F71               	incfsz	___llmod@divisor+1,w
  7479     0038  02F5               	subwf	___llmod@dividend+1,f
  7480     0039  0872               	movf	___llmod@divisor+2,w
  7481     003A  1C03               	skipc
  7482     003B  0F72               	incfsz	___llmod@divisor+2,w
  7483     003C  02F6               	subwf	___llmod@dividend+2,f
  7484     003D  0873               	movf	___llmod@divisor+3,w
  7485     003E  1C03               	skipc
  7486     003F  0F73               	incfsz	___llmod@divisor+3,w
  7487     0040  02F7               	subwf	___llmod@dividend+3,f
  7488     0041                     l3118:
  7489     0041  3001               	movlw	1
  7490     0042                     u5255:
  7491     0042  1003               	clrc
  7492     0043  0CF3               	rrf	___llmod@divisor+3,f
  7493     0044  0CF2               	rrf	___llmod@divisor+2,f
  7494     0045  0CF1               	rrf	___llmod@divisor+1,f
  7495     0046  0CF0               	rrf	___llmod@divisor,f
  7496     0047  3EFF               	addlw	-1
  7497     0048  1D03               	skipz
  7498     0049  2842               	goto	u5255
  7499     004A                     l3120:
  7500     004A  3001               	movlw	1
  7501     004B  02F9               	subwf	___llmod@counter,f
  7502     004C  1D03               	btfss	3,2
  7503     004D  284F               	goto	u5261
  7504     004E  2850               	goto	u5260
  7505     004F                     u5261:
  7506     004F  2821               	goto	l3114
  7507     0050                     u5260:
  7508     0050                     l3122:
  7509     0050  0877               	movf	___llmod@dividend+3,w
  7510     0051  00F3               	movwf	?___llmod+3
  7511     0052  0876               	movf	___llmod@dividend+2,w
  7512     0053  00F2               	movwf	?___llmod+2
  7513     0054  0875               	movf	___llmod@dividend+1,w
  7514     0055  00F1               	movwf	?___llmod+1
  7515     0056  0874               	movf	___llmod@dividend,w
  7516     0057  00F0               	movwf	?___llmod
  7517     0058                     l571:
  7518     0058  0008               	return
  7519     0059                     __end_of___llmod:
  7520                           
  7521                           	psect	text16
  7522     1EB9                     __ptext16:	
  7523 ;; *************** function ___lldiv *****************
  7524 ;; Defined at:
  7525 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  divisor         4    0[COMMON] unsigned long 
  7528 ;;  dividend        4    4[COMMON] unsigned long 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  quotient        4    9[COMMON] unsigned long 
  7531 ;;  counter         1   13[COMMON] unsigned char 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  4    0[COMMON] unsigned long 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7541 ;;      Params:         8       0       0       0       0
  7542 ;;      Locals:         5       0       0       0       0
  7543 ;;      Temps:          1       0       0       0       0
  7544 ;;      Totals:        14       0       0       0       0
  7545 ;;Total ram usage:       14 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_sprintf
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554     1EB9                     ___lldiv:	
  7555                           ;psect for function ___lldiv
  7556                           
  7557     1EB9                     l3006:	
  7558                           ;incstack = 0
  7559                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7560                           
  7561     1EB9  3000               	movlw	0
  7562     1EBA  00FC               	movwf	___lldiv@quotient+3
  7563     1EBB  3000               	movlw	0
  7564     1EBC  00FB               	movwf	___lldiv@quotient+2
  7565     1EBD  3000               	movlw	0
  7566     1EBE  00FA               	movwf	___lldiv@quotient+1
  7567     1EBF  3000               	movlw	0
  7568     1EC0  00F9               	movwf	___lldiv@quotient
  7569     1EC1  0873               	movf	___lldiv@divisor+3,w
  7570     1EC2  0472               	iorwf	___lldiv@divisor+2,w
  7571     1EC3  0471               	iorwf	___lldiv@divisor+1,w
  7572     1EC4  0470               	iorwf	___lldiv@divisor,w
  7573     1EC5  1903               	skipnz
  7574     1EC6  2EC8               	goto	u4931
  7575     1EC7  2EC9               	goto	u4930
  7576     1EC8                     u4931:
  7577     1EC8  2F16               	goto	l3026
  7578     1EC9                     u4930:
  7579     1EC9                     l3008:
  7580     1EC9  01FD               	clrf	___lldiv@counter
  7581     1ECA  0AFD               	incf	___lldiv@counter,f
  7582     1ECB  2ED9               	goto	l3012
  7583     1ECC                     l3010:
  7584     1ECC  3001               	movlw	1
  7585     1ECD  00F8               	movwf	??___lldiv
  7586     1ECE                     u4945:
  7587     1ECE  1003               	clrc
  7588     1ECF  0DF0               	rlf	___lldiv@divisor,f
  7589     1ED0  0DF1               	rlf	___lldiv@divisor+1,f
  7590     1ED1  0DF2               	rlf	___lldiv@divisor+2,f
  7591     1ED2  0DF3               	rlf	___lldiv@divisor+3,f
  7592     1ED3  0BF8               	decfsz	??___lldiv,f
  7593     1ED4  2ECE               	goto	u4945
  7594     1ED5  3001               	movlw	1
  7595     1ED6  00F8               	movwf	??___lldiv
  7596     1ED7  0878               	movf	??___lldiv,w
  7597     1ED8  07FD               	addwf	___lldiv@counter,f
  7598     1ED9                     l3012:
  7599     1ED9  1FF3               	btfss	___lldiv@divisor+3,7
  7600     1EDA  2EDC               	goto	u4951
  7601     1EDB  2EDD               	goto	u4950
  7602     1EDC                     u4951:
  7603     1EDC  2ECC               	goto	l3010
  7604     1EDD                     u4950:
  7605     1EDD                     l3014:
  7606     1EDD  3001               	movlw	1
  7607     1EDE  00F8               	movwf	??___lldiv
  7608     1EDF                     u4965:
  7609     1EDF  1003               	clrc
  7610     1EE0  0DF9               	rlf	___lldiv@quotient,f
  7611     1EE1  0DFA               	rlf	___lldiv@quotient+1,f
  7612     1EE2  0DFB               	rlf	___lldiv@quotient+2,f
  7613     1EE3  0DFC               	rlf	___lldiv@quotient+3,f
  7614     1EE4  0BF8               	decfsz	??___lldiv,f
  7615     1EE5  2EDF               	goto	u4965
  7616     1EE6                     l3016:
  7617     1EE6  0873               	movf	___lldiv@divisor+3,w
  7618     1EE7  0277               	subwf	___lldiv@dividend+3,w
  7619     1EE8  1D03               	skipz
  7620     1EE9  2EF4               	goto	u4975
  7621     1EEA  0872               	movf	___lldiv@divisor+2,w
  7622     1EEB  0276               	subwf	___lldiv@dividend+2,w
  7623     1EEC  1D03               	skipz
  7624     1EED  2EF4               	goto	u4975
  7625     1EEE  0871               	movf	___lldiv@divisor+1,w
  7626     1EEF  0275               	subwf	___lldiv@dividend+1,w
  7627     1EF0  1D03               	skipz
  7628     1EF1  2EF4               	goto	u4975
  7629     1EF2  0870               	movf	___lldiv@divisor,w
  7630     1EF3  0274               	subwf	___lldiv@dividend,w
  7631     1EF4                     u4975:
  7632     1EF4  1C03               	skipc
  7633     1EF5  2EF7               	goto	u4971
  7634     1EF6  2EF8               	goto	u4970
  7635     1EF7                     u4971:
  7636     1EF7  2F07               	goto	l3022
  7637     1EF8                     u4970:
  7638     1EF8                     l3018:
  7639     1EF8  0870               	movf	___lldiv@divisor,w
  7640     1EF9  02F4               	subwf	___lldiv@dividend,f
  7641     1EFA  0871               	movf	___lldiv@divisor+1,w
  7642     1EFB  1C03               	skipc
  7643     1EFC  0F71               	incfsz	___lldiv@divisor+1,w
  7644     1EFD  02F5               	subwf	___lldiv@dividend+1,f
  7645     1EFE  0872               	movf	___lldiv@divisor+2,w
  7646     1EFF  1C03               	skipc
  7647     1F00  0F72               	incfsz	___lldiv@divisor+2,w
  7648     1F01  02F6               	subwf	___lldiv@dividend+2,f
  7649     1F02  0873               	movf	___lldiv@divisor+3,w
  7650     1F03  1C03               	skipc
  7651     1F04  0F73               	incfsz	___lldiv@divisor+3,w
  7652     1F05  02F7               	subwf	___lldiv@dividend+3,f
  7653     1F06                     l3020:
  7654     1F06  1479               	bsf	___lldiv@quotient,0
  7655     1F07                     l3022:
  7656     1F07  3001               	movlw	1
  7657     1F08                     u4985:
  7658     1F08  1003               	clrc
  7659     1F09  0CF3               	rrf	___lldiv@divisor+3,f
  7660     1F0A  0CF2               	rrf	___lldiv@divisor+2,f
  7661     1F0B  0CF1               	rrf	___lldiv@divisor+1,f
  7662     1F0C  0CF0               	rrf	___lldiv@divisor,f
  7663     1F0D  3EFF               	addlw	-1
  7664     1F0E  1D03               	skipz
  7665     1F0F  2F08               	goto	u4985
  7666     1F10                     l3024:
  7667     1F10  3001               	movlw	1
  7668     1F11  02FD               	subwf	___lldiv@counter,f
  7669     1F12  1D03               	btfss	3,2
  7670     1F13  2F15               	goto	u4991
  7671     1F14  2F16               	goto	u4990
  7672     1F15                     u4991:
  7673     1F15  2EDD               	goto	l3014
  7674     1F16                     u4990:
  7675     1F16                     l3026:
  7676     1F16  087C               	movf	___lldiv@quotient+3,w
  7677     1F17  00F3               	movwf	?___lldiv+3
  7678     1F18  087B               	movf	___lldiv@quotient+2,w
  7679     1F19  00F2               	movwf	?___lldiv+2
  7680     1F1A  087A               	movf	___lldiv@quotient+1,w
  7681     1F1B  00F1               	movwf	?___lldiv+1
  7682     1F1C  0879               	movf	___lldiv@quotient,w
  7683     1F1D  00F0               	movwf	?___lldiv
  7684     1F1E                     l351:
  7685     1F1E  0008               	return
  7686     1F1F                     __end_of___lldiv:
  7687                           
  7688                           	psect	text17
  7689     1F88                     __ptext17:	
  7690 ;; *************** function ___fltol *****************
  7691 ;; Defined at:
  7692 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  f1              4   49[BANK0 ] unsigned long 
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;  exp1            1   58[BANK0 ] unsigned char 
  7697 ;;  sign1           1   57[BANK0 ] unsigned char 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  4   49[BANK0 ] long 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7707 ;;      Params:         0       4       0       0       0
  7708 ;;      Locals:         0       2       0       0       0
  7709 ;;      Temps:          0       4       0       0       0
  7710 ;;      Totals:         0      10       0       0       0
  7711 ;;Total ram usage:       10 bytes
  7712 ;; Hardware stack levels used: 1
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_sprintf
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720     1F88                     ___fltol:	
  7721                           ;psect for function ___fltol
  7722                           
  7723     1F88                     l3070:	
  7724                           ;incstack = 0
  7725                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7726                           
  7727     1F88  1003               	clrc
  7728     1F89  1283               	bcf	3,5	;RP0=0, select bank0
  7729     1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  7730     1F8B  0D53               	rlf	___fltol@f1+2,w
  7731     1F8C  0D54               	rlf	___fltol@f1+3,w
  7732     1F8D  00DA               	movwf	___fltol@exp1
  7733     1F8E  085A               	movf	___fltol@exp1,w
  7734     1F8F  1D03               	btfss	3,2
  7735     1F90  2F92               	goto	u5111
  7736     1F91  2F93               	goto	u5110
  7737     1F92                     u5111:
  7738     1F92  2F9C               	goto	l3076
  7739     1F93                     u5110:
  7740     1F93                     l3072:
  7741     1F93  3000               	movlw	0
  7742     1F94  00D4               	movwf	?___fltol+3
  7743     1F95  3000               	movlw	0
  7744     1F96  00D3               	movwf	?___fltol+2
  7745     1F97  3000               	movlw	0
  7746     1F98  00D2               	movwf	?___fltol+1
  7747     1F99  3000               	movlw	0
  7748     1F9A  00D1               	movwf	?___fltol
  7749     1F9B  2FFF               	goto	l518
  7750     1F9C                     l3076:
  7751     1F9C  0851               	movf	___fltol@f1,w
  7752     1F9D  00D5               	movwf	??___fltol
  7753     1F9E  0852               	movf	___fltol@f1+1,w
  7754     1F9F  00D6               	movwf	??___fltol+1
  7755     1FA0  0853               	movf	___fltol@f1+2,w
  7756     1FA1  00D7               	movwf	??___fltol+2
  7757     1FA2  0854               	movf	___fltol@f1+3,w
  7758     1FA3  00D8               	movwf	??___fltol+3
  7759     1FA4  301F               	movlw	31
  7760     1FA5                     u5125:
  7761     1FA5  1003               	clrc
  7762     1FA6  0CD8               	rrf	??___fltol+3,f
  7763     1FA7  0CD7               	rrf	??___fltol+2,f
  7764     1FA8  0CD6               	rrf	??___fltol+1,f
  7765     1FA9  0CD5               	rrf	??___fltol,f
  7766     1FAA                     u5120:
  7767     1FAA  3EFF               	addlw	-1
  7768     1FAB  1D03               	skipz
  7769     1FAC  2FA5               	goto	u5125
  7770     1FAD  0855               	movf	??___fltol,w
  7771     1FAE  00D9               	movwf	___fltol@sign1
  7772     1FAF                     l3078:
  7773     1FAF  17D3               	bsf	___fltol@f1+2,7
  7774     1FB0                     l3080:
  7775     1FB0  30FF               	movlw	255
  7776     1FB1  05D1               	andwf	___fltol@f1,f
  7777     1FB2  30FF               	movlw	255
  7778     1FB3  05D2               	andwf	___fltol@f1+1,f
  7779     1FB4  30FF               	movlw	255
  7780     1FB5  05D3               	andwf	___fltol@f1+2,f
  7781     1FB6  3000               	movlw	0
  7782     1FB7  05D4               	andwf	___fltol@f1+3,f
  7783     1FB8                     l3082:
  7784     1FB8  3096               	movlw	150
  7785     1FB9  02DA               	subwf	___fltol@exp1,f
  7786     1FBA                     l3084:
  7787     1FBA  1FDA               	btfss	___fltol@exp1,7
  7788     1FBB  2FBD               	goto	u5131
  7789     1FBC  2FBE               	goto	u5130
  7790     1FBD                     u5131:
  7791     1FBD  2FD8               	goto	l3094
  7792     1FBE                     u5130:
  7793     1FBE                     l3086:
  7794     1FBE  085A               	movf	___fltol@exp1,w
  7795     1FBF  3A80               	xorlw	128
  7796     1FC0  3E97               	addlw	151
  7797     1FC1  1803               	skipnc
  7798     1FC2  2FC4               	goto	u5141
  7799     1FC3  2FC5               	goto	u5140
  7800     1FC4                     u5141:
  7801     1FC4  2FC6               	goto	l3092
  7802     1FC5                     u5140:
  7803     1FC5  2F93               	goto	l3072
  7804     1FC6                     l3092:
  7805     1FC6  3001               	movlw	1
  7806     1FC7                     u5155:
  7807     1FC7  1003               	clrc
  7808     1FC8  0CD4               	rrf	___fltol@f1+3,f
  7809     1FC9  0CD3               	rrf	___fltol@f1+2,f
  7810     1FCA  0CD2               	rrf	___fltol@f1+1,f
  7811     1FCB  0CD1               	rrf	___fltol@f1,f
  7812     1FCC  3EFF               	addlw	-1
  7813     1FCD  1D03               	skipz
  7814     1FCE  2FC7               	goto	u5155
  7815     1FCF  3001               	movlw	1
  7816     1FD0  00D5               	movwf	??___fltol
  7817     1FD1  0855               	movf	??___fltol,w
  7818     1FD2  07DA               	addwf	___fltol@exp1,f
  7819     1FD3  1D03               	btfss	3,2
  7820     1FD4  2FD6               	goto	u5161
  7821     1FD5  2FD7               	goto	u5160
  7822     1FD6                     u5161:
  7823     1FD6  2FC6               	goto	l3092
  7824     1FD7                     u5160:
  7825     1FD7  2FEF               	goto	l3102
  7826     1FD8                     l3094:
  7827     1FD8  3020               	movlw	32
  7828     1FD9  025A               	subwf	___fltol@exp1,w
  7829     1FDA  1C03               	skipc
  7830     1FDB  2FDD               	goto	u5171
  7831     1FDC  2FDE               	goto	u5170
  7832     1FDD                     u5171:
  7833     1FDD  2FEA               	goto	l525
  7834     1FDE                     u5170:
  7835     1FDE  2F93               	goto	l3072
  7836     1FDF                     l3100:
  7837     1FDF  3001               	movlw	1
  7838     1FE0  00D5               	movwf	??___fltol
  7839     1FE1                     u5185:
  7840     1FE1  1003               	clrc
  7841     1FE2  0DD1               	rlf	___fltol@f1,f
  7842     1FE3  0DD2               	rlf	___fltol@f1+1,f
  7843     1FE4  0DD3               	rlf	___fltol@f1+2,f
  7844     1FE5  0DD4               	rlf	___fltol@f1+3,f
  7845     1FE6  0BD5               	decfsz	??___fltol,f
  7846     1FE7  2FE1               	goto	u5185
  7847     1FE8  3001               	movlw	1
  7848     1FE9  02DA               	subwf	___fltol@exp1,f
  7849     1FEA                     l525:
  7850     1FEA  085A               	movf	___fltol@exp1,w
  7851     1FEB  1D03               	btfss	3,2
  7852     1FEC  2FEE               	goto	u5191
  7853     1FED  2FEF               	goto	u5190
  7854     1FEE                     u5191:
  7855     1FEE  2FDF               	goto	l3100
  7856     1FEF                     u5190:
  7857     1FEF                     l3102:
  7858     1FEF  0859               	movf	___fltol@sign1,w
  7859     1FF0  1903               	btfsc	3,2
  7860     1FF1  2FF3               	goto	u5201
  7861     1FF2  2FF4               	goto	u5200
  7862     1FF3                     u5201:
  7863     1FF3  2FFF               	goto	l528
  7864     1FF4                     u5200:
  7865     1FF4                     l3104:
  7866     1FF4  09D1               	comf	___fltol@f1,f
  7867     1FF5  09D2               	comf	___fltol@f1+1,f
  7868     1FF6  09D3               	comf	___fltol@f1+2,f
  7869     1FF7  09D4               	comf	___fltol@f1+3,f
  7870     1FF8  0AD1               	incf	___fltol@f1,f
  7871     1FF9  1903               	skipnz
  7872     1FFA  0AD2               	incf	___fltol@f1+1,f
  7873     1FFB  1903               	skipnz
  7874     1FFC  0AD3               	incf	___fltol@f1+2,f
  7875     1FFD  1903               	skipnz
  7876     1FFE  0AD4               	incf	___fltol@f1+3,f
  7877     1FFF                     l528:
  7878     1FFF                     l518:
  7879     1FFF  0008               	return
  7880     2000                     __end_of___fltol:
  7881                           
  7882                           	psect	text18
  7883     1B92                     __ptext18:	
  7884 ;; *************** function ___flsub *****************
  7885 ;; Defined at:
  7886 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  a               4   70[BANK0 ] long 
  7889 ;;  b               4   74[BANK0 ] long 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  4   70[BANK0 ] long 
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7901 ;;      Params:         0       8       0       0       0
  7902 ;;      Locals:         0       0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0
  7904 ;;      Totals:         0       8       0       0       0
  7905 ;;Total ram usage:        8 bytes
  7906 ;; Hardware stack levels used: 1
  7907 ;; Hardware stack levels required when called: 1
  7908 ;; This function calls:
  7909 ;;		___fladd
  7910 ;; This function is called by:
  7911 ;;		_sprintf
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915     1B92                     ___flsub:	
  7916                           ;psect for function ___flsub
  7917                           
  7918     1B92                     l3126:	
  7919                           ;incstack = 0
  7920                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7921                           
  7922     1B92  3080               	movlw	128
  7923     1B93  1283               	bcf	3,5	;RP0=0, select bank0
  7924     1B94  1303               	bcf	3,6	;RP1=0, select bank0
  7925     1B95  06E9               	xorwf	___flsub@a+3,f
  7926     1B96                     l3128:
  7927     1B96  086D               	movf	___flsub@b+3,w
  7928     1B97  00D5               	movwf	___fladd@b+3
  7929     1B98  086C               	movf	___flsub@b+2,w
  7930     1B99  00D4               	movwf	___fladd@b+2
  7931     1B9A  086B               	movf	___flsub@b+1,w
  7932     1B9B  00D3               	movwf	___fladd@b+1
  7933     1B9C  086A               	movf	___flsub@b,w
  7934     1B9D  00D2               	movwf	___fladd@b
  7935     1B9E  0869               	movf	___flsub@a+3,w
  7936     1B9F  00D9               	movwf	___fladd@a+3
  7937     1BA0  0868               	movf	___flsub@a+2,w
  7938     1BA1  00D8               	movwf	___fladd@a+2
  7939     1BA2  0867               	movf	___flsub@a+1,w
  7940     1BA3  00D7               	movwf	___fladd@a+1
  7941     1BA4  0866               	movf	___flsub@a,w
  7942     1BA5  00D6               	movwf	___fladd@a
  7943     1BA6  160A  118A  25A8  160A  158A  	fcall	___fladd
  7944     1BAB  1283               	bcf	3,5	;RP0=0, select bank0
  7945     1BAC  1303               	bcf	3,6	;RP1=0, select bank0
  7946     1BAD  0855               	movf	?___fladd+3,w
  7947     1BAE  00E9               	movwf	?___flsub+3
  7948     1BAF  0854               	movf	?___fladd+2,w
  7949     1BB0  00E8               	movwf	?___flsub+2
  7950     1BB1  0853               	movf	?___fladd+1,w
  7951     1BB2  00E7               	movwf	?___flsub+1
  7952     1BB3  0852               	movf	?___fladd,w
  7953     1BB4  00E6               	movwf	?___flsub
  7954     1BB5                     l688:
  7955     1BB5  0008               	return
  7956     1BB6                     __end_of___flsub:
  7957                           
  7958                           	psect	text19
  7959     15A8                     __ptext19:	
  7960 ;; *************** function ___fladd *****************
  7961 ;; Defined at:
  7962 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  b               4   50[BANK0 ] long 
  7965 ;;  a               4   54[BANK0 ] long 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  grs             1   69[BANK0 ] unsigned char 
  7968 ;;  bexp            1   68[BANK0 ] unsigned char 
  7969 ;;  aexp            1   67[BANK0 ] unsigned char 
  7970 ;;  signs           1   66[BANK0 ] unsigned char 
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  4   50[BANK0 ] unsigned char 
  7973 ;; Registers used:
  7974 ;;		wreg, status,2, status,0, btemp+1
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7980 ;;      Params:         0       8       0       0       0
  7981 ;;      Locals:         0       4       0       0       0
  7982 ;;      Temps:          0       8       0       0       0
  7983 ;;      Totals:         0      20       0       0       0
  7984 ;;Total ram usage:       20 bytes
  7985 ;; Hardware stack levels used: 1
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_sprintf
  7990 ;;		___flsub
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994     15A8                     ___fladd:	
  7995                           ;psect for function ___fladd
  7996                           
  7997     15A8                     l2454:	
  7998                           ;incstack = 0
  7999                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8000                           
  8001     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  8002     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  8003     15AA  0855               	movf	___fladd@b+3,w
  8004     15AB  3980               	andlw	128
  8005     15AC  00E2               	movwf	___fladd@signs
  8006     15AD                     l2456:
  8007     15AD  0855               	movf	___fladd@b+3,w
  8008     15AE  00DA               	movwf	??___fladd
  8009     15AF  075A               	addwf	??___fladd,w
  8010     15B0  00E4               	movwf	___fladd@bexp
  8011     15B1                     l2458:
  8012     15B1  1FD4               	btfss	___fladd@b+2,7
  8013     15B2  2DB4               	goto	u3521
  8014     15B3  2DB5               	goto	u3520
  8015     15B4                     u3521:
  8016     15B4  2DB6               	goto	l2462
  8017     15B5                     u3520:
  8018     15B5                     l2460:
  8019     15B5  1464               	bsf	___fladd@bexp,0
  8020     15B6                     l2462:
  8021     15B6  0864               	movf	___fladd@bexp,w
  8022     15B7  1903               	btfsc	3,2
  8023     15B8  2DBA               	goto	u3531
  8024     15B9  2DBB               	goto	u3530
  8025     15BA                     u3531:
  8026     15BA  2DCB               	goto	l2472
  8027     15BB                     u3530:
  8028     15BB                     l2464:
  8029     15BB  0A64               	incf	___fladd@bexp,w
  8030     15BC  1D03               	btfss	3,2
  8031     15BD  2DBF               	goto	u3541
  8032     15BE  2DC0               	goto	u3540
  8033     15BF                     u3541:
  8034     15BF  2DC8               	goto	l2468
  8035     15C0                     u3540:
  8036     15C0                     l2466:
  8037     15C0  3000               	movlw	0
  8038     15C1  00D5               	movwf	___fladd@b+3
  8039     15C2  3000               	movlw	0
  8040     15C3  00D4               	movwf	___fladd@b+2
  8041     15C4  3000               	movlw	0
  8042     15C5  00D3               	movwf	___fladd@b+1
  8043     15C6  3000               	movlw	0
  8044     15C7  00D2               	movwf	___fladd@b
  8045     15C8                     l2468:
  8046     15C8  17D4               	bsf	___fladd@b+2,7
  8047     15C9                     l2470:
  8048     15C9  01D5               	clrf	___fladd@b+3
  8049     15CA  2DD3               	goto	l2474
  8050     15CB                     l2472:
  8051     15CB  3000               	movlw	0
  8052     15CC  00D5               	movwf	___fladd@b+3
  8053     15CD  3000               	movlw	0
  8054     15CE  00D4               	movwf	___fladd@b+2
  8055     15CF  3000               	movlw	0
  8056     15D0  00D3               	movwf	___fladd@b+1
  8057     15D1  3000               	movlw	0
  8058     15D2  00D2               	movwf	___fladd@b
  8059     15D3                     l2474:
  8060     15D3  0859               	movf	___fladd@a+3,w
  8061     15D4  3980               	andlw	128
  8062     15D5  00E3               	movwf	___fladd@aexp
  8063     15D6                     l2476:
  8064     15D6  0863               	movf	___fladd@aexp,w
  8065     15D7  0662               	xorwf	___fladd@signs,w
  8066     15D8  1903               	skipnz
  8067     15D9  2DDB               	goto	u3551
  8068     15DA  2DDC               	goto	u3550
  8069     15DB                     u3551:
  8070     15DB  2DDD               	goto	l2480
  8071     15DC                     u3550:
  8072     15DC                     l2478:
  8073     15DC  1762               	bsf	___fladd@signs,6
  8074     15DD                     l2480:
  8075     15DD  0859               	movf	___fladd@a+3,w
  8076     15DE  00DA               	movwf	??___fladd
  8077     15DF  075A               	addwf	??___fladd,w
  8078     15E0  00E3               	movwf	___fladd@aexp
  8079     15E1                     l2482:
  8080     15E1  1FD8               	btfss	___fladd@a+2,7
  8081     15E2  2DE4               	goto	u3561
  8082     15E3  2DE5               	goto	u3560
  8083     15E4                     u3561:
  8084     15E4  2DE6               	goto	l2486
  8085     15E5                     u3560:
  8086     15E5                     l2484:
  8087     15E5  1463               	bsf	___fladd@aexp,0
  8088     15E6                     l2486:
  8089     15E6  0863               	movf	___fladd@aexp,w
  8090     15E7  1903               	btfsc	3,2
  8091     15E8  2DEA               	goto	u3571
  8092     15E9  2DEB               	goto	u3570
  8093     15EA                     u3571:
  8094     15EA  2DFB               	goto	l2496
  8095     15EB                     u3570:
  8096     15EB                     l2488:
  8097     15EB  0A63               	incf	___fladd@aexp,w
  8098     15EC  1D03               	btfss	3,2
  8099     15ED  2DEF               	goto	u3581
  8100     15EE  2DF0               	goto	u3580
  8101     15EF                     u3581:
  8102     15EF  2DF8               	goto	l2492
  8103     15F0                     u3580:
  8104     15F0                     l2490:
  8105     15F0  3000               	movlw	0
  8106     15F1  00D9               	movwf	___fladd@a+3
  8107     15F2  3000               	movlw	0
  8108     15F3  00D8               	movwf	___fladd@a+2
  8109     15F4  3000               	movlw	0
  8110     15F5  00D7               	movwf	___fladd@a+1
  8111     15F6  3000               	movlw	0
  8112     15F7  00D6               	movwf	___fladd@a
  8113     15F8                     l2492:
  8114     15F8  17D8               	bsf	___fladd@a+2,7
  8115     15F9                     l2494:
  8116     15F9  01D9               	clrf	___fladd@a+3
  8117     15FA  2E03               	goto	l642
  8118     15FB                     l2496:
  8119     15FB  3000               	movlw	0
  8120     15FC  00D9               	movwf	___fladd@a+3
  8121     15FD  3000               	movlw	0
  8122     15FE  00D8               	movwf	___fladd@a+2
  8123     15FF  3000               	movlw	0
  8124     1600  00D7               	movwf	___fladd@a+1
  8125     1601  3000               	movlw	0
  8126     1602  00D6               	movwf	___fladd@a
  8127     1603                     l642:
  8128     1603  0864               	movf	___fladd@bexp,w
  8129     1604  0263               	subwf	___fladd@aexp,w
  8130     1605  1803               	skipnc
  8131     1606  2E08               	goto	u3591
  8132     1607  2E09               	goto	u3590
  8133     1608                     u3591:
  8134     1608  2E2F               	goto	l2532
  8135     1609                     u3590:
  8136     1609                     l2498:
  8137     1609  1F62               	btfss	___fladd@signs,6
  8138     160A  2E0C               	goto	u3601
  8139     160B  2E0D               	goto	u3600
  8140     160C                     u3601:
  8141     160C  2E11               	goto	l2502
  8142     160D                     u3600:
  8143     160D                     l2500:
  8144     160D  3080               	movlw	128
  8145     160E  00DA               	movwf	??___fladd
  8146     160F  085A               	movf	??___fladd,w
  8147     1610  06E2               	xorwf	___fladd@signs,f
  8148     1611                     l2502:
  8149     1611  0864               	movf	___fladd@bexp,w
  8150     1612  00E5               	movwf	___fladd@grs
  8151     1613                     l2504:
  8152     1613  0863               	movf	___fladd@aexp,w
  8153     1614  00E4               	movwf	___fladd@bexp
  8154     1615                     l2506:
  8155     1615  0865               	movf	___fladd@grs,w
  8156     1616  00E3               	movwf	___fladd@aexp
  8157     1617                     l2508:
  8158     1617  0852               	movf	___fladd@b,w
  8159     1618  00E5               	movwf	___fladd@grs
  8160     1619                     l2510:
  8161     1619  0856               	movf	___fladd@a,w
  8162     161A  00D2               	movwf	___fladd@b
  8163     161B                     l2512:
  8164     161B  0865               	movf	___fladd@grs,w
  8165     161C  00D6               	movwf	___fladd@a
  8166     161D                     l2514:
  8167     161D  0853               	movf	___fladd@b+1,w
  8168     161E  00E5               	movwf	___fladd@grs
  8169     161F                     l2516:
  8170     161F  0857               	movf	___fladd@a+1,w
  8171     1620  00D3               	movwf	___fladd@b+1
  8172     1621                     l2518:
  8173     1621  0865               	movf	___fladd@grs,w
  8174     1622  00D7               	movwf	___fladd@a+1
  8175     1623                     l2520:
  8176     1623  0854               	movf	___fladd@b+2,w
  8177     1624  00E5               	movwf	___fladd@grs
  8178     1625                     l2522:
  8179     1625  0858               	movf	___fladd@a+2,w
  8180     1626  00D4               	movwf	___fladd@b+2
  8181     1627                     l2524:
  8182     1627  0865               	movf	___fladd@grs,w
  8183     1628  00D8               	movwf	___fladd@a+2
  8184     1629                     l2526:
  8185     1629  0855               	movf	___fladd@b+3,w
  8186     162A  00E5               	movwf	___fladd@grs
  8187     162B                     l2528:
  8188     162B  0859               	movf	___fladd@a+3,w
  8189     162C  00D5               	movwf	___fladd@b+3
  8190     162D                     l2530:
  8191     162D  0865               	movf	___fladd@grs,w
  8192     162E  00D9               	movwf	___fladd@a+3
  8193     162F                     l2532:
  8194     162F  01E5               	clrf	___fladd@grs
  8195     1630                     l2534:
  8196     1630  0863               	movf	___fladd@aexp,w
  8197     1631  00DA               	movwf	??___fladd
  8198     1632  01DB               	clrf	??___fladd+1
  8199     1633  085B               	movf	??___fladd+1,w
  8200     1634  00DD               	movwf	??___fladd+3
  8201     1635  0864               	movf	___fladd@bexp,w
  8202     1636  025A               	subwf	??___fladd,w
  8203     1637  00DC               	movwf	??___fladd+2
  8204     1638  1C03               	skipc
  8205     1639  03DD               	decf	??___fladd+3,f
  8206     163A  085D               	movf	??___fladd+3,w
  8207     163B  3A80               	xorlw	128
  8208     163C  00FF               	movwf	btemp+1
  8209     163D  3080               	movlw	128
  8210     163E  027F               	subwf	btemp+1,w
  8211     163F  1D03               	skipz
  8212     1640  2E43               	goto	u3615
  8213     1641  301A               	movlw	26
  8214     1642  025C               	subwf	??___fladd+2,w
  8215     1643                     u3615:
  8216     1643  1C03               	skipc
  8217     1644  2E46               	goto	u3611
  8218     1645  2E47               	goto	u3610
  8219     1646                     u3611:
  8220     1646  2E7E               	goto	l2550
  8221     1647                     u3610:
  8222     1647                     l2536:
  8223     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8224     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8225     1649  0855               	movf	___fladd@b+3,w
  8226     164A  0454               	iorwf	___fladd@b+2,w
  8227     164B  0453               	iorwf	___fladd@b+1,w
  8228     164C  0452               	iorwf	___fladd@b,w
  8229     164D  1D03               	skipz
  8230     164E  2E50               	goto	u3621
  8231     164F  2E52               	goto	u3620
  8232     1650                     u3621:
  8233     1650  3001               	movlw	1
  8234     1651  2E53               	goto	u3630
  8235     1652                     u3620:
  8236     1652  3000               	movlw	0
  8237     1653                     u3630:
  8238     1653  00E5               	movwf	___fladd@grs
  8239     1654  3000               	movlw	0
  8240     1655  00D5               	movwf	___fladd@b+3
  8241     1656  3000               	movlw	0
  8242     1657  00D4               	movwf	___fladd@b+2
  8243     1658  3000               	movlw	0
  8244     1659  00D3               	movwf	___fladd@b+1
  8245     165A  3000               	movlw	0
  8246     165B  00D2               	movwf	___fladd@b
  8247     165C  0863               	movf	___fladd@aexp,w
  8248     165D  00E4               	movwf	___fladd@bexp
  8249     165E  2E86               	goto	l646
  8250     165F                     l648:
  8251     165F  1C65               	btfss	___fladd@grs,0
  8252     1660  2E62               	goto	u3641
  8253     1661  2E63               	goto	u3640
  8254     1662                     u3641:
  8255     1662  2E6A               	goto	l2540
  8256     1663                     u3640:
  8257     1663                     l2538:
  8258     1663  0865               	movf	___fladd@grs,w
  8259     1664  00DA               	movwf	??___fladd
  8260     1665  1003               	clrc
  8261     1666  0C5A               	rrf	??___fladd,w
  8262     1667  3801               	iorlw	1
  8263     1668  00E5               	movwf	___fladd@grs
  8264     1669  2E6C               	goto	l2542
  8265     166A                     l2540:
  8266     166A  1003               	clrc
  8267     166B  0CE5               	rrf	___fladd@grs,f
  8268     166C                     l2542:
  8269     166C  1C52               	btfss	___fladd@b,0
  8270     166D  2E6F               	goto	u3651
  8271     166E  2E70               	goto	u3650
  8272     166F                     u3651:
  8273     166F  2E71               	goto	l2546
  8274     1670                     u3650:
  8275     1670                     l2544:
  8276     1670  17E5               	bsf	___fladd@grs,7
  8277     1671                     l2546:
  8278     1671  3001               	movlw	1
  8279     1672  00DA               	movwf	??___fladd
  8280     1673                     u3665:
  8281     1673  0D55               	rlf	___fladd@b+3,w
  8282     1674  0CD5               	rrf	___fladd@b+3,f
  8283     1675  0CD4               	rrf	___fladd@b+2,f
  8284     1676  0CD3               	rrf	___fladd@b+1,f
  8285     1677  0CD2               	rrf	___fladd@b,f
  8286     1678  0BDA               	decfsz	??___fladd& (0+127),f
  8287     1679  2E73               	goto	u3665
  8288     167A                     l2548:
  8289     167A  3001               	movlw	1
  8290     167B  00DA               	movwf	??___fladd
  8291     167C  085A               	movf	??___fladd,w
  8292     167D  07E4               	addwf	___fladd@bexp,f
  8293     167E                     l2550:
  8294     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8295     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8296     1680  0863               	movf	___fladd@aexp,w
  8297     1681  0264               	subwf	___fladd@bexp,w
  8298     1682  1C03               	skipc
  8299     1683  2E85               	goto	u3671
  8300     1684  2E86               	goto	u3670
  8301     1685                     u3671:
  8302     1685  2E5F               	goto	l648
  8303     1686                     u3670:
  8304     1686                     l646:
  8305     1686  1B62               	btfsc	___fladd@signs,6
  8306     1687  2E89               	goto	u3681
  8307     1688  2E8A               	goto	u3680
  8308     1689                     u3681:
  8309     1689  2ED3               	goto	l2576
  8310     168A                     u3680:
  8311     168A                     l2552:
  8312     168A  0864               	movf	___fladd@bexp,w
  8313     168B  1D03               	btfss	3,2
  8314     168C  2E8E               	goto	u3691
  8315     168D  2E8F               	goto	u3690
  8316     168E                     u3691:
  8317     168E  2E98               	goto	l2558
  8318     168F                     u3690:
  8319     168F                     l2554:
  8320     168F  3000               	movlw	0
  8321     1690  00D5               	movwf	?___fladd+3
  8322     1691  3000               	movlw	0
  8323     1692  00D4               	movwf	?___fladd+2
  8324     1693  3000               	movlw	0
  8325     1694  00D3               	movwf	?___fladd+1
  8326     1695  3000               	movlw	0
  8327     1696  00D2               	movwf	?___fladd
  8328     1697  2FFF               	goto	l655
  8329     1698                     l2558:
  8330     1698  0856               	movf	___fladd@a,w
  8331     1699  07D2               	addwf	___fladd@b,f
  8332     169A  0857               	movf	___fladd@a+1,w
  8333     169B  1103               	clrz
  8334     169C  1803               	skipnc
  8335     169D  3E01               	addlw	1
  8336     169E  1903               	skipnz
  8337     169F  2EA1               	goto	u3701
  8338     16A0  07D3               	addwf	___fladd@b+1,f
  8339     16A1                     u3701:
  8340     16A1  0858               	movf	___fladd@a+2,w
  8341     16A2  1103               	clrz
  8342     16A3  1803               	skipnc
  8343     16A4  3E01               	addlw	1
  8344     16A5  1903               	skipnz
  8345     16A6  2EA8               	goto	u3702
  8346     16A7  07D4               	addwf	___fladd@b+2,f
  8347     16A8                     u3702:
  8348     16A8  0859               	movf	___fladd@a+3,w
  8349     16A9  1103               	clrz
  8350     16AA  1803               	skipnc
  8351     16AB  3E01               	addlw	1
  8352     16AC  1903               	skipnz
  8353     16AD  2EAF               	goto	u3703
  8354     16AE  07D5               	addwf	___fladd@b+3,f
  8355     16AF                     u3703:
  8356     16AF                     l2560:
  8357     16AF  1C55               	btfss	___fladd@b+3,0
  8358     16B0  2EB2               	goto	u3711
  8359     16B1  2EB3               	goto	u3710
  8360     16B2                     u3711:
  8361     16B2  2F87               	goto	l2610
  8362     16B3                     u3710:
  8363     16B3                     l2562:
  8364     16B3  1C65               	btfss	___fladd@grs,0
  8365     16B4  2EB6               	goto	u3721
  8366     16B5  2EB7               	goto	u3720
  8367     16B6                     u3721:
  8368     16B6  2EBE               	goto	l2566
  8369     16B7                     u3720:
  8370     16B7                     l2564:
  8371     16B7  0865               	movf	___fladd@grs,w
  8372     16B8  00DA               	movwf	??___fladd
  8373     16B9  1003               	clrc
  8374     16BA  0C5A               	rrf	??___fladd,w
  8375     16BB  3801               	iorlw	1
  8376     16BC  00E5               	movwf	___fladd@grs
  8377     16BD  2EC0               	goto	l2568
  8378     16BE                     l2566:
  8379     16BE  1003               	clrc
  8380     16BF  0CE5               	rrf	___fladd@grs,f
  8381     16C0                     l2568:
  8382     16C0  1C52               	btfss	___fladd@b,0
  8383     16C1  2EC3               	goto	u3731
  8384     16C2  2EC4               	goto	u3730
  8385     16C3                     u3731:
  8386     16C3  2EC5               	goto	l2572
  8387     16C4                     u3730:
  8388     16C4                     l2570:
  8389     16C4  17E5               	bsf	___fladd@grs,7
  8390     16C5                     l2572:
  8391     16C5  3001               	movlw	1
  8392     16C6  00DA               	movwf	??___fladd
  8393     16C7                     u3745:
  8394     16C7  0D55               	rlf	___fladd@b+3,w
  8395     16C8  0CD5               	rrf	___fladd@b+3,f
  8396     16C9  0CD4               	rrf	___fladd@b+2,f
  8397     16CA  0CD3               	rrf	___fladd@b+1,f
  8398     16CB  0CD2               	rrf	___fladd@b,f
  8399     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  8400     16CD  2EC7               	goto	u3745
  8401     16CE                     l2574:
  8402     16CE  3001               	movlw	1
  8403     16CF  00DA               	movwf	??___fladd
  8404     16D0  085A               	movf	??___fladd,w
  8405     16D1  07E4               	addwf	___fladd@bexp,f
  8406     16D2  2F87               	goto	l2610
  8407     16D3                     l2576:
  8408     16D3  0855               	movf	___fladd@b+3,w
  8409     16D4  3A80               	xorlw	128
  8410     16D5  00FF               	movwf	btemp+1
  8411     16D6  0859               	movf	___fladd@a+3,w
  8412     16D7  3A80               	xorlw	128
  8413     16D8  027F               	subwf	btemp+1,w
  8414     16D9  1D03               	skipz
  8415     16DA  2EE5               	goto	u3753
  8416     16DB  0858               	movf	___fladd@a+2,w
  8417     16DC  0254               	subwf	___fladd@b+2,w
  8418     16DD  1D03               	skipz
  8419     16DE  2EE5               	goto	u3753
  8420     16DF  0857               	movf	___fladd@a+1,w
  8421     16E0  0253               	subwf	___fladd@b+1,w
  8422     16E1  1D03               	skipz
  8423     16E2  2EE5               	goto	u3753
  8424     16E3  0856               	movf	___fladd@a,w
  8425     16E4  0252               	subwf	___fladd@b,w
  8426     16E5                     u3753:
  8427     16E5  1803               	skipnc
  8428     16E6  2EE8               	goto	u3751
  8429     16E7  2EE9               	goto	u3750
  8430     16E8                     u3751:
  8431     16E8  2F41               	goto	l2586
  8432     16E9                     u3750:
  8433     16E9                     l2578:
  8434     16E9  30FF               	movlw	255
  8435     16EA  00DA               	movwf	??___fladd
  8436     16EB  30FF               	movlw	255
  8437     16EC  00DB               	movwf	??___fladd+1
  8438     16ED  30FF               	movlw	255
  8439     16EE  00DC               	movwf	??___fladd+2
  8440     16EF  30FF               	movlw	255
  8441     16F0  00DD               	movwf	??___fladd+3
  8442     16F1  0856               	movf	___fladd@a,w
  8443     16F2  00DE               	movwf	??___fladd+4
  8444     16F3  0857               	movf	___fladd@a+1,w
  8445     16F4  00DF               	movwf	??___fladd+5
  8446     16F5  0858               	movf	___fladd@a+2,w
  8447     16F6  00E0               	movwf	??___fladd+6
  8448     16F7  0859               	movf	___fladd@a+3,w
  8449     16F8  00E1               	movwf	??___fladd+7
  8450     16F9  0852               	movf	___fladd@b,w
  8451     16FA  02DE               	subwf	??___fladd+4,f
  8452     16FB  0853               	movf	___fladd@b+1,w
  8453     16FC  1C03               	skipc
  8454     16FD  0F53               	incfsz	___fladd@b+1,w
  8455     16FE  2F00               	goto	u3761
  8456     16FF  2F01               	goto	u3762
  8457     1700                     u3761:
  8458     1700  02DF               	subwf	??___fladd+5,f
  8459     1701                     u3762:
  8460     1701  0854               	movf	___fladd@b+2,w
  8461     1702  1C03               	skipc
  8462     1703  0F54               	incfsz	___fladd@b+2,w
  8463     1704  2F06               	goto	u3763
  8464     1705  2F07               	goto	u3764
  8465     1706                     u3763:
  8466     1706  02E0               	subwf	??___fladd+6,f
  8467     1707                     u3764:
  8468     1707  0855               	movf	___fladd@b+3,w
  8469     1708  1C03               	skipc
  8470     1709  0F55               	incfsz	___fladd@b+3,w
  8471     170A  2F0C               	goto	u3765
  8472     170B  2F0D               	goto	u3766
  8473     170C                     u3765:
  8474     170C  02E1               	subwf	??___fladd+7,f
  8475     170D                     u3766:
  8476     170D  085E               	movf	??___fladd+4,w
  8477     170E  07DA               	addwf	??___fladd,f
  8478     170F  085F               	movf	??___fladd+5,w
  8479     1710  1803               	skipnc
  8480     1711  0F5F               	incfsz	??___fladd+5,w
  8481     1712  2F14               	goto	u3770
  8482     1713  2F15               	goto	u3771
  8483     1714                     u3770:
  8484     1714  07DB               	addwf	??___fladd+1,f
  8485     1715                     u3771:
  8486     1715  0860               	movf	??___fladd+6,w
  8487     1716  1803               	skipnc
  8488     1717  0F60               	incfsz	??___fladd+6,w
  8489     1718  2F1A               	goto	u3772
  8490     1719  2F1B               	goto	u3773
  8491     171A                     u3772:
  8492     171A  07DC               	addwf	??___fladd+2,f
  8493     171B                     u3773:
  8494     171B  0861               	movf	??___fladd+7,w
  8495     171C  1803               	skipnc
  8496     171D  0A61               	incf	??___fladd+7,w
  8497     171E  07DD               	addwf	??___fladd+3,f
  8498     171F  085D               	movf	??___fladd+3,w
  8499     1720  00D5               	movwf	___fladd@b+3
  8500     1721  085C               	movf	??___fladd+2,w
  8501     1722  00D4               	movwf	___fladd@b+2
  8502     1723  085B               	movf	??___fladd+1,w
  8503     1724  00D3               	movwf	___fladd@b+1
  8504     1725  085A               	movf	??___fladd,w
  8505     1726  00D2               	movwf	___fladd@b
  8506     1727                     l2580:
  8507     1727  3080               	movlw	128
  8508     1728  00DA               	movwf	??___fladd
  8509     1729  085A               	movf	??___fladd,w
  8510     172A  06E2               	xorwf	___fladd@signs,f
  8511     172B  09E5               	comf	___fladd@grs,f
  8512     172C  0AE5               	incf	___fladd@grs,f
  8513     172D                     l2582:
  8514     172D  0865               	movf	___fladd@grs,w
  8515     172E  1D03               	btfss	3,2
  8516     172F  2F31               	goto	u3781
  8517     1730  2F32               	goto	u3780
  8518     1731                     u3781:
  8519     1731  2F4F               	goto	l663
  8520     1732                     u3780:
  8521     1732                     l2584:
  8522     1732  3001               	movlw	1
  8523     1733  07D2               	addwf	___fladd@b,f
  8524     1734  3000               	movlw	0
  8525     1735  1803               	skipnc
  8526     1736  3001               	movlw	1
  8527     1737  07D3               	addwf	___fladd@b+1,f
  8528     1738  3000               	movlw	0
  8529     1739  1803               	skipnc
  8530     173A  3001               	movlw	1
  8531     173B  07D4               	addwf	___fladd@b+2,f
  8532     173C  3000               	movlw	0
  8533     173D  1803               	skipnc
  8534     173E  3001               	movlw	1
  8535     173F  07D5               	addwf	___fladd@b+3,f
  8536     1740  2F4F               	goto	l663
  8537     1741                     l2586:
  8538     1741  0856               	movf	___fladd@a,w
  8539     1742  02D2               	subwf	___fladd@b,f
  8540     1743  0857               	movf	___fladd@a+1,w
  8541     1744  1C03               	skipc
  8542     1745  0F57               	incfsz	___fladd@a+1,w
  8543     1746  02D3               	subwf	___fladd@b+1,f
  8544     1747  0858               	movf	___fladd@a+2,w
  8545     1748  1C03               	skipc
  8546     1749  0F58               	incfsz	___fladd@a+2,w
  8547     174A  02D4               	subwf	___fladd@b+2,f
  8548     174B  0859               	movf	___fladd@a+3,w
  8549     174C  1C03               	skipc
  8550     174D  0F59               	incfsz	___fladd@a+3,w
  8551     174E  02D5               	subwf	___fladd@b+3,f
  8552     174F                     l663:
  8553     174F  0855               	movf	___fladd@b+3,w
  8554     1750  0454               	iorwf	___fladd@b+2,w
  8555     1751  0453               	iorwf	___fladd@b+1,w
  8556     1752  0452               	iorwf	___fladd@b,w
  8557     1753  1D03               	skipz
  8558     1754  2F56               	goto	u3791
  8559     1755  2F57               	goto	u3790
  8560     1756                     u3791:
  8561     1756  2F83               	goto	l2608
  8562     1757                     u3790:
  8563     1757                     l2588:
  8564     1757  0865               	movf	___fladd@grs,w
  8565     1758  1D03               	btfss	3,2
  8566     1759  2F5B               	goto	u3801
  8567     175A  2F5C               	goto	u3800
  8568     175B                     u3801:
  8569     175B  2F83               	goto	l2608
  8570     175C                     u3800:
  8571     175C                     l2590:
  8572     175C  3000               	movlw	0
  8573     175D  00D5               	movwf	?___fladd+3
  8574     175E  3000               	movlw	0
  8575     175F  00D4               	movwf	?___fladd+2
  8576     1760  3000               	movlw	0
  8577     1761  00D3               	movwf	?___fladd+1
  8578     1762  3000               	movlw	0
  8579     1763  00D2               	movwf	?___fladd
  8580     1764  2FFF               	goto	l655
  8581     1765                     l2594:
  8582     1765  3001               	movlw	1
  8583     1766  00DA               	movwf	??___fladd
  8584     1767                     u3815:
  8585     1767  1003               	clrc
  8586     1768  0DD2               	rlf	___fladd@b,f
  8587     1769  0DD3               	rlf	___fladd@b+1,f
  8588     176A  0DD4               	rlf	___fladd@b+2,f
  8589     176B  0DD5               	rlf	___fladd@b+3,f
  8590     176C  0BDA               	decfsz	??___fladd,f
  8591     176D  2F67               	goto	u3815
  8592     176E                     l2596:
  8593     176E  1FE5               	btfss	___fladd@grs,7
  8594     176F  2F71               	goto	u3821
  8595     1770  2F72               	goto	u3820
  8596     1771                     u3821:
  8597     1771  2F73               	goto	l667
  8598     1772                     u3820:
  8599     1772                     l2598:
  8600     1772  1452               	bsf	___fladd@b,0
  8601     1773                     l667:
  8602     1773  1C65               	btfss	___fladd@grs,0
  8603     1774  2F76               	goto	u3831
  8604     1775  2F77               	goto	u3830
  8605     1776                     u3831:
  8606     1776  2F7A               	goto	l2602
  8607     1777                     u3830:
  8608     1777                     l2600:
  8609     1777  1403               	setc
  8610     1778  0DE5               	rlf	___fladd@grs,f
  8611     1779  2F7C               	goto	l2604
  8612     177A                     l2602:
  8613     177A  1003               	clrc
  8614     177B  0DE5               	rlf	___fladd@grs,f
  8615     177C                     l2604:
  8616     177C  0864               	movf	___fladd@bexp,w
  8617     177D  1903               	btfsc	3,2
  8618     177E  2F80               	goto	u3841
  8619     177F  2F81               	goto	u3840
  8620     1780                     u3841:
  8621     1780  2F83               	goto	l2608
  8622     1781                     u3840:
  8623     1781                     l2606:
  8624     1781  3001               	movlw	1
  8625     1782  02E4               	subwf	___fladd@bexp,f
  8626     1783                     l2608:
  8627     1783  1FD4               	btfss	___fladd@b+2,7
  8628     1784  2F86               	goto	u3851
  8629     1785  2F87               	goto	u3850
  8630     1786                     u3851:
  8631     1786  2F65               	goto	l2594
  8632     1787                     u3850:
  8633     1787                     l2610:
  8634     1787  01E3               	clrf	___fladd@aexp
  8635     1788                     l2612:
  8636     1788  1FE5               	btfss	___fladd@grs,7
  8637     1789  2F8B               	goto	u3861
  8638     178A  2F8C               	goto	u3860
  8639     178B                     u3861:
  8640     178B  2F9A               	goto	l2620
  8641     178C                     u3860:
  8642     178C                     l2614:
  8643     178C  0865               	movf	___fladd@grs,w
  8644     178D  397F               	andlw	127
  8645     178E  1903               	btfsc	3,2
  8646     178F  2F91               	goto	u3871
  8647     1790  2F92               	goto	u3870
  8648     1791                     u3871:
  8649     1791  2F95               	goto	l673
  8650     1792                     u3870:
  8651     1792                     l2616:
  8652     1792  01E3               	clrf	___fladd@aexp
  8653     1793  0AE3               	incf	___fladd@aexp,f
  8654     1794  2F9A               	goto	l2620
  8655     1795                     l673:
  8656     1795  1C52               	btfss	___fladd@b,0
  8657     1796  2F98               	goto	u3881
  8658     1797  2F99               	goto	u3880
  8659     1798                     u3881:
  8660     1798  2F9A               	goto	l2620
  8661     1799                     u3880:
  8662     1799  2F92               	goto	l2616
  8663     179A                     l2620:
  8664     179A  0863               	movf	___fladd@aexp,w
  8665     179B  1903               	btfsc	3,2
  8666     179C  2F9E               	goto	u3891
  8667     179D  2F9F               	goto	u3890
  8668     179E                     u3891:
  8669     179E  2FD3               	goto	l676
  8670     179F                     u3890:
  8671     179F                     l2622:
  8672     179F  3001               	movlw	1
  8673     17A0  07D2               	addwf	___fladd@b,f
  8674     17A1  3000               	movlw	0
  8675     17A2  1803               	skipnc
  8676     17A3  3001               	movlw	1
  8677     17A4  07D3               	addwf	___fladd@b+1,f
  8678     17A5  3000               	movlw	0
  8679     17A6  1803               	skipnc
  8680     17A7  3001               	movlw	1
  8681     17A8  07D4               	addwf	___fladd@b+2,f
  8682     17A9  3000               	movlw	0
  8683     17AA  1803               	skipnc
  8684     17AB  3001               	movlw	1
  8685     17AC  07D5               	addwf	___fladd@b+3,f
  8686     17AD                     l2624:
  8687     17AD  1C55               	btfss	___fladd@b+3,0
  8688     17AE  2FB0               	goto	u3901
  8689     17AF  2FB1               	goto	u3900
  8690     17B0                     u3901:
  8691     17B0  2FD3               	goto	l676
  8692     17B1                     u3900:
  8693     17B1                     l2626:
  8694     17B1  0852               	movf	___fladd@b,w
  8695     17B2  00DA               	movwf	??___fladd
  8696     17B3  0853               	movf	___fladd@b+1,w
  8697     17B4  00DB               	movwf	??___fladd+1
  8698     17B5  0854               	movf	___fladd@b+2,w
  8699     17B6  00DC               	movwf	??___fladd+2
  8700     17B7  0855               	movf	___fladd@b+3,w
  8701     17B8  00DD               	movwf	??___fladd+3
  8702     17B9  3001               	movlw	1
  8703     17BA  00DE               	movwf	??___fladd+4
  8704     17BB                     u3915:
  8705     17BB  0D5D               	rlf	??___fladd+3,w
  8706     17BC  0CDD               	rrf	??___fladd+3,f
  8707     17BD  0CDC               	rrf	??___fladd+2,f
  8708     17BE  0CDB               	rrf	??___fladd+1,f
  8709     17BF  0CDA               	rrf	??___fladd,f
  8710     17C0                     u3910:
  8711     17C0  0BDE               	decfsz	??___fladd+4,f
  8712     17C1  2FBB               	goto	u3915
  8713     17C2  085D               	movf	??___fladd+3,w
  8714     17C3  00D5               	movwf	___fladd@b+3
  8715     17C4  085C               	movf	??___fladd+2,w
  8716     17C5  00D4               	movwf	___fladd@b+2
  8717     17C6  085B               	movf	??___fladd+1,w
  8718     17C7  00D3               	movwf	___fladd@b+1
  8719     17C8  085A               	movf	??___fladd,w
  8720     17C9  00D2               	movwf	___fladd@b
  8721     17CA  0A64               	incf	___fladd@bexp,w
  8722     17CB  1903               	btfsc	3,2
  8723     17CC  2FCE               	goto	u3921
  8724     17CD  2FCF               	goto	u3920
  8725     17CE                     u3921:
  8726     17CE  2FD3               	goto	l676
  8727     17CF                     u3920:
  8728     17CF                     l2628:
  8729     17CF  3001               	movlw	1
  8730     17D0  00DA               	movwf	??___fladd
  8731     17D1  085A               	movf	??___fladd,w
  8732     17D2  07E4               	addwf	___fladd@bexp,f
  8733     17D3                     l676:
  8734     17D3  0A64               	incf	___fladd@bexp,w
  8735     17D4  1903               	btfsc	3,2
  8736     17D5  2FD7               	goto	u3931
  8737     17D6  2FD8               	goto	u3930
  8738     17D7                     u3931:
  8739     17D7  2FDD               	goto	l2632
  8740     17D8                     u3930:
  8741     17D8                     l2630:
  8742     17D8  0864               	movf	___fladd@bexp,w
  8743     17D9  1D03               	btfss	3,2
  8744     17DA  2FDC               	goto	u3941
  8745     17DB  2FDD               	goto	u3940
  8746     17DC                     u3941:
  8747     17DC  2FEB               	goto	l2638
  8748     17DD                     u3940:
  8749     17DD                     l2632:
  8750     17DD  3000               	movlw	0
  8751     17DE  00D5               	movwf	___fladd@b+3
  8752     17DF  3000               	movlw	0
  8753     17E0  00D4               	movwf	___fladd@b+2
  8754     17E1  3000               	movlw	0
  8755     17E2  00D3               	movwf	___fladd@b+1
  8756     17E3  3000               	movlw	0
  8757     17E4  00D2               	movwf	___fladd@b
  8758     17E5                     l2634:
  8759     17E5  0864               	movf	___fladd@bexp,w
  8760     17E6  1D03               	btfss	3,2
  8761     17E7  2FE9               	goto	u3951
  8762     17E8  2FEA               	goto	u3950
  8763     17E9                     u3951:
  8764     17E9  2FEB               	goto	l2638
  8765     17EA                     u3950:
  8766     17EA                     l2636:
  8767     17EA  01E2               	clrf	___fladd@signs
  8768     17EB                     l2638:
  8769     17EB  1C64               	btfss	___fladd@bexp,0
  8770     17EC  2FEE               	goto	u3961
  8771     17ED  2FEF               	goto	u3960
  8772     17EE                     u3961:
  8773     17EE  2FF1               	goto	l2642
  8774     17EF                     u3960:
  8775     17EF                     l2640:
  8776     17EF  17D4               	bsf	___fladd@b+2,7
  8777     17F0  2FF5               	goto	l684
  8778     17F1                     l2642:
  8779     17F1  307F               	movlw	127
  8780     17F2  00DA               	movwf	??___fladd
  8781     17F3  085A               	movf	??___fladd,w
  8782     17F4  05D4               	andwf	___fladd@b+2,f
  8783     17F5                     l684:
  8784     17F5  0864               	movf	___fladd@bexp,w
  8785     17F6  00DA               	movwf	??___fladd
  8786     17F7  1003               	clrc
  8787     17F8  0C5A               	rrf	??___fladd,w
  8788     17F9  00D5               	movwf	___fladd@b+3
  8789     17FA                     l2644:
  8790     17FA  1FE2               	btfss	___fladd@signs,7
  8791     17FB  2FFD               	goto	u3971
  8792     17FC  2FFE               	goto	u3970
  8793     17FD                     u3971:
  8794     17FD  2FFF               	goto	l685
  8795     17FE                     u3970:
  8796     17FE                     l2646:
  8797     17FE  17D5               	bsf	___fladd@b+3,7
  8798     17FF                     l685:
  8799     17FF                     l655:
  8800     17FF  0008               	return
  8801     1800                     __end_of___fladd:
  8802                           
  8803                           	psect	text20
  8804     1B1B                     __ptext20:	
  8805 ;; *************** function ___flneg *****************
  8806 ;; Defined at:
  8807 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;  f1              4    0[COMMON] unsigned char 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;		None
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  4    0[COMMON] unsigned char 
  8814 ;; Registers used:
  8815 ;;		wreg
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8821 ;;      Params:         4       0       0       0       0
  8822 ;;      Locals:         0       0       0       0       0
  8823 ;;      Temps:          0       0       0       0       0
  8824 ;;      Totals:         4       0       0       0       0
  8825 ;;Total ram usage:        4 bytes
  8826 ;; Hardware stack levels used: 1
  8827 ;; This function calls:
  8828 ;;		Nothing
  8829 ;; This function is called by:
  8830 ;;		_sprintf
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834     1B1B                     ___flneg:	
  8835                           ;psect for function ___flneg
  8836                           
  8837     1B1B                     l3062:	
  8838                           ;incstack = 0
  8839                           ; Regs used in ___flneg: [wreg]
  8840                           
  8841     1B1B  0873               	movf	___flneg@f1+3,w
  8842     1B1C  0472               	iorwf	___flneg@f1+2,w
  8843     1B1D  0471               	iorwf	___flneg@f1+1,w
  8844     1B1E  0470               	iorwf	___flneg@f1,w
  8845     1B1F  1903               	skipnz
  8846     1B20  2B22               	goto	u5101
  8847     1B21  2B23               	goto	u5100
  8848     1B22                     u5101:
  8849     1B22  2B25               	goto	l3066
  8850     1B23                     u5100:
  8851     1B23                     l3064:
  8852     1B23  3080               	movlw	128
  8853     1B24  06F3               	xorwf	___flneg@f1+3,f
  8854     1B25                     l3066:
  8855     1B25                     l514:
  8856     1B25  0008               	return
  8857     1B26                     __end_of___flneg:
  8858                           
  8859                           	psect	text21
  8860     0802                     __ptext21:	
  8861 ;; *************** function ___flge *****************
  8862 ;; Defined at:
  8863 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  ff1             4    0[COMMON] unsigned char 
  8866 ;;  ff2             4    4[COMMON] unsigned char 
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;		None               void
  8871 ;; Registers used:
  8872 ;;		wreg, status,2, status,0
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8878 ;;      Params:         8       0       0       0       0
  8879 ;;      Locals:         0       0       0       0       0
  8880 ;;      Temps:          4       0       0       0       0
  8881 ;;      Totals:        12       0       0       0       0
  8882 ;;Total ram usage:       12 bytes
  8883 ;; Hardware stack levels used: 1
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_sprintf
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891     0802                     ___flge:	
  8892                           ;psect for function ___flge
  8893                           
  8894     0802                     l3042:	
  8895                           ;incstack = 0
  8896                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8897                           
  8898     0802  3000               	movlw	0
  8899     0803  0570               	andwf	___flge@ff1,w
  8900     0804  00F8               	movwf	??___flge
  8901     0805  3000               	movlw	0
  8902     0806  0571               	andwf	___flge@ff1+1,w
  8903     0807  00F9               	movwf	??___flge+1
  8904     0808  3080               	movlw	128
  8905     0809  0572               	andwf	___flge@ff1+2,w
  8906     080A  00FA               	movwf	??___flge+2
  8907     080B  307F               	movlw	127
  8908     080C  0573               	andwf	___flge@ff1+3,w
  8909     080D  00FB               	movwf	??___flge+3
  8910     080E  087B               	movf	??___flge+3,w
  8911     080F  047A               	iorwf	??___flge+2,w
  8912     0810  0479               	iorwf	??___flge+1,w
  8913     0811  0478               	iorwf	??___flge,w
  8914     0812  1D03               	skipz
  8915     0813  2815               	goto	u5031
  8916     0814  2816               	goto	u5030
  8917     0815                     u5031:
  8918     0815  281E               	goto	l506
  8919     0816                     u5030:
  8920     0816                     l3044:
  8921     0816  3000               	movlw	0
  8922     0817  00F3               	movwf	___flge@ff1+3
  8923     0818  3000               	movlw	0
  8924     0819  00F2               	movwf	___flge@ff1+2
  8925     081A  3000               	movlw	0
  8926     081B  00F1               	movwf	___flge@ff1+1
  8927     081C  3000               	movlw	0
  8928     081D  00F0               	movwf	___flge@ff1
  8929     081E                     l506:
  8930     081E  3000               	movlw	0
  8931     081F  0574               	andwf	___flge@ff2,w
  8932     0820  00F8               	movwf	??___flge
  8933     0821  3000               	movlw	0
  8934     0822  0575               	andwf	___flge@ff2+1,w
  8935     0823  00F9               	movwf	??___flge+1
  8936     0824  3080               	movlw	128
  8937     0825  0576               	andwf	___flge@ff2+2,w
  8938     0826  00FA               	movwf	??___flge+2
  8939     0827  307F               	movlw	127
  8940     0828  0577               	andwf	___flge@ff2+3,w
  8941     0829  00FB               	movwf	??___flge+3
  8942     082A  087B               	movf	??___flge+3,w
  8943     082B  047A               	iorwf	??___flge+2,w
  8944     082C  0479               	iorwf	??___flge+1,w
  8945     082D  0478               	iorwf	??___flge,w
  8946     082E  1D03               	skipz
  8947     082F  2831               	goto	u5041
  8948     0830  2832               	goto	u5040
  8949     0831                     u5041:
  8950     0831  283A               	goto	l3048
  8951     0832                     u5040:
  8952     0832                     l3046:
  8953     0832  3000               	movlw	0
  8954     0833  00F7               	movwf	___flge@ff2+3
  8955     0834  3000               	movlw	0
  8956     0835  00F6               	movwf	___flge@ff2+2
  8957     0836  3000               	movlw	0
  8958     0837  00F5               	movwf	___flge@ff2+1
  8959     0838  3000               	movlw	0
  8960     0839  00F4               	movwf	___flge@ff2
  8961     083A                     l3048:
  8962     083A  1FF3               	btfss	___flge@ff1+3,7
  8963     083B  283D               	goto	u5051
  8964     083C  283E               	goto	u5050
  8965     083D                     u5051:
  8966     083D  2862               	goto	l3052
  8967     083E                     u5050:
  8968     083E                     l3050:
  8969     083E  3000               	movlw	0
  8970     083F  00F8               	movwf	??___flge
  8971     0840  3000               	movlw	0
  8972     0841  00F9               	movwf	??___flge+1
  8973     0842  3000               	movlw	0
  8974     0843  00FA               	movwf	??___flge+2
  8975     0844  3080               	movlw	128
  8976     0845  00FB               	movwf	??___flge+3
  8977     0846  0870               	movf	___flge@ff1,w
  8978     0847  02F8               	subwf	??___flge,f
  8979     0848  0871               	movf	___flge@ff1+1,w
  8980     0849  1C03               	skipc
  8981     084A  0F71               	incfsz	___flge@ff1+1,w
  8982     084B  284D               	goto	u5061
  8983     084C  284E               	goto	u5062
  8984     084D                     u5061:
  8985     084D  02F9               	subwf	??___flge+1,f
  8986     084E                     u5062:
  8987     084E  0872               	movf	___flge@ff1+2,w
  8988     084F  1C03               	skipc
  8989     0850  0F72               	incfsz	___flge@ff1+2,w
  8990     0851  2853               	goto	u5063
  8991     0852  2854               	goto	u5064
  8992     0853                     u5063:
  8993     0853  02FA               	subwf	??___flge+2,f
  8994     0854                     u5064:
  8995     0854  0873               	movf	___flge@ff1+3,w
  8996     0855  1C03               	skipc
  8997     0856  0F73               	incfsz	___flge@ff1+3,w
  8998     0857  2859               	goto	u5065
  8999     0858  285A               	goto	u5066
  9000     0859                     u5065:
  9001     0859  02FB               	subwf	??___flge+3,f
  9002     085A                     u5066:
  9003     085A  087B               	movf	??___flge+3,w
  9004     085B  00F3               	movwf	___flge@ff1+3
  9005     085C  087A               	movf	??___flge+2,w
  9006     085D  00F2               	movwf	___flge@ff1+2
  9007     085E  0879               	movf	??___flge+1,w
  9008     085F  00F1               	movwf	___flge@ff1+1
  9009     0860  0878               	movf	??___flge,w
  9010     0861  00F0               	movwf	___flge@ff1
  9011     0862                     l3052:
  9012     0862  1FF7               	btfss	___flge@ff2+3,7
  9013     0863  2865               	goto	u5071
  9014     0864  2866               	goto	u5070
  9015     0865                     u5071:
  9016     0865  288A               	goto	l509
  9017     0866                     u5070:
  9018     0866                     l3054:
  9019     0866  3000               	movlw	0
  9020     0867  00F8               	movwf	??___flge
  9021     0868  3000               	movlw	0
  9022     0869  00F9               	movwf	??___flge+1
  9023     086A  3000               	movlw	0
  9024     086B  00FA               	movwf	??___flge+2
  9025     086C  3080               	movlw	128
  9026     086D  00FB               	movwf	??___flge+3
  9027     086E  0874               	movf	___flge@ff2,w
  9028     086F  02F8               	subwf	??___flge,f
  9029     0870  0875               	movf	___flge@ff2+1,w
  9030     0871  1C03               	skipc
  9031     0872  0F75               	incfsz	___flge@ff2+1,w
  9032     0873  2875               	goto	u5081
  9033     0874  2876               	goto	u5082
  9034     0875                     u5081:
  9035     0875  02F9               	subwf	??___flge+1,f
  9036     0876                     u5082:
  9037     0876  0876               	movf	___flge@ff2+2,w
  9038     0877  1C03               	skipc
  9039     0878  0F76               	incfsz	___flge@ff2+2,w
  9040     0879  287B               	goto	u5083
  9041     087A  287C               	goto	u5084
  9042     087B                     u5083:
  9043     087B  02FA               	subwf	??___flge+2,f
  9044     087C                     u5084:
  9045     087C  0877               	movf	___flge@ff2+3,w
  9046     087D  1C03               	skipc
  9047     087E  0F77               	incfsz	___flge@ff2+3,w
  9048     087F  2881               	goto	u5085
  9049     0880  2882               	goto	u5086
  9050     0881                     u5085:
  9051     0881  02FB               	subwf	??___flge+3,f
  9052     0882                     u5086:
  9053     0882  087B               	movf	??___flge+3,w
  9054     0883  00F7               	movwf	___flge@ff2+3
  9055     0884  087A               	movf	??___flge+2,w
  9056     0885  00F6               	movwf	___flge@ff2+2
  9057     0886  0879               	movf	??___flge+1,w
  9058     0887  00F5               	movwf	___flge@ff2+1
  9059     0888  0878               	movf	??___flge,w
  9060     0889  00F4               	movwf	___flge@ff2
  9061     088A                     l509:
  9062     088A  3080               	movlw	128
  9063     088B  06F3               	xorwf	___flge@ff1+3,f
  9064     088C  3080               	movlw	128
  9065     088D  06F7               	xorwf	___flge@ff2+3,f
  9066     088E  0877               	movf	___flge@ff2+3,w
  9067     088F  0273               	subwf	___flge@ff1+3,w
  9068     0890  1D03               	skipz
  9069     0891  289C               	goto	u5095
  9070     0892  0876               	movf	___flge@ff2+2,w
  9071     0893  0272               	subwf	___flge@ff1+2,w
  9072     0894  1D03               	skipz
  9073     0895  289C               	goto	u5095
  9074     0896  0875               	movf	___flge@ff2+1,w
  9075     0897  0271               	subwf	___flge@ff1+1,w
  9076     0898  1D03               	skipz
  9077     0899  289C               	goto	u5095
  9078     089A  0874               	movf	___flge@ff2,w
  9079     089B  0270               	subwf	___flge@ff1,w
  9080     089C                     u5095:
  9081     089C  1803               	skipnc
  9082     089D  289F               	goto	u5091
  9083     089E  28A0               	goto	u5090
  9084     089F                     u5091:
  9085     089F  28A2               	goto	l3058
  9086     08A0                     u5090:
  9087     08A0                     l3056:
  9088     08A0  1003               	clrc
  9089     08A1  28A3               	goto	l510
  9090     08A2                     l3058:
  9091     08A2  1403               	setc
  9092     08A3                     l510:
  9093     08A3  0008               	return
  9094     08A4                     __end_of___flge:
  9095                           
  9096                           	psect	text22
  9097     1DAC                     __ptext22:	
  9098 ;; *************** function ___fleq *****************
  9099 ;; Defined at:
  9100 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  ff1             4    0[COMMON] unsigned char 
  9103 ;;  ff2             4    4[COMMON] unsigned char 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;		None
  9106 ;; Return value:  Size  Location     Type
  9107 ;;		None               void
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9115 ;;      Params:         8       0       0       0       0
  9116 ;;      Locals:         0       0       0       0       0
  9117 ;;      Temps:          4       0       0       0       0
  9118 ;;      Totals:        12       0       0       0       0
  9119 ;;Total ram usage:       12 bytes
  9120 ;; Hardware stack levels used: 1
  9121 ;; This function calls:
  9122 ;;		Nothing
  9123 ;; This function is called by:
  9124 ;;		_sprintf
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128     1DAC                     ___fleq:	
  9129                           ;psect for function ___fleq
  9130                           
  9131     1DAC                     l3030:	
  9132                           ;incstack = 0
  9133                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9134                           
  9135     1DAC  3000               	movlw	0
  9136     1DAD  0570               	andwf	___fleq@ff1,w
  9137     1DAE  00F8               	movwf	??___fleq
  9138     1DAF  3000               	movlw	0
  9139     1DB0  0571               	andwf	___fleq@ff1+1,w
  9140     1DB1  00F9               	movwf	??___fleq+1
  9141     1DB2  3080               	movlw	128
  9142     1DB3  0572               	andwf	___fleq@ff1+2,w
  9143     1DB4  00FA               	movwf	??___fleq+2
  9144     1DB5  307F               	movlw	127
  9145     1DB6  0573               	andwf	___fleq@ff1+3,w
  9146     1DB7  00FB               	movwf	??___fleq+3
  9147     1DB8  087B               	movf	??___fleq+3,w
  9148     1DB9  047A               	iorwf	??___fleq+2,w
  9149     1DBA  0479               	iorwf	??___fleq+1,w
  9150     1DBB  0478               	iorwf	??___fleq,w
  9151     1DBC  1D03               	skipz
  9152     1DBD  2DBF               	goto	u5001
  9153     1DBE  2DC0               	goto	u5000
  9154     1DBF                     u5001:
  9155     1DBF  2DC8               	goto	l501
  9156     1DC0                     u5000:
  9157     1DC0                     l3032:
  9158     1DC0  3000               	movlw	0
  9159     1DC1  00F3               	movwf	___fleq@ff1+3
  9160     1DC2  3000               	movlw	0
  9161     1DC3  00F2               	movwf	___fleq@ff1+2
  9162     1DC4  3000               	movlw	0
  9163     1DC5  00F1               	movwf	___fleq@ff1+1
  9164     1DC6  3000               	movlw	0
  9165     1DC7  00F0               	movwf	___fleq@ff1
  9166     1DC8                     l501:
  9167     1DC8  3000               	movlw	0
  9168     1DC9  0574               	andwf	___fleq@ff2,w
  9169     1DCA  00F8               	movwf	??___fleq
  9170     1DCB  3000               	movlw	0
  9171     1DCC  0575               	andwf	___fleq@ff2+1,w
  9172     1DCD  00F9               	movwf	??___fleq+1
  9173     1DCE  3080               	movlw	128
  9174     1DCF  0576               	andwf	___fleq@ff2+2,w
  9175     1DD0  00FA               	movwf	??___fleq+2
  9176     1DD1  307F               	movlw	127
  9177     1DD2  0577               	andwf	___fleq@ff2+3,w
  9178     1DD3  00FB               	movwf	??___fleq+3
  9179     1DD4  087B               	movf	??___fleq+3,w
  9180     1DD5  047A               	iorwf	??___fleq+2,w
  9181     1DD6  0479               	iorwf	??___fleq+1,w
  9182     1DD7  0478               	iorwf	??___fleq,w
  9183     1DD8  1D03               	skipz
  9184     1DD9  2DDB               	goto	u5011
  9185     1DDA  2DDC               	goto	u5010
  9186     1DDB                     u5011:
  9187     1DDB  2DE4               	goto	l502
  9188     1DDC                     u5010:
  9189     1DDC                     l3034:
  9190     1DDC  3000               	movlw	0
  9191     1DDD  00F7               	movwf	___fleq@ff2+3
  9192     1DDE  3000               	movlw	0
  9193     1DDF  00F6               	movwf	___fleq@ff2+2
  9194     1DE0  3000               	movlw	0
  9195     1DE1  00F5               	movwf	___fleq@ff2+1
  9196     1DE2  3000               	movlw	0
  9197     1DE3  00F4               	movwf	___fleq@ff2
  9198     1DE4                     l502:
  9199     1DE4  0877               	movf	___fleq@ff2+3,w
  9200     1DE5  0673               	xorwf	___fleq@ff1+3,w
  9201     1DE6  1D03               	skipz
  9202     1DE7  2DF2               	goto	u5025
  9203     1DE8  0876               	movf	___fleq@ff2+2,w
  9204     1DE9  0672               	xorwf	___fleq@ff1+2,w
  9205     1DEA  1D03               	skipz
  9206     1DEB  2DF2               	goto	u5025
  9207     1DEC  0875               	movf	___fleq@ff2+1,w
  9208     1DED  0671               	xorwf	___fleq@ff1+1,w
  9209     1DEE  1D03               	skipz
  9210     1DEF  2DF2               	goto	u5025
  9211     1DF0  0874               	movf	___fleq@ff2,w
  9212     1DF1  0670               	xorwf	___fleq@ff1,w
  9213     1DF2                     u5025:
  9214     1DF2  1903               	skipnz
  9215     1DF3  2DF5               	goto	u5021
  9216     1DF4  2DF6               	goto	u5020
  9217     1DF5                     u5021:
  9218     1DF5  2DF8               	goto	l3038
  9219     1DF6                     u5020:
  9220     1DF6                     l3036:
  9221     1DF6  1003               	clrc
  9222     1DF7  2DF9               	goto	l503
  9223     1DF8                     l3038:
  9224     1DF8  1403               	setc
  9225     1DF9                     l503:
  9226     1DF9  0008               	return
  9227     1DFA                     __end_of___fleq:
  9228                           
  9229                           	psect	text23
  9230     1E57                     __ptext23:	
  9231 ;; *************** function _setupINTOSC *****************
  9232 ;; Defined at:
  9233 ;;		line 11 in file "configINTOSC.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  OsciladorInt    2    0[COMMON] int 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      void 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9247 ;;      Params:         2       0       0       0       0
  9248 ;;      Locals:         0       0       0       0       0
  9249 ;;      Temps:          0       0       0       0       0
  9250 ;;      Totals:         2       0       0       0       0
  9251 ;;Total ram usage:        2 bytes
  9252 ;; Hardware stack levels used: 1
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_main
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260     1E57                     _setupINTOSC:	
  9261                           ;psect for function _setupINTOSC
  9262                           
  9263     1E57                     l3178:	
  9264                           ;incstack = 0
  9265                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  9266                           
  9267                           
  9268                           ;configINTOSC.c: 13:     if (OsciladorInterno == 125)
  9269     1E57  307D               	movlw	125
  9270     1E58  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  9271     1E59  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  9272     1E5A  1D03               	btfss	3,2
  9273     1E5B  2E5D               	goto	u5411
  9274     1E5C  2E5E               	goto	u5410
  9275     1E5D                     u5411:
  9276     1E5D  2E65               	goto	l129
  9277     1E5E                     u5410:
  9278     1E5E                     l3180:
  9279                           
  9280                           ;configINTOSC.c: 14:     {;configINTOSC.c: 15:     OSCCONbits.IRCF = 0b0001 ;
  9281     1E5E  1683               	bsf	3,5	;RP0=1, select bank1
  9282     1E5F  1303               	bcf	3,6	;RP1=0, select bank1
  9283     1E60  080F               	movf	15,w	;volatile
  9284     1E61  398F               	andlw	-113
  9285     1E62  3810               	iorlw	16
  9286     1E63  008F               	movwf	15	;volatile
  9287     1E64                     l3182:
  9288                           
  9289                           ;configINTOSC.c: 16:     OSCCONbits.SCS = 1;
  9290     1E64  140F               	bsf	15,0	;volatile
  9291     1E65                     l129:	
  9292                           ;configINTOSC.c: 17:     }
  9293                           
  9294                           
  9295                           ;configINTOSC.c: 19:     if (OsciladorInterno == 250)
  9296     1E65  30FA               	movlw	250
  9297     1E66  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  9298     1E67  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  9299     1E68  1D03               	btfss	3,2
  9300     1E69  2E6B               	goto	u5421
  9301     1E6A  2E6C               	goto	u5420
  9302     1E6B                     u5421:
  9303     1E6B  2E73               	goto	l130
  9304     1E6C                     u5420:
  9305     1E6C                     l3184:
  9306                           
  9307                           ;configINTOSC.c: 20:     {;configINTOSC.c: 21:     OSCCONbits.IRCF = 0b0010 ;
  9308     1E6C  1683               	bsf	3,5	;RP0=1, select bank1
  9309     1E6D  1303               	bcf	3,6	;RP1=0, select bank1
  9310     1E6E  080F               	movf	15,w	;volatile
  9311     1E6F  398F               	andlw	-113
  9312     1E70  3820               	iorlw	32
  9313     1E71  008F               	movwf	15	;volatile
  9314     1E72                     l3186:
  9315                           
  9316                           ;configINTOSC.c: 22:     OSCCONbits.SCS = 1;
  9317     1E72  140F               	bsf	15,0	;volatile
  9318     1E73                     l130:	
  9319                           ;configINTOSC.c: 23:     }
  9320                           
  9321                           
  9322                           ;configINTOSC.c: 25:     if (OsciladorInterno == 500)
  9323     1E73  30F4               	movlw	244
  9324     1E74  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  9325     1E75  1D03               	skipz
  9326     1E76  2E7B               	goto	u5431
  9327     1E77  0371               	decf	setupINTOSC@OsciladorInterno+1,w
  9328     1E78  1D03               	btfss	3,2
  9329     1E79  2E7B               	goto	u5431
  9330     1E7A  2E7C               	goto	u5430
  9331     1E7B                     u5431:
  9332     1E7B  2E83               	goto	l131
  9333     1E7C                     u5430:
  9334     1E7C                     l3188:
  9335                           
  9336                           ;configINTOSC.c: 26:     {;configINTOSC.c: 27:     OSCCONbits.IRCF = 0b0011 ;
  9337     1E7C  1683               	bsf	3,5	;RP0=1, select bank1
  9338     1E7D  1303               	bcf	3,6	;RP1=0, select bank1
  9339     1E7E  080F               	movf	15,w	;volatile
  9340     1E7F  398F               	andlw	-113
  9341     1E80  3830               	iorlw	48
  9342     1E81  008F               	movwf	15	;volatile
  9343     1E82                     l3190:
  9344                           
  9345                           ;configINTOSC.c: 28:     OSCCONbits.SCS = 1;
  9346     1E82  140F               	bsf	15,0	;volatile
  9347     1E83                     l131:	
  9348                           ;configINTOSC.c: 29:     }
  9349                           
  9350                           
  9351                           ;configINTOSC.c: 31:     if (OsciladorInterno == 1)
  9352     1E83  0370               	decf	setupINTOSC@OsciladorInterno,w
  9353     1E84  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  9354     1E85  1D03               	btfss	3,2
  9355     1E86  2E88               	goto	u5441
  9356     1E87  2E89               	goto	u5440
  9357     1E88                     u5441:
  9358     1E88  2E90               	goto	l132
  9359     1E89                     u5440:
  9360     1E89                     l3192:
  9361                           
  9362                           ;configINTOSC.c: 32:     {;configINTOSC.c: 33:     OSCCONbits.IRCF = 0b0100 ;
  9363     1E89  1683               	bsf	3,5	;RP0=1, select bank1
  9364     1E8A  1303               	bcf	3,6	;RP1=0, select bank1
  9365     1E8B  080F               	movf	15,w	;volatile
  9366     1E8C  398F               	andlw	-113
  9367     1E8D  3840               	iorlw	64
  9368     1E8E  008F               	movwf	15	;volatile
  9369     1E8F                     l3194:
  9370                           
  9371                           ;configINTOSC.c: 34:     OSCCONbits.SCS = 1;
  9372     1E8F  140F               	bsf	15,0	;volatile
  9373     1E90                     l132:	
  9374                           ;configINTOSC.c: 35:     }
  9375                           
  9376                           
  9377                           ;configINTOSC.c: 37:     if (OsciladorInterno == 2)
  9378     1E90  3002               	movlw	2
  9379     1E91  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  9380     1E92  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  9381     1E93  1D03               	btfss	3,2
  9382     1E94  2E96               	goto	u5451
  9383     1E95  2E97               	goto	u5450
  9384     1E96                     u5451:
  9385     1E96  2E9E               	goto	l133
  9386     1E97                     u5450:
  9387     1E97                     l3196:
  9388                           
  9389                           ;configINTOSC.c: 38:     {;configINTOSC.c: 39:     OSCCONbits.IRCF = 0b0101 ;
  9390     1E97  1683               	bsf	3,5	;RP0=1, select bank1
  9391     1E98  1303               	bcf	3,6	;RP1=0, select bank1
  9392     1E99  080F               	movf	15,w	;volatile
  9393     1E9A  398F               	andlw	-113
  9394     1E9B  3850               	iorlw	80
  9395     1E9C  008F               	movwf	15	;volatile
  9396     1E9D                     l3198:
  9397                           
  9398                           ;configINTOSC.c: 40:     OSCCONbits.SCS = 1;
  9399     1E9D  140F               	bsf	15,0	;volatile
  9400     1E9E                     l133:	
  9401                           ;configINTOSC.c: 41:     }
  9402                           
  9403                           
  9404                           ;configINTOSC.c: 43:     if (OsciladorInterno == 4)
  9405     1E9E  3004               	movlw	4
  9406     1E9F  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  9407     1EA0  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  9408     1EA1  1D03               	btfss	3,2
  9409     1EA2  2EA4               	goto	u5461
  9410     1EA3  2EA5               	goto	u5460
  9411     1EA4                     u5461:
  9412     1EA4  2EAC               	goto	l134
  9413     1EA5                     u5460:
  9414     1EA5                     l3200:
  9415                           
  9416                           ;configINTOSC.c: 44:     {;configINTOSC.c: 45:     OSCCONbits.IRCF = 0b0110 ;
  9417     1EA5  1683               	bsf	3,5	;RP0=1, select bank1
  9418     1EA6  1303               	bcf	3,6	;RP1=0, select bank1
  9419     1EA7  080F               	movf	15,w	;volatile
  9420     1EA8  398F               	andlw	-113
  9421     1EA9  3860               	iorlw	96
  9422     1EAA  008F               	movwf	15	;volatile
  9423     1EAB                     l3202:
  9424                           
  9425                           ;configINTOSC.c: 46:     OSCCONbits.SCS = 1;
  9426     1EAB  140F               	bsf	15,0	;volatile
  9427     1EAC                     l134:	
  9428                           ;configINTOSC.c: 47:     }
  9429                           
  9430                           
  9431                           ;configINTOSC.c: 49:     if (OsciladorInterno == 8)
  9432     1EAC  3008               	movlw	8
  9433     1EAD  0670               	xorwf	setupINTOSC@OsciladorInterno,w
  9434     1EAE  0471               	iorwf	setupINTOSC@OsciladorInterno+1,w
  9435     1EAF  1D03               	btfss	3,2
  9436     1EB0  2EB2               	goto	u5471
  9437     1EB1  2EB3               	goto	u5470
  9438     1EB2                     u5471:
  9439     1EB2  2EB8               	goto	l136
  9440     1EB3                     u5470:
  9441     1EB3                     l3204:
  9442                           
  9443                           ;configINTOSC.c: 50:     {;configINTOSC.c: 51:     OSCCONbits.IRCF = 0b0111 ;
  9444     1EB3  3070               	movlw	112
  9445     1EB4  1683               	bsf	3,5	;RP0=1, select bank1
  9446     1EB5  1303               	bcf	3,6	;RP1=0, select bank1
  9447     1EB6  048F               	iorwf	15,f	;volatile
  9448     1EB7                     l3206:
  9449                           
  9450                           ;configINTOSC.c: 52:     OSCCONbits.SCS = 1;
  9451     1EB7  140F               	bsf	15,0	;volatile
  9452     1EB8                     l136:
  9453     1EB8  0008               	return
  9454     1EB9                     __end_of_setupINTOSC:
  9455                           
  9456                           	psect	text24
  9457     1C02                     __ptext24:	
  9458 ;; *************** function _setupADC *****************
  9459 ;; Defined at:
  9460 ;;		line 13 in file "configADC.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  canal           1    wreg     unsigned char 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  canal           1    1[COMMON] unsigned char 
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		wreg, status,2, status,0
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9474 ;;      Params:         0       0       0       0       0
  9475 ;;      Locals:         1       0       0       0       0
  9476 ;;      Temps:          1       0       0       0       0
  9477 ;;      Totals:         2       0       0       0       0
  9478 ;;Total ram usage:        2 bytes
  9479 ;; Hardware stack levels used: 1
  9480 ;; This function calls:
  9481 ;;		Nothing
  9482 ;; This function is called by:
  9483 ;;		_main
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487     1C02                     _setupADC:	
  9488                           ;psect for function _setupADC
  9489                           
  9490                           
  9491                           ;incstack = 0
  9492                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  9493                           ;setupADC@canal stored from wreg
  9494     1C02  00F1               	movwf	setupADC@canal
  9495     1C03                     l3208:
  9496                           
  9497                           ;configADC.c: 17:     if(canal == 0)
  9498     1C03  0871               	movf	setupADC@canal,w
  9499     1C04  1D03               	btfss	3,2
  9500     1C05  2C07               	goto	u5481
  9501     1C06  2C08               	goto	u5480
  9502     1C07                     u5481:
  9503     1C07  2C0E               	goto	l3212
  9504     1C08                     u5480:
  9505     1C08                     l3210:
  9506                           
  9507                           ;configADC.c: 18:     {;configADC.c: 19:     TRISAbits.TRISA0 = 1;
  9508     1C08  1683               	bsf	3,5	;RP0=1, select bank1
  9509     1C09  1303               	bcf	3,6	;RP1=0, select bank1
  9510     1C0A  1405               	bsf	5,0	;volatile
  9511                           
  9512                           ;configADC.c: 20:     ANSELbits.ANS0 = 1;
  9513     1C0B  1683               	bsf	3,5	;RP0=1, select bank3
  9514     1C0C  1703               	bsf	3,6	;RP1=1, select bank3
  9515     1C0D  1408               	bsf	8,0	;volatile
  9516     1C0E                     l3212:
  9517                           
  9518                           ;configADC.c: 23:     if(canal == 1)
  9519     1C0E  0371               	decf	setupADC@canal,w
  9520     1C0F  1D03               	btfss	3,2
  9521     1C10  2C12               	goto	u5491
  9522     1C11  2C13               	goto	u5490
  9523     1C12                     u5491:
  9524     1C12  2C19               	goto	l112
  9525     1C13                     u5490:
  9526     1C13                     l3214:
  9527                           
  9528                           ;configADC.c: 24:     {;configADC.c: 25:     TRISAbits.TRISA1 = 1;
  9529     1C13  1683               	bsf	3,5	;RP0=1, select bank1
  9530     1C14  1303               	bcf	3,6	;RP1=0, select bank1
  9531     1C15  1485               	bsf	5,1	;volatile
  9532                           
  9533                           ;configADC.c: 26:     ANSELbits.ANS1 = 1;
  9534     1C16  1683               	bsf	3,5	;RP0=1, select bank3
  9535     1C17  1703               	bsf	3,6	;RP1=1, select bank3
  9536     1C18  1488               	bsf	8,1	;volatile
  9537     1C19                     l112:	
  9538                           ;configADC.c: 27:     }
  9539                           
  9540                           
  9541                           ;configADC.c: 31:     ADCON0bits.ADCS0 = 1;
  9542     1C19  1283               	bcf	3,5	;RP0=0, select bank0
  9543     1C1A  1303               	bcf	3,6	;RP1=0, select bank0
  9544     1C1B  171F               	bsf	31,6	;volatile
  9545                           
  9546                           ;configADC.c: 32:     ADCON0bits.ADCS1 = 0;
  9547     1C1C  139F               	bcf	31,7	;volatile
  9548                           
  9549                           ;configADC.c: 34:     ADCON1bits.VCFG0 = 0;
  9550     1C1D  1683               	bsf	3,5	;RP0=1, select bank1
  9551     1C1E  1303               	bcf	3,6	;RP1=0, select bank1
  9552     1C1F  121F               	bcf	31,4	;volatile
  9553                           
  9554                           ;configADC.c: 35:     ADCON1bits.VCFG1 = 0;
  9555     1C20  129F               	bcf	31,5	;volatile
  9556                           
  9557                           ;configADC.c: 37:     ADCON1bits.ADFM = 0;
  9558     1C21  139F               	bcf	31,7	;volatile
  9559                           
  9560                           ;configADC.c: 39:     ADCON0bits.CHS0 = 0;
  9561     1C22  1283               	bcf	3,5	;RP0=0, select bank0
  9562     1C23  1303               	bcf	3,6	;RP1=0, select bank0
  9563     1C24  111F               	bcf	31,2	;volatile
  9564                           
  9565                           ;configADC.c: 40:     ADCON0bits.CHS1 = 0;
  9566     1C25  119F               	bcf	31,3	;volatile
  9567                           
  9568                           ;configADC.c: 41:     ADCON0bits.CHS2 = 0;
  9569     1C26  121F               	bcf	31,4	;volatile
  9570                           
  9571                           ;configADC.c: 42:     ADCON0bits.CHS3 = 0;
  9572     1C27  129F               	bcf	31,5	;volatile
  9573                           
  9574                           ;configADC.c: 44:     ADCON0bits.ADON = 1;
  9575     1C28  141F               	bsf	31,0	;volatile
  9576     1C29                     l3216:
  9577                           
  9578                           ;configADC.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9579     1C29  3042               	movlw	66
  9580     1C2A  00F0               	movwf	??_setupADC
  9581     1C2B                     u6257:
  9582     1C2B  0BF0               	decfsz	??_setupADC,f
  9583     1C2C  2C2B               	goto	u6257
  9584     1C2D  0000               	nop
  9585     1C2E                     l113:
  9586     1C2E  0008               	return
  9587     1C2F                     __end_of_setupADC:
  9588                           
  9589                           	psect	text25
  9590     1B33                     __ptext25:	
  9591 ;; *************** function _setup *****************
  9592 ;; Defined at:
  9593 ;;		line 108 in file "main.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;		None
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  1    wreg      void 
  9600 ;; Registers used:
  9601 ;;		status,2
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9607 ;;      Params:         0       0       0       0       0
  9608 ;;      Locals:         0       0       0       0       0
  9609 ;;      Temps:          0       0       0       0       0
  9610 ;;      Totals:         0       0       0       0       0
  9611 ;;Total ram usage:        0 bytes
  9612 ;; Hardware stack levels used: 1
  9613 ;; This function calls:
  9614 ;;		Nothing
  9615 ;; This function is called by:
  9616 ;;		_main
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620     1B33                     _setup:	
  9621                           ;psect for function _setup
  9622                           
  9623     1B33                     l3176:	
  9624                           ;incstack = 0
  9625                           ; Regs used in _setup: [status,2]
  9626                           
  9627                           
  9628                           ;main.c: 110:     ANSEL = 0;
  9629     1B33  1683               	bsf	3,5	;RP0=1, select bank3
  9630     1B34  1703               	bsf	3,6	;RP1=1, select bank3
  9631     1B35  0188               	clrf	8	;volatile
  9632                           
  9633                           ;main.c: 111:     ANSELH = 0;
  9634     1B36  0189               	clrf	9	;volatile
  9635                           
  9636                           ;main.c: 113:     TRISB = 0;
  9637     1B37  1683               	bsf	3,5	;RP0=1, select bank1
  9638     1B38  1303               	bcf	3,6	;RP1=0, select bank1
  9639     1B39  0186               	clrf	6	;volatile
  9640                           
  9641                           ;main.c: 114:     TRISC = 0;
  9642     1B3A  0187               	clrf	7	;volatile
  9643                           
  9644                           ;main.c: 115:     TRISD = 0;
  9645     1B3B  0188               	clrf	8	;volatile
  9646                           
  9647                           ;main.c: 116:     TRISE = 0;
  9648     1B3C  0189               	clrf	9	;volatile
  9649                           
  9650                           ;main.c: 118:     PORTB = 0;
  9651     1B3D  1283               	bcf	3,5	;RP0=0, select bank0
  9652     1B3E  1303               	bcf	3,6	;RP1=0, select bank0
  9653     1B3F  0186               	clrf	6	;volatile
  9654                           
  9655                           ;main.c: 119:     PORTC = 0;
  9656     1B40  0187               	clrf	7	;volatile
  9657                           
  9658                           ;main.c: 120:     PORTD = 0;
  9659     1B41  0188               	clrf	8	;volatile
  9660                           
  9661                           ;main.c: 121:     PORTE = 0;
  9662     1B42  0189               	clrf	9	;volatile
  9663     1B43                     l51:
  9664     1B43  0008               	return
  9665     1B44                     __end_of_setup:
  9666                           
  9667                           	psect	text26
  9668     1CE0                     __ptext26:	
  9669 ;; *************** function _readADC *****************
  9670 ;; Defined at:
  9671 ;;		line 49 in file "configADC.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;  canal           1    wreg     unsigned char 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;  canal           1    2[COMMON] unsigned char 
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1    wreg      void 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9685 ;;      Params:         0       0       0       0       0
  9686 ;;      Locals:         1       0       0       0       0
  9687 ;;      Temps:          2       0       0       0       0
  9688 ;;      Totals:         3       0       0       0       0
  9689 ;;Total ram usage:        3 bytes
  9690 ;; Hardware stack levels used: 1
  9691 ;; This function calls:
  9692 ;;		Nothing
  9693 ;; This function is called by:
  9694 ;;		_main
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698     1CE0                     _readADC:	
  9699                           ;psect for function _readADC
  9700                           
  9701                           
  9702                           ;incstack = 0
  9703                           ; Regs used in _readADC: [wreg+status,2+status,0]
  9704                           ;readADC@canal stored from wreg
  9705     1CE0  00F2               	movwf	readADC@canal
  9706     1CE1                     l3258:
  9707                           
  9708                           ;configADC.c: 51:     if(canal == 0)
  9709     1CE1  0872               	movf	readADC@canal,w
  9710     1CE2  1D03               	btfss	3,2
  9711     1CE3  2CE5               	goto	u5571
  9712     1CE4  2CE6               	goto	u5570
  9713     1CE5                     u5571:
  9714     1CE5  2D00               	goto	l3268
  9715     1CE6                     u5570:
  9716     1CE6                     l3260:
  9717                           
  9718                           ;configADC.c: 52:     {;configADC.c: 53:     ADCON0bits.CHS = 0b0000;
  9719     1CE6  30C3               	movlw	-61
  9720     1CE7  1283               	bcf	3,5	;RP0=0, select bank0
  9721     1CE8  1303               	bcf	3,6	;RP1=0, select bank0
  9722     1CE9  059F               	andwf	31,f	;volatile
  9723     1CEA                     l3262:
  9724                           
  9725                           ;configADC.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9726     1CEA  3042               	movlw	66
  9727     1CEB  00F0               	movwf	??_readADC
  9728     1CEC                     u6267:
  9729     1CEC  0BF0               	decfsz	??_readADC,f
  9730     1CED  2CEC               	goto	u6267
  9731     1CEE  0000               	nop
  9732     1CEF                     l3264:
  9733                           
  9734                           ;configADC.c: 57:     ADCON0bits.GO = 1;
  9735     1CEF  1283               	bcf	3,5	;RP0=0, select bank0
  9736     1CF0  1303               	bcf	3,6	;RP1=0, select bank0
  9737     1CF1  149F               	bsf	31,1	;volatile
  9738     1CF2                     l117:	
  9739                           ;configADC.c: 58:     while (ADCON0bits.GO == 1){};
  9740                           
  9741     1CF2  189F               	btfsc	31,1	;volatile
  9742     1CF3  2CF5               	goto	u5581
  9743     1CF4  2CF6               	goto	u5580
  9744     1CF5                     u5581:
  9745     1CF5  2CF2               	goto	l117
  9746     1CF6                     u5580:
  9747     1CF6                     l119:
  9748                           
  9749                           ;configADC.c: 59:     ADIF = 0;
  9750     1CF6  130C               	bcf	12,6	;volatile
  9751     1CF7                     l3266:
  9752                           
  9753                           ;configADC.c: 60:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9754     1CF7  301A               	movlw	26
  9755     1CF8  00F1               	movwf	??_readADC+1
  9756     1CF9  30F8               	movlw	248
  9757     1CFA  00F0               	movwf	??_readADC
  9758     1CFB                     u6277:
  9759     1CFB  0BF0               	decfsz	??_readADC,f
  9760     1CFC  2CFB               	goto	u6277
  9761     1CFD  0BF1               	decfsz	??_readADC+1,f
  9762     1CFE  2CFB               	goto	u6277
  9763     1CFF  0000               	nop
  9764     1D00                     l3268:
  9765                           
  9766                           ;configADC.c: 63:     if(canal == 1)
  9767     1D00  0372               	decf	readADC@canal,w
  9768     1D01  1D03               	btfss	3,2
  9769     1D02  2D04               	goto	u5591
  9770     1D03  2D05               	goto	u5590
  9771     1D04                     u5591:
  9772     1D04  2D21               	goto	l124
  9773     1D05                     u5590:
  9774     1D05                     l3270:
  9775                           
  9776                           ;configADC.c: 64:     {;configADC.c: 65:     ADCON0bits.CHS = 0b0001;
  9777     1D05  1283               	bcf	3,5	;RP0=0, select bank0
  9778     1D06  1303               	bcf	3,6	;RP1=0, select bank0
  9779     1D07  081F               	movf	31,w	;volatile
  9780     1D08  39C3               	andlw	-61
  9781     1D09  3804               	iorlw	4
  9782     1D0A  009F               	movwf	31	;volatile
  9783     1D0B                     l3272:
  9784                           
  9785                           ;configADC.c: 67:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9786     1D0B  3042               	movlw	66
  9787     1D0C  00F0               	movwf	??_readADC
  9788     1D0D                     u6287:
  9789     1D0D  0BF0               	decfsz	??_readADC,f
  9790     1D0E  2D0D               	goto	u6287
  9791     1D0F  0000               	nop
  9792     1D10                     l3274:
  9793                           
  9794                           ;configADC.c: 69:     ADCON0bits.GO = 1;
  9795     1D10  1283               	bcf	3,5	;RP0=0, select bank0
  9796     1D11  1303               	bcf	3,6	;RP1=0, select bank0
  9797     1D12  149F               	bsf	31,1	;volatile
  9798     1D13                     l121:	
  9799                           ;configADC.c: 70:     while (ADCON0bits.GO == 1){};
  9800                           
  9801     1D13  189F               	btfsc	31,1	;volatile
  9802     1D14  2D16               	goto	u5601
  9803     1D15  2D17               	goto	u5600
  9804     1D16                     u5601:
  9805     1D16  2D13               	goto	l121
  9806     1D17                     u5600:
  9807     1D17                     l123:
  9808                           
  9809                           ;configADC.c: 71:     ADIF = 0;
  9810     1D17  130C               	bcf	12,6	;volatile
  9811     1D18                     l3276:
  9812                           
  9813                           ;configADC.c: 72:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9814     1D18  301A               	movlw	26
  9815     1D19  00F1               	movwf	??_readADC+1
  9816     1D1A  30F8               	movlw	248
  9817     1D1B  00F0               	movwf	??_readADC
  9818     1D1C                     u6297:
  9819     1D1C  0BF0               	decfsz	??_readADC,f
  9820     1D1D  2D1C               	goto	u6297
  9821     1D1E  0BF1               	decfsz	??_readADC+1,f
  9822     1D1F  2D1C               	goto	u6297
  9823     1D20  0000               	nop
  9824     1D21                     l124:
  9825     1D21  0008               	return
  9826     1D22                     __end_of_readADC:
  9827                           
  9828                           	psect	text27
  9829     11CA                     __ptext27:	
  9830 ;; *************** function ___fldiv *****************
  9831 ;; Defined at:
  9832 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;  a               4   30[BANK0 ] void 
  9835 ;;  b               4   34[BANK0 ] void 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  grs             4   50[BANK0 ] unsigned long 
  9838 ;;  rem             4   43[BANK0 ] unsigned long 
  9839 ;;  new_exp         2   48[BANK0 ] int 
  9840 ;;  aexp            1   55[BANK0 ] unsigned char 
  9841 ;;  bexp            1   54[BANK0 ] unsigned char 
  9842 ;;  sign            1   47[BANK0 ] unsigned char 
  9843 ;; Return value:  Size  Location     Type
  9844 ;;                  4   30[BANK0 ] unsigned char 
  9845 ;; Registers used:
  9846 ;;		wreg, status,2, status,0, btemp+1
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9852 ;;      Params:         0       8       0       0       0
  9853 ;;      Locals:         0      13       0       0       0
  9854 ;;      Temps:          0       5       0       0       0
  9855 ;;      Totals:         0      26       0       0       0
  9856 ;;Total ram usage:       26 bytes
  9857 ;; Hardware stack levels used: 1
  9858 ;; This function calls:
  9859 ;;		Nothing
  9860 ;; This function is called by:
  9861 ;;		_main
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865     11CA                     ___fldiv:	
  9866                           ;psect for function ___fldiv
  9867                           
  9868     11CA                     l3484:	
  9869                           ;incstack = 0
  9870                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9871                           
  9872     11CA  1283               	bcf	3,5	;RP0=0, select bank0
  9873     11CB  1303               	bcf	3,6	;RP1=0, select bank0
  9874     11CC  0845               	movf	___fldiv@b+3,w
  9875     11CD  3980               	andlw	128
  9876     11CE  00CF               	movwf	___fldiv@sign
  9877     11CF                     l3486:
  9878     11CF  0845               	movf	___fldiv@b+3,w
  9879     11D0  00C6               	movwf	??___fldiv
  9880     11D1  0746               	addwf	??___fldiv,w
  9881     11D2  00D6               	movwf	___fldiv@bexp
  9882     11D3                     l3488:
  9883     11D3  1FC4               	btfss	___fldiv@b+2,7
  9884     11D4  29D6               	goto	u5961
  9885     11D5  29D7               	goto	u5960
  9886     11D6                     u5961:
  9887     11D6  29D8               	goto	l3492
  9888     11D7                     u5960:
  9889     11D7                     l3490:
  9890     11D7  1456               	bsf	___fldiv@bexp,0
  9891     11D8                     l3492:
  9892     11D8  0856               	movf	___fldiv@bexp,w
  9893     11D9  1903               	btfsc	3,2
  9894     11DA  29DC               	goto	u5971
  9895     11DB  29DD               	goto	u5970
  9896     11DC                     u5971:
  9897     11DC  29ED               	goto	l3502
  9898     11DD                     u5970:
  9899     11DD                     l3494:
  9900     11DD  0A56               	incf	___fldiv@bexp,w
  9901     11DE  1D03               	btfss	3,2
  9902     11DF  29E1               	goto	u5981
  9903     11E0  29E2               	goto	u5980
  9904     11E1                     u5981:
  9905     11E1  29EA               	goto	l3498
  9906     11E2                     u5980:
  9907     11E2                     l3496:
  9908     11E2  3000               	movlw	0
  9909     11E3  00C5               	movwf	___fldiv@b+3
  9910     11E4  3000               	movlw	0
  9911     11E5  00C4               	movwf	___fldiv@b+2
  9912     11E6  3000               	movlw	0
  9913     11E7  00C3               	movwf	___fldiv@b+1
  9914     11E8  3000               	movlw	0
  9915     11E9  00C2               	movwf	___fldiv@b
  9916     11EA                     l3498:
  9917     11EA  17C4               	bsf	___fldiv@b+2,7
  9918     11EB                     l3500:
  9919     11EB  01C5               	clrf	___fldiv@b+3
  9920     11EC  29F5               	goto	l3504
  9921     11ED                     l3502:
  9922     11ED  3000               	movlw	0
  9923     11EE  00C5               	movwf	___fldiv@b+3
  9924     11EF  3000               	movlw	0
  9925     11F0  00C4               	movwf	___fldiv@b+2
  9926     11F1  3000               	movlw	0
  9927     11F2  00C3               	movwf	___fldiv@b+1
  9928     11F3  3000               	movlw	0
  9929     11F4  00C2               	movwf	___fldiv@b
  9930     11F5                     l3504:
  9931     11F5  0841               	movf	___fldiv@a+3,w
  9932     11F6  3980               	andlw	128
  9933     11F7  00C6               	movwf	??___fldiv
  9934     11F8  0846               	movf	??___fldiv,w
  9935     11F9  06CF               	xorwf	___fldiv@sign,f
  9936     11FA                     l3506:
  9937     11FA  0841               	movf	___fldiv@a+3,w
  9938     11FB  00C6               	movwf	??___fldiv
  9939     11FC  0746               	addwf	??___fldiv,w
  9940     11FD  00D7               	movwf	___fldiv@aexp
  9941     11FE                     l3508:
  9942     11FE  1FC0               	btfss	___fldiv@a+2,7
  9943     11FF  2A01               	goto	u5991
  9944     1200  2A02               	goto	u5990
  9945     1201                     u5991:
  9946     1201  2A03               	goto	l3512
  9947     1202                     u5990:
  9948     1202                     l3510:
  9949     1202  1457               	bsf	___fldiv@aexp,0
  9950     1203                     l3512:
  9951     1203  0857               	movf	___fldiv@aexp,w
  9952     1204  1903               	btfsc	3,2
  9953     1205  2A07               	goto	u6001
  9954     1206  2A08               	goto	u6000
  9955     1207                     u6001:
  9956     1207  2A18               	goto	l3522
  9957     1208                     u6000:
  9958     1208                     l3514:
  9959     1208  0A57               	incf	___fldiv@aexp,w
  9960     1209  1D03               	btfss	3,2
  9961     120A  2A0C               	goto	u6011
  9962     120B  2A0D               	goto	u6010
  9963     120C                     u6011:
  9964     120C  2A15               	goto	l3518
  9965     120D                     u6010:
  9966     120D                     l3516:
  9967     120D  3000               	movlw	0
  9968     120E  00C1               	movwf	___fldiv@a+3
  9969     120F  3000               	movlw	0
  9970     1210  00C0               	movwf	___fldiv@a+2
  9971     1211  3000               	movlw	0
  9972     1212  00BF               	movwf	___fldiv@a+1
  9973     1213  3000               	movlw	0
  9974     1214  00BE               	movwf	___fldiv@a
  9975     1215                     l3518:
  9976     1215  17C0               	bsf	___fldiv@a+2,7
  9977     1216                     l3520:
  9978     1216  01C1               	clrf	___fldiv@a+3
  9979     1217  2A20               	goto	l698
  9980     1218                     l3522:
  9981     1218  3000               	movlw	0
  9982     1219  00C1               	movwf	___fldiv@a+3
  9983     121A  3000               	movlw	0
  9984     121B  00C0               	movwf	___fldiv@a+2
  9985     121C  3000               	movlw	0
  9986     121D  00BF               	movwf	___fldiv@a+1
  9987     121E  3000               	movlw	0
  9988     121F  00BE               	movwf	___fldiv@a
  9989     1220                     l698:
  9990     1220  0841               	movf	___fldiv@a+3,w
  9991     1221  0440               	iorwf	___fldiv@a+2,w
  9992     1222  043F               	iorwf	___fldiv@a+1,w
  9993     1223  043E               	iorwf	___fldiv@a,w
  9994     1224  1D03               	skipz
  9995     1225  2A27               	goto	u6021
  9996     1226  2A28               	goto	u6020
  9997     1227                     u6021:
  9998     1227  2A41               	goto	l3532
  9999     1228                     u6020:
 10000     1228                     l3524:
 10001     1228  3000               	movlw	0
 10002     1229  00C5               	movwf	___fldiv@b+3
 10003     122A  3000               	movlw	0
 10004     122B  00C4               	movwf	___fldiv@b+2
 10005     122C  3000               	movlw	0
 10006     122D  00C3               	movwf	___fldiv@b+1
 10007     122E  3000               	movlw	0
 10008     122F  00C2               	movwf	___fldiv@b
 10009     1230  3080               	movlw	128
 10010     1231  04C4               	iorwf	___fldiv@b+2,f
 10011     1232  307F               	movlw	127
 10012     1233  04C5               	iorwf	___fldiv@b+3,f
 10013     1234                     l3526:
 10014     1234  084F               	movf	___fldiv@sign,w
 10015     1235  00C6               	movwf	??___fldiv
 10016     1236  0846               	movf	??___fldiv,w
 10017     1237  04C5               	iorwf	___fldiv@b+3,f
 10018     1238                     l3528:
 10019     1238  0845               	movf	___fldiv@b+3,w
 10020     1239  00C1               	movwf	?___fldiv+3
 10021     123A  0844               	movf	___fldiv@b+2,w
 10022     123B  00C0               	movwf	?___fldiv+2
 10023     123C  0843               	movf	___fldiv@b+1,w
 10024     123D  00BF               	movwf	?___fldiv+1
 10025     123E  0842               	movf	___fldiv@b,w
 10026     123F  00BE               	movwf	?___fldiv
 10027     1240  2B9C               	goto	l700
 10028     1241                     l3532:
 10029     1241  0856               	movf	___fldiv@bexp,w
 10030     1242  1D03               	btfss	3,2
 10031     1243  2A45               	goto	u6031
 10032     1244  2A46               	goto	u6030
 10033     1245                     u6031:
 10034     1245  2A4F               	goto	l3538
 10035     1246                     u6030:
 10036     1246                     l3534:
 10037     1246  3000               	movlw	0
 10038     1247  00C1               	movwf	?___fldiv+3
 10039     1248  3000               	movlw	0
 10040     1249  00C0               	movwf	?___fldiv+2
 10041     124A  3000               	movlw	0
 10042     124B  00BF               	movwf	?___fldiv+1
 10043     124C  3000               	movlw	0
 10044     124D  00BE               	movwf	?___fldiv
 10045     124E  2B9C               	goto	l700
 10046     124F                     l3538:
 10047     124F  0856               	movf	___fldiv@bexp,w
 10048     1250  00C6               	movwf	??___fldiv
 10049     1251  01C7               	clrf	??___fldiv+1
 10050     1252  0847               	movf	??___fldiv+1,w
 10051     1253  00C9               	movwf	??___fldiv+3
 10052     1254  0857               	movf	___fldiv@aexp,w
 10053     1255  0246               	subwf	??___fldiv,w
 10054     1256  00C8               	movwf	??___fldiv+2
 10055     1257  1C03               	skipc
 10056     1258  03C9               	decf	??___fldiv+3,f
 10057     1259  0848               	movf	??___fldiv+2,w
 10058     125A  3E7F               	addlw	127
 10059     125B  00D0               	movwf	___fldiv@new_exp
 10060     125C  0849               	movf	??___fldiv+3,w
 10061     125D  1803               	skipnc
 10062     125E  3E01               	addlw	1
 10063     125F  3E00               	addlw	0
 10064     1260  00D1               	movwf	___fldiv@new_exp+1
 10065     1261                     l3540:
 10066     1261  0845               	movf	___fldiv@b+3,w
 10067     1262  00CE               	movwf	___fldiv@rem+3
 10068     1263  0844               	movf	___fldiv@b+2,w
 10069     1264  00CD               	movwf	___fldiv@rem+2
 10070     1265  0843               	movf	___fldiv@b+1,w
 10071     1266  00CC               	movwf	___fldiv@rem+1
 10072     1267  0842               	movf	___fldiv@b,w
 10073     1268  00CB               	movwf	___fldiv@rem
 10074     1269                     l3542:
 10075     1269  3000               	movlw	0
 10076     126A  00C5               	movwf	___fldiv@b+3
 10077     126B  3000               	movlw	0
 10078     126C  00C4               	movwf	___fldiv@b+2
 10079     126D  3000               	movlw	0
 10080     126E  00C3               	movwf	___fldiv@b+1
 10081     126F  3000               	movlw	0
 10082     1270  00C2               	movwf	___fldiv@b
 10083     1271                     l3544:
 10084     1271  3000               	movlw	0
 10085     1272  00D5               	movwf	___fldiv@grs+3
 10086     1273  3000               	movlw	0
 10087     1274  00D4               	movwf	___fldiv@grs+2
 10088     1275  3000               	movlw	0
 10089     1276  00D3               	movwf	___fldiv@grs+1
 10090     1277  3000               	movlw	0
 10091     1278  00D2               	movwf	___fldiv@grs
 10092     1279                     l3546:
 10093     1279  01D7               	clrf	___fldiv@aexp
 10094     127A  2AC5               	goto	l3566
 10095     127B                     l3548:
 10096     127B  0857               	movf	___fldiv@aexp,w
 10097     127C  1903               	btfsc	3,2
 10098     127D  2A7F               	goto	u6041
 10099     127E  2A80               	goto	u6040
 10100     127F                     u6041:
 10101     127F  2AA0               	goto	l3558
 10102     1280                     u6040:
 10103     1280                     l3550:
 10104     1280  3001               	movlw	1
 10105     1281  00C6               	movwf	??___fldiv
 10106     1282                     u6055:
 10107     1282  1003               	clrc
 10108     1283  0DCB               	rlf	___fldiv@rem,f
 10109     1284  0DCC               	rlf	___fldiv@rem+1,f
 10110     1285  0DCD               	rlf	___fldiv@rem+2,f
 10111     1286  0DCE               	rlf	___fldiv@rem+3,f
 10112     1287  0BC6               	decfsz	??___fldiv,f
 10113     1288  2A82               	goto	u6055
 10114     1289  3001               	movlw	1
 10115     128A  00C6               	movwf	??___fldiv
 10116     128B                     u6065:
 10117     128B  1003               	clrc
 10118     128C  0DC2               	rlf	___fldiv@b,f
 10119     128D  0DC3               	rlf	___fldiv@b+1,f
 10120     128E  0DC4               	rlf	___fldiv@b+2,f
 10121     128F  0DC5               	rlf	___fldiv@b+3,f
 10122     1290  0BC6               	decfsz	??___fldiv,f
 10123     1291  2A8B               	goto	u6065
 10124     1292                     l3552:
 10125     1292  1FD5               	btfss	___fldiv@grs+3,7
 10126     1293  2A95               	goto	u6071
 10127     1294  2A96               	goto	u6070
 10128     1295                     u6071:
 10129     1295  2A97               	goto	l3556
 10130     1296                     u6070:
 10131     1296                     l3554:
 10132     1296  1442               	bsf	___fldiv@b,0
 10133     1297                     l3556:
 10134     1297  3001               	movlw	1
 10135     1298  00C6               	movwf	??___fldiv
 10136     1299                     u6085:
 10137     1299  1003               	clrc
 10138     129A  0DD2               	rlf	___fldiv@grs,f
 10139     129B  0DD3               	rlf	___fldiv@grs+1,f
 10140     129C  0DD4               	rlf	___fldiv@grs+2,f
 10141     129D  0DD5               	rlf	___fldiv@grs+3,f
 10142     129E  0BC6               	decfsz	??___fldiv,f
 10143     129F  2A99               	goto	u6085
 10144     12A0                     l3558:
 10145     12A0  0841               	movf	___fldiv@a+3,w
 10146     12A1  024E               	subwf	___fldiv@rem+3,w
 10147     12A2  1D03               	skipz
 10148     12A3  2AAE               	goto	u6095
 10149     12A4  0840               	movf	___fldiv@a+2,w
 10150     12A5  024D               	subwf	___fldiv@rem+2,w
 10151     12A6  1D03               	skipz
 10152     12A7  2AAE               	goto	u6095
 10153     12A8  083F               	movf	___fldiv@a+1,w
 10154     12A9  024C               	subwf	___fldiv@rem+1,w
 10155     12AA  1D03               	skipz
 10156     12AB  2AAE               	goto	u6095
 10157     12AC  083E               	movf	___fldiv@a,w
 10158     12AD  024B               	subwf	___fldiv@rem,w
 10159     12AE                     u6095:
 10160     12AE  1C03               	skipc
 10161     12AF  2AB1               	goto	u6091
 10162     12B0  2AB2               	goto	u6090
 10163     12B1                     u6091:
 10164     12B1  2AC1               	goto	l3564
 10165     12B2                     u6090:
 10166     12B2                     l3560:
 10167     12B2  1755               	bsf	___fldiv@grs+3,6
 10168     12B3                     l3562:
 10169     12B3  083E               	movf	___fldiv@a,w
 10170     12B4  02CB               	subwf	___fldiv@rem,f
 10171     12B5  083F               	movf	___fldiv@a+1,w
 10172     12B6  1C03               	skipc
 10173     12B7  0F3F               	incfsz	___fldiv@a+1,w
 10174     12B8  02CC               	subwf	___fldiv@rem+1,f
 10175     12B9  0840               	movf	___fldiv@a+2,w
 10176     12BA  1C03               	skipc
 10177     12BB  0F40               	incfsz	___fldiv@a+2,w
 10178     12BC  02CD               	subwf	___fldiv@rem+2,f
 10179     12BD  0841               	movf	___fldiv@a+3,w
 10180     12BE  1C03               	skipc
 10181     12BF  0F41               	incfsz	___fldiv@a+3,w
 10182     12C0  02CE               	subwf	___fldiv@rem+3,f
 10183     12C1                     l3564:
 10184     12C1  3001               	movlw	1
 10185     12C2  00C6               	movwf	??___fldiv
 10186     12C3  0846               	movf	??___fldiv,w
 10187     12C4  07D7               	addwf	___fldiv@aexp,f
 10188     12C5                     l3566:
 10189     12C5  301A               	movlw	26
 10190     12C6  0257               	subwf	___fldiv@aexp,w
 10191     12C7  1C03               	skipc
 10192     12C8  2ACA               	goto	u6101
 10193     12C9  2ACB               	goto	u6100
 10194     12CA                     u6101:
 10195     12CA  2A7B               	goto	l3548
 10196     12CB                     u6100:
 10197     12CB                     l3568:
 10198     12CB  084E               	movf	___fldiv@rem+3,w
 10199     12CC  044D               	iorwf	___fldiv@rem+2,w
 10200     12CD  044C               	iorwf	___fldiv@rem+1,w
 10201     12CE  044B               	iorwf	___fldiv@rem,w
 10202     12CF  1903               	skipnz
 10203     12D0  2AD2               	goto	u6111
 10204     12D1  2AD3               	goto	u6110
 10205     12D2                     u6111:
 10206     12D2  2AF2               	goto	l3582
 10207     12D3                     u6110:
 10208     12D3                     l3570:
 10209     12D3  1452               	bsf	___fldiv@grs,0
 10210     12D4  2AF2               	goto	l3582
 10211     12D5                     l3572:
 10212     12D5  3001               	movlw	1
 10213     12D6  00C6               	movwf	??___fldiv
 10214     12D7                     u6125:
 10215     12D7  1003               	clrc
 10216     12D8  0DC2               	rlf	___fldiv@b,f
 10217     12D9  0DC3               	rlf	___fldiv@b+1,f
 10218     12DA  0DC4               	rlf	___fldiv@b+2,f
 10219     12DB  0DC5               	rlf	___fldiv@b+3,f
 10220     12DC  0BC6               	decfsz	??___fldiv,f
 10221     12DD  2AD7               	goto	u6125
 10222     12DE                     l3574:
 10223     12DE  1FD5               	btfss	___fldiv@grs+3,7
 10224     12DF  2AE1               	goto	u6131
 10225     12E0  2AE2               	goto	u6130
 10226     12E1                     u6131:
 10227     12E1  2AE3               	goto	l3578
 10228     12E2                     u6130:
 10229     12E2                     l3576:
 10230     12E2  1442               	bsf	___fldiv@b,0
 10231     12E3                     l3578:
 10232     12E3  3001               	movlw	1
 10233     12E4  00C6               	movwf	??___fldiv
 10234     12E5                     u6145:
 10235     12E5  1003               	clrc
 10236     12E6  0DD2               	rlf	___fldiv@grs,f
 10237     12E7  0DD3               	rlf	___fldiv@grs+1,f
 10238     12E8  0DD4               	rlf	___fldiv@grs+2,f
 10239     12E9  0DD5               	rlf	___fldiv@grs+3,f
 10240     12EA  0BC6               	decfsz	??___fldiv,f
 10241     12EB  2AE5               	goto	u6145
 10242     12EC                     l3580:
 10243     12EC  30FF               	movlw	255
 10244     12ED  07D0               	addwf	___fldiv@new_exp,f
 10245     12EE  1803               	skipnc
 10246     12EF  0AD1               	incf	___fldiv@new_exp+1,f
 10247     12F0  30FF               	movlw	255
 10248     12F1  07D1               	addwf	___fldiv@new_exp+1,f
 10249     12F2                     l3582:
 10250     12F2  1FC4               	btfss	___fldiv@b+2,7
 10251     12F3  2AF5               	goto	u6151
 10252     12F4  2AF6               	goto	u6150
 10253     12F5                     u6151:
 10254     12F5  2AD5               	goto	l3572
 10255     12F6                     u6150:
 10256     12F6                     l3584:
 10257     12F6  01D7               	clrf	___fldiv@aexp
 10258     12F7                     l3586:
 10259     12F7  1FD5               	btfss	___fldiv@grs+3,7
 10260     12F8  2AFA               	goto	u6161
 10261     12F9  2AFB               	goto	u6160
 10262     12FA                     u6161:
 10263     12FA  2B17               	goto	l3594
 10264     12FB                     u6160:
 10265     12FB                     l3588:
 10266     12FB  30FF               	movlw	255
 10267     12FC  0552               	andwf	___fldiv@grs,w
 10268     12FD  00C6               	movwf	??___fldiv
 10269     12FE  30FF               	movlw	255
 10270     12FF  0553               	andwf	___fldiv@grs+1,w
 10271     1300  00C7               	movwf	??___fldiv+1
 10272     1301  30FF               	movlw	255
 10273     1302  0554               	andwf	___fldiv@grs+2,w
 10274     1303  00C8               	movwf	??___fldiv+2
 10275     1304  307F               	movlw	127
 10276     1305  0555               	andwf	___fldiv@grs+3,w
 10277     1306  00C9               	movwf	??___fldiv+3
 10278     1307  0849               	movf	??___fldiv+3,w
 10279     1308  0448               	iorwf	??___fldiv+2,w
 10280     1309  0447               	iorwf	??___fldiv+1,w
 10281     130A  0446               	iorwf	??___fldiv,w
 10282     130B  1903               	skipnz
 10283     130C  2B0E               	goto	u6171
 10284     130D  2B0F               	goto	u6170
 10285     130E                     u6171:
 10286     130E  2B12               	goto	l714
 10287     130F                     u6170:
 10288     130F                     l3590:
 10289     130F  01D7               	clrf	___fldiv@aexp
 10290     1310  0AD7               	incf	___fldiv@aexp,f
 10291     1311  2B17               	goto	l3594
 10292     1312                     l714:
 10293     1312  1C42               	btfss	___fldiv@b,0
 10294     1313  2B15               	goto	u6181
 10295     1314  2B16               	goto	u6180
 10296     1315                     u6181:
 10297     1315  2B17               	goto	l3594
 10298     1316                     u6180:
 10299     1316  2B0F               	goto	l3590
 10300     1317                     l3594:
 10301     1317  0857               	movf	___fldiv@aexp,w
 10302     1318  1903               	btfsc	3,2
 10303     1319  2B1B               	goto	u6191
 10304     131A  2B1C               	goto	u6190
 10305     131B                     u6191:
 10306     131B  2B4D               	goto	l3604
 10307     131C                     u6190:
 10308     131C                     l3596:
 10309     131C  3001               	movlw	1
 10310     131D  07C2               	addwf	___fldiv@b,f
 10311     131E  3000               	movlw	0
 10312     131F  1803               	skipnc
 10313     1320  3001               	movlw	1
 10314     1321  07C3               	addwf	___fldiv@b+1,f
 10315     1322  3000               	movlw	0
 10316     1323  1803               	skipnc
 10317     1324  3001               	movlw	1
 10318     1325  07C4               	addwf	___fldiv@b+2,f
 10319     1326  3000               	movlw	0
 10320     1327  1803               	skipnc
 10321     1328  3001               	movlw	1
 10322     1329  07C5               	addwf	___fldiv@b+3,f
 10323     132A                     l3598:
 10324     132A  1C45               	btfss	___fldiv@b+3,0
 10325     132B  2B2D               	goto	u6201
 10326     132C  2B2E               	goto	u6200
 10327     132D                     u6201:
 10328     132D  2B4D               	goto	l3604
 10329     132E                     u6200:
 10330     132E                     l3600:
 10331     132E  0842               	movf	___fldiv@b,w
 10332     132F  00C6               	movwf	??___fldiv
 10333     1330  0843               	movf	___fldiv@b+1,w
 10334     1331  00C7               	movwf	??___fldiv+1
 10335     1332  0844               	movf	___fldiv@b+2,w
 10336     1333  00C8               	movwf	??___fldiv+2
 10337     1334  0845               	movf	___fldiv@b+3,w
 10338     1335  00C9               	movwf	??___fldiv+3
 10339     1336  3001               	movlw	1
 10340     1337  00CA               	movwf	??___fldiv+4
 10341     1338                     u6215:
 10342     1338  0D49               	rlf	??___fldiv+3,w
 10343     1339  0CC9               	rrf	??___fldiv+3,f
 10344     133A  0CC8               	rrf	??___fldiv+2,f
 10345     133B  0CC7               	rrf	??___fldiv+1,f
 10346     133C  0CC6               	rrf	??___fldiv,f
 10347     133D                     u6210:
 10348     133D  0BCA               	decfsz	??___fldiv+4,f
 10349     133E  2B38               	goto	u6215
 10350     133F  0849               	movf	??___fldiv+3,w
 10351     1340  00C5               	movwf	___fldiv@b+3
 10352     1341  0848               	movf	??___fldiv+2,w
 10353     1342  00C4               	movwf	___fldiv@b+2
 10354     1343  0847               	movf	??___fldiv+1,w
 10355     1344  00C3               	movwf	___fldiv@b+1
 10356     1345  0846               	movf	??___fldiv,w
 10357     1346  00C2               	movwf	___fldiv@b
 10358     1347                     l3602:
 10359     1347  3001               	movlw	1
 10360     1348  07D0               	addwf	___fldiv@new_exp,f
 10361     1349  1803               	skipnc
 10362     134A  0AD1               	incf	___fldiv@new_exp+1,f
 10363     134B  3000               	movlw	0
 10364     134C  07D1               	addwf	___fldiv@new_exp+1,f
 10365     134D                     l3604:
 10366     134D  0851               	movf	___fldiv@new_exp+1,w
 10367     134E  3A80               	xorlw	128
 10368     134F  00FF               	movwf	btemp+1
 10369     1350  3080               	movlw	128
 10370     1351  027F               	subwf	btemp+1,w
 10371     1352  1D03               	skipz
 10372     1353  2B56               	goto	u6225
 10373     1354  30FF               	movlw	255
 10374     1355  0250               	subwf	___fldiv@new_exp,w
 10375     1356                     u6225:
 10376     1356  1C03               	skipc
 10377     1357  2B59               	goto	u6221
 10378     1358  2B5A               	goto	u6220
 10379     1359                     u6221:
 10380     1359  2B68               	goto	l3608
 10381     135A                     u6220:
 10382     135A                     l3606:
 10383     135A  30FF               	movlw	255
 10384     135B  1283               	bcf	3,5	;RP0=0, select bank0
 10385     135C  1303               	bcf	3,6	;RP1=0, select bank0
 10386     135D  00D0               	movwf	___fldiv@new_exp
 10387     135E  3000               	movlw	0
 10388     135F  00D1               	movwf	___fldiv@new_exp+1
 10389     1360  3000               	movlw	0
 10390     1361  00C5               	movwf	___fldiv@b+3
 10391     1362  3000               	movlw	0
 10392     1363  00C4               	movwf	___fldiv@b+2
 10393     1364  3000               	movlw	0
 10394     1365  00C3               	movwf	___fldiv@b+1
 10395     1366  3000               	movlw	0
 10396     1367  00C2               	movwf	___fldiv@b
 10397     1368                     l3608:
 10398     1368  1283               	bcf	3,5	;RP0=0, select bank0
 10399     1369  1303               	bcf	3,6	;RP1=0, select bank0
 10400     136A  0851               	movf	___fldiv@new_exp+1,w
 10401     136B  3A80               	xorlw	128
 10402     136C  00FF               	movwf	btemp+1
 10403     136D  3080               	movlw	128
 10404     136E  027F               	subwf	btemp+1,w
 10405     136F  1D03               	skipz
 10406     1370  2B73               	goto	u6235
 10407     1371  3001               	movlw	1
 10408     1372  0250               	subwf	___fldiv@new_exp,w
 10409     1373                     u6235:
 10410     1373  1803               	skipnc
 10411     1374  2B76               	goto	u6231
 10412     1375  2B77               	goto	u6230
 10413     1376                     u6231:
 10414     1376  2B84               	goto	l720
 10415     1377                     u6230:
 10416     1377                     l3610:
 10417     1377  1283               	bcf	3,5	;RP0=0, select bank0
 10418     1378  1303               	bcf	3,6	;RP1=0, select bank0
 10419     1379  01D0               	clrf	___fldiv@new_exp
 10420     137A  01D1               	clrf	___fldiv@new_exp+1
 10421     137B                     l3612:
 10422     137B  3000               	movlw	0
 10423     137C  00C5               	movwf	___fldiv@b+3
 10424     137D  3000               	movlw	0
 10425     137E  00C4               	movwf	___fldiv@b+2
 10426     137F  3000               	movlw	0
 10427     1380  00C3               	movwf	___fldiv@b+1
 10428     1381  3000               	movlw	0
 10429     1382  00C2               	movwf	___fldiv@b
 10430     1383                     l3614:
 10431     1383  01CF               	clrf	___fldiv@sign
 10432     1384                     l720:
 10433     1384  1283               	bcf	3,5	;RP0=0, select bank0
 10434     1385  1303               	bcf	3,6	;RP1=0, select bank0
 10435     1386  0850               	movf	___fldiv@new_exp,w
 10436     1387  00D6               	movwf	___fldiv@bexp
 10437     1388                     l3616:
 10438     1388  1C56               	btfss	___fldiv@bexp,0
 10439     1389  2B8B               	goto	u6241
 10440     138A  2B8C               	goto	u6240
 10441     138B                     u6241:
 10442     138B  2B8E               	goto	l3620
 10443     138C                     u6240:
 10444     138C                     l3618:
 10445     138C  17C4               	bsf	___fldiv@b+2,7
 10446     138D  2B92               	goto	l722
 10447     138E                     l3620:
 10448     138E  307F               	movlw	127
 10449     138F  00C6               	movwf	??___fldiv
 10450     1390  0846               	movf	??___fldiv,w
 10451     1391  05C4               	andwf	___fldiv@b+2,f
 10452     1392                     l722:
 10453     1392  0856               	movf	___fldiv@bexp,w
 10454     1393  00C6               	movwf	??___fldiv
 10455     1394  1003               	clrc
 10456     1395  0C46               	rrf	??___fldiv,w
 10457     1396  00C5               	movwf	___fldiv@b+3
 10458     1397  084F               	movf	___fldiv@sign,w
 10459     1398  00C6               	movwf	??___fldiv
 10460     1399  0846               	movf	??___fldiv,w
 10461     139A  04C5               	iorwf	___fldiv@b+3,f
 10462     139B  2A38               	goto	l3528
 10463     139C                     l700:
 10464     139C  0008               	return
 10465     139D                     __end_of___fldiv:
 10466                           
 10467                           	psect	text28
 10468     1C9E                     __ptext28:	
 10469 ;; *************** function _Lcd_Write_String_4bits *****************
 10470 ;; Defined at:
 10471 ;;		line 99 in file "configLCD_4bits.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  a               2    5[COMMON] PTR unsigned char 
 10474 ;;		 -> main@ADC2(3), main@ADC1(3), STR_3(6), STR_2(4), 
 10475 ;;		 -> STR_1(4), 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  i               2   10[COMMON] int 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      void 
 10480 ;; Registers used:
 10481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10487 ;;      Params:         2       0       0       0       0
 10488 ;;      Locals:         2       0       0       0       0
 10489 ;;      Temps:          3       0       0       0       0
 10490 ;;      Totals:         7       0       0       0       0
 10491 ;;Total ram usage:        7 bytes
 10492 ;; Hardware stack levels used: 1
 10493 ;; Hardware stack levels required when called: 2
 10494 ;; This function calls:
 10495 ;;		_Lcd_Write_Char_4bits
 10496 ;; This function is called by:
 10497 ;;		_main
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501     1C9E                     _Lcd_Write_String_4bits:	
 10502                           ;psect for function _Lcd_Write_String_4bits
 10503                           
 10504     1C9E                     l3250:	
 10505                           ;incstack = 0
 10506                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
 10507                           
 10508                           
 10509                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
 10510     1C9E  01FA               	clrf	Lcd_Write_String_4bits@i
 10511     1C9F  01FB               	clrf	Lcd_Write_String_4bits@i+1
 10512     1CA0  2CC3               	goto	l3256
 10513     1CA1                     l3252:
 10514                           
 10515                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
 10516     1CA1  087A               	movf	Lcd_Write_String_4bits@i,w
 10517     1CA2  0775               	addwf	Lcd_Write_String_4bits@a,w
 10518     1CA3  00F8               	movwf	??_Lcd_Write_String_4bits+1
 10519     1CA4  0876               	movf	Lcd_Write_String_4bits@a+1,w
 10520     1CA5  00F7               	movwf	??_Lcd_Write_String_4bits
 10521     1CA6  1803               	skipnc
 10522     1CA7  0AF7               	incf	??_Lcd_Write_String_4bits,f
 10523     1CA8  1FFA               	btfss	Lcd_Write_String_4bits@i,7
 10524     1CA9  2CAB               	goto	u5540
 10525     1CAA  03F7               	decf	??_Lcd_Write_String_4bits,f
 10526     1CAB                     u5540:
 10527     1CAB  0877               	movf	??_Lcd_Write_String_4bits,w
 10528     1CAC  00F9               	movwf	??_Lcd_Write_String_4bits+2
 10529     1CAD  0879               	movf	??_Lcd_Write_String_4bits+2,w
 10530     1CAE  1283               	bcf	3,5	;RP0=0, select bank0
 10531     1CAF  1303               	bcf	3,6	;RP1=0, select bank0
 10532     1CB0  00FF               	movwf	btemp+1
 10533     1CB1  0878               	movf	??_Lcd_Write_String_4bits+1,w
 10534     1CB2  0084               	movwf	4
 10535     1CB3  160A  158A  2000  160A  158A  	fcall	stringtab
 10536     1CB8  160A  158A  242F  160A  158A  	fcall	_Lcd_Write_Char_4bits
 10537     1CBD                     l3254:
 10538     1CBD  3001               	movlw	1
 10539     1CBE  07FA               	addwf	Lcd_Write_String_4bits@i,f
 10540     1CBF  1803               	skipnc
 10541     1CC0  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
 10542     1CC1  3000               	movlw	0
 10543     1CC2  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
 10544     1CC3                     l3256:
 10545     1CC3  087A               	movf	Lcd_Write_String_4bits@i,w
 10546     1CC4  0775               	addwf	Lcd_Write_String_4bits@a,w
 10547     1CC5  00F8               	movwf	??_Lcd_Write_String_4bits+1
 10548     1CC6  0876               	movf	Lcd_Write_String_4bits@a+1,w
 10549     1CC7  00F7               	movwf	??_Lcd_Write_String_4bits
 10550     1CC8  1803               	skipnc
 10551     1CC9  0AF7               	incf	??_Lcd_Write_String_4bits,f
 10552     1CCA  1FFA               	btfss	Lcd_Write_String_4bits@i,7
 10553     1CCB  2CCD               	goto	u5550
 10554     1CCC  03F7               	decf	??_Lcd_Write_String_4bits,f
 10555     1CCD                     u5550:
 10556     1CCD  0877               	movf	??_Lcd_Write_String_4bits,w
 10557     1CCE  00F9               	movwf	??_Lcd_Write_String_4bits+2
 10558     1CCF  0879               	movf	??_Lcd_Write_String_4bits+2,w
 10559     1CD0  1283               	bcf	3,5	;RP0=0, select bank0
 10560     1CD1  1303               	bcf	3,6	;RP1=0, select bank0
 10561     1CD2  00FF               	movwf	btemp+1
 10562     1CD3  0878               	movf	??_Lcd_Write_String_4bits+1,w
 10563     1CD4  0084               	movwf	4
 10564     1CD5  160A  158A  2000  160A  158A  	fcall	stringtab
 10565     1CDA  3A00               	xorlw	0
 10566     1CDB  1D03               	skipz
 10567     1CDC  2CDE               	goto	u5561
 10568     1CDD  2CDF               	goto	u5560
 10569     1CDE                     u5561:
 10570     1CDE  2CA1               	goto	l3252
 10571     1CDF                     u5560:
 10572     1CDF                     l90:
 10573     1CDF  0008               	return
 10574     1CE0                     __end_of_Lcd_Write_String_4bits:
 10575                           
 10576                           	psect	text29
 10577     1C2F                     __ptext29:	
 10578 ;; *************** function _Lcd_Write_Char_4bits *****************
 10579 ;; Defined at:
 10580 ;;		line 84 in file "configLCD_4bits.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;  a               1    wreg     unsigned char 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  a               1    4[COMMON] unsigned char 
 10585 ;;  y               1    3[COMMON] unsigned char 
 10586 ;;  temp            1    2[COMMON] unsigned char 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		wreg, status,2, status,0, pclath, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10596 ;;      Params:         0       0       0       0       0
 10597 ;;      Locals:         3       0       0       0       0
 10598 ;;      Temps:          1       0       0       0       0
 10599 ;;      Totals:         4       0       0       0       0
 10600 ;;Total ram usage:        4 bytes
 10601 ;; Hardware stack levels used: 1
 10602 ;; Hardware stack levels required when called: 1
 10603 ;; This function calls:
 10604 ;;		_Lcd_Port_4bits
 10605 ;; This function is called by:
 10606 ;;		_Lcd_Write_String_4bits
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610     1C2F                     _Lcd_Write_Char_4bits:	
 10611                           ;psect for function _Lcd_Write_Char_4bits
 10612                           
 10613                           
 10614                           ;incstack = 0
 10615                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
 10616                           ;Lcd_Write_Char_4bits@a stored from wreg
 10617     1C2F  00F4               	movwf	Lcd_Write_Char_4bits@a
 10618     1C30                     l2798:
 10619                           
 10620                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
 10621     1C30  0874               	movf	Lcd_Write_Char_4bits@a,w
 10622     1C31  390F               	andlw	15
 10623     1C32  00F2               	movwf	Lcd_Write_Char_4bits@temp
 10624                           
 10625                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
 10626     1C33  0874               	movf	Lcd_Write_Char_4bits@a,w
 10627     1C34  39F0               	andlw	240
 10628     1C35  00F3               	movwf	Lcd_Write_Char_4bits@y
 10629     1C36                     l2800:
 10630                           
 10631                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
 10632     1C36  1283               	bcf	3,5	;RP0=0, select bank0
 10633     1C37  1303               	bcf	3,6	;RP1=0, select bank0
 10634     1C38  1508               	bsf	8,2	;volatile
 10635     1C39                     l2802:
 10636                           
 10637                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
 10638     1C39  0873               	movf	Lcd_Write_Char_4bits@y,w
 10639     1C3A  00F1               	movwf	??_Lcd_Write_Char_4bits
 10640     1C3B  3004               	movlw	4
 10641     1C3C                     u4355:
 10642     1C3C  1003               	clrc
 10643     1C3D  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
 10644     1C3E  3EFF               	addlw	-1
 10645     1C3F  1D03               	skipz
 10646     1C40  2C3C               	goto	u4355
 10647     1C41  0871               	movf	??_Lcd_Write_Char_4bits,w
 10648     1C42  160A  158A  2370  160A  158A  	fcall	_Lcd_Port_4bits
 10649     1C47                     l2804:
 10650                           
 10651                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
 10652     1C47  1283               	bcf	3,5	;RP0=0, select bank0
 10653     1C48  1303               	bcf	3,6	;RP1=0, select bank0
 10654     1C49  1588               	bsf	8,3	;volatile
 10655     1C4A                     l2806:
 10656                           
 10657                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10658     1C4A  301A               	movlw	26
 10659     1C4B  00F1               	movwf	??_Lcd_Write_Char_4bits
 10660     1C4C                     u6307:
 10661     1C4C  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
 10662     1C4D  2C4C               	goto	u6307
 10663     1C4E  0000               	nop
 10664     1C4F                     l2808:
 10665                           
 10666                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
 10667     1C4F  1283               	bcf	3,5	;RP0=0, select bank0
 10668     1C50  1303               	bcf	3,6	;RP1=0, select bank0
 10669     1C51  1188               	bcf	8,3	;volatile
 10670     1C52                     l2810:
 10671                           
 10672                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
 10673     1C52  0872               	movf	Lcd_Write_Char_4bits@temp,w
 10674     1C53  160A  158A  2370  160A  158A  	fcall	_Lcd_Port_4bits
 10675     1C58                     l2812:
 10676                           
 10677                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
 10678     1C58  1283               	bcf	3,5	;RP0=0, select bank0
 10679     1C59  1303               	bcf	3,6	;RP1=0, select bank0
 10680     1C5A  1588               	bsf	8,3	;volatile
 10681     1C5B                     l2814:
 10682                           
 10683                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10684     1C5B  301A               	movlw	26
 10685     1C5C  00F1               	movwf	??_Lcd_Write_Char_4bits
 10686     1C5D                     u6317:
 10687     1C5D  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
 10688     1C5E  2C5D               	goto	u6317
 10689     1C5F  0000               	nop
 10690     1C60                     l2816:
 10691                           
 10692                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
 10693     1C60  1283               	bcf	3,5	;RP0=0, select bank0
 10694     1C61  1303               	bcf	3,6	;RP1=0, select bank0
 10695     1C62  1188               	bcf	8,3	;volatile
 10696     1C63                     l84:
 10697     1C63  0008               	return
 10698     1C64                     __end_of_Lcd_Write_Char_4bits:
 10699                           
 10700                           	psect	text30
 10701     1D66                     __ptext30:	
 10702 ;; *************** function _Lcd_Set_Cursor_4bits *****************
 10703 ;; Defined at:
 10704 ;;		line 49 in file "configLCD_4bits.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  a               1    wreg     unsigned char 
 10707 ;;  b               1    4[COMMON] unsigned char 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  a               1    6[COMMON] unsigned char 
 10710 ;;  temp            1    9[COMMON] unsigned char 
 10711 ;;  y               1    8[COMMON] unsigned char 
 10712 ;;  z               1    7[COMMON] unsigned char 
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  1    wreg      void 
 10715 ;; Registers used:
 10716 ;;		wreg, status,2, status,0, pclath, cstack
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10722 ;;      Params:         1       0       0       0       0
 10723 ;;      Locals:         4       0       0       0       0
 10724 ;;      Temps:          1       0       0       0       0
 10725 ;;      Totals:         6       0       0       0       0
 10726 ;;Total ram usage:        6 bytes
 10727 ;; Hardware stack levels used: 1
 10728 ;; Hardware stack levels required when called: 2
 10729 ;; This function calls:
 10730 ;;		_Lcd_Cmd_4bits
 10731 ;; This function is called by:
 10732 ;;		_main
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736     1D66                     _Lcd_Set_Cursor_4bits:	
 10737                           ;psect for function _Lcd_Set_Cursor_4bits
 10738                           
 10739                           
 10740                           ;incstack = 0
 10741                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
 10742                           ;Lcd_Set_Cursor_4bits@a stored from wreg
 10743     1D66  00F6               	movwf	Lcd_Set_Cursor_4bits@a
 10744     1D67                     l3230:
 10745                           
 10746                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
 10747     1D67  0376               	decf	Lcd_Set_Cursor_4bits@a,w
 10748     1D68  1D03               	btfss	3,2
 10749     1D69  2D6B               	goto	u5501
 10750     1D6A  2D6C               	goto	u5500
 10751     1D6B                     u5501:
 10752     1D6B  2D89               	goto	l3240
 10753     1D6C                     u5500:
 10754     1D6C                     l3232:
 10755                           
 10756                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
 10757     1D6C  0874               	movf	Lcd_Set_Cursor_4bits@b,w
 10758     1D6D  3E7F               	addlw	127
 10759     1D6E  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
 10760                           
 10761                           ;configLCD_4bits.c: 53:         z = temp >> 4;
 10762     1D6F  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10763     1D70  00F5               	movwf	??_Lcd_Set_Cursor_4bits
 10764     1D71  3004               	movlw	4
 10765     1D72                     u5515:
 10766     1D72  1003               	clrc
 10767     1D73  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
 10768     1D74  3EFF               	addlw	-1
 10769     1D75  1D03               	skipz
 10770     1D76  2D72               	goto	u5515
 10771     1D77  0875               	movf	??_Lcd_Set_Cursor_4bits,w
 10772     1D78  00F7               	movwf	Lcd_Set_Cursor_4bits@z
 10773     1D79                     l3234:
 10774                           
 10775                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
 10776     1D79  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10777     1D7A  390F               	andlw	15
 10778     1D7B  00F8               	movwf	Lcd_Set_Cursor_4bits@y
 10779     1D7C                     l3236:
 10780                           
 10781                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
 10782     1D7C  0877               	movf	Lcd_Set_Cursor_4bits@z,w
 10783     1D7D  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10784     1D82                     l3238:
 10785                           
 10786                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
 10787     1D82  0878               	movf	Lcd_Set_Cursor_4bits@y,w
 10788     1D83  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10789                           
 10790                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
 10791     1D88  2DAB               	goto	l78
 10792     1D89                     l3240:
 10793     1D89  3002               	movlw	2
 10794     1D8A  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
 10795     1D8B  1D03               	btfss	3,2
 10796     1D8C  2D8E               	goto	u5521
 10797     1D8D  2D8F               	goto	u5520
 10798     1D8E                     u5521:
 10799     1D8E  2DAB               	goto	l78
 10800     1D8F                     u5520:
 10801     1D8F                     l3242:
 10802                           
 10803                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
 10804     1D8F  0874               	movf	Lcd_Set_Cursor_4bits@b,w
 10805     1D90  3EBF               	addlw	191
 10806     1D91  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
 10807                           
 10808                           ;configLCD_4bits.c: 59:         z = temp >> 4;
 10809     1D92  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10810     1D93  00F5               	movwf	??_Lcd_Set_Cursor_4bits
 10811     1D94  3004               	movlw	4
 10812     1D95                     u5535:
 10813     1D95  1003               	clrc
 10814     1D96  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
 10815     1D97  3EFF               	addlw	-1
 10816     1D98  1D03               	skipz
 10817     1D99  2D95               	goto	u5535
 10818     1D9A  0875               	movf	??_Lcd_Set_Cursor_4bits,w
 10819     1D9B  00F7               	movwf	Lcd_Set_Cursor_4bits@z
 10820     1D9C                     l3244:
 10821                           
 10822                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
 10823     1D9C  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10824     1D9D  390F               	andlw	15
 10825     1D9E  00F8               	movwf	Lcd_Set_Cursor_4bits@y
 10826     1D9F                     l3246:
 10827                           
 10828                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
 10829     1D9F  0877               	movf	Lcd_Set_Cursor_4bits@z,w
 10830     1DA0  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10831     1DA5                     l3248:
 10832                           
 10833                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
 10834     1DA5  0878               	movf	Lcd_Set_Cursor_4bits@y,w
 10835     1DA6  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10836     1DAB                     l78:
 10837     1DAB  0008               	return
 10838     1DAC                     __end_of_Lcd_Set_Cursor_4bits:
 10839                           
 10840                           	psect	text31
 10841     1DFA                     __ptext31:	
 10842 ;; *************** function _Lcd_Init_4bits *****************
 10843 ;; Defined at:
 10844 ;;		line 66 in file "configLCD_4bits.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;		None
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;		None
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      void 
 10851 ;; Registers used:
 10852 ;;		wreg, status,2, status,0, pclath, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10858 ;;      Params:         0       0       0       0       0
 10859 ;;      Locals:         0       0       0       0       0
 10860 ;;      Temps:          2       0       0       0       0
 10861 ;;      Totals:         2       0       0       0       0
 10862 ;;Total ram usage:        2 bytes
 10863 ;; Hardware stack levels used: 1
 10864 ;; Hardware stack levels required when called: 2
 10865 ;; This function calls:
 10866 ;;		_Lcd_Cmd_4bits
 10867 ;;		_Lcd_Port_4bits
 10868 ;; This function is called by:
 10869 ;;		_main
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873     1DFA                     _Lcd_Init_4bits:	
 10874                           ;psect for function _Lcd_Init_4bits
 10875                           
 10876     1DFA                     l3218:	
 10877                           ;incstack = 0
 10878                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
 10879                           
 10880                           
 10881                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
 10882     1DFA  3000               	movlw	0
 10883     1DFB  160A  158A  2370  160A  158A  	fcall	_Lcd_Port_4bits
 10884     1E00                     l3220:
 10885                           
 10886                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10887     1E00  3034               	movlw	52
 10888     1E01  00F5               	movwf	??_Lcd_Init_4bits+1
 10889     1E02  30F1               	movlw	241
 10890     1E03  00F4               	movwf	??_Lcd_Init_4bits
 10891     1E04                     u6327:
 10892     1E04  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10893     1E05  2E04               	goto	u6327
 10894     1E06  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10895     1E07  2E04               	goto	u6327
 10896     1E08  2E09               	nop2
 10897     1E09                     l3222:
 10898                           
 10899                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
 10900     1E09  3003               	movlw	3
 10901     1E0A  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10902                           
 10903                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10904     1E0F  300D               	movlw	13
 10905     1E10  00F5               	movwf	??_Lcd_Init_4bits+1
 10906     1E11  30FB               	movlw	251
 10907     1E12  00F4               	movwf	??_Lcd_Init_4bits
 10908     1E13                     u6337:
 10909     1E13  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10910     1E14  2E13               	goto	u6337
 10911     1E15  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10912     1E16  2E13               	goto	u6337
 10913     1E17  2E18               	nop2
 10914     1E18                     l3224:
 10915                           
 10916                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
 10917     1E18  3003               	movlw	3
 10918     1E19  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10919     1E1E                     l3226:
 10920                           
 10921                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10922     1E1E  301D               	movlw	29
 10923     1E1F  00F5               	movwf	??_Lcd_Init_4bits+1
 10924     1E20  3091               	movlw	145
 10925     1E21  00F4               	movwf	??_Lcd_Init_4bits
 10926     1E22                     u6347:
 10927     1E22  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10928     1E23  2E22               	goto	u6347
 10929     1E24  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10930     1E25  2E22               	goto	u6347
 10931                           
 10932                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
 10933     1E26  3003               	movlw	3
 10934     1E27  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10935                           
 10936                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
 10937     1E2C  3002               	movlw	2
 10938     1E2D  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10939                           
 10940                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
 10941     1E32  3002               	movlw	2
 10942     1E33  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10943                           
 10944                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
 10945     1E38  3008               	movlw	8
 10946     1E39  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10947                           
 10948                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
 10949     1E3E  3000               	movlw	0
 10950     1E3F  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10951                           
 10952                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
 10953     1E44  300C               	movlw	12
 10954     1E45  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10955                           
 10956                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
 10957     1E4A  3000               	movlw	0
 10958     1E4B  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10959                           
 10960                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
 10961     1E50  3006               	movlw	6
 10962     1E51  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 10963     1E56                     l81:
 10964     1E56  0008               	return
 10965     1E57                     __end_of_Lcd_Init_4bits:
 10966                           
 10967                           	psect	text32
 10968     1B26                     __ptext32:	
 10969 ;; *************** function _Lcd_Clear_4bits *****************
 10970 ;; Defined at:
 10971 ;;		line 44 in file "configLCD_4bits.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;		None
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;		None
 10976 ;; Return value:  Size  Location     Type
 10977 ;;                  1    wreg      void 
 10978 ;; Registers used:
 10979 ;;		wreg, status,2, status,0, pclath, cstack
 10980 ;; Tracked objects:
 10981 ;;		On entry : 0/0
 10982 ;;		On exit  : 0/0
 10983 ;;		Unchanged: 0/0
 10984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10985 ;;      Params:         0       0       0       0       0
 10986 ;;      Locals:         0       0       0       0       0
 10987 ;;      Temps:          0       0       0       0       0
 10988 ;;      Totals:         0       0       0       0       0
 10989 ;;Total ram usage:        0 bytes
 10990 ;; Hardware stack levels used: 1
 10991 ;; Hardware stack levels required when called: 2
 10992 ;; This function calls:
 10993 ;;		_Lcd_Cmd_4bits
 10994 ;; This function is called by:
 10995 ;;		_main
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999     1B26                     _Lcd_Clear_4bits:	
 11000                           ;psect for function _Lcd_Clear_4bits
 11001                           
 11002     1B26                     l3228:	
 11003                           ;incstack = 0
 11004                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
 11005                           
 11006                           
 11007                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
 11008     1B26  3000               	movlw	0
 11009     1B27  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 11010                           
 11011                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
 11012     1B2C  3001               	movlw	1
 11013     1B2D  160A  158A  2356  160A  158A  	fcall	_Lcd_Cmd_4bits
 11014     1B32                     l72:
 11015     1B32  0008               	return
 11016     1B33                     __end_of_Lcd_Clear_4bits:
 11017                           
 11018                           	psect	text33
 11019     1B56                     __ptext33:	
 11020 ;; *************** function _Lcd_Cmd_4bits *****************
 11021 ;; Defined at:
 11022 ;;		line 36 in file "configLCD_4bits.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;  a               1    wreg     unsigned char 
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;  a               1    3[COMMON] unsigned char 
 11027 ;; Return value:  Size  Location     Type
 11028 ;;                  1    wreg      void 
 11029 ;; Registers used:
 11030 ;;		wreg, status,2, status,0, pclath, cstack
 11031 ;; Tracked objects:
 11032 ;;		On entry : 0/0
 11033 ;;		On exit  : 0/0
 11034 ;;		Unchanged: 0/0
 11035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11036 ;;      Params:         0       0       0       0       0
 11037 ;;      Locals:         1       0       0       0       0
 11038 ;;      Temps:          2       0       0       0       0
 11039 ;;      Totals:         3       0       0       0       0
 11040 ;;Total ram usage:        3 bytes
 11041 ;; Hardware stack levels used: 1
 11042 ;; Hardware stack levels required when called: 1
 11043 ;; This function calls:
 11044 ;;		_Lcd_Port_4bits
 11045 ;; This function is called by:
 11046 ;;		_Lcd_Clear_4bits
 11047 ;;		_Lcd_Set_Cursor_4bits
 11048 ;;		_Lcd_Init_4bits
 11049 ;;		_Lcd_Shift_Right_4bits
 11050 ;;		_Lcd_Shift_Left_4bits
 11051 ;; This function uses a non-reentrant model
 11052 ;;
 11053                           
 11054     1B56                     _Lcd_Cmd_4bits:	
 11055                           ;psect for function _Lcd_Cmd_4bits
 11056                           
 11057                           
 11058                           ;incstack = 0
 11059                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
 11060                           ;Lcd_Cmd_4bits@a stored from wreg
 11061     1B56  00F3               	movwf	Lcd_Cmd_4bits@a
 11062     1B57                     l2788:
 11063                           
 11064                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
 11065     1B57  1283               	bcf	3,5	;RP0=0, select bank0
 11066     1B58  1303               	bcf	3,6	;RP1=0, select bank0
 11067     1B59  1108               	bcf	8,2	;volatile
 11068     1B5A                     l2790:
 11069                           
 11070                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
 11071     1B5A  0873               	movf	Lcd_Cmd_4bits@a,w
 11072     1B5B  160A  158A  2370  160A  158A  	fcall	_Lcd_Port_4bits
 11073     1B60                     l2792:
 11074                           
 11075                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
 11076     1B60  1283               	bcf	3,5	;RP0=0, select bank0
 11077     1B61  1303               	bcf	3,6	;RP1=0, select bank0
 11078     1B62  1588               	bsf	8,3	;volatile
 11079     1B63                     l2794:
 11080                           
 11081                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11082     1B63  300B               	movlw	11
 11083     1B64  00F2               	movwf	??_Lcd_Cmd_4bits+1
 11084     1B65  3062               	movlw	98
 11085     1B66  00F1               	movwf	??_Lcd_Cmd_4bits
 11086     1B67                     u6357:
 11087     1B67  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
 11088     1B68  2B67               	goto	u6357
 11089     1B69  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
 11090     1B6A  2B67               	goto	u6357
 11091     1B6B  0000               	nop
 11092     1B6C                     l2796:
 11093                           
 11094                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
 11095     1B6C  1283               	bcf	3,5	;RP0=0, select bank0
 11096     1B6D  1303               	bcf	3,6	;RP1=0, select bank0
 11097     1B6E  1188               	bcf	8,3	;volatile
 11098     1B6F                     l69:
 11099     1B6F  0008               	return
 11100     1B70                     __end_of_Lcd_Cmd_4bits:
 11101                           
 11102                           	psect	text34
 11103     1B70                     __ptext34:	
 11104 ;; *************** function _Lcd_Port_4bits *****************
 11105 ;; Defined at:
 11106 ;;		line 14 in file "configLCD_4bits.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  a               1    wreg     unsigned char 
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;  a               1    0[COMMON] unsigned char 
 11111 ;; Return value:  Size  Location     Type
 11112 ;;                  1    wreg      void 
 11113 ;; Registers used:
 11114 ;;		wreg
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/0
 11117 ;;		On exit  : 0/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11120 ;;      Params:         0       0       0       0       0
 11121 ;;      Locals:         1       0       0       0       0
 11122 ;;      Temps:          0       0       0       0       0
 11123 ;;      Totals:         1       0       0       0       0
 11124 ;;Total ram usage:        1 bytes
 11125 ;; Hardware stack levels used: 1
 11126 ;; This function calls:
 11127 ;;		Nothing
 11128 ;; This function is called by:
 11129 ;;		_Lcd_Cmd_4bits
 11130 ;;		_Lcd_Init_4bits
 11131 ;;		_Lcd_Write_Char_4bits
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135     1B70                     _Lcd_Port_4bits:	
 11136                           ;psect for function _Lcd_Port_4bits
 11137                           
 11138                           
 11139                           ;incstack = 0
 11140                           ; Regs used in _Lcd_Port_4bits: [wreg]
 11141                           ;Lcd_Port_4bits@a stored from wreg
 11142     1B70  00F0               	movwf	Lcd_Port_4bits@a
 11143     1B71                     l2314:
 11144                           
 11145                           ;configLCD_4bits.c: 15:     if (a & 1)
 11146     1B71  1C70               	btfss	Lcd_Port_4bits@a,0
 11147     1B72  2B74               	goto	u3161
 11148     1B73  2B75               	goto	u3160
 11149     1B74                     u3161:
 11150     1B74  2B79               	goto	l58
 11151     1B75                     u3160:
 11152     1B75                     l2316:
 11153                           
 11154                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
 11155     1B75  1283               	bcf	3,5	;RP0=0, select bank0
 11156     1B76  1303               	bcf	3,6	;RP1=0, select bank0
 11157     1B77  1608               	bsf	8,4	;volatile
 11158     1B78  2B7C               	goto	l59
 11159     1B79                     l58:	
 11160                           ;configLCD_4bits.c: 17:     else
 11161                           
 11162                           
 11163                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
 11164     1B79  1283               	bcf	3,5	;RP0=0, select bank0
 11165     1B7A  1303               	bcf	3,6	;RP1=0, select bank0
 11166     1B7B  1208               	bcf	8,4	;volatile
 11167     1B7C                     l59:
 11168                           
 11169                           ;configLCD_4bits.c: 20:     if (a & 2)
 11170     1B7C  1CF0               	btfss	Lcd_Port_4bits@a,1
 11171     1B7D  2B7F               	goto	u3171
 11172     1B7E  2B80               	goto	u3170
 11173     1B7F                     u3171:
 11174     1B7F  2B82               	goto	l60
 11175     1B80                     u3170:
 11176     1B80                     l2318:
 11177                           
 11178                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
 11179     1B80  1688               	bsf	8,5	;volatile
 11180     1B81  2B83               	goto	l61
 11181     1B82                     l60:	
 11182                           ;configLCD_4bits.c: 22:     else
 11183                           
 11184                           
 11185                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
 11186     1B82  1288               	bcf	8,5	;volatile
 11187     1B83                     l61:
 11188                           
 11189                           ;configLCD_4bits.c: 25:     if (a & 4)
 11190     1B83  1D70               	btfss	Lcd_Port_4bits@a,2
 11191     1B84  2B86               	goto	u3181
 11192     1B85  2B87               	goto	u3180
 11193     1B86                     u3181:
 11194     1B86  2B89               	goto	l62
 11195     1B87                     u3180:
 11196     1B87                     l2320:
 11197                           
 11198                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
 11199     1B87  1708               	bsf	8,6	;volatile
 11200     1B88  2B8A               	goto	l63
 11201     1B89                     l62:	
 11202                           ;configLCD_4bits.c: 27:     else
 11203                           
 11204                           
 11205                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
 11206     1B89  1308               	bcf	8,6	;volatile
 11207     1B8A                     l63:
 11208                           
 11209                           ;configLCD_4bits.c: 30:     if (a & 8)
 11210     1B8A  1DF0               	btfss	Lcd_Port_4bits@a,3
 11211     1B8B  2B8D               	goto	u3191
 11212     1B8C  2B8E               	goto	u3190
 11213     1B8D                     u3191:
 11214     1B8D  2B90               	goto	l64
 11215     1B8E                     u3190:
 11216     1B8E                     l2322:
 11217                           
 11218                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
 11219     1B8E  1788               	bsf	8,7	;volatile
 11220     1B8F  2B91               	goto	l66
 11221     1B90                     l64:	
 11222                           ;configLCD_4bits.c: 32:     else
 11223                           
 11224                           
 11225                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
 11226     1B90  1388               	bcf	8,7	;volatile
 11227     1B91                     l66:
 11228     1B91  0008               	return
 11229     1B92                     __end_of_Lcd_Port_4bits:
 11230     007E                     btemp	set	126	;btemp
 11231     007E                     wtemp0	set	126
 11232                           
 11233                           	psect	idloc
 11234                           
 11235                           ;Config register IDLOC0 @ 0x2000
 11236                           ;	unspecified, using default values
 11237     2000                     	org	8192
 11238     2000  3FFF               	dw	16383
 11239                           
 11240                           ;Config register IDLOC1 @ 0x2001
 11241                           ;	unspecified, using default values
 11242     2001                     	org	8193
 11243     2001  3FFF               	dw	16383
 11244                           
 11245                           ;Config register IDLOC2 @ 0x2002
 11246                           ;	unspecified, using default values
 11247     2002                     	org	8194
 11248     2002  3FFF               	dw	16383
 11249                           
 11250                           ;Config register IDLOC3 @ 0x2003
 11251                           ;	unspecified, using default values
 11252     2003                     	org	8195
 11253     2003  3FFF               	dw	16383
 11254                           
 11255                           	psect	config
 11256                           
 11257                           ;Config register CONFIG1 @ 0x2007
 11258                           ;	Oscillator Selection bits
 11259                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11260                           ;	Watchdog Timer Enable bit
 11261                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11262                           ;	Power-up Timer Enable bit
 11263                           ;	PWRTE = OFF, PWRT disabled
 11264                           ;	RE3/MCLR pin function select bit
 11265                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11266                           ;	Code Protection bit
 11267                           ;	CP = OFF, Program memory code protection is disabled
 11268                           ;	Data Code Protection bit
 11269                           ;	CPD = OFF, Data memory code protection is disabled
 11270                           ;	Brown Out Reset Selection bits
 11271                           ;	BOREN = OFF, BOR disabled
 11272                           ;	Internal External Switchover bit
 11273                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11274                           ;	Fail-Safe Clock Monitor Enabled bit
 11275                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11276                           ;	Low Voltage Programming Enable bit
 11277                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11278                           ;	In-Circuit Debugger Mode bit
 11279                           ;	DEBUG = 0x1, unprogramme 11280     2007                     	org	8199
 11281     2007  20D4               	dw	8404
 11282                           
 11283                           ;Config register CONFIG2 @ 0x2008
 11284                           ;	Brown-out Reset Selection bit
 11285                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11286                           ;	Flash Program Memory Self Write Enable bits
 11287                           ;	WRT = OFF, Write protection off
 11288     2008                     	org	8200
 11289     2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     53      53
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> main@ADC2(BANK1[3]), main@ADC1(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 6
		 -> main@ADC2(BANK1[3]), main@ADC1(BANK1[3]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   40475
                                             35 BANK1     18    18      0
                    _Lcd_Clear_4bits
                     _Lcd_Init_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _readADC
                              _setup
                           _setupADC
                        _setupINTOSC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31595
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2     648
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1     760
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Init_4bits
     _Lcd_Cmd_4bits
     _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _readADC
   _setup
   _setupADC
   _setupINTOSC
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     35      35       7       66.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 01 17:32:36 2023

                  ___fldiv@aexp 0057                    ___fldiv@bexp 0056                               pc 0002  
                  ___fldiv@sign 004F                              l51 1B43                              l60 1B82  
                            l61 1B83                              l62 1B89                              l63 1B8A  
                            l64 1B90                              l72 1B32                              l81 1E56  
                            l66 1B91                              l58 1B79                              l90 1CDF  
                            l59 1B7C                              l84 1C63                              l69 1B6F  
                            l78 1DAB                    ___awdiv@sign 0021                              fsr 0004  
           ___wmul@multiplicand 0072             __Umul8_16@word_mpld 0076                             l112 1C19  
                           l121 1D13                             l113 1C2E                             l130 1E73  
                           l123 1D17                             l131 1E83                             l124 1D21  
                           l132 1E90                             l117 1CF2                             l133 1E9E  
                           l134 1EAC                             l119 1CF6                             l311 07FB  
                           l136 1EB8                             l129 1E65                             l305 07B8  
                           l315 1BC2                             l501 1DC8                             l317 1BDA  
                           l245 0FFF                             l502 1DE4                             l510 08A3  
                           l238 15A7                             l503 1DF9                             l351 1F1E  
                           l264 0229                             l506 081E                             l514 1B25  
                           l290 0619                             l700 139C                             l532 1111  
                           l509 088A                             l525 1FEA                             l533 1085  
                           l621 1D65                             l518 1FFF                             l543 1104  
                           l631 1C9D                             l720 1384                             l528 1FFF  
                           l536 10D4                             l481 105A                             l297 0657  
                           l722 1392                             l714 1312                             l642 1603  
                           l802 1B55                             l571 0058                             l468 1F87  
                           l485 095B                             l646 1686                             l486 08C2  
                           l750 0C94                             l663 174F                             l655 17FF  
                           l648 165F                             l496 094E                             l744 0C10  
                           l673 1795                             l489 091E                             l738 0CA0  
                           l667 1773                             l684 17F5                             l676 17D3  
                           l685 17FF                             l757 1BEF                             l782 1134  
                           l759 1C01                             l688 1BB5                             l784 11C9  
                           l698 1220                             l795 1193                             l796 119F  
                           l788 1177                             fsr0 0004                             indf 0000  
                  ___awmod@sign 0076                    ___flmul@aexp 0036                    ___flmul@bexp 0037  
                  ___flmul@sign 0031                    ___flmul@temp 003C                    ___flmul@prod 0038  
                  ___fltol@exp1 005A                            l3000 1BD0                            l3010 1ECC  
                          l3002 1BD6                            l3100 1FDF                            l3020 1F06  
                          l3012 1ED9                            l2300 1BDC                            l3030 1DAC  
                          l3102 1FEF                            l3022 1F07                            l3014 1EDD  
                          l3006 1EB9                            l3110 0010                            l2310 1BFD  
                          l2302 1BDE                            l2320 1B87                            l3200 1EA5  
                          l3032 1DC0                            l3104 1FF4                            l3024 1F10  
                          l3016 1EE6                            l3008 1EC9                            l3120 004A  
                          l3112 001D                            l2304 1BE5                            l2400 1051  
                          l2322 1B8E                            l2314 1B71                            l3210 1C08  
                          l3202 1EAB                            l3034 1DDC                            l3050 083E  
                          l3042 0802                            l3018 1EF8                            l3026 1F16  
                          l3114 0021                            l3122 0050                            l3106 0005  
                          l2306 1BE9                            l2410 1D2A                            l2330 1F2B  
                          l2402 1056                            l2316 1B75                            l3220 1E00  
                          l3212 1C0E                            l3204 1EB3                            l3036 1DF6  
                          l3052 0862                            l3044 0816                            l2500 160D  
                          l3116 0033                            l3108 000D                            l3140 113C  
                          l3132 1113                            l2308 1BF8                            l2420 1D4D  
                          l2412 1D2D                            l2340 1F3C                            l2332 1F2D  
                          l2324 1F1F                            l3300 0210                            l2318 1B80  
                          l3222 1E09                            l3230 1D67                            l3214 1C13  
                          l3206 1EB7                            l3038 1DF8                            l3054 0866  
                          l3046 0832                            l3062 1B1B                            l2510 1619  
                          l2502 1611                            l3126 1B92                            l3070 1F88  
                          l3118 0041                            l3150 115C                            l3134 1118  
                          l2422 1D53                            l2414 1D34                            l2406 1D22  
                          l2350 1F54                            l2342 1F42                            l2334 1F31  
                          l2326 1F22                            l3310 022B                            l3302 0214  
                          l3224 1E18                            l3232 1D6C                            l3240 1D89  
                          l3216 1C29                            l3208 1C03                            l3056 08A0  
                          l3048 083A                            l3064 1B23                            l2600 1777  
                          l2520 1623                            l2512 161B                            l2504 1613  
                          l3128 1B96                            l3080 1FB0                            l3072 1F93  
                          l3160 118D                            l3152 1160                            l3144 1145  
                          l3136 111C                            l2424 1D54                            l2416 1D38  
                          l2408 1D24                            l2440 1C78                            l2432 1C64  
                          l2352 1F65                            l2344 1F45                            l2360 1F79  
                          l2336 1F36                            l2328 1F26                            l3400 059F  
                          l3320 0269                            l3312 0247                            l3304 0225  
                          l3226 1E1E                            l3218 1DFA                            l3242 1D8F  
                          l3234 1D79                            l3250 1C9E                            l3058 08A2  
                          l3066 1B25                            l2602 177A                            l2610 1787  
                          l2530 162D                            l2522 1625                            l2514 161D  
                          l2506 1615                            l3082 1FB8                            l3170 11C0  
                          l3162 1197                            l3154 116E                            l3146 1148  
                          l3138 112C                            l2426 1D5B                            l2418 1D3C  
                          l2442 1C7C                            l2434 1C6A                            l2450 1C99  
                          l2362 1F7E                            l2354 1F6B                            l2346 1F4C  
                          l2338 1F3A                            l2370 1003                            l3410 060F  
                          l3402 05AB                            l3330 02A7                            l3322 026D  
                          l3314 0253                            l3306 0227                            l3228 1B26  
                          l3244 1D9C                            l3236 1D7C                            l3252 1CA1  
                          l3500 11EB                            l3260 1CE6                            l3180 1E5E  
                          l2620 179A                            l2612 1788                            l2604 177C  
                          l2540 166A                            l2524 1627                            l2516 161F  
                          l2508 1617                            l2532 162F                            l2460 15B5  
                          l3092 1FC6                            l3084 1FBA                            l3076 1F9C  
                          l3172 11C1                            l3164 11A1                            l3156 117E  
                          l3148 1155                            l2700 0A15                            l2428 1D61  
                          l2444 1C86                            l2436 1C6D                            l2364 1F83  
                          l2356 1F6C                            l2348 1F50                            l2380 1017  
                          l2372 1007                            l3420 063F                            l3412 0621  
                          l3404 05B0                            l3340 02F7                            l3332 02C0  
                          l3324 0286                            l3316 0257                            l3246 1D9F  
                          l3238 1D82                            l3254 1CBD                            l3510 1202  
                          l3502 11ED                            l3270 1D05                            l3262 1CEA  
                          l3190 1E82                            l3182 1E64                            l2630 17D8  
                          l2622 179F                            l2614 178C                            l2606 1781  
                          l2542 166C                            l2550 167E                            l2534 1630  
                          l2526 1629                            l2518 1621                            l2470 15C9  
                          l2462 15B6                            l2454 15A8                            l3086 1FBE  
                          l3094 1FD8                            l3078 1FAF                            l3166 11B7  
                          l3158 1189                            l2710 0A8E                            l2702 0A3F  
                          l2446 1C8C                            l2438 1C74                            l2358 1F73  
                          l2390 102F                            l2382 101D                            l2374 100C  
                          l3430 066A                            l3422 064E                            l3414 0628  
                          l3406 05B5                            l3350 0384                            l3342 02FB  
                          l3334 02CB                            l3326 029F                            l3318 025B  
                          l3248 1DA5                            l2800 1C36                            l3256 1CC3  
                          l3600 132E                            l3520 1216                            l3512 1203  
                          l3504 11F5                            l3272 1D0B                            l3264 1CEF  
                          l3176 1B33                            l3192 1E89                            l3184 1E6C  
                          l2640 17EF                            l2632 17DD                            l2624 17AD  
                          l2616 1792                            l2608 1783                            l2560 16AF  
                          l2552 168A                            l2544 1670                            l2536 1647  
                          l2528 162B                            l2480 15DD                            l2464 15BB  
                          l2472 15CB                            l2456 15AD                            l3168 11BC  
                          l2720 0B0A                            l2712 0AAB                            l2704 0A5B  
                          l2448 1C93                            l2392 1039                            l2384 1020  
                          l2376 100E                            l2368 1002                            l3440 0741  
                          l3432 066E                            l3424 0653                            l3416 062C  
                          l3408 05F0                            l3360 0406                            l3352 038D  
                          l3344 0301                            l3336 02D1                            l3328 02A3  
                          l3280 01C2                            l2810 1C52                            l2802 1C39  
                          l3610 1377                            l3602 1347                            l3514 1208  
                          l3522 1218                            l3506 11FA                            l3274 1D10  
                          l3266 1CF7                            l3258 1CE1                            l3194 1E8F  
                          l3186 1E72                            l3178 1E57                            l2642 17F1  
                          l2634 17E5                            l2626 17B1                            l2570 16C4  
                          l2562 16B3                            l2554 168F                            l2546 1671  
                          l2538 1663                            l2490 15F0                            l2482 15E1  
                          l2474 15D3                            l2466 15C0                            l2458 15B1  
                          l2730 0BBC                            l2722 0B35                            l2714 0AB9  
                          l2706 0A77                            l2650 0961                            l2394 103F  
                          l2386 1027                            l2378 1012                            l3450 0797  
                          l3442 074B                            l3434 068C                            l3426 0660  
                          l3418 0632                            l3370 0481                            l3362 0415  
                          l3354 03A8                            l3346 0320                            l3338 02E4  
                          l3290 01E0                            l3282 01C8                            l2812 1C58  
                          l2804 1C47                            l3620 138E                            l3612 137B  
                          l3604 134D                            l3540 1261                            l3524 1228  
                          l3532 1241                            l3516 120D                            l3508 11FE  
                          l3276 1D18                            l3268 1D00                            l3196 1E97  
                          l3188 1E7C                            l2644 17FA                            l2636 17EA  
                          l2628 17CF                            l2580 1727                            l2572 16C5  
                          l2564 16B7                            l2548 167A                            l2492 15F8  
                          l2484 15E5                            l2476 15D6                            l2468 15C8  
                          l2900 1086                            l2740 0BE1                            l2732 0BC5  
                          l2724 0B43                            l2716 0AD6                            l2708 0A80  
                          l2660 0974                            l2652 0965                            l2820 13A6  
                          l2396 1046                            l2388 102B                            l3460 07C3  
                          l3452 079D                            l3436 06E7                            l3444 0786  
                          l3428 0665                            l3380 04CF                            l3372 048A  
                          l3364 0430                            l3348 036B                            l3356 03B0  
                          l3292 01E1                            l3284 01CD                            l2814 1C5B  
                          l2806 1C4A                            l3614 1383                            l3606 135A  
                          l3550 1280                            l3542 1269                            l3534 1246  
                          l3526 1234                            l3518 1215                            l3198 1E9D  
                          l2646 17FE                            l2638 17EB                            l2590 175C  
                          l2582 172D                            l2574 16CE                            l2566 16BE  
                          l2558 1698                            l2494 15F9                            l2486 15E6  
                          l2478 15DC                            l2910 10AD                            l2902 108C  
                          l2750 0BF9                            l2742 0BEA                            l2734 0BD3  
                          l2726 0B6E                            l2718 0AED                            l2670 098F  
                          l2662 097C                            l2654 0969                            l2398 104C  
                          l3462 07C4                            l3446 078E                            l3438 0722  
                          l3374 0492                            l3366 0457                            l3382 04D8  
                          l3358 03BF                            l3454 07A4                            l3294 01E5  
                          l3286 01D2                            l3278 01BF                            l3630 0067  
                          l2816 1C60                            l2808 1C4F                            l3616 1388  
                          l3608 1368                            l3560 12B2                            l3552 1292  
                          l3544 1271                            l3528 1238                            l2584 1732  
                          l2568 16C0                            l2576 16D3                            l2488 15EB  
                          l2496 15FB                            l2920 10D8                            l2912 10BB  
                          l2904 109B                            l2760 0C28                            l2752 0C0D  
                          l2736 0BDC                            l2744 0BF0                            l2728 0B94  
                          l2680 09A6                            l2672 0993                            l2664 097E  
                          l2656 096A                            l2648 095C                            l2832 1564  
                          l2840 0CAA                            l3464 07D3                            l3456 07AA  
                          l3448 0793                            l3384 050D                            l3376 04B0  
                          l3368 0466                            l3704 023F                            l3296 01E8  
                          l3288 01D4                            l3472 07E7                            l3640 0085  
                          l3632 006D                            l3618 138C                            l3570 12D3  
                          l3562 12B3                            l3554 1296                            l3546 1279  
                          l3538 124F                            l3490 11D7                            l2594 1765  
                          l2578 16E9                            l2586 1741                            l2498 1609  
                          l2914 10C5                            l2906 109D                            l2770 0C63  
                          l2762 0C2C                            l2746 0BF4                            l2738 0BE0  
                          l2682 09A8                            l2674 0994                            l2666 0986  
                          l2658 096F                            l2826 14B3                            l2818 13A0  
                          l2850 0DA0                            l2842 0CB1                            l3466 07D3  
                          l3458 07B2                            l3394 055E                            l3386 055A  
                          l3474 07F7                            l3298 01FD                            l3650 00B0  
                          l3642 008E                            l3634 0073                            l3626 0059  
                          l3580 12EC                            l3572 12D5                            l3564 12C1  
                          l3556 1297                            l3548 127B                            l3492 11D8  
                          l3484 11CA                            l2596 176E                            l2588 1757  
                          l2940 08A4                            l2916 10C6                            l2908 10A4  
                          l2780 0C8E                            l2772 0C72                            l2764 0C45  
                          l2756 0C15                            l2748 0BF5                            l2692 09C3  
                          l2684 09B0                            l2676 0999                            l2668 098B  
                          l2828 14B9                            l2860 0E5C                            l2836 0CA4  
                          l3468 07E1                            l3388 055C                            l3660 0134  
                          l3652 00B6                            l3644 0096                            l3636 0078  
                          l3628 005E                            l2790 1B5A                            l3590 130F  
                          l3574 12DE                            l3582 12F2                            l3558 12A0  
                          l3566 12C5                            l3494 11DD                            l3486 11CF  
                          l2598 1772                            l2942 08AF                            l2934 10F9  
                          l2926 10E0                            l2918 10CE                            l2782 0C8F  
                          l2774 0C7C                            l2758 0C1A                            l2766 0C4B  
                          l2694 09D1                            l2686 09B5                            l2678 099E  
                          l2854 0E28                            l2838 0CA8                            l3398 0595  
                          l3662 013A                            l3654 0113                            l3646 009F  
                          l3638 007D                            l2792 1B60                            l3584 12F6  
                          l3576 12E2                            l3568 12CB                            l3496 11E2  
                          l3488 11D3                            l2960 08E5                            l2952 08C3  
                          l2936 1109                            l2928 10F2                            l2784 0C98  
                          l2776 0C7E                            l2768 0C58                            l2696 09DE  
                          l2688 09BA                            l2880 1B4C                            l2872 0FD3  
                          l2848 0D99                            l3664 0197                            l3656 0123  
                          l3648 00A7                            l2794 1B63                            l3594 1317  
                          l3586 12F7                            l3578 12E3                            l3498 11EA  
                          l2970 0918                            l2962 08EE                            l2954 08CB  
                          l2946 08B8                            l2890 106C                            l2778 0C8A  
                          l2698 09F9                            l2882 1B52                            l2866 0F44  
                          l2858 0E55                            l3666 01A7                            l3658 012B  
                          l2796 1B6C                            l2788 1B57                            l3596 131C  
                          l3588 12FB                            l2972 0922                            l2980 093C  
                          l2964 0900                            l2956 08DC                            l2884 1B54  
                          l2876 1B45                            l2868 0F4B                            l3668 01AF  
                          l2798 1C30                            l3598 132A                            l2966 090E  
                          l2958 08DE                            l2894 1075                            l2878 1B46  
                          l2992 1BB6                            l2968 090F                            l2888 105B  
                          l2994 1BB8                            l2986 0943                            l2978 092A  
                          l2996 1BBC                            l2988 0953                            l2998 1BC9  
                          _ADIF 0066                            STR_1 18AB                            STR_2 18AF  
                          STR_3 18A0                            STR_4 18A6                            STR_5 18A6  
                          u4000 0974                            u3200 1F26                            u4001 0973  
                          u3201 1F25                            u3130 1BE9                            u4010 0993  
                          u3210 1F31                            u3131 1BE8                            u4011 0992  
                          u3211 1F30                            u4020 0999                            u3220 1F42  
                          u3300 1007                            u4021 0998                            u3221 1F41  
                          u3301 1006                            u3150 1BFD                            u4030 099E  
                          u3310 1012                            u3151 1BFC                            u4111 0A9D  
                          u4031 099D                            u3311 1011                            u3160 1B75  
                          u5000 1DC0                            u4112 0AA4                            u4040 09B5  
                          u3240 1F54                            u3320 101D                            u3161 1B74  
                          u5001 1DBF                            u3145 1BF0                            u4201 0BAE  
                          u4121 0AC8                            u4113 0AAB                            u4105 0A79  
                          u4041 09B4                            u3241 1F53                            u3321 101C  
                          u3170 1B80                            u5010 1DDC                            u4202 0BB5  
                          u4122 0ACF                            u4050 09BA                            u3410 1D3C  
                          u3171 1B7F                            u5011 1DDB                            u4203 0BBC  
                          u4123 0AD6                            u4051 09B9                            u3411 1D3B  
                          u3235 1F46                            u3180 1B87                            u5020 1DF6  
                          u5100 1B23                            u4300 0C2C                            u3260 1F65  
                          u3340 102F                            u3181 1B86                            u5021 1DF5  
                          u5101 1B22                            u4301 0C2B                            u4141 0AFC  
                          u4061 0A07                            u3405 1D2E                            u3261 1F64  
                          u3341 102E                            u3190 1B8E                            u5030 0816  
                          u5110 1F93                            u4310 0C3B                            u4230 0BE0  
                          u4142 0B03                            u4062 0A0E                            u3430 1D4D  
                          u3510 1C99                            u3350 1039                            u3191 1B8D  
                          u5031 0815                            u5111 1F92                            u4231 0BDF  
                          u4215 0BBE                            u4151 0B27                            u4143 0B0A  
                          u4135 0AD8                            u4071 0A23                            u4063 0A15  
                          u3431 1D4C                            u3511 1C98                            u3255 1F55  
                          u3351 1038                            u3335 1021                            u6000 1208  
                          u5040 0832                            u3600 160D                            u3520 15B5  
                          u5200 1FF4                            u5120 1FAA                            u4320 0C58  
                          u4152 0B2E                            u4072 0A2A                            u4400 14B9  
                          u3280 1F79                            u6001 1207                            u5025 1DF2  
                          u5041 0831                            u3601 160C                            u3521 15B4  
                          u5201 1FF3                            u4321 0C57                            u4225 0BD5  
                          u4161 0B52                            u4153 0B35                            u4081 0A4D  
                          u4073 0A31                            u3425 1D3D                            u3505 1C8D  
                          u4401 14B8                            u3281 1F78                            u3265 1F61  
                          u6010 120D                            u5050 083E                            u3610 1647  
                          u3530 15BB                            u5130 1FBE                            u5210 000D  
                          u4330 0C72                            u4250 0BF4                            u4170 0B7A  
                          u4162 0B59                            u4082 0A54                            u3450 1D61  
                          u3290 1F7E                            u3370 104C                            u6011 120C  
                          u5051 083D                            u3611 1646                            u3531 15BA  
                          u5131 1FBD                            u5211 000C                            u4331 0C71  
                          u4315 0C36                            u4251 0BF3                            u4163 0B60  
                          u4091 0A69                            u4083 0A5B                            u3451 1D60  
                          u3435 1D49                            u3291 1F7D                            u3275 1F6D  
                          u3371 104B                            u3355 1035                            u6100 12CB  
                          u6020 1228                            u3620 1652                            u3540 15C0  
                          u5140 1FC5                            u4340 0C8E                            u4260 0BF9  
                          u4092 0A70                            u3460 1C6A                            u3380 1051  
                          u6101 12CA                            u6021 1227                            u5061 084D  
                          u3701 16A1                            u3621 1650                            u3541 15BF  
                          u5141 1FC4                            u5125 1FA5                            u4341 0C8D  
                          u4325 0C54                            u4261 0BF8                            u4245 0BE3  
                          u4181 0B86                            u4093 0A77                            u3445 1D55  
                          u3461 1C69                            u3381 1050                            u3365 1040  
                          u6110 12D3                            u6030 1246                            u5070 0866  
                          u5062 084E                            u3710 16B3                            u3702 16A8  
                          u3630 1653                            u3550 15DC                            u5230 0021  
                          u5310 115B                            u4270 0C0D                            u4190 0BA2  
                          u4182 0B8D                            u3390 1D2A                            u6111 12D2  
                          u6031 1245                            u5071 0865                            u5063 0853  
                          u3711 16B2                            u3703 16AF                            u3615 1643  
                          u3551 15DB                            u5231 0020                            u5311 115A  
                          u4335 0C6E                            u4271 0C0C                            u4183 0B94  
                          u4175 0B75                            u3391 1D29                            u4415 14D6  
                          u6200 132E                            u6040 1280                            u5064 0854  
                          u3800 175C                            u3720 16B7                            u3640 1663  
                          u3560 15E5                            u5160 1FD7                            u5240 0033  
                          u5400 11C0                            u4280 0C14                            u3480 1C7C  
                          u4360 13A6                            u4440 0CA8                            u6201 132D  
                          u6041 127F                            u5081 0875                            u5065 0859  
                          u3801 175B                            u3721 16B6                            u3641 1662  
                          u3561 15E4                            u5161 1FD6                            u5241 0032  
                          u5225 0012                            u5401 11BF                            u5305 114D  
                          u4281 0C13                            u3481 1C7B                            u4425 1523  
                          u4361 13A5                            u4505 0DB3                            u4441 0CA7  
                          u6210 133D                            u6130 12E2                            u5410 1E5E  
                          u5090 08A0                            u5082 0876                            u5066 085A  
                          u3730 16C4                            u3650 1670                            u3570 15EB  
                          u5170 1FDE                            u5330 117D                            u4290 0C1A  
                          u3490 1C86                            u4610 1B4C                            u4530 0E5C  
                          u4450 0CB1                            u4355 1C3C                            u6131 12E1  
                          u5411 1E5D                            u5091 089F                            u5083 087B  
                          u3731 16C3                            u3651 166F                            u3571 15EA  
                          u5171 1FDD                            u5155 1FC7                            u5331 117C  
                          u4291 0C19                            u4195 0B9D                            u3491 1C85  
                          u3475 1C6E                            u4435 156F                            u4611 1B4B  
                          u4531 0E5B                            u4515 0DEF                            u4451 0CB0  
                          u5500 1D6C                            u6220 135A                            u5420 1E6C  
                          u5084 087C                            u3900 17B1                            u3820 1772  
                          u3580 15F0                            u5260 0050                            u4700 10DF  
                          u4620 1B52                            u5501 1D6B                            u6221 1359  
                          u6125 12D7                            u5421 1E6B                            u5085 0881  
                          u3901 17B0                            u3821 1771                            u3581 15EF  
                          u5261 004F                            u5245 002F                            u5325 116F  
                          u4701 10DE                            u4621 1B51                            u4605 0FD6  
                          u4525 0E2B                            u6230 1377                            u6150 12F6  
                          u6070 1296                            u5430 1E7C                            u5086 0882  
                          u3910 17C0                            u3830 1777                            u3750 16E9  
                          u3670 1686                            u3590 1609                            u5190 1FEF  
                          u5350 118D                            u5270 1118                            u4630 106C  
                          u6231 1376                            u6215 1338                            u6151 12F5  
                          u6071 1295                            u6055 1282                            u5431 1E7B  
                          u5095 089C                            u3831 1776                            u3815 1767  
                          u3751 16E8                            u3671 1685                            u3591 1608  
                          u5191 1FEE                            u5255 0042                            u5351 118C  
                          u5271 1117                            u4631 106B                            u3495 1C82  
                          u4375 13C3                            u5520 1D8F                            u6240 138C  
                          u6160 12FB                            u5600 1D17                            u5440 1E89  
                          u3920 17CF                            u3840 1781                            u3680 168A  
                          u5360 1193                            u5280 111C                            u4720 10F1  
                          u4640 1084                            u5521 1D8E                            u6241 138B  
                          u6225 1356                            u6161 12FA                            u6145 12E5  
                          u6065 128B                            u5601 1D16                            u5441 1E88  
                          u3921 17CE                            u3841 1780                            u3761 1700  
                          u3753 16E5                            u3745 16C7                            u3681 1689  
                          u3665 1673                            u5185 1FE1                            u5361 1192  
                          u5345 1182                            u5281 111B                            u4721 10F0  
                          u4641 1083                            u4385 141D                            u4545 0E7C  
                          u4465 0CD1                            u6170 130F                            u6090 12B2  
                          u5450 1E97                            u3930 17D8                            u3850 1787  
                          u3770 1714                            u3762 1701                            u3690 168F  
                          u5370 1197                            u5290 113C                            u4810 091E  
                          u4730 10F8                            u4570 0F4B                            u4490 0DA0  
                          u5610 01C8                            u5515 1D72                            u6307 1C4C  
                          u6235 1373                            u6171 130E                            u6091 12B1  
                          u5451 1E96                            u3931 17D7                            u3915 17BB  
                          u3851 1786                            u3771 1715                            u3763 1706  
                          u3691 168E                            u5371 1196                            u5291 113B  
                          u4811 091D                            u4731 10F7                            u4715 10E1  
                          u4395 1472                            u4571 0F4A                            u4555 0EB8  
                          u4491 0D9F                            u4475 0D0D                            u5611 01C7  
                          u5540 1CAB                            u6180 1316                            u5460 1EA5  
                          u3940 17DD                            u3860 178C                            u3780 1732  
                          u3772 171A                            u3764 1707                            u5380 11AC  
                          u4820 0922                            u4660 10BB                            u5700 03A8  
                          u5620 01E0                            u6317 1C5D                            u6181 1315  
                          u6085 1299                            u5461 1EA4                            u3941 17DC  
                          u3861 178B                            u3781 1731                            u3773 171B  
                          u3765 170C                            u4821 0921                            u4805 0911  
                          u4661 10BA                            u4565 0F03                            u4485 0D58  
                          u5701 03A7                            u5621 01DF                            u5550 1CCD  
                          u6190 131C                            u5470 1EB3                            u3950 17EA  
                          u3870 1792                            u3790 1757                            u3766 170D  
                          u5390 11BC                            u4830 0929                            u4750 1109  
                          u5710 03BF                            u5630 0224                            u6327 1E04  
                          u5535 1D95                            u6191 131B                            u6095 12AE  
                          u5471 1EB2                            u3951 17E9                            u3871 1791  
                          u3791 1756                            u5391 11BB                            u4831 0928  
                          u4751 1108                            u4655 10A6                            u5711 03BE  
                          u5631 0223                            u5560 1CDF                            u5480 1C08  
                          u3960 17EF                            u3880 1799                            u4920 1BD6  
                          u4760 08AF                            u4680 10D4                            u5800 05AB  
                          u5720 0415                            u5640 0253                            u6337 1E13  
                          u5561 1CDE                            u6257 1C2B                            u5481 1C07  
                          u3961 17EE                            u3881 1798                            u4921 1BD5  
                          u4905 1BC3                            u5385 11A7                            u4761 08AE  
                          u4745 10FB                            u4681 10D3                            u4665 10B7  
                          u4585 0F5E                            u5801 05AA                            u5721 0414  
                          u5641 0252                            u5570 1CE6                            u5490 1C13  
                          u3970 17FE                            u3890 179F                            u4930 1EC9  
                          u4850 093B                            u4770 08C1                            u4690 10D8  
                          u5730 0430                            u5650 0257                            u6347 1E22  
                          u6267 1CEC                            u5571 1CE5                            u5491 1C12  
                          u3971 17FD                            u3891 179E                            u4931 1EC8  
                          u4915 1BCA                            u4851 093A                            u4771 08C0  
                          u4691 10D7                            u4675 10C7                            u4595 0F9A  
                          u5731 042F                            u5715 03BB                            u5651 0256  
                          u5580 1CF6                            u4860 0942                            u3980 0969  
                          u5900 07AA                            u5820 0620                            u5740 0457  
                          u5660 0286                            u6357 1B67                            u6277 1CFB  
                          u5581 1CF5                            u4861 0941                            u4845 092B  
                          u3981 0968                            u5901 07A9                            u5821 061F  
                          u5741 0456                            u5725 0411                            u5661 0285  
                          u5590 1D05                            u4950 1EDD                            u4790 0900  
                          u3990 096F                            u5910 07B2                            u5830 063F  
                          u5750 0466                            u5670 02C0                            u6287 1D0D  
                          u5591 1D04                            u4951 1EDC                            u4791 08FF  
                          u3991 096E                            u5911 07B1                            u5831 063E  
                          u5815 05B8                            u5751 0465                            u5671 02BF  
                          u4880 0953                            u5920 07C3                            u5840 064E  
                          u5760 0481                            u5680 02FB                            u6297 1D1C  
                          u4945 1ECE                            u4881 0952                            u4785 08E7  
                          u5921 07C2                            u5841 064D                            u5761 0480  
                          u5681 02FA                            u4970 1EF8                            u4890 1BBC  
                          u5930 07D3                            u5850 0665                            u5690 0384  
                          u4971 1EF7                            u4891 1BBB                            u4875 0945  
                          u4795 08FC                            u5931 07D2                            u5851 0664  
                          u5835 063B                            u5755 0462                            u5691 0383  
                          u5940 07E1                            u5780 0594                            u4965 1EDF  
                          u5941 07E0                            u5925 07BF                            u5845 064A  
                          u5781 0593                            u4990 1F16                            u5950 07F7  
                          u5790 059F                            u4991 1F15                            u4975 1EF4  
                          u5951 07F6                            u5935 07CF                            u5791 059E  
                          u5775 0561                            u5960 11D7                            u5880 078D  
                          u5961 11D6                            u4985 1F08                            u5881 078C  
                          u5865 06EA                            u5785 0590                            u5970 11DD  
                          u5890 07A3                            u5971 11DC                            u5891 07A2  
                          u5875 074E                            u5980 11E2                            u5981 11E1  
                          u5990 1202                            u5991 1201                            _main 0059  
        _Lcd_Write_String_4bits 1C9E                            btemp 007E                            start 0000  
               ___fldiv@new_exp 0050                    _sprintf$1019 00AA                   ___fltol@sign1 0059  
               __end_of___fladd 1800                           ?_main 0070               ??_Lcd_Clear_4bits 0074  
               __end_of___fldiv 139D                 __end_of___awdiv 1F88                 __end_of___flneg 1B26  
               __end_of___awmod 105B                 __end_of___flmul 0CA1                 __end_of___flsub 1BB6  
               __end_of___fltol 2000                           _ANSEL 0188                 __end_of___lldiv 1F1F  
               ___awdiv@divisor 0077                 __end_of___llmod 0059                 __end_of___lwdiv 1D66  
               __end_of___lwmod 1C9E                 ___awdiv@counter 0020                           _PORTB 0006  
                         _PORTC 0007                           _PORTD 0008                           _PORTE 0009  
                         _TRISB 0086                           _TRISC 0087                           _TRISD 0088  
                         _TRISE 0089           __end_of_Lcd_Cmd_4bits 1B70                 __end_of_readADC 1D22  
               __end_of_dpowers 18A0                           _scale 0CA1                 __end_of_isdigit 1B56  
                         _setup 1B33                           pclath 000A                           status 0003  
                         wtemp0 007E                 __end_of_sprintf 07FC                 __initialization 07FC  
                  __end_of_main 01BC                          ??_main 00C3                ___llmod@dividend 0074  
                        ?_scale 003E                          _ADRESH 001E                ___awdiv@dividend 0079  
                        ?_setup 0070                          _ANSELH 0189                __end_of___xxtofl 11CA  
      Lcd_Write_Char_4bits@temp 0072                __end_of__powers_ 1844                          ___flge 0802  
                  readADC@canal 0072                          ___fleq 1DAC                       ??___fladd 005A  
                        ___wmul 1BB6                       ??___fldiv 0046                       ??___awdiv 007B  
                     ??___flneg 0074                       ??___awmod 0074                       ??___flmul 002C  
                     ??___flsub 007E                       ??___fltol 0055                       ??___lldiv 0078  
                     ??___llmod 0078                       ??___lwdiv 007A                       ??___lwmod 0074  
                        _fround 139D                ___awdiv@quotient 0022                 ___awmod@divisor 0070  
               ___awmod@counter 0075                          main@V1 00C7                          main@V2 00CB  
                  ?_setupINTOSC 0070                       ??_readADC 0070                       ??_isdigit 0070  
              __end_of_setupADC 1C2F                  _Lcd_Init_4bits 1DFA                       ??_sprintf 00A5  
                    ___flge@ff1 0070                      ___flge@ff2 0074                    ___xxtofl@arg 007A  
                  ___xxtofl@exp 0079                    ___xxtofl@val 0070                      ___fleq@ff1 0070  
                    ___fleq@ff2 0074         __end_of__initialization 07FC                      ___flneg@f1 0070  
                    ___fltol@f1 0051                  __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074  
         Lcd_Write_Char_4bits@y 0073                   __end_of_scale 1000                   __end_of_setup 1B44  
                    __div_to_l_ 08A4          __end_of_Lcd_Init_4bits 1E57                 __div_to_l_@exp1 0025  
               __div_to_l_@cntr 0024                         ??_scale 0042                 __div_to_l_@quot 0020  
       ?_Lcd_Write_String_4bits 0075                         ??_setup 0070                  _Lcd_Port_4bits 1B70  
                 __div_to_l_@f1 0070                   __div_to_l_@f2 0074               __end_of__Umul8_16 1C02  
               _Lcd_Clear_4bits 1B26                      __pmaintext 0059                         ?___flge 0070  
                       ?___fleq 0070                         ?___wmul 0070                         ?_fround 003E  
                     ?___xxtofl 0070    __end_of_Lcd_Write_Char_4bits 1C64                 Lcd_Port_4bits@a 0070  
               ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 1CE0                      __stringtab 1800  
        __end_of_Lcd_Port_4bits 1B92               __end_of__npowers_ 1878                      _scale$1018 004C  
                     ?_setupADC 0070                         ___fladd 15A8                         ___fldiv 11CA  
                       ___awdiv 1F1F                         ___flneg 1B1B                         ___awmod 1002  
                       ___flmul 095C                         ___flsub 1B92                         ___fltol 1F88  
                       ___lldiv 1EB9                         ___llmod 0005                         ___lwdiv 1D22  
                       ___lwmod 1C64                       _ANSELbits 0188                         __ptext1 01BC  
                       __ptext2 0CA1                         __ptext3 1002                         __ptext4 1F1F  
                       __ptext5 1B44                         __ptext6 139D                         __ptext7 1C64  
                       __ptext8 1D22                         __ptext9 095C                         _readADC 1CE0  
                   ?__div_to_l_ 0070                         _dpowers 1878                         _isdigit 1B44  
                    ??___xxtofl 0074                ___awmod@dividend 0072    __end_of_Lcd_Set_Cursor_4bits 1DAC  
                       _sprintf 01BC            end_of_initialization 07FC                 ?_Lcd_Port_4bits 0070  
       __end_of_Lcd_Clear_4bits 1B33                 ___lldiv@divisor 0070                 ___lldiv@counter 007D  
                    ??_setupADC 0070                  __tdiv_to_l_@f1 0070                  __tdiv_to_l_@f2 0074  
                 ??__tdiv_to_l_ 0078                       _PORTDbits 0008                     ___fladd@grs 0065  
                 ___xxtofl@sign 0078                       _TRISAbits 0085                     ___fldiv@grs 0052  
                   ___fldiv@rem 004B                     ___flmul@grs 0032            _Lcd_Write_Char_4bits 1C2F  
                __end_of___flge 08A4                  __end_of___fleq 1DFA                  __end_of___wmul 1BDB  
                __end_of_fround 15A8             start_initialization 07FC             __end_of__tdiv_to_l_ 1112  
                 _Lcd_Cmd_4bits 1B56           Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074  
         Lcd_Set_Cursor_4bits@y 0078           Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070  
               ___llmod@divisor 0070                 ___llmod@counter 0079           ?_Lcd_Write_Char_4bits 0070  
                      ??___flge 0078                        ??___fleq 0078                        ??___wmul 0074  
      Lcd_Set_Cursor_4bits@temp 0079            _Lcd_Set_Cursor_4bits 1D66                       __Umul8_16 1BDB  
                      ??_fround 0042                ??_Lcd_Init_4bits 0074                   sprintf@tmpval 00B7  
                     ___fladd@a 0056                       ___fladd@b 0052                      fround@prec 0051  
                     ___fldiv@a 003E                       ___fldiv@b 0042                       ___flmul@a 0028  
                     ___flmul@b 0024                       ___flsub@a 0066                       ___flsub@b 006A  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
                ?_Lcd_Cmd_4bits 0070                     sprintf@flag 00AF                     sprintf@eexp 00B5  
                   sprintf@fval 00BE                     sprintf@prec 00BC                ___lwdiv@dividend 0078  
                      ?___fladd 0052           ?_Lcd_Set_Cursor_4bits 0074                        ?___fldiv 003E  
                      ?___awdiv 0077                        ?___flneg 0070                        ?___awmod 0070  
                      ?___flmul 0024                        ?___flsub 0066                        ?___fltol 0051  
                      ?___lldiv 0070                        ?___llmod 0070                       __npowers_ 1844  
                    ?__Umul8_16 0070                        ?___lwdiv 0076                        ?___lwmod 0070  
                     __pstrings 1800                     __tdiv_to_l_ 105B                    ??__div_to_l_ 0078  
                      ?_readADC 0070                        ?_isdigit 0070                ??_Lcd_Port_4bits 0070  
              ___lwdiv@quotient 007B                        ?_sprintf 00A0                  ___wmul@product 0074  
        ??_Lcd_Write_Char_4bits 0071              __end_of__div_to_l_ 095C                      _ADCON0bits 001F  
                   __stringbase 180F                      _ADCON1bits 009F                   ??_setupINTOSC 0072  
             ___wmul@multiplier 0070                 ??_Lcd_Cmd_4bits 0071         Lcd_Write_String_4bits@a 0075  
       Lcd_Write_String_4bits@i 007A          ??_Lcd_Set_Cursor_4bits 0075                     ??__Umul8_16 0072  
                   _fround$1016 004D                     _fround$1017 0049              __end_of__stringtab 1810  
      ??_Lcd_Write_String_4bits 0077                     _isdigit$838 0070                  Lcd_Cmd_4bits@a 0073  
                    sprintf@val 00B1                        ___xxtofl 1112                 ___lwdiv@divisor 0076  
               ___lwdiv@counter 007D                        __ptext10 1BDB                        __ptext11 105B  
                      __ptext20 1B1B                        __ptext12 08A4                        __ptext21 0802  
                      __ptext13 1112                        __ptext30 1D66                        __ptext22 1DAC  
                      __ptext14 1BB6                        __ptext31 1DFA                        __ptext23 1E57  
                      __ptext15 0005                        __ptext32 1B26                        __ptext24 1C02  
                      __ptext16 1EB9                        __ptext33 1B56                        __ptext25 1B33  
                      __ptext17 1F88                        __ptext34 1B70                        __ptext26 1CE0  
                      __ptext18 1B92                        __ptext27 11CA                        __ptext19 15A8  
                      __ptext28 1C9E                        __ptext29 1C2F             __end_of_setupINTOSC 1EB9  
                      __powers_ 1810                   setupADC@canal 0071                        _setupADC 1C02  
                      main@ADC1 00CF                        main@ADC2 00D2     setupINTOSC@OsciladorInterno 0070  
                      isdigit@c 0071                        scale@scl 0050                       sprintf@ap 00AE  
              __tdiv_to_l_@exp1 0025                __tdiv_to_l_@cntr 0024                       sprintf@sp 00BB  
              __tdiv_to_l_@quot 0020                ___lwmod@dividend 0072                ___lldiv@dividend 0074  
                     stringcode 180A                      _OSCCONbits 008F                    ?__tdiv_to_l_ 0070  
        __Umul8_16@multiplicand 0070                     _setupINTOSC 1E57                        sprintf@c 00C2  
                      sprintf@f 00A0                ___lldiv@quotient 0079                 ___lwmod@divisor 0070  
               ___lwmod@counter 0075                        stringdir 180A                        stringtab 1800  
                 ___fladd@signs 0062                    ___fladd@aexp 0063                    ___fladd@bexp 0064  
          __Umul8_16@multiplier 0078               __Umul8_16@product 0074  
